paths:
  '/Services/{id}/Parameters/{fk}':
    get:
      tags:
        - Service
      summary: Find a related item by id for Parameters.
      operationId: Service.prototype.__findById__Parameters
      parameters:
        - name: fk
          in: path
          description: Foreign key for Parameters
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    delete:
      tags:
        - Service
      summary: Delete a related item by id for Parameters.
      operationId: Service.prototype.__destroyById__Parameters
      parameters:
        - name: fk
          in: path
          description: Foreign key for Parameters
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Service
      summary: Update a related item by id for Parameters.
      operationId: Service.prototype.__updateById__Parameters
      parameters:
        - name: fk
          in: path
          description: Foreign key for Parameters
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Parameter'
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
  '/Services/{id}/Parameters':
    get:
      tags:
        - Service
      summary: Queries Parameters of Service.
      operationId: Service.prototype.__get__Parameters
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Parameter'
      deprecated: false
    post:
      tags:
        - Service
      summary: Creates a new instance in Parameters of this model.
      operationId: Service.prototype.__create__Parameters
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/Parameter'
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    delete:
      tags:
        - Service
      summary: Deletes all Parameters of this model.
      operationId: Service.prototype.__delete__Parameters
      parameters:
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Services/{id}/Parameters/count':
    get:
      tags:
        - Service
      summary: Counts Parameters of Service.
      operationId: Service.prototype.__count__Parameters
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Services:
    post:
      tags:
        - Service
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Service.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
    put:
      tags:
        - Service
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Service.upsert__put_Services
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
    patch:
      tags:
        - Service
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Service.upsert__patch_Services
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
    get:
      tags:
        - Service
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Service.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
      deprecated: false
  /Services/replaceOrCreate:
    post:
      tags:
        - Service
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: Service.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
  /Services/upsertWithWhere:
    post:
      tags:
        - Service
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: Service.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
  '/Services/{id}/exists':
    get:
      tags:
        - Service
      summary: Check whether a model instance exists in the data source.
      operationId: 'Service.exists__get_Services_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/Services/{id}':
    head:
      tags:
        - Service
      summary: Check whether a model instance exists in the data source.
      operationId: 'Service.exists__head_Services_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - Service
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: Service.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
    delete:
      tags:
        - Service
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: Service.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Service
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'Service.prototype.updateAttributes__put_Services_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Service'
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
    patch:
      tags:
        - Service
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'Service.prototype.updateAttributes__patch_Services_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Service'
        - name: id
          in: path
          description: Service id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
  '/Services/{id}/replace':
    post:
      tags:
        - Service
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: Service.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
  /Services/findOne:
    get:
      tags:
        - Service
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Service.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Service'
      deprecated: false
  /Services/update:
    post:
      tags:
        - Service
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: Service.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Service'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /Services/count:
    get:
      tags:
        - Service
      summary: Count instances of the model matched by where from the data source.
      operationId: Service.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Parameters:
    post:
      tags:
        - Parameter
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Parameter.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    put:
      tags:
        - Parameter
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Parameter.upsert__put_Parameters
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    patch:
      tags:
        - Parameter
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Parameter.upsert__patch_Parameters
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    get:
      tags:
        - Parameter
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Parameter.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Parameter'
      deprecated: false
  /Parameters/replaceOrCreate:
    post:
      tags:
        - Parameter
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: Parameter.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
  /Parameters/upsertWithWhere:
    post:
      tags:
        - Parameter
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: Parameter.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
  '/Parameters/{id}/exists':
    get:
      tags:
        - Parameter
      summary: Check whether a model instance exists in the data source.
      operationId: 'Parameter.exists__get_Parameters_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/Parameters/{id}':
    head:
      tags:
        - Parameter
      summary: Check whether a model instance exists in the data source.
      operationId: 'Parameter.exists__head_Parameters_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - Parameter
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: Parameter.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    delete:
      tags:
        - Parameter
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: Parameter.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Parameter
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'Parameter.prototype.updateAttributes__put_Parameters_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Parameter'
        - name: id
          in: path
          description: Parameter id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
    patch:
      tags:
        - Parameter
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'Parameter.prototype.updateAttributes__patch_Parameters_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Parameter'
        - name: id
          in: path
          description: Parameter id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
  '/Parameters/{id}/replace':
    post:
      tags:
        - Parameter
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: Parameter.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
  /Parameters/findOne:
    get:
      tags:
        - Parameter
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Parameter.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Parameter'
      deprecated: false
  /Parameters/update:
    post:
      tags:
        - Parameter
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: Parameter.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Parameter'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /Parameters/count:
    get:
      tags:
        - Parameter
      summary: Count instances of the model matched by where from the data source.
      operationId: Parameter.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /ApiControllers:
    post:
      tags:
        - ApiController
      summary: Create a new instance of the model and persist it into the data source.
      operationId: ApiController.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
    put:
      tags:
        - ApiController
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: ApiController.upsert__put_ApiControllers
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
    patch:
      tags:
        - ApiController
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: ApiController.upsert__patch_ApiControllers
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
    get:
      tags:
        - ApiController
      summary: Find all instances of the model matched by filter from the data source.
      operationId: ApiController.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiController'
      deprecated: false
  /ApiControllers/replaceOrCreate:
    post:
      tags:
        - ApiController
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: ApiController.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
  /ApiControllers/upsertWithWhere:
    post:
      tags:
        - ApiController
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: ApiController.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
  '/ApiControllers/{id}/exists':
    get:
      tags:
        - ApiController
      summary: Check whether a model instance exists in the data source.
      operationId: 'ApiController.exists__get_ApiControllers_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/ApiControllers/{id}':
    head:
      tags:
        - ApiController
      summary: Check whether a model instance exists in the data source.
      operationId: 'ApiController.exists__head_ApiControllers_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - ApiController
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: ApiController.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
    delete:
      tags:
        - ApiController
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: ApiController.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - ApiController
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'ApiController.prototype.updateAttributes__put_ApiControllers_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiController'
        - name: id
          in: path
          description: ApiController id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
    patch:
      tags:
        - ApiController
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'ApiController.prototype.updateAttributes__patch_ApiControllers_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiController'
        - name: id
          in: path
          description: ApiController id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
  '/ApiControllers/{id}/replace':
    post:
      tags:
        - ApiController
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: ApiController.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
  /ApiControllers/findOne:
    get:
      tags:
        - ApiController
      summary: Find first instance of the model matched by filter from the data source.
      operationId: ApiController.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiController'
      deprecated: false
  /ApiControllers/update:
    post:
      tags:
        - ApiController
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: ApiController.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiController'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /ApiControllers/count:
    get:
      tags:
        - ApiController
      summary: Count instances of the model matched by where from the data source.
      operationId: ApiController.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1TieredLeakage:
    post:
      tags:
        - t1TieredLeakage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1TieredLeakage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
    put:
      tags:
        - t1TieredLeakage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1TieredLeakage.upsert__put_t1TieredLeakage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
    patch:
      tags:
        - t1TieredLeakage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1TieredLeakage.upsert__patch_t1TieredLeakage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
    get:
      tags:
        - t1TieredLeakage
      operationId: t1TieredLeakage.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1TieredLeakage:
                type: object
      deprecated: false
  /t1TieredLeakage/replaceOrCreate:
    post:
      tags:
        - t1TieredLeakage
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1TieredLeakage.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
  /t1TieredLeakage/upsertWithWhere:
    post:
      tags:
        - t1TieredLeakage
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1TieredLeakage.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
  '/t1TieredLeakage/{id}/exists':
    get:
      tags:
        - t1TieredLeakage
      summary: Check whether a model instance exists in the data source.
      operationId: 't1TieredLeakage.exists__get_t1TieredLeakage_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1TieredLeakage/{id}':
    head:
      tags:
        - t1TieredLeakage
      summary: Check whether a model instance exists in the data source.
      operationId: 't1TieredLeakage.exists__head_t1TieredLeakage_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1TieredLeakage
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1TieredLeakage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
    delete:
      tags:
        - t1TieredLeakage
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1TieredLeakage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1TieredLeakage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1TieredLeakage.prototype.updateAttributes__put_t1TieredLeakage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1TieredLeakage'
        - name: id
          in: path
          description: t1TieredLeakage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
    patch:
      tags:
        - t1TieredLeakage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1TieredLeakage.prototype.updateAttributes__patch_t1TieredLeakage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1TieredLeakage'
        - name: id
          in: path
          description: t1TieredLeakage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
  '/t1TieredLeakage/{id}/replace':
    post:
      tags:
        - t1TieredLeakage
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1TieredLeakage.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
  /t1TieredLeakage/findOne:
    get:
      tags:
        - t1TieredLeakage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1TieredLeakage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1TieredLeakage'
      deprecated: false
  /t1TieredLeakage/update:
    post:
      tags:
        - t1TieredLeakage
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1TieredLeakage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1TieredLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1TieredLeakage/count:
    get:
      tags:
        - t1TieredLeakage
      summary: Count instances of the model matched by where from the data source.
      operationId: t1TieredLeakage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  '/Menu/{id}/menuItem/{fk}':
    get:
      tags:
        - Menu
      summary: Find a related item by id for menuItem.
      operationId: Menu.prototype.__findById__menuItem
      parameters:
        - name: fk
          in: path
          description: Foreign key for menuItem
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    delete:
      tags:
        - Menu
      summary: Delete a related item by id for menuItem.
      operationId: Menu.prototype.__destroyById__menuItem
      parameters:
        - name: fk
          in: path
          description: Foreign key for menuItem
          required: true
          type: string
          format: JSON
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
    put:
      tags:
        - Menu
      summary: Update a related item by id for menuItem.
      operationId: Menu.prototype.__updateById__menuItem
      parameters:
        - name: fk
          in: path
          description: Foreign key for menuItem
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/MenuItem'
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
  '/Menu/{id}/menuItem':
    get:
      tags:
        - Menu
      summary: Queries menuItem of Menu.
      operationId: Menu.prototype.__get__menuItem
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
      deprecated: false
    post:
      tags:
        - Menu
      summary: Creates a new instance in menuItem of this model.
      operationId: Menu.prototype.__create__menuItem
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: '#/definitions/MenuItem'
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    delete:
      tags:
        - Menu
      summary: Deletes all menuItem of this model.
      operationId: Menu.prototype.__delete__menuItem
      parameters:
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '204':
          description: Request was successful
      deprecated: false
  '/Menu/{id}/menuItem/count':
    get:
      tags:
        - Menu
      summary: Counts menuItem of Menu.
      operationId: Menu.prototype.__count__menuItem
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /Menu:
    post:
      tags:
        - Menu
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Menu.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
    put:
      tags:
        - Menu
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Menu.upsert__put_Menu
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
    patch:
      tags:
        - Menu
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: Menu.upsert__patch_Menu
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
    get:
      tags:
        - Menu
      summary: Find all instances of the model matched by filter from the data source.
      operationId: Menu.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Menu'
      deprecated: false
  /Menu/replaceOrCreate:
    post:
      tags:
        - Menu
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: Menu.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
  /Menu/upsertWithWhere:
    post:
      tags:
        - Menu
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: Menu.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
  '/Menu/{id}/exists':
    get:
      tags:
        - Menu
      summary: Check whether a model instance exists in the data source.
      operationId: 'Menu.exists__get_Menu_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/Menu/{id}':
    head:
      tags:
        - Menu
      summary: Check whether a model instance exists in the data source.
      operationId: 'Menu.exists__head_Menu_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - Menu
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: Menu.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
    delete:
      tags:
        - Menu
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: Menu.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - Menu
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'Menu.prototype.updateAttributes__put_Menu_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Menu'
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
    patch:
      tags:
        - Menu
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'Menu.prototype.updateAttributes__patch_Menu_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Menu'
        - name: id
          in: path
          description: Menu id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
  '/Menu/{id}/replace':
    post:
      tags:
        - Menu
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: Menu.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
  /Menu/findOne:
    get:
      tags:
        - Menu
      summary: Find first instance of the model matched by filter from the data source.
      operationId: Menu.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Menu'
      deprecated: false
  /Menu/update:
    post:
      tags:
        - Menu
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: Menu.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /Menu/count:
    get:
      tags:
        - Menu
      summary: Count instances of the model matched by where from the data source.
      operationId: Menu.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /MenuItem:
    post:
      tags:
        - MenuItem
      summary: Create a new instance of the model and persist it into the data source.
      operationId: MenuItem.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    put:
      tags:
        - MenuItem
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: MenuItem.upsert__put_MenuItem
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    patch:
      tags:
        - MenuItem
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: MenuItem.upsert__patch_MenuItem
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    get:
      tags:
        - MenuItem
      summary: Find all instances of the model matched by filter from the data source.
      operationId: MenuItem.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
      deprecated: false
  /MenuItem/replaceOrCreate:
    post:
      tags:
        - MenuItem
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: MenuItem.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
  /MenuItem/upsertWithWhere:
    post:
      tags:
        - MenuItem
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: MenuItem.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
  '/MenuItem/{id}/exists':
    get:
      tags:
        - MenuItem
      summary: Check whether a model instance exists in the data source.
      operationId: 'MenuItem.exists__get_MenuItem_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/MenuItem/{id}':
    head:
      tags:
        - MenuItem
      summary: Check whether a model instance exists in the data source.
      operationId: 'MenuItem.exists__head_MenuItem_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - MenuItem
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: MenuItem.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    delete:
      tags:
        - MenuItem
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: MenuItem.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - MenuItem
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'MenuItem.prototype.updateAttributes__put_MenuItem_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MenuItem'
        - name: id
          in: path
          description: MenuItem id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
    patch:
      tags:
        - MenuItem
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'MenuItem.prototype.updateAttributes__patch_MenuItem_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MenuItem'
        - name: id
          in: path
          description: MenuItem id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
  '/MenuItem/{id}/replace':
    post:
      tags:
        - MenuItem
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: MenuItem.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
  /MenuItem/findOne:
    get:
      tags:
        - MenuItem
      summary: Find first instance of the model matched by filter from the data source.
      operationId: MenuItem.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/MenuItem'
      deprecated: false
  /MenuItem/update:
    post:
      tags:
        - MenuItem
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: MenuItem.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/MenuItem'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /MenuItem/count:
    get:
      tags:
        - MenuItem
      summary: Count instances of the model matched by where from the data source.
      operationId: MenuItem.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /phdbFilters:
    post:
      tags:
        - phdbFilter
      summary: Create a new instance of the model and persist it into the data source.
      operationId: phdbFilter.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
    put:
      tags:
        - phdbFilter
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: phdbFilter.upsert__put_phdbFilters
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
    patch:
      tags:
        - phdbFilter
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: phdbFilter.upsert__patch_phdbFilters
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
    get:
      tags:
        - phdbFilter
      operationId: phdbFilter.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              phdbFilter:
                type: object
      deprecated: false
  /phdbFilters/replaceOrCreate:
    post:
      tags:
        - phdbFilter
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: phdbFilter.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
  /phdbFilters/upsertWithWhere:
    post:
      tags:
        - phdbFilter
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: phdbFilter.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
  '/phdbFilters/{id}/exists':
    get:
      tags:
        - phdbFilter
      summary: Check whether a model instance exists in the data source.
      operationId: 'phdbFilter.exists__get_phdbFilters_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/phdbFilters/{id}':
    head:
      tags:
        - phdbFilter
      summary: Check whether a model instance exists in the data source.
      operationId: 'phdbFilter.exists__head_phdbFilters_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - phdbFilter
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: phdbFilter.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
    delete:
      tags:
        - phdbFilter
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: phdbFilter.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - phdbFilter
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'phdbFilter.prototype.updateAttributes__put_phdbFilters_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFilter'
        - name: id
          in: path
          description: phdbFilter id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
    patch:
      tags:
        - phdbFilter
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'phdbFilter.prototype.updateAttributes__patch_phdbFilters_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFilter'
        - name: id
          in: path
          description: phdbFilter id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
  '/phdbFilters/{id}/replace':
    post:
      tags:
        - phdbFilter
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: phdbFilter.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
  /phdbFilters/findOne:
    get:
      tags:
        - phdbFilter
      summary: Find first instance of the model matched by filter from the data source.
      operationId: phdbFilter.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFilter'
      deprecated: false
  /phdbFilters/update:
    post:
      tags:
        - phdbFilter
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: phdbFilter.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFilter'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /phdbFilters/count:
    get:
      tags:
        - phdbFilter
      summary: Count instances of the model matched by where from the data source.
      operationId: phdbFilter.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /ApiStubs:
    post:
      tags:
        - ApiStub
      summary: Create a new instance of the model and persist it into the data source.
      operationId: ApiStub.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
    put:
      tags:
        - ApiStub
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: ApiStub.upsert__put_ApiStubs
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
    patch:
      tags:
        - ApiStub
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: ApiStub.upsert__patch_ApiStubs
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
    get:
      tags:
        - ApiStub
      summary: Find all instances of the model matched by filter from the data source.
      operationId: ApiStub.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiStub'
      deprecated: false
  /ApiStubs/replaceOrCreate:
    post:
      tags:
        - ApiStub
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: ApiStub.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
  /ApiStubs/upsertWithWhere:
    post:
      tags:
        - ApiStub
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: ApiStub.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
  '/ApiStubs/{id}/exists':
    get:
      tags:
        - ApiStub
      summary: Check whether a model instance exists in the data source.
      operationId: 'ApiStub.exists__get_ApiStubs_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/ApiStubs/{id}':
    head:
      tags:
        - ApiStub
      summary: Check whether a model instance exists in the data source.
      operationId: 'ApiStub.exists__head_ApiStubs_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - ApiStub
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: ApiStub.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
    delete:
      tags:
        - ApiStub
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: ApiStub.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - ApiStub
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'ApiStub.prototype.updateAttributes__put_ApiStubs_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStub'
        - name: id
          in: path
          description: ApiStub id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
    patch:
      tags:
        - ApiStub
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'ApiStub.prototype.updateAttributes__patch_ApiStubs_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStub'
        - name: id
          in: path
          description: ApiStub id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
  '/ApiStubs/{id}/replace':
    post:
      tags:
        - ApiStub
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: ApiStub.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
  /ApiStubs/findOne:
    get:
      tags:
        - ApiStub
      summary: Find first instance of the model matched by filter from the data source.
      operationId: ApiStub.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStub'
      deprecated: false
  /ApiStubs/update:
    post:
      tags:
        - ApiStub
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: ApiStub.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStub'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /ApiStubs/count:
    get:
      tags:
        - ApiStub
      summary: Count instances of the model matched by where from the data source.
      operationId: ApiStub.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1FinancialSummary:
    post:
      tags:
        - t1FinancialSummary
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1FinancialSummary.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
    put:
      tags:
        - t1FinancialSummary
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1FinancialSummary.upsert__put_t1FinancialSummary
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
    patch:
      tags:
        - t1FinancialSummary
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1FinancialSummary.upsert__patch_t1FinancialSummary
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
    get:
      tags:
        - t1FinancialSummary
      operationId: t1FinancialSummary.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1FinancialSummary:
                type: object
      deprecated: false
  /t1FinancialSummary/replaceOrCreate:
    post:
      tags:
        - t1FinancialSummary
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1FinancialSummary.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
  /t1FinancialSummary/upsertWithWhere:
    post:
      tags:
        - t1FinancialSummary
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1FinancialSummary.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
  '/t1FinancialSummary/{id}/exists':
    get:
      tags:
        - t1FinancialSummary
      summary: Check whether a model instance exists in the data source.
      operationId: 't1FinancialSummary.exists__get_t1FinancialSummary_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1FinancialSummary/{id}':
    head:
      tags:
        - t1FinancialSummary
      summary: Check whether a model instance exists in the data source.
      operationId: 't1FinancialSummary.exists__head_t1FinancialSummary_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1FinancialSummary
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1FinancialSummary.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
    delete:
      tags:
        - t1FinancialSummary
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1FinancialSummary.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1FinancialSummary
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1FinancialSummary.prototype.updateAttributes__put_t1FinancialSummary_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1FinancialSummary'
        - name: id
          in: path
          description: t1FinancialSummary id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
    patch:
      tags:
        - t1FinancialSummary
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1FinancialSummary.prototype.updateAttributes__patch_t1FinancialSummary_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1FinancialSummary'
        - name: id
          in: path
          description: t1FinancialSummary id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
  '/t1FinancialSummary/{id}/replace':
    post:
      tags:
        - t1FinancialSummary
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1FinancialSummary.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
  /t1FinancialSummary/findOne:
    get:
      tags:
        - t1FinancialSummary
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1FinancialSummary.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1FinancialSummary'
      deprecated: false
  /t1FinancialSummary/update:
    post:
      tags:
        - t1FinancialSummary
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1FinancialSummary.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1FinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1FinancialSummary/count:
    get:
      tags:
        - t1FinancialSummary
      summary: Count instances of the model matched by where from the data source.
      operationId: t1FinancialSummary.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ReportVariance:
    post:
      tags:
        - t2ReportVariance
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ReportVariance.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
    put:
      tags:
        - t2ReportVariance
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportVariance.upsert__put_t2ReportVariance
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
    patch:
      tags:
        - t2ReportVariance
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportVariance.upsert__patch_t2ReportVariance
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
    get:
      tags:
        - t2ReportVariance
      operationId: t2ReportVariance.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ReportVariance:
                type: object
      deprecated: false
  /t2ReportVariance/replaceOrCreate:
    post:
      tags:
        - t2ReportVariance
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ReportVariance.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
  /t2ReportVariance/upsertWithWhere:
    post:
      tags:
        - t2ReportVariance
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ReportVariance.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
  '/t2ReportVariance/{id}/exists':
    get:
      tags:
        - t2ReportVariance
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportVariance.exists__get_t2ReportVariance_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ReportVariance/{id}':
    head:
      tags:
        - t2ReportVariance
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportVariance.exists__head_t2ReportVariance_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ReportVariance
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ReportVariance.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
    delete:
      tags:
        - t2ReportVariance
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ReportVariance.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ReportVariance
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportVariance.prototype.updateAttributes__put_t2ReportVariance_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportVariance'
        - name: id
          in: path
          description: t2ReportVariance id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
    patch:
      tags:
        - t2ReportVariance
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportVariance.prototype.updateAttributes__patch_t2ReportVariance_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportVariance'
        - name: id
          in: path
          description: t2ReportVariance id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
  '/t2ReportVariance/{id}/replace':
    post:
      tags:
        - t2ReportVariance
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ReportVariance.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
  /t2ReportVariance/findOne:
    get:
      tags:
        - t2ReportVariance
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ReportVariance.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportVariance'
      deprecated: false
  /t2ReportVariance/update:
    post:
      tags:
        - t2ReportVariance
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ReportVariance.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportVariance'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ReportVariance/count:
    get:
      tags:
        - t2ReportVariance
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ReportVariance.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ReportLeakage12MthTrend:
    post:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ReportLeakage12MthTrend.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
    put:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportLeakage12MthTrend.upsert__put_t2ReportLeakage12MthTrend
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
    patch:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportLeakage12MthTrend.upsert__patch_t2ReportLeakage12MthTrend
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
    get:
      tags:
        - t2ReportLeakage12MthTrend
      operationId: t2ReportLeakage12MthTrend.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ReportLeakage12MthTrend:
                type: object
      deprecated: false
  /t2ReportLeakage12MthTrend/replaceOrCreate:
    post:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ReportLeakage12MthTrend.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
  /t2ReportLeakage12MthTrend/upsertWithWhere:
    post:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ReportLeakage12MthTrend.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
  '/t2ReportLeakage12MthTrend/{id}/exists':
    get:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportLeakage12MthTrend.exists__get_t2ReportLeakage12MthTrend_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ReportLeakage12MthTrend/{id}':
    head:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportLeakage12MthTrend.exists__head_t2ReportLeakage12MthTrend_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ReportLeakage12MthTrend
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ReportLeakage12MthTrend.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
    delete:
      tags:
        - t2ReportLeakage12MthTrend
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ReportLeakage12MthTrend.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportLeakage12MthTrend.prototype.updateAttributes__put_t2ReportLeakage12MthTrend_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
        - name: id
          in: path
          description: t2ReportLeakage12MthTrend id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
    patch:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportLeakage12MthTrend.prototype.updateAttributes__patch_t2ReportLeakage12MthTrend_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
        - name: id
          in: path
          description: t2ReportLeakage12MthTrend id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
  '/t2ReportLeakage12MthTrend/{id}/replace':
    post:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ReportLeakage12MthTrend.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
  /t2ReportLeakage12MthTrend/findOne:
    get:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ReportLeakage12MthTrend.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      deprecated: false
  /t2ReportLeakage12MthTrend/update:
    post:
      tags:
        - t2ReportLeakage12MthTrend
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ReportLeakage12MthTrend.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportLeakage12MthTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ReportLeakage12MthTrend/count:
    get:
      tags:
        - t2ReportLeakage12MthTrend
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ReportLeakage12MthTrend.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsWorkPopupDetail:
    post:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsWorkPopupDetail.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
    put:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsWorkPopupDetail.upsert__put_t2TopContributorsWorkPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsWorkPopupDetail.upsert__patch_t2TopContributorsWorkPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
    get:
      tags:
        - t2TopContributorsWorkPopupDetail
      operationId: t2TopContributorsWorkPopupDetail.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TopContributorsWorkPopupDetail:
                type: object
      deprecated: false
  /t2TopContributorsWorkPopupDetail/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsWorkPopupDetail.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
  /t2TopContributorsWorkPopupDetail/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsWorkPopupDetail.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
  '/t2TopContributorsWorkPopupDetail/{id}/exists':
    get:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsWorkPopupDetail.exists__get_t2TopContributorsWorkPopupDetail_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsWorkPopupDetail/{id}':
    head:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsWorkPopupDetail.exists__head_t2TopContributorsWorkPopupDetail_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsWorkPopupDetail.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsWorkPopupDetail.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsWorkPopupDetail.prototype.updateAttributes__put_t2TopContributorsWorkPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
        - name: id
          in: path
          description: t2TopContributorsWorkPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsWorkPopupDetail.prototype.updateAttributes__patch_t2TopContributorsWorkPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
        - name: id
          in: path
          description: t2TopContributorsWorkPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
  '/t2TopContributorsWorkPopupDetail/{id}/replace':
    post:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsWorkPopupDetail.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
  /t2TopContributorsWorkPopupDetail/findOne:
    get:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsWorkPopupDetail.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      deprecated: false
  /t2TopContributorsWorkPopupDetail/update:
    post:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsWorkPopupDetail.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsWorkPopupDetail/count:
    get:
      tags:
        - t2TopContributorsWorkPopupDetail
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsWorkPopupDetail.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsContractPopupDetail:
    post:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsContractPopupDetail.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
    put:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsContractPopupDetail.upsert__put_t2TopContributorsContractPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsContractPopupDetail.upsert__patch_t2TopContributorsContractPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
    get:
      tags:
        - t2TopContributorsContractPopupDetail
      operationId: t2TopContributorsContractPopupDetail.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TopContributorsContractPopupDetail:
                type: object
      deprecated: false
  /t2TopContributorsContractPopupDetail/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsContractPopupDetail.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
  /t2TopContributorsContractPopupDetail/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsContractPopupDetail.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
  '/t2TopContributorsContractPopupDetail/{id}/exists':
    get:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsContractPopupDetail.exists__get_t2TopContributorsContractPopupDetail_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsContractPopupDetail/{id}':
    head:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsContractPopupDetail.exists__head_t2TopContributorsContractPopupDetail_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsContractPopupDetail.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsContractPopupDetail.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsContractPopupDetail.prototype.updateAttributes__put_t2TopContributorsContractPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
        - name: id
          in: path
          description: t2TopContributorsContractPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsContractPopupDetail.prototype.updateAttributes__patch_t2TopContributorsContractPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
        - name: id
          in: path
          description: t2TopContributorsContractPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
  '/t2TopContributorsContractPopupDetail/{id}/replace':
    post:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsContractPopupDetail.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
  /t2TopContributorsContractPopupDetail/findOne:
    get:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsContractPopupDetail.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      deprecated: false
  /t2TopContributorsContractPopupDetail/update:
    post:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsContractPopupDetail.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsContractPopupDetail/count:
    get:
      tags:
        - t2TopContributorsContractPopupDetail
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsContractPopupDetail.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsQtrGpLeakageWorkNumber:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
    put:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.upsert__put_t2TopContributorsQtrGpLeakageWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.upsert__patch_t2TopContributorsQtrGpLeakageWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
    get:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TopContributorsQtrGpLeakageWorkNumber:
                type: object
      deprecated: false
  /t2TopContributorsQtrGpLeakageWorkNumber/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
  /t2TopContributorsQtrGpLeakageWorkNumber/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
  '/t2TopContributorsQtrGpLeakageWorkNumber/{id}/exists':
    get:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsQtrGpLeakageWorkNumber.exists__get_t2TopContributorsQtrGpLeakageWorkNumber_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsQtrGpLeakageWorkNumber/{id}':
    head:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsQtrGpLeakageWorkNumber.exists__head_t2TopContributorsQtrGpLeakageWorkNumber_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsQtrGpLeakageWorkNumber.prototype.updateAttributes__put_t2TopContributorsQtrGpLeakageWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
        - name: id
          in: path
          description: t2TopContributorsQtrGpLeakageWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsQtrGpLeakageWorkNumber.prototype.updateAttributes__patch_t2TopContributorsQtrGpLeakageWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
        - name: id
          in: path
          description: t2TopContributorsQtrGpLeakageWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
  '/t2TopContributorsQtrGpLeakageWorkNumber/{id}/replace':
    post:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
  /t2TopContributorsQtrGpLeakageWorkNumber/findOne:
    get:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      deprecated: false
  /t2TopContributorsQtrGpLeakageWorkNumber/update:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsQtrGpLeakageWorkNumber/count:
    get:
      tags:
        - t2TopContributorsQtrGpLeakageWorkNumber
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsQtrGpLeakageWorkNumber.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsQtrGpLeakageContract:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
    put:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.upsert__put_t2TopContributorsQtrGpLeakageContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.upsert__patch_t2TopContributorsQtrGpLeakageContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
    get:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      operationId: t2TopContributorsQtrGpLeakageContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TopContributorsQtrGpLeakageContract:
                type: object
      deprecated: false
  /t2TopContributorsQtrGpLeakageContract/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
  /t2TopContributorsQtrGpLeakageContract/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsQtrGpLeakageContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
  '/t2TopContributorsQtrGpLeakageContract/{id}/exists':
    get:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsQtrGpLeakageContract.exists__get_t2TopContributorsQtrGpLeakageContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsQtrGpLeakageContract/{id}':
    head:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsQtrGpLeakageContract.exists__head_t2TopContributorsQtrGpLeakageContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsQtrGpLeakageContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsQtrGpLeakageContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsQtrGpLeakageContract.prototype.updateAttributes__put_t2TopContributorsQtrGpLeakageContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
        - name: id
          in: path
          description: t2TopContributorsQtrGpLeakageContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsQtrGpLeakageContract.prototype.updateAttributes__patch_t2TopContributorsQtrGpLeakageContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
        - name: id
          in: path
          description: t2TopContributorsQtrGpLeakageContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
  '/t2TopContributorsQtrGpLeakageContract/{id}/replace':
    post:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
  /t2TopContributorsQtrGpLeakageContract/findOne:
    get:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      deprecated: false
  /t2TopContributorsQtrGpLeakageContract/update:
    post:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsQtrGpLeakageContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsQtrGpLeakageContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsQtrGpLeakageContract/count:
    get:
      tags:
        - t2TopContributorsQtrGpLeakageContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsQtrGpLeakageContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakagePercentage:
    post:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ReportTieredLeakagePercentage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakagePercentage.upsert__put_t2ReportTieredLeakagePercentage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakagePercentage.upsert__patch_t2ReportTieredLeakagePercentage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakagePercentage
      operationId: t2ReportTieredLeakagePercentage.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ReportTieredLeakagePercentage:
                type: object
      deprecated: false
  /t2ReportTieredLeakagePercentage/replaceOrCreate:
    post:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakagePercentage.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
  /t2ReportTieredLeakagePercentage/upsertWithWhere:
    post:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ReportTieredLeakagePercentage.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
  '/t2ReportTieredLeakagePercentage/{id}/exists':
    get:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakagePercentage.exists__get_t2ReportTieredLeakagePercentage_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ReportTieredLeakagePercentage/{id}':
    head:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakagePercentage.exists__head_t2ReportTieredLeakagePercentage_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakagePercentage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
    delete:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakagePercentage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakagePercentage.prototype.updateAttributes__put_t2ReportTieredLeakagePercentage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
        - name: id
          in: path
          description: t2ReportTieredLeakagePercentage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakagePercentage.prototype.updateAttributes__patch_t2ReportTieredLeakagePercentage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
        - name: id
          in: path
          description: t2ReportTieredLeakagePercentage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
  '/t2ReportTieredLeakagePercentage/{id}/replace':
    post:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ReportTieredLeakagePercentage.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
  /t2ReportTieredLeakagePercentage/findOne:
    get:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ReportTieredLeakagePercentage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      deprecated: false
  /t2ReportTieredLeakagePercentage/update:
    post:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ReportTieredLeakagePercentage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakagePercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakagePercentage/count:
    get:
      tags:
        - t2ReportTieredLeakagePercentage
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ReportTieredLeakagePercentage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakageWorkCount:
    post:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ReportTieredLeakageWorkCount.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageWorkCount.upsert__put_t2ReportTieredLeakageWorkCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageWorkCount.upsert__patch_t2ReportTieredLeakageWorkCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakageWorkCount
      operationId: t2ReportTieredLeakageWorkCount.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ReportTieredLeakageWorkCount:
                type: object
      deprecated: false
  /t2ReportTieredLeakageWorkCount/replaceOrCreate:
    post:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageWorkCount.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
  /t2ReportTieredLeakageWorkCount/upsertWithWhere:
    post:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ReportTieredLeakageWorkCount.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
  '/t2ReportTieredLeakageWorkCount/{id}/exists':
    get:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakageWorkCount.exists__get_t2ReportTieredLeakageWorkCount_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ReportTieredLeakageWorkCount/{id}':
    head:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakageWorkCount.exists__head_t2ReportTieredLeakageWorkCount_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakageWorkCount.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
    delete:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakageWorkCount.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakageWorkCount.prototype.updateAttributes__put_t2ReportTieredLeakageWorkCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
        - name: id
          in: path
          description: t2ReportTieredLeakageWorkCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakageWorkCount.prototype.updateAttributes__patch_t2ReportTieredLeakageWorkCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
        - name: id
          in: path
          description: t2ReportTieredLeakageWorkCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
  '/t2ReportTieredLeakageWorkCount/{id}/replace':
    post:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ReportTieredLeakageWorkCount.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
  /t2ReportTieredLeakageWorkCount/findOne:
    get:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ReportTieredLeakageWorkCount.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      deprecated: false
  /t2ReportTieredLeakageWorkCount/update:
    post:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ReportTieredLeakageWorkCount.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageWorkCount'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakageWorkCount/count:
    get:
      tags:
        - t2ReportTieredLeakageWorkCount
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ReportTieredLeakageWorkCount.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakageContractCount:
    post:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ReportTieredLeakageContractCount.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageContractCount.upsert__put_t2ReportTieredLeakageContractCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageContractCount.upsert__patch_t2ReportTieredLeakageContractCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakageContractCount
      operationId: t2ReportTieredLeakageContractCount.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ReportTieredLeakageContractCount:
                type: object
      deprecated: false
  /t2ReportTieredLeakageContractCount/replaceOrCreate:
    post:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageContractCount.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
  /t2ReportTieredLeakageContractCount/upsertWithWhere:
    post:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ReportTieredLeakageContractCount.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
  '/t2ReportTieredLeakageContractCount/{id}/exists':
    get:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakageContractCount.exists__get_t2ReportTieredLeakageContractCount_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ReportTieredLeakageContractCount/{id}':
    head:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakageContractCount.exists__head_t2ReportTieredLeakageContractCount_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakageContractCount.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
    delete:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakageContractCount.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakageContractCount.prototype.updateAttributes__put_t2ReportTieredLeakageContractCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
        - name: id
          in: path
          description: t2ReportTieredLeakageContractCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakageContractCount.prototype.updateAttributes__patch_t2ReportTieredLeakageContractCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
        - name: id
          in: path
          description: t2ReportTieredLeakageContractCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
  '/t2ReportTieredLeakageContractCount/{id}/replace':
    post:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ReportTieredLeakageContractCount.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
  /t2ReportTieredLeakageContractCount/findOne:
    get:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ReportTieredLeakageContractCount.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      deprecated: false
  /t2ReportTieredLeakageContractCount/update:
    post:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ReportTieredLeakageContractCount.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakageContractCount/count:
    get:
      tags:
        - t2ReportTieredLeakageContractCount
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ReportTieredLeakageContractCount.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakageMillions:
    post:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ReportTieredLeakageMillions.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageMillions.upsert__put_t2ReportTieredLeakageMillions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageMillions.upsert__patch_t2ReportTieredLeakageMillions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakageMillions
      operationId: t2ReportTieredLeakageMillions.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ReportTieredLeakageMillions:
                type: object
      deprecated: false
  /t2ReportTieredLeakageMillions/replaceOrCreate:
    post:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ReportTieredLeakageMillions.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
  /t2ReportTieredLeakageMillions/upsertWithWhere:
    post:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ReportTieredLeakageMillions.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
  '/t2ReportTieredLeakageMillions/{id}/exists':
    get:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakageMillions.exists__get_t2ReportTieredLeakageMillions_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ReportTieredLeakageMillions/{id}':
    head:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ReportTieredLeakageMillions.exists__head_t2ReportTieredLeakageMillions_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ReportTieredLeakageMillions
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakageMillions.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
    delete:
      tags:
        - t2ReportTieredLeakageMillions
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ReportTieredLeakageMillions.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakageMillions.prototype.updateAttributes__put_t2ReportTieredLeakageMillions_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
        - name: id
          in: path
          description: t2ReportTieredLeakageMillions id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
    patch:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ReportTieredLeakageMillions.prototype.updateAttributes__patch_t2ReportTieredLeakageMillions_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
        - name: id
          in: path
          description: t2ReportTieredLeakageMillions id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
  '/t2ReportTieredLeakageMillions/{id}/replace':
    post:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ReportTieredLeakageMillions.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
  /t2ReportTieredLeakageMillions/findOne:
    get:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ReportTieredLeakageMillions.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      deprecated: false
  /t2ReportTieredLeakageMillions/update:
    post:
      tags:
        - t2ReportTieredLeakageMillions
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ReportTieredLeakageMillions.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ReportTieredLeakageMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ReportTieredLeakageMillions/count:
    get:
      tags:
        - t2ReportTieredLeakageMillions
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ReportTieredLeakageMillions.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsEac2PlanWorkNumber:
    post:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
    put:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.upsert__put_t2TopContributorsEac2PlanWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.upsert__patch_t2TopContributorsEac2PlanWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
    get:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      operationId: t2TopContributorsEac2PlanWorkNumber.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TopContributorsEac2PlanWorkNumber:
                type: object
      deprecated: false
  /t2TopContributorsEac2PlanWorkNumber/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
  /t2TopContributorsEac2PlanWorkNumber/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsEac2PlanWorkNumber.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
  '/t2TopContributorsEac2PlanWorkNumber/{id}/exists':
    get:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsEac2PlanWorkNumber.exists__get_t2TopContributorsEac2PlanWorkNumber_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsEac2PlanWorkNumber/{id}':
    head:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsEac2PlanWorkNumber.exists__head_t2TopContributorsEac2PlanWorkNumber_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsEac2PlanWorkNumber.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsEac2PlanWorkNumber.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsEac2PlanWorkNumber.prototype.updateAttributes__put_t2TopContributorsEac2PlanWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
        - name: id
          in: path
          description: t2TopContributorsEac2PlanWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsEac2PlanWorkNumber.prototype.updateAttributes__patch_t2TopContributorsEac2PlanWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
        - name: id
          in: path
          description: t2TopContributorsEac2PlanWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
  '/t2TopContributorsEac2PlanWorkNumber/{id}/replace':
    post:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
  /t2TopContributorsEac2PlanWorkNumber/findOne:
    get:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      deprecated: false
  /t2TopContributorsEac2PlanWorkNumber/update:
    post:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsEac2PlanWorkNumber.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsEac2PlanWorkNumber/count:
    get:
      tags:
        - t2TopContributorsEac2PlanWorkNumber
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsEac2PlanWorkNumber.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsEac2PlanContract:
    post:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsEac2PlanContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
    put:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsEac2PlanContract.upsert__put_t2TopContributorsEac2PlanContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsEac2PlanContract.upsert__patch_t2TopContributorsEac2PlanContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
    get:
      tags:
        - t2TopContributorsEac2PlanContract
      operationId: t2TopContributorsEac2PlanContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TopContributorsEac2PlanContract:
                type: object
      deprecated: false
  /t2TopContributorsEac2PlanContract/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsEac2PlanContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
  /t2TopContributorsEac2PlanContract/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsEac2PlanContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
  '/t2TopContributorsEac2PlanContract/{id}/exists':
    get:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsEac2PlanContract.exists__get_t2TopContributorsEac2PlanContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsEac2PlanContract/{id}':
    head:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsEac2PlanContract.exists__head_t2TopContributorsEac2PlanContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsEac2PlanContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsEac2PlanContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsEac2PlanContract.prototype.updateAttributes__put_t2TopContributorsEac2PlanContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
        - name: id
          in: path
          description: t2TopContributorsEac2PlanContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsEac2PlanContract.prototype.updateAttributes__patch_t2TopContributorsEac2PlanContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
        - name: id
          in: path
          description: t2TopContributorsEac2PlanContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
  '/t2TopContributorsEac2PlanContract/{id}/replace':
    post:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsEac2PlanContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
  /t2TopContributorsEac2PlanContract/findOne:
    get:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsEac2PlanContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      deprecated: false
  /t2TopContributorsEac2PlanContract/update:
    post:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsEac2PlanContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsEac2PlanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsEac2PlanContract/count:
    get:
      tags:
        - t2TopContributorsEac2PlanContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsEac2PlanContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsCostOverrunWorkNumber:
    post:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
    put:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.upsert__put_t2TopContributorsCostOverrunWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.upsert__patch_t2TopContributorsCostOverrunWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
    get:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      operationId: t2TopContributorsCostOverrunWorkNumber.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              T2topcontributorscostoverrunworknumber:
                type: object
      deprecated: false
  /t2TopContributorsCostOverrunWorkNumber/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
  /t2TopContributorsCostOverrunWorkNumber/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsCostOverrunWorkNumber.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
  '/t2TopContributorsCostOverrunWorkNumber/{id}/exists':
    get:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsCostOverrunWorkNumber.exists__get_t2TopContributorsCostOverrunWorkNumber_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsCostOverrunWorkNumber/{id}':
    head:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsCostOverrunWorkNumber.exists__head_t2TopContributorsCostOverrunWorkNumber_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsCostOverrunWorkNumber.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsCostOverrunWorkNumber.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsCostOverrunWorkNumber.prototype.updateAttributes__put_t2TopContributorsCostOverrunWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
        - name: id
          in: path
          description: t2TopContributorsCostOverrunWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsCostOverrunWorkNumber.prototype.updateAttributes__patch_t2TopContributorsCostOverrunWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
        - name: id
          in: path
          description: t2TopContributorsCostOverrunWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
  '/t2TopContributorsCostOverrunWorkNumber/{id}/replace':
    post:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
  /t2TopContributorsCostOverrunWorkNumber/findOne:
    get:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      deprecated: false
  /t2TopContributorsCostOverrunWorkNumber/update:
    post:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsCostOverrunWorkNumber.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsCostOverrunWorkNumber/count:
    get:
      tags:
        - t2TopContributorsCostOverrunWorkNumber
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsCostOverrunWorkNumber.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TopContributorsCostOverrunContract:
    post:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TopContributorsCostOverrunContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
    put:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsCostOverrunContract.upsert__put_t2TopContributorsCostOverrunContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsCostOverrunContract.upsert__patch_t2TopContributorsCostOverrunContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
    get:
      tags:
        - t2TopContributorsCostOverrunContract
      operationId: t2TopContributorsCostOverrunContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              T2topcontributorscostoverruncontract:
                type: object
      deprecated: false
  /t2TopContributorsCostOverrunContract/replaceOrCreate:
    post:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TopContributorsCostOverrunContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
  /t2TopContributorsCostOverrunContract/upsertWithWhere:
    post:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TopContributorsCostOverrunContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
  '/t2TopContributorsCostOverrunContract/{id}/exists':
    get:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsCostOverrunContract.exists__get_t2TopContributorsCostOverrunContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TopContributorsCostOverrunContract/{id}':
    head:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TopContributorsCostOverrunContract.exists__head_t2TopContributorsCostOverrunContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsCostOverrunContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
    delete:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TopContributorsCostOverrunContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsCostOverrunContract.prototype.updateAttributes__put_t2TopContributorsCostOverrunContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
        - name: id
          in: path
          description: t2TopContributorsCostOverrunContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
    patch:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TopContributorsCostOverrunContract.prototype.updateAttributes__patch_t2TopContributorsCostOverrunContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
        - name: id
          in: path
          description: t2TopContributorsCostOverrunContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
  '/t2TopContributorsCostOverrunContract/{id}/replace':
    post:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TopContributorsCostOverrunContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
  /t2TopContributorsCostOverrunContract/findOne:
    get:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TopContributorsCostOverrunContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      deprecated: false
  /t2TopContributorsCostOverrunContract/update:
    post:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TopContributorsCostOverrunContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TopContributorsCostOverrunContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TopContributorsCostOverrunContract/count:
    get:
      tags:
        - t2TopContributorsCostOverrunContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TopContributorsCostOverrunContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /ApiStubSimple:
    post:
      tags:
        - ApiStubSimple
      summary: Create a new instance of the model and persist it into the data source.
      operationId: ApiStubSimple.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
    put:
      tags:
        - ApiStubSimple
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: ApiStubSimple.upsert__put_ApiStubSimple
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
    patch:
      tags:
        - ApiStubSimple
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: ApiStubSimple.upsert__patch_ApiStubSimple
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
    get:
      tags:
        - ApiStubSimple
      summary: Find all instances of the model matched by filter from the data source.
      operationId: ApiStubSimple.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiStubSimple'
      deprecated: false
  /ApiStubSimple/replaceOrCreate:
    post:
      tags:
        - ApiStubSimple
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: ApiStubSimple.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
  /ApiStubSimple/upsertWithWhere:
    post:
      tags:
        - ApiStubSimple
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: ApiStubSimple.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
  '/ApiStubSimple/{id}/exists':
    get:
      tags:
        - ApiStubSimple
      summary: Check whether a model instance exists in the data source.
      operationId: 'ApiStubSimple.exists__get_ApiStubSimple_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/ApiStubSimple/{id}':
    head:
      tags:
        - ApiStubSimple
      summary: Check whether a model instance exists in the data source.
      operationId: 'ApiStubSimple.exists__head_ApiStubSimple_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - ApiStubSimple
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: ApiStubSimple.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
    delete:
      tags:
        - ApiStubSimple
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: ApiStubSimple.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - ApiStubSimple
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'ApiStubSimple.prototype.updateAttributes__put_ApiStubSimple_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStubSimple'
        - name: id
          in: path
          description: ApiStubSimple id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
    patch:
      tags:
        - ApiStubSimple
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'ApiStubSimple.prototype.updateAttributes__patch_ApiStubSimple_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStubSimple'
        - name: id
          in: path
          description: ApiStubSimple id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
  '/ApiStubSimple/{id}/replace':
    post:
      tags:
        - ApiStubSimple
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: ApiStubSimple.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
  /ApiStubSimple/findOne:
    get:
      tags:
        - ApiStubSimple
      summary: Find first instance of the model matched by filter from the data source.
      operationId: ApiStubSimple.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/ApiStubSimple'
      deprecated: false
  /ApiStubSimple/update:
    post:
      tags:
        - ApiStubSimple
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: ApiStubSimple.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/ApiStubSimple'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /ApiStubSimple/count:
    get:
      tags:
        - ApiStubSimple
      summary: Count instances of the model matched by where from the data source.
      operationId: ApiStubSimple.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /entitlement:
    post:
      tags:
        - entitlement
      summary: Create a new instance of the model and persist it into the data source.
      operationId: entitlement.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
    put:
      tags:
        - entitlement
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: entitlement.upsert__put_entitlement
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
    patch:
      tags:
        - entitlement
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: entitlement.upsert__patch_entitlement
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
    get:
      tags:
        - entitlement
      operationId: entitlement.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              DataRestrictions:
                type: object
      deprecated: false
  /entitlement/replaceOrCreate:
    post:
      tags:
        - entitlement
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: entitlement.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
  /entitlement/upsertWithWhere:
    post:
      tags:
        - entitlement
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: entitlement.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
  '/entitlement/{id}/exists':
    get:
      tags:
        - entitlement
      summary: Check whether a model instance exists in the data source.
      operationId: 'entitlement.exists__get_entitlement_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/entitlement/{id}':
    head:
      tags:
        - entitlement
      summary: Check whether a model instance exists in the data source.
      operationId: 'entitlement.exists__head_entitlement_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - entitlement
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: entitlement.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
    delete:
      tags:
        - entitlement
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: entitlement.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - entitlement
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'entitlement.prototype.updateAttributes__put_entitlement_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlement'
        - name: id
          in: path
          description: entitlement id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
    patch:
      tags:
        - entitlement
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'entitlement.prototype.updateAttributes__patch_entitlement_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlement'
        - name: id
          in: path
          description: entitlement id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
  '/entitlement/{id}/replace':
    post:
      tags:
        - entitlement
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: entitlement.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
  /entitlement/findOne:
    get:
      tags:
        - entitlement
      summary: Find first instance of the model matched by filter from the data source.
      operationId: entitlement.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlement'
      deprecated: false
  /entitlement/update:
    post:
      tags:
        - entitlement
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: entitlement.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlement'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /entitlement/count:
    get:
      tags:
        - entitlement
      summary: Count instances of the model matched by where from the data source.
      operationId: entitlement.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /phdbContractCount:
    post:
      tags:
        - phdbContractCount
      summary: Create a new instance of the model and persist it into the data source.
      operationId: phdbContractCount.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
    put:
      tags:
        - phdbContractCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: phdbContractCount.upsert__put_phdbContractCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
    patch:
      tags:
        - phdbContractCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: phdbContractCount.upsert__patch_phdbContractCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
    get:
      tags:
        - phdbContractCount
      operationId: phdbContractCount.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Phdbcontractcount:
                type: object
      deprecated: false
  /phdbContractCount/replaceOrCreate:
    post:
      tags:
        - phdbContractCount
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: phdbContractCount.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
  /phdbContractCount/upsertWithWhere:
    post:
      tags:
        - phdbContractCount
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: phdbContractCount.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
  '/phdbContractCount/{id}/exists':
    get:
      tags:
        - phdbContractCount
      summary: Check whether a model instance exists in the data source.
      operationId: 'phdbContractCount.exists__get_phdbContractCount_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/phdbContractCount/{id}':
    head:
      tags:
        - phdbContractCount
      summary: Check whether a model instance exists in the data source.
      operationId: 'phdbContractCount.exists__head_phdbContractCount_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - phdbContractCount
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: phdbContractCount.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
    delete:
      tags:
        - phdbContractCount
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: phdbContractCount.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - phdbContractCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'phdbContractCount.prototype.updateAttributes__put_phdbContractCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbContractCount'
        - name: id
          in: path
          description: phdbContractCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
    patch:
      tags:
        - phdbContractCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'phdbContractCount.prototype.updateAttributes__patch_phdbContractCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbContractCount'
        - name: id
          in: path
          description: phdbContractCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
  '/phdbContractCount/{id}/replace':
    post:
      tags:
        - phdbContractCount
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: phdbContractCount.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
  /phdbContractCount/findOne:
    get:
      tags:
        - phdbContractCount
      summary: Find first instance of the model matched by filter from the data source.
      operationId: phdbContractCount.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbContractCount'
      deprecated: false
  /phdbContractCount/update:
    post:
      tags:
        - phdbContractCount
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: phdbContractCount.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbContractCount'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /phdbContractCount/count:
    get:
      tags:
        - phdbContractCount
      summary: Count instances of the model matched by where from the data source.
      operationId: phdbContractCount.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /phdbFinancialSummary:
    post:
      tags:
        - phdbFinancialSummary
      summary: Create a new instance of the model and persist it into the data source.
      operationId: phdbFinancialSummary.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
    put:
      tags:
        - phdbFinancialSummary
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: phdbFinancialSummary.upsert__put_phdbFinancialSummary
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
    patch:
      tags:
        - phdbFinancialSummary
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: phdbFinancialSummary.upsert__patch_phdbFinancialSummary
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
    get:
      tags:
        - phdbFinancialSummary
      operationId: phdbFinancialSummary.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Phdbfinancialsummary:
                type: object
      deprecated: false
  /phdbFinancialSummary/replaceOrCreate:
    post:
      tags:
        - phdbFinancialSummary
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: phdbFinancialSummary.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
  /phdbFinancialSummary/upsertWithWhere:
    post:
      tags:
        - phdbFinancialSummary
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: phdbFinancialSummary.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
  '/phdbFinancialSummary/{id}/exists':
    get:
      tags:
        - phdbFinancialSummary
      summary: Check whether a model instance exists in the data source.
      operationId: 'phdbFinancialSummary.exists__get_phdbFinancialSummary_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/phdbFinancialSummary/{id}':
    head:
      tags:
        - phdbFinancialSummary
      summary: Check whether a model instance exists in the data source.
      operationId: 'phdbFinancialSummary.exists__head_phdbFinancialSummary_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - phdbFinancialSummary
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: phdbFinancialSummary.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
    delete:
      tags:
        - phdbFinancialSummary
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: phdbFinancialSummary.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - phdbFinancialSummary
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'phdbFinancialSummary.prototype.updateAttributes__put_phdbFinancialSummary_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFinancialSummary'
        - name: id
          in: path
          description: phdbFinancialSummary id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
    patch:
      tags:
        - phdbFinancialSummary
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'phdbFinancialSummary.prototype.updateAttributes__patch_phdbFinancialSummary_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFinancialSummary'
        - name: id
          in: path
          description: phdbFinancialSummary id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
  '/phdbFinancialSummary/{id}/replace':
    post:
      tags:
        - phdbFinancialSummary
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: phdbFinancialSummary.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
  /phdbFinancialSummary/findOne:
    get:
      tags:
        - phdbFinancialSummary
      summary: Find first instance of the model matched by filter from the data source.
      operationId: phdbFinancialSummary.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/phdbFinancialSummary'
      deprecated: false
  /phdbFinancialSummary/update:
    post:
      tags:
        - phdbFinancialSummary
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: phdbFinancialSummary.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/phdbFinancialSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /phdbFinancialSummary/count:
    get:
      tags:
        - phdbFinancialSummary
      summary: Count instances of the model matched by where from the data source.
      operationId: phdbFinancialSummary.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthWorkPopupDetail:
    post:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthWorkPopupDetail.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
    put:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthWorkPopupDetail.upsert__put_t2PlanHealthWorkPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthWorkPopupDetail.upsert__patch_t2PlanHealthWorkPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
    get:
      tags:
        - t2PlanHealthWorkPopupDetail
      operationId: t2PlanHealthWorkPopupDetail.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2PlanHealthWorkPopupDetail:
                type: object
      deprecated: false
  /t2PlanHealthWorkPopupDetail/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthWorkPopupDetail.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
  /t2PlanHealthWorkPopupDetail/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthWorkPopupDetail.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
  '/t2PlanHealthWorkPopupDetail/{id}/exists':
    get:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthWorkPopupDetail.exists__get_t2PlanHealthWorkPopupDetail_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthWorkPopupDetail/{id}':
    head:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthWorkPopupDetail.exists__head_t2PlanHealthWorkPopupDetail_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthWorkPopupDetail.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthWorkPopupDetail.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthWorkPopupDetail.prototype.updateAttributes__put_t2PlanHealthWorkPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
        - name: id
          in: path
          description: t2PlanHealthWorkPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthWorkPopupDetail.prototype.updateAttributes__patch_t2PlanHealthWorkPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
        - name: id
          in: path
          description: t2PlanHealthWorkPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
  '/t2PlanHealthWorkPopupDetail/{id}/replace':
    post:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthWorkPopupDetail.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
  /t2PlanHealthWorkPopupDetail/findOne:
    get:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthWorkPopupDetail.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      deprecated: false
  /t2PlanHealthWorkPopupDetail/update:
    post:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthWorkPopupDetail.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthWorkPopupDetail/count:
    get:
      tags:
        - t2PlanHealthWorkPopupDetail
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthWorkPopupDetail.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthContractPopupDetail:
    post:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthContractPopupDetail.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
    put:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthContractPopupDetail.upsert__put_t2PlanHealthContractPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthContractPopupDetail.upsert__patch_t2PlanHealthContractPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
    get:
      tags:
        - t2PlanHealthContractPopupDetail
      operationId: t2PlanHealthContractPopupDetail.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2PlanHealthContractPopupDetail:
                type: object
      deprecated: false
  /t2PlanHealthContractPopupDetail/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthContractPopupDetail.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
  /t2PlanHealthContractPopupDetail/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthContractPopupDetail.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
  '/t2PlanHealthContractPopupDetail/{id}/exists':
    get:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthContractPopupDetail.exists__get_t2PlanHealthContractPopupDetail_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthContractPopupDetail/{id}':
    head:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthContractPopupDetail.exists__head_t2PlanHealthContractPopupDetail_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthContractPopupDetail.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthContractPopupDetail.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthContractPopupDetail.prototype.updateAttributes__put_t2PlanHealthContractPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
        - name: id
          in: path
          description: t2PlanHealthContractPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthContractPopupDetail.prototype.updateAttributes__patch_t2PlanHealthContractPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
        - name: id
          in: path
          description: t2PlanHealthContractPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
  '/t2PlanHealthContractPopupDetail/{id}/replace':
    post:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthContractPopupDetail.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
  /t2PlanHealthContractPopupDetail/findOne:
    get:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthContractPopupDetail.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      deprecated: false
  /t2PlanHealthContractPopupDetail/update:
    post:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthContractPopupDetail.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthContractPopupDetail/count:
    get:
      tags:
        - t2PlanHealthContractPopupDetail
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthContractPopupDetail.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /financialSnapshots:
    post:
      tags:
        - financialSnapshots
      summary: Create a new instance of the model and persist it into the data source.
      operationId: financialSnapshots.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
    put:
      tags:
        - financialSnapshots
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: financialSnapshots.upsert__put_financialSnapshots
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
    patch:
      tags:
        - financialSnapshots
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: financialSnapshots.upsert__patch_financialSnapshots
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
    get:
      tags:
        - financialSnapshots
      operationId: financialSnapshots.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Financialsnapshots:
                type: object
      deprecated: false
  /financialSnapshots/replaceOrCreate:
    post:
      tags:
        - financialSnapshots
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: financialSnapshots.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
  /financialSnapshots/upsertWithWhere:
    post:
      tags:
        - financialSnapshots
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: financialSnapshots.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
  '/financialSnapshots/{id}/exists':
    get:
      tags:
        - financialSnapshots
      summary: Check whether a model instance exists in the data source.
      operationId: 'financialSnapshots.exists__get_financialSnapshots_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/financialSnapshots/{id}':
    head:
      tags:
        - financialSnapshots
      summary: Check whether a model instance exists in the data source.
      operationId: 'financialSnapshots.exists__head_financialSnapshots_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - financialSnapshots
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: financialSnapshots.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
    delete:
      tags:
        - financialSnapshots
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: financialSnapshots.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - financialSnapshots
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'financialSnapshots.prototype.updateAttributes__put_financialSnapshots_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialSnapshots'
        - name: id
          in: path
          description: financialSnapshots id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
    patch:
      tags:
        - financialSnapshots
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'financialSnapshots.prototype.updateAttributes__patch_financialSnapshots_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialSnapshots'
        - name: id
          in: path
          description: financialSnapshots id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
  '/financialSnapshots/{id}/replace':
    post:
      tags:
        - financialSnapshots
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: financialSnapshots.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
  /financialSnapshots/findOne:
    get:
      tags:
        - financialSnapshots
      summary: Find first instance of the model matched by filter from the data source.
      operationId: financialSnapshots.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialSnapshots'
      deprecated: false
  /financialSnapshots/update:
    post:
      tags:
        - financialSnapshots
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: financialSnapshots.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /financialSnapshots/count:
    get:
      tags:
        - financialSnapshots
      summary: Count instances of the model matched by where from the data source.
      operationId: financialSnapshots.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /financialQuarters:
    post:
      tags:
        - financialQuarters
      summary: Create a new instance of the model and persist it into the data source.
      operationId: financialQuarters.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
    put:
      tags:
        - financialQuarters
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: financialQuarters.upsert__put_financialQuarters
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
    patch:
      tags:
        - financialQuarters
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: financialQuarters.upsert__patch_financialQuarters
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
    get:
      tags:
        - financialQuarters
      operationId: financialQuarters.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Financialquarters:
                type: object
      deprecated: false
  /financialQuarters/replaceOrCreate:
    post:
      tags:
        - financialQuarters
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: financialQuarters.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
  /financialQuarters/upsertWithWhere:
    post:
      tags:
        - financialQuarters
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: financialQuarters.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
  '/financialQuarters/{id}/exists':
    get:
      tags:
        - financialQuarters
      summary: Check whether a model instance exists in the data source.
      operationId: 'financialQuarters.exists__get_financialQuarters_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/financialQuarters/{id}':
    head:
      tags:
        - financialQuarters
      summary: Check whether a model instance exists in the data source.
      operationId: 'financialQuarters.exists__head_financialQuarters_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - financialQuarters
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: financialQuarters.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
    delete:
      tags:
        - financialQuarters
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: financialQuarters.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - financialQuarters
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'financialQuarters.prototype.updateAttributes__put_financialQuarters_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialQuarters'
        - name: id
          in: path
          description: financialQuarters id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
    patch:
      tags:
        - financialQuarters
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'financialQuarters.prototype.updateAttributes__patch_financialQuarters_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialQuarters'
        - name: id
          in: path
          description: financialQuarters id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
  '/financialQuarters/{id}/replace':
    post:
      tags:
        - financialQuarters
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: financialQuarters.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
  /financialQuarters/findOne:
    get:
      tags:
        - financialQuarters
      summary: Find first instance of the model matched by filter from the data source.
      operationId: financialQuarters.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/financialQuarters'
      deprecated: false
  /financialQuarters/update:
    post:
      tags:
        - financialQuarters
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: financialQuarters.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/financialQuarters'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /financialQuarters/count:
    get:
      tags:
        - financialQuarters
      summary: Count instances of the model matched by where from the data source.
      operationId: financialQuarters.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionContract:
    post:
      tags:
        - t2PlanHealthExclusionContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthExclusionContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionContract.upsert__put_t2PlanHealthExclusionContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionContract.upsert__patch_t2PlanHealthExclusionContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionContract
      operationId: t2PlanHealthExclusionContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2PlanHealthExclusionContract:
                type: object
      deprecated: false
  /t2PlanHealthExclusionContract/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthExclusionContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
  /t2PlanHealthExclusionContract/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthExclusionContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthExclusionContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
  '/t2PlanHealthExclusionContract/{id}/exists':
    get:
      tags:
        - t2PlanHealthExclusionContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionContract.exists__get_t2PlanHealthExclusionContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthExclusionContract/{id}':
    head:
      tags:
        - t2PlanHealthExclusionContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionContract.exists__head_t2PlanHealthExclusionContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthExclusionContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionContract.prototype.updateAttributes__put_t2PlanHealthExclusionContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionContract'
        - name: id
          in: path
          description: t2PlanHealthExclusionContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionContract.prototype.updateAttributes__patch_t2PlanHealthExclusionContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionContract'
        - name: id
          in: path
          description: t2PlanHealthExclusionContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
  '/t2PlanHealthExclusionContract/{id}/replace':
    post:
      tags:
        - t2PlanHealthExclusionContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthExclusionContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
  /t2PlanHealthExclusionContract/findOne:
    get:
      tags:
        - t2PlanHealthExclusionContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthExclusionContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      deprecated: false
  /t2PlanHealthExclusionContract/update:
    post:
      tags:
        - t2PlanHealthExclusionContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthExclusionContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionContract/count:
    get:
      tags:
        - t2PlanHealthExclusionContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthExclusionContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionWorkNum:
    post:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthExclusionWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionWorkNum.upsert__put_t2PlanHealthExclusionWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionWorkNum.upsert__patch_t2PlanHealthExclusionWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionWorkNum
      operationId: t2PlanHealthExclusionWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2PlanHealthExclusionWorkNum:
                type: object
      deprecated: false
  /t2PlanHealthExclusionWorkNum/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
  /t2PlanHealthExclusionWorkNum/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthExclusionWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
  '/t2PlanHealthExclusionWorkNum/{id}/exists':
    get:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionWorkNum.exists__get_t2PlanHealthExclusionWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthExclusionWorkNum/{id}':
    head:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionWorkNum.exists__head_t2PlanHealthExclusionWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionWorkNum.prototype.updateAttributes__put_t2PlanHealthExclusionWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
        - name: id
          in: path
          description: t2PlanHealthExclusionWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionWorkNum.prototype.updateAttributes__patch_t2PlanHealthExclusionWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
        - name: id
          in: path
          description: t2PlanHealthExclusionWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
  '/t2PlanHealthExclusionWorkNum/{id}/replace':
    post:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthExclusionWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
  /t2PlanHealthExclusionWorkNum/findOne:
    get:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthExclusionWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      deprecated: false
  /t2PlanHealthExclusionWorkNum/update:
    post:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthExclusionWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionWorkNum/count:
    get:
      tags:
        - t2PlanHealthExclusionWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthExclusionWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1PlanHealthView:
    post:
      tags:
        - t1PlanHealthView
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1PlanHealthView.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
    put:
      tags:
        - t1PlanHealthView
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1PlanHealthView.upsert__put_t1PlanHealthView
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
    patch:
      tags:
        - t1PlanHealthView
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1PlanHealthView.upsert__patch_t1PlanHealthView
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
    get:
      tags:
        - t1PlanHealthView
      operationId: t1PlanHealthView.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1PlanHealthView:
                type: object
      deprecated: false
  /t1PlanHealthView/replaceOrCreate:
    post:
      tags:
        - t1PlanHealthView
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1PlanHealthView.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
  /t1PlanHealthView/upsertWithWhere:
    post:
      tags:
        - t1PlanHealthView
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1PlanHealthView.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
  '/t1PlanHealthView/{id}/exists':
    get:
      tags:
        - t1PlanHealthView
      summary: Check whether a model instance exists in the data source.
      operationId: 't1PlanHealthView.exists__get_t1PlanHealthView_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1PlanHealthView/{id}':
    head:
      tags:
        - t1PlanHealthView
      summary: Check whether a model instance exists in the data source.
      operationId: 't1PlanHealthView.exists__head_t1PlanHealthView_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1PlanHealthView
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1PlanHealthView.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
    delete:
      tags:
        - t1PlanHealthView
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1PlanHealthView.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1PlanHealthView
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1PlanHealthView.prototype.updateAttributes__put_t1PlanHealthView_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PlanHealthView'
        - name: id
          in: path
          description: t1PlanHealthView id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
    patch:
      tags:
        - t1PlanHealthView
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1PlanHealthView.prototype.updateAttributes__patch_t1PlanHealthView_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PlanHealthView'
        - name: id
          in: path
          description: t1PlanHealthView id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
  '/t1PlanHealthView/{id}/replace':
    post:
      tags:
        - t1PlanHealthView
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1PlanHealthView.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
  /t1PlanHealthView/findOne:
    get:
      tags:
        - t1PlanHealthView
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1PlanHealthView.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PlanHealthView'
      deprecated: false
  /t1PlanHealthView/update:
    post:
      tags:
        - t1PlanHealthView
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1PlanHealthView.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PlanHealthView'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1PlanHealthView/count:
    get:
      tags:
        - t1PlanHealthView
      summary: Count instances of the model matched by where from the data source.
      operationId: t1PlanHealthView.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumber:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.upsert__put_t2PlanHealthExclusionDetailsWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.upsert__patch_t2PlanHealthExclusionDetailsWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      operationId: t2PlanHealthExclusionDetailsWorkNumber.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiondetailsworknumber:
                type: object
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumber/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumber/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
  '/t2PlanHealthExclusionDetailsWorkNumber/{id}/exists':
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumber.exists__get_t2PlanHealthExclusionDetailsWorkNumber_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthExclusionDetailsWorkNumber/{id}':
    head:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumber.exists__head_t2PlanHealthExclusionDetailsWorkNumber_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsWorkNumber.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsWorkNumber.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumber.prototype.updateAttributes__put_t2PlanHealthExclusionDetailsWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumber.prototype.updateAttributes__patch_t2PlanHealthExclusionDetailsWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
  '/t2PlanHealthExclusionDetailsWorkNumber/{id}/replace':
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumber/findOne:
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumber/update:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsWorkNumber.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumber/count:
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumber
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumber.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsContract:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsContract.upsert__put_t2PlanHealthExclusionDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsContract.upsert__patch_t2PlanHealthExclusionDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsContract
      operationId: t2PlanHealthExclusionDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiondetailscontract:
                type: object
      deprecated: false
  /t2PlanHealthExclusionDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
  /t2PlanHealthExclusionDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthExclusionDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
  '/t2PlanHealthExclusionDetailsContract/{id}/exists':
    get:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsContract.exists__get_t2PlanHealthExclusionDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthExclusionDetailsContract/{id}':
    head:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsContract.exists__head_t2PlanHealthExclusionDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsContract.prototype.updateAttributes__put_t2PlanHealthExclusionDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsContract.prototype.updateAttributes__patch_t2PlanHealthExclusionDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
  '/t2PlanHealthExclusionDetailsContract/{id}/replace':
    post:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
  /t2PlanHealthExclusionDetailsContract/findOne:
    get:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthExclusionDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      deprecated: false
  /t2PlanHealthExclusionDetailsContract/update:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsContract/count:
    get:
      tags:
        - t2PlanHealthExclusionDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthExclusionDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendContract:
    post:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: T2planHealthExclusionTrendContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendContract.upsert__put_T2planHealthExclusionTrendContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendContract.upsert__patch_T2planHealthExclusionTrendContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendContract
      operationId: T2planHealthExclusionTrendContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiontrendcontract:
                type: object
      deprecated: false
  /T2planHealthExclusionTrendContract/replaceOrCreate:
    post:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
  /T2planHealthExclusionTrendContract/upsertWithWhere:
    post:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: T2planHealthExclusionTrendContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
  '/T2planHealthExclusionTrendContract/{id}/exists':
    get:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendContract.exists__get_T2planHealthExclusionTrendContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/T2planHealthExclusionTrendContract/{id}':
    head:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendContract.exists__head_T2planHealthExclusionTrendContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
    delete:
      tags:
        - T2planHealthExclusionTrendContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendContract.prototype.updateAttributes__put_T2planHealthExclusionTrendContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
        - name: id
          in: path
          description: T2planHealthExclusionTrendContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendContract.prototype.updateAttributes__patch_T2planHealthExclusionTrendContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
        - name: id
          in: path
          description: T2planHealthExclusionTrendContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
  '/T2planHealthExclusionTrendContract/{id}/replace':
    post:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: T2planHealthExclusionTrendContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
  /T2planHealthExclusionTrendContract/findOne:
    get:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: T2planHealthExclusionTrendContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      deprecated: false
  /T2planHealthExclusionTrendContract/update:
    post:
      tags:
        - T2planHealthExclusionTrendContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: T2planHealthExclusionTrendContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendContract/count:
    get:
      tags:
        - T2planHealthExclusionTrendContract
      summary: Count instances of the model matched by where from the data source.
      operationId: T2planHealthExclusionTrendContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendWorkNumber:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Create a new instance of the model and persist it into the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.upsert__put_T2planHealthExclusionTrendWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.upsert__patch_T2planHealthExclusionTrendWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      operationId: T2planHealthExclusionTrendWorkNumber.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiontrendworknumber:
                type: object
      deprecated: false
  /T2planHealthExclusionTrendWorkNumber/replaceOrCreate:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
  /T2planHealthExclusionTrendWorkNumber/upsertWithWhere:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: T2planHealthExclusionTrendWorkNumber.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
  '/T2planHealthExclusionTrendWorkNumber/{id}/exists':
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumber.exists__get_T2planHealthExclusionTrendWorkNumber_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/T2planHealthExclusionTrendWorkNumber/{id}':
    head:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumber.exists__head_T2planHealthExclusionTrendWorkNumber_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendWorkNumber.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
    delete:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendWorkNumber.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumber.prototype.updateAttributes__put_T2planHealthExclusionTrendWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
        - name: id
          in: path
          description: T2planHealthExclusionTrendWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumber.prototype.updateAttributes__patch_T2planHealthExclusionTrendWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
        - name: id
          in: path
          description: T2planHealthExclusionTrendWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
  '/T2planHealthExclusionTrendWorkNumber/{id}/replace':
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
  /T2planHealthExclusionTrendWorkNumber/findOne:
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Find first instance of the model matched by filter from the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      deprecated: false
  /T2planHealthExclusionTrendWorkNumber/update:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: T2planHealthExclusionTrendWorkNumber.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendWorkNumber/count:
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumber
      summary: Count instances of the model matched by where from the data source.
      operationId: T2planHealthExclusionTrendWorkNumber.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageContractPopupDetail:
    post:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageContractPopupDetail.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageContractPopupDetail.upsert__put_t2BusinessLeakageContractPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageContractPopupDetail.upsert__patch_t2BusinessLeakageContractPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageContractPopupDetail
      operationId: t2BusinessLeakageContractPopupDetail.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2BusinessLeakageContractPopupDetail:
                type: object
      deprecated: false
  /t2BusinessLeakageContractPopupDetail/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageContractPopupDetail.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
  /t2BusinessLeakageContractPopupDetail/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageContractPopupDetail.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
  '/t2BusinessLeakageContractPopupDetail/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageContractPopupDetail.exists__get_t2BusinessLeakageContractPopupDetail_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageContractPopupDetail/{id}':
    head:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageContractPopupDetail.exists__head_t2BusinessLeakageContractPopupDetail_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageContractPopupDetail.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageContractPopupDetail.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageContractPopupDetail.prototype.updateAttributes__put_t2BusinessLeakageContractPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
        - name: id
          in: path
          description: t2BusinessLeakageContractPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageContractPopupDetail.prototype.updateAttributes__patch_t2BusinessLeakageContractPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
        - name: id
          in: path
          description: t2BusinessLeakageContractPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
  '/t2BusinessLeakageContractPopupDetail/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageContractPopupDetail.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
  /t2BusinessLeakageContractPopupDetail/findOne:
    get:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageContractPopupDetail.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      deprecated: false
  /t2BusinessLeakageContractPopupDetail/update:
    post:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageContractPopupDetail.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageContractPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageContractPopupDetail/count:
    get:
      tags:
        - t2BusinessLeakageContractPopupDetail
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageContractPopupDetail.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageWorkPopupDetail:
    post:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.upsert__put_t2BusinessLeakageWorkPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.upsert__patch_t2BusinessLeakageWorkPopupDetail
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      operationId: t2BusinessLeakageWorkPopupDetail.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2BusinessLeakageWorkPopupDetail:
                type: object
      deprecated: false
  /t2BusinessLeakageWorkPopupDetail/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
  /t2BusinessLeakageWorkPopupDetail/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageWorkPopupDetail.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
  '/t2BusinessLeakageWorkPopupDetail/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageWorkPopupDetail.exists__get_t2BusinessLeakageWorkPopupDetail_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageWorkPopupDetail/{id}':
    head:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageWorkPopupDetail.exists__head_t2BusinessLeakageWorkPopupDetail_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageWorkPopupDetail.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageWorkPopupDetail.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageWorkPopupDetail.prototype.updateAttributes__put_t2BusinessLeakageWorkPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
        - name: id
          in: path
          description: t2BusinessLeakageWorkPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageWorkPopupDetail.prototype.updateAttributes__patch_t2BusinessLeakageWorkPopupDetail_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
        - name: id
          in: path
          description: t2BusinessLeakageWorkPopupDetail id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
  '/t2BusinessLeakageWorkPopupDetail/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
  /t2BusinessLeakageWorkPopupDetail/findOne:
    get:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      deprecated: false
  /t2BusinessLeakageWorkPopupDetail/update:
    post:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageWorkPopupDetail.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageWorkPopupDetail'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageWorkPopupDetail/count:
    get:
      tags:
        - t2BusinessLeakageWorkPopupDetail
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageWorkPopupDetail.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1BusinessGPLeakage:
    post:
      tags:
        - t1BusinessGPLeakage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1BusinessGPLeakage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
    put:
      tags:
        - t1BusinessGPLeakage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1BusinessGPLeakage.upsert__put_t1BusinessGPLeakage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
    patch:
      tags:
        - t1BusinessGPLeakage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1BusinessGPLeakage.upsert__patch_t1BusinessGPLeakage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
    get:
      tags:
        - t1BusinessGPLeakage
      operationId: t1BusinessGPLeakage.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1BusinessGPLeakage:
                type: object
      deprecated: false
  /t1BusinessGPLeakage/replaceOrCreate:
    post:
      tags:
        - t1BusinessGPLeakage
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1BusinessGPLeakage.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
  /t1BusinessGPLeakage/upsertWithWhere:
    post:
      tags:
        - t1BusinessGPLeakage
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1BusinessGPLeakage.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
  '/t1BusinessGPLeakage/{id}/exists':
    get:
      tags:
        - t1BusinessGPLeakage
      summary: Check whether a model instance exists in the data source.
      operationId: 't1BusinessGPLeakage.exists__get_t1BusinessGPLeakage_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1BusinessGPLeakage/{id}':
    head:
      tags:
        - t1BusinessGPLeakage
      summary: Check whether a model instance exists in the data source.
      operationId: 't1BusinessGPLeakage.exists__head_t1BusinessGPLeakage_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1BusinessGPLeakage
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1BusinessGPLeakage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
    delete:
      tags:
        - t1BusinessGPLeakage
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1BusinessGPLeakage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1BusinessGPLeakage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1BusinessGPLeakage.prototype.updateAttributes__put_t1BusinessGPLeakage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1BusinessGPLeakage'
        - name: id
          in: path
          description: t1BusinessGPLeakage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
    patch:
      tags:
        - t1BusinessGPLeakage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1BusinessGPLeakage.prototype.updateAttributes__patch_t1BusinessGPLeakage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1BusinessGPLeakage'
        - name: id
          in: path
          description: t1BusinessGPLeakage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
  '/t1BusinessGPLeakage/{id}/replace':
    post:
      tags:
        - t1BusinessGPLeakage
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1BusinessGPLeakage.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
  /t1BusinessGPLeakage/findOne:
    get:
      tags:
        - t1BusinessGPLeakage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1BusinessGPLeakage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1BusinessGPLeakage'
      deprecated: false
  /t1BusinessGPLeakage/update:
    post:
      tags:
        - t1BusinessGPLeakage
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1BusinessGPLeakage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1BusinessGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1BusinessGPLeakage/count:
    get:
      tags:
        - t1BusinessGPLeakage
      summary: Count instances of the model matched by where from the data source.
      operationId: t1BusinessGPLeakage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionContract:
    post:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionContract.upsert__put_t2BusinessLeakageExpansionContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionContract.upsert__patch_t2BusinessLeakageExpansionContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionContract
      operationId: t2BusinessLeakageExpansionContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2BusinessLeakageExpansionContract:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionContract/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
  /t2BusinessLeakageExpansionContract/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
  '/t2BusinessLeakageExpansionContract/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionContract.exists__get_t2BusinessLeakageExpansionContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionContract/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionContract.exists__head_t2BusinessLeakageExpansionContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionContract.prototype.updateAttributes__put_t2BusinessLeakageExpansionContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionContract.prototype.updateAttributes__patch_t2BusinessLeakageExpansionContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
  '/t2BusinessLeakageExpansionContract/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
  /t2BusinessLeakageExpansionContract/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      deprecated: false
  /t2BusinessLeakageExpansionContract/update:
    post:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionContract/count:
    get:
      tags:
        - t2BusinessLeakageExpansionContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionWorkNum:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.upsert__put_t2BusinessLeakageExpansionWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.upsert__patch_t2BusinessLeakageExpansionWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      operationId: t2BusinessLeakageExpansionWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2BusinessLeakageExpansionWorkNum:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionWorkNum/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
  /t2BusinessLeakageExpansionWorkNum/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
  '/t2BusinessLeakageExpansionWorkNum/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionWorkNum.exists__get_t2BusinessLeakageExpansionWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionWorkNum/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionWorkNum.exists__head_t2BusinessLeakageExpansionWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionWorkNum.prototype.updateAttributes__put_t2BusinessLeakageExpansionWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionWorkNum.prototype.updateAttributes__patch_t2BusinessLeakageExpansionWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
  '/t2BusinessLeakageExpansionWorkNum/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
  /t2BusinessLeakageExpansionWorkNum/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      deprecated: false
  /t2BusinessLeakageExpansionWorkNum/update:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionWorkNum/count:
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionDetailsContract:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.upsert__put_t2BusinessLeakageExpansionDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.upsert__patch_t2BusinessLeakageExpansionDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      operationId: t2BusinessLeakageExpansionDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2businessleakageexpansiondetailscontract:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
  /t2BusinessLeakageExpansionDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
  '/t2BusinessLeakageExpansionDetailsContract/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionDetailsContract.exists__get_t2BusinessLeakageExpansionDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionDetailsContract/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionDetailsContract.exists__head_t2BusinessLeakageExpansionDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionDetailsContract.prototype.updateAttributes__put_t2BusinessLeakageExpansionDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionDetailsContract.prototype.updateAttributes__patch_t2BusinessLeakageExpansionDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
  '/t2BusinessLeakageExpansionDetailsContract/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
  /t2BusinessLeakageExpansionDetailsContract/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      deprecated: false
  /t2BusinessLeakageExpansionDetailsContract/update:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionDetailsContract/count:
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionDetailsWorkNumber:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.upsert__put_t2BusinessLeakageExpansionDetailsWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.upsert__patch_t2BusinessLeakageExpansionDetailsWorkNumber
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2businessleakageexpansiondetailsworknumber:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionDetailsWorkNumber/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
  /t2BusinessLeakageExpansionDetailsWorkNumber/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
  '/t2BusinessLeakageExpansionDetailsWorkNumber/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionDetailsWorkNumber.exists__get_t2BusinessLeakageExpansionDetailsWorkNumber_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionDetailsWorkNumber/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionDetailsWorkNumber.exists__head_t2BusinessLeakageExpansionDetailsWorkNumber_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionDetailsWorkNumber.prototype.updateAttributes__put_t2BusinessLeakageExpansionDetailsWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionDetailsWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionDetailsWorkNumber.prototype.updateAttributes__patch_t2BusinessLeakageExpansionDetailsWorkNumber_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionDetailsWorkNumber id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
  '/t2BusinessLeakageExpansionDetailsWorkNumber/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
  /t2BusinessLeakageExpansionDetailsWorkNumber/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      deprecated: false
  /t2BusinessLeakageExpansionDetailsWorkNumber/update:
    post:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionDetailsWorkNumber'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionDetailsWorkNumber/count:
    get:
      tags:
        - t2BusinessLeakageExpansionDetailsWorkNumber
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionDetailsWorkNumber.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentage:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.upsert__put_t2BusinessLeakageExpansionExclusionTrendPercentage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.upsert__patch_t2BusinessLeakageExpansionExclusionTrendPercentage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2businessleakageexpansionexclusiontrendpercentage:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentage/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentage/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendPercentage/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentage.exists__get_t2BusinessLeakageExpansionExclusionTrendPercentage_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendPercentage/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentage.exists__head_t2BusinessLeakageExpansionExclusionTrendPercentage_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentage.prototype.updateAttributes__put_t2BusinessLeakageExpansionExclusionTrendPercentage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendPercentage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentage.prototype.updateAttributes__patch_t2BusinessLeakageExpansionExclusionTrendPercentage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendPercentage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendPercentage/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentage/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentage/update:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentage/count:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentage
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionContractTotal:
    post:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.upsert__put_t2BusinessLeakageExpansionContractTotal
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.upsert__patch_t2BusinessLeakageExpansionContractTotal
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      operationId: t2BusinessLeakageExpansionContractTotal.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2BusinessLeakageExpansionContractTotal:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionContractTotal/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
  /t2BusinessLeakageExpansionContractTotal/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionContractTotal.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
  '/t2BusinessLeakageExpansionContractTotal/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionContractTotal.exists__get_t2BusinessLeakageExpansionContractTotal_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionContractTotal/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionContractTotal.exists__head_t2BusinessLeakageExpansionContractTotal_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionContractTotal.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionContractTotal.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionContractTotal.prototype.updateAttributes__put_t2BusinessLeakageExpansionContractTotal_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionContractTotal id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionContractTotal.prototype.updateAttributes__patch_t2BusinessLeakageExpansionContractTotal_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionContractTotal id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
  '/t2BusinessLeakageExpansionContractTotal/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
  /t2BusinessLeakageExpansionContractTotal/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      deprecated: false
  /t2BusinessLeakageExpansionContractTotal/update:
    post:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionContractTotal.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionContractTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionContractTotal/count:
    get:
      tags:
        - t2BusinessLeakageExpansionContractTotal
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionContractTotal.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionWorkNumTotal:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.upsert__put_t2BusinessLeakageExpansionWorkNumTotal
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.upsert__patch_t2BusinessLeakageExpansionWorkNumTotal
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      operationId: t2BusinessLeakageExpansionWorkNumTotal.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2BusinessLeakageExpansionWorkNumTotal:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionWorkNumTotal/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
  /t2BusinessLeakageExpansionWorkNumTotal/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
  '/t2BusinessLeakageExpansionWorkNumTotal/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionWorkNumTotal.exists__get_t2BusinessLeakageExpansionWorkNumTotal_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionWorkNumTotal/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionWorkNumTotal.exists__head_t2BusinessLeakageExpansionWorkNumTotal_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionWorkNumTotal.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionWorkNumTotal.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionWorkNumTotal.prototype.updateAttributes__put_t2BusinessLeakageExpansionWorkNumTotal_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionWorkNumTotal id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionWorkNumTotal.prototype.updateAttributes__patch_t2BusinessLeakageExpansionWorkNumTotal_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionWorkNumTotal id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
  '/t2BusinessLeakageExpansionWorkNumTotal/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
  /t2BusinessLeakageExpansionWorkNumTotal/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      deprecated: false
  /t2BusinessLeakageExpansionWorkNumTotal/update:
    post:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionWorkNumTotal.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionWorkNumTotal'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionWorkNumTotal/count:
    get:
      tags:
        - t2BusinessLeakageExpansionWorkNumTotal
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionWorkNumTotal.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumberAll:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.upsert__put_t2PlanHealthExclusionDetailsWorkNumberAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.upsert__patch_t2PlanHealthExclusionDetailsWorkNumberAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiondetailsworknumberall:
                type: object
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumberAll/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumberAll/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
  '/t2PlanHealthExclusionDetailsWorkNumberAll/{id}/exists':
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumberAll.exists__get_t2PlanHealthExclusionDetailsWorkNumberAll_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthExclusionDetailsWorkNumberAll/{id}':
    head:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumberAll.exists__head_t2PlanHealthExclusionDetailsWorkNumberAll_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumberAll.prototype.updateAttributes__put_t2PlanHealthExclusionDetailsWorkNumberAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsWorkNumberAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsWorkNumberAll.prototype.updateAttributes__patch_t2PlanHealthExclusionDetailsWorkNumberAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsWorkNumberAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
  '/t2PlanHealthExclusionDetailsWorkNumberAll/{id}/replace':
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumberAll/findOne:
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumberAll/update:
    post:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsWorkNumberAll/count:
    get:
      tags:
        - t2PlanHealthExclusionDetailsWorkNumberAll
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthExclusionDetailsWorkNumberAll.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsContractAll:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.upsert__put_t2PlanHealthExclusionDetailsContractAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.upsert__patch_t2PlanHealthExclusionDetailsContractAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      operationId: t2PlanHealthExclusionDetailsContractAll.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiondetailscontractall:
                type: object
      deprecated: false
  /t2PlanHealthExclusionDetailsContractAll/replaceOrCreate:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
  /t2PlanHealthExclusionDetailsContractAll/upsertWithWhere:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2PlanHealthExclusionDetailsContractAll.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
  '/t2PlanHealthExclusionDetailsContractAll/{id}/exists':
    get:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsContractAll.exists__get_t2PlanHealthExclusionDetailsContractAll_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2PlanHealthExclusionDetailsContractAll/{id}':
    head:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Check whether a model instance exists in the data source.
      operationId: 't2PlanHealthExclusionDetailsContractAll.exists__head_t2PlanHealthExclusionDetailsContractAll_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsContractAll.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
    delete:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsContractAll.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsContractAll.prototype.updateAttributes__put_t2PlanHealthExclusionDetailsContractAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsContractAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
    patch:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2PlanHealthExclusionDetailsContractAll.prototype.updateAttributes__patch_t2PlanHealthExclusionDetailsContractAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
        - name: id
          in: path
          description: t2PlanHealthExclusionDetailsContractAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
  '/t2PlanHealthExclusionDetailsContractAll/{id}/replace':
    post:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
  /t2PlanHealthExclusionDetailsContractAll/findOne:
    get:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      deprecated: false
  /t2PlanHealthExclusionDetailsContractAll/update:
    post:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2PlanHealthExclusionDetailsContractAll.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2PlanHealthExclusionDetailsContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2PlanHealthExclusionDetailsContractAll/count:
    get:
      tags:
        - t2PlanHealthExclusionDetailsContractAll
      summary: Count instances of the model matched by where from the data source.
      operationId: t2PlanHealthExclusionDetailsContractAll.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillions:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.upsert__put_t2BusinessLeakageExpansionExclusionTrendMillions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.upsert__patch_t2BusinessLeakageExpansionExclusionTrendMillions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2businessleakageexpansionexclusiontrendmillions:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillions/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillions/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendMillions/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillions.exists__get_t2BusinessLeakageExpansionExclusionTrendMillions_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendMillions/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillions.exists__head_t2BusinessLeakageExpansionExclusionTrendMillions_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillions.prototype.updateAttributes__put_t2BusinessLeakageExpansionExclusionTrendMillions_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendMillions id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillions.prototype.updateAttributes__patch_t2BusinessLeakageExpansionExclusionTrendMillions_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendMillions id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendMillions/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillions/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillions/update:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillions'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillions/count:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillions
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillions.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendContractAll:
    post:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Create a new instance of the model and persist it into the data source.
      operationId: T2planHealthExclusionTrendContractAll.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendContractAll.upsert__put_T2planHealthExclusionTrendContractAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendContractAll.upsert__patch_T2planHealthExclusionTrendContractAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendContractAll
      operationId: T2planHealthExclusionTrendContractAll.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiontrendcontractall:
                type: object
      deprecated: false
  /T2planHealthExclusionTrendContractAll/replaceOrCreate:
    post:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendContractAll.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
  /T2planHealthExclusionTrendContractAll/upsertWithWhere:
    post:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: T2planHealthExclusionTrendContractAll.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
  '/T2planHealthExclusionTrendContractAll/{id}/exists':
    get:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendContractAll.exists__get_T2planHealthExclusionTrendContractAll_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/T2planHealthExclusionTrendContractAll/{id}':
    head:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendContractAll.exists__head_T2planHealthExclusionTrendContractAll_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendContractAll.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
    delete:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendContractAll.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendContractAll.prototype.updateAttributes__put_T2planHealthExclusionTrendContractAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
        - name: id
          in: path
          description: T2planHealthExclusionTrendContractAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendContractAll.prototype.updateAttributes__patch_T2planHealthExclusionTrendContractAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
        - name: id
          in: path
          description: T2planHealthExclusionTrendContractAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
  '/T2planHealthExclusionTrendContractAll/{id}/replace':
    post:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: T2planHealthExclusionTrendContractAll.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
  /T2planHealthExclusionTrendContractAll/findOne:
    get:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Find first instance of the model matched by filter from the data source.
      operationId: T2planHealthExclusionTrendContractAll.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      deprecated: false
  /T2planHealthExclusionTrendContractAll/update:
    post:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: T2planHealthExclusionTrendContractAll.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendContractAll'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendContractAll/count:
    get:
      tags:
        - T2planHealthExclusionTrendContractAll
      summary: Count instances of the model matched by where from the data source.
      operationId: T2planHealthExclusionTrendContractAll.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendWorkNumberAll:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Create a new instance of the model and persist it into the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.upsert__put_T2planHealthExclusionTrendWorkNumberAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.upsert__patch_T2planHealthExclusionTrendWorkNumberAll
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      operationId: T2planHealthExclusionTrendWorkNumberAll.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2planhealthexclusiontrendworknumberall:
                type: object
      deprecated: false
  /T2planHealthExclusionTrendWorkNumberAll/replaceOrCreate:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
  /T2planHealthExclusionTrendWorkNumberAll/upsertWithWhere:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: T2planHealthExclusionTrendWorkNumberAll.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
  '/T2planHealthExclusionTrendWorkNumberAll/{id}/exists':
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumberAll.exists__get_T2planHealthExclusionTrendWorkNumberAll_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/T2planHealthExclusionTrendWorkNumberAll/{id}':
    head:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Check whether a model instance exists in the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumberAll.exists__head_T2planHealthExclusionTrendWorkNumberAll_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendWorkNumberAll.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
    delete:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: T2planHealthExclusionTrendWorkNumberAll.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumberAll.prototype.updateAttributes__put_T2planHealthExclusionTrendWorkNumberAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
        - name: id
          in: path
          description: T2planHealthExclusionTrendWorkNumberAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
    patch:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'T2planHealthExclusionTrendWorkNumberAll.prototype.updateAttributes__patch_T2planHealthExclusionTrendWorkNumberAll_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
        - name: id
          in: path
          description: T2planHealthExclusionTrendWorkNumberAll id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
  '/T2planHealthExclusionTrendWorkNumberAll/{id}/replace':
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
  /T2planHealthExclusionTrendWorkNumberAll/findOne:
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Find first instance of the model matched by filter from the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      deprecated: false
  /T2planHealthExclusionTrendWorkNumberAll/update:
    post:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: T2planHealthExclusionTrendWorkNumberAll.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/T2planHealthExclusionTrendWorkNumberAll'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /T2planHealthExclusionTrendWorkNumberAll/count:
    get:
      tags:
        - T2planHealthExclusionTrendWorkNumberAll
      summary: Count instances of the model matched by where from the data source.
      operationId: T2planHealthExclusionTrendWorkNumberAll.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentageWork:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.upsert__put_t2BusinessLeakageExpansionExclusionTrendPercentageWork
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.upsert__patch_t2BusinessLeakageExpansionExclusionTrendPercentageWork
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2businessleakageexpansionexclusiontrendpercentagework:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentageWork/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentageWork/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendPercentageWork/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentageWork.exists__get_t2BusinessLeakageExpansionExclusionTrendPercentageWork_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendPercentageWork/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentageWork.exists__head_t2BusinessLeakageExpansionExclusionTrendPercentageWork_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentageWork.prototype.updateAttributes__put_t2BusinessLeakageExpansionExclusionTrendPercentageWork_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendPercentageWork id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendPercentageWork.prototype.updateAttributes__patch_t2BusinessLeakageExpansionExclusionTrendPercentageWork_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendPercentageWork id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendPercentageWork/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentageWork/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentageWork/update:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendPercentageWork'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendPercentageWork/count:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendPercentageWork
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendPercentageWork.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillionsWork:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.upsert__put_t2BusinessLeakageExpansionExclusionTrendMillionsWork
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.upsert__patch_t2BusinessLeakageExpansionExclusionTrendMillionsWork
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2businessleakageexpansionexclusiontrendmillionswork:
                type: object
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillionsWork/replaceOrCreate:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillionsWork/upsertWithWhere:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendMillionsWork/{id}/exists':
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillionsWork.exists__get_t2BusinessLeakageExpansionExclusionTrendMillionsWork_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendMillionsWork/{id}':
    head:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Check whether a model instance exists in the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillionsWork.exists__head_t2BusinessLeakageExpansionExclusionTrendMillionsWork_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
    delete:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillionsWork.prototype.updateAttributes__put_t2BusinessLeakageExpansionExclusionTrendMillionsWork_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendMillionsWork id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
    patch:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2BusinessLeakageExpansionExclusionTrendMillionsWork.prototype.updateAttributes__patch_t2BusinessLeakageExpansionExclusionTrendMillionsWork_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
        - name: id
          in: path
          description: t2BusinessLeakageExpansionExclusionTrendMillionsWork id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
  '/t2BusinessLeakageExpansionExclusionTrendMillionsWork/{id}/replace':
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillionsWork/findOne:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillionsWork/update:
    post:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2BusinessLeakageExpansionExclusionTrendMillionsWork'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2BusinessLeakageExpansionExclusionTrendMillionsWork/count:
    get:
      tags:
        - t2BusinessLeakageExpansionExclusionTrendMillionsWork
      summary: Count instances of the model matched by where from the data source.
      operationId: t2BusinessLeakageExpansionExclusionTrendMillionsWork.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1OperGPLeakage:
    post:
      tags:
        - t1OperGPLeakage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1OperGPLeakage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
    put:
      tags:
        - t1OperGPLeakage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1OperGPLeakage.upsert__put_t1OperGPLeakage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
    patch:
      tags:
        - t1OperGPLeakage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1OperGPLeakage.upsert__patch_t1OperGPLeakage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
    get:
      tags:
        - t1OperGPLeakage
      operationId: t1OperGPLeakage.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1OperGPLeakage:
                type: object
      deprecated: false
  /t1OperGPLeakage/replaceOrCreate:
    post:
      tags:
        - t1OperGPLeakage
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1OperGPLeakage.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
  /t1OperGPLeakage/upsertWithWhere:
    post:
      tags:
        - t1OperGPLeakage
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1OperGPLeakage.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
  '/t1OperGPLeakage/{id}/exists':
    get:
      tags:
        - t1OperGPLeakage
      summary: Check whether a model instance exists in the data source.
      operationId: 't1OperGPLeakage.exists__get_t1OperGPLeakage_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1OperGPLeakage/{id}':
    head:
      tags:
        - t1OperGPLeakage
      summary: Check whether a model instance exists in the data source.
      operationId: 't1OperGPLeakage.exists__head_t1OperGPLeakage_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1OperGPLeakage
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1OperGPLeakage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
    delete:
      tags:
        - t1OperGPLeakage
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1OperGPLeakage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1OperGPLeakage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1OperGPLeakage.prototype.updateAttributes__put_t1OperGPLeakage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1OperGPLeakage'
        - name: id
          in: path
          description: t1OperGPLeakage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
    patch:
      tags:
        - t1OperGPLeakage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1OperGPLeakage.prototype.updateAttributes__patch_t1OperGPLeakage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1OperGPLeakage'
        - name: id
          in: path
          description: t1OperGPLeakage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
  '/t1OperGPLeakage/{id}/replace':
    post:
      tags:
        - t1OperGPLeakage
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1OperGPLeakage.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
  /t1OperGPLeakage/findOne:
    get:
      tags:
        - t1OperGPLeakage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1OperGPLeakage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1OperGPLeakage'
      deprecated: false
  /t1OperGPLeakage/update:
    post:
      tags:
        - t1OperGPLeakage
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1OperGPLeakage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1OperGPLeakage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1OperGPLeakage/count:
    get:
      tags:
        - t1OperGPLeakage
      summary: Count instances of the model matched by where from the data source.
      operationId: t1OperGPLeakage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageCountContract:
    post:
      tags:
        - t2OperLeakageCountContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageCountContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
    put:
      tags:
        - t2OperLeakageCountContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageCountContract.upsert__put_t2OperLeakageCountContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageCountContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageCountContract.upsert__patch_t2OperLeakageCountContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
    get:
      tags:
        - t2OperLeakageCountContract
      operationId: t2OperLeakageCountContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageCountContract:
                type: object
      deprecated: false
  /t2OperLeakageCountContract/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageCountContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageCountContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
  /t2OperLeakageCountContract/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageCountContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageCountContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
  '/t2OperLeakageCountContract/{id}/exists':
    get:
      tags:
        - t2OperLeakageCountContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageCountContract.exists__get_t2OperLeakageCountContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageCountContract/{id}':
    head:
      tags:
        - t2OperLeakageCountContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageCountContract.exists__head_t2OperLeakageCountContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageCountContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageCountContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageCountContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageCountContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageCountContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageCountContract.prototype.updateAttributes__put_t2OperLeakageCountContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountContract'
        - name: id
          in: path
          description: t2OperLeakageCountContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageCountContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageCountContract.prototype.updateAttributes__patch_t2OperLeakageCountContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountContract'
        - name: id
          in: path
          description: t2OperLeakageCountContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
  '/t2OperLeakageCountContract/{id}/replace':
    post:
      tags:
        - t2OperLeakageCountContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageCountContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
  /t2OperLeakageCountContract/findOne:
    get:
      tags:
        - t2OperLeakageCountContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageCountContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountContract'
      deprecated: false
  /t2OperLeakageCountContract/update:
    post:
      tags:
        - t2OperLeakageCountContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageCountContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageCountContract/count:
    get:
      tags:
        - t2OperLeakageCountContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageCountContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageCountWorkNum:
    post:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageCountWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
    put:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageCountWorkNum.upsert__put_t2OperLeakageCountWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageCountWorkNum.upsert__patch_t2OperLeakageCountWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
    get:
      tags:
        - t2OperLeakageCountWorkNum
      operationId: t2OperLeakageCountWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageCountWorkNum:
                type: object
      deprecated: false
  /t2OperLeakageCountWorkNum/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageCountWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
  /t2OperLeakageCountWorkNum/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageCountWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
  '/t2OperLeakageCountWorkNum/{id}/exists':
    get:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageCountWorkNum.exists__get_t2OperLeakageCountWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageCountWorkNum/{id}':
    head:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageCountWorkNum.exists__head_t2OperLeakageCountWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageCountWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageCountWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageCountWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageCountWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageCountWorkNum.prototype.updateAttributes__put_t2OperLeakageCountWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
        - name: id
          in: path
          description: t2OperLeakageCountWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageCountWorkNum.prototype.updateAttributes__patch_t2OperLeakageCountWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
        - name: id
          in: path
          description: t2OperLeakageCountWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
  '/t2OperLeakageCountWorkNum/{id}/replace':
    post:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageCountWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
  /t2OperLeakageCountWorkNum/findOne:
    get:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageCountWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      deprecated: false
  /t2OperLeakageCountWorkNum/update:
    post:
      tags:
        - t2OperLeakageCountWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageCountWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageCountWorkNum/count:
    get:
      tags:
        - t2OperLeakageCountWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageCountWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendMillContract:
    post:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageTrendMillContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendMillContract.upsert__put_t2OperLeakageTrendMillContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendMillContract.upsert__patch_t2OperLeakageTrendMillContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendMillContract
      operationId: t2OperLeakageTrendMillContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageTrendMillContract:
                type: object
      deprecated: false
  /t2OperLeakageTrendMillContract/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendMillContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
  /t2OperLeakageTrendMillContract/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageTrendMillContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
  '/t2OperLeakageTrendMillContract/{id}/exists':
    get:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendMillContract.exists__get_t2OperLeakageTrendMillContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageTrendMillContract/{id}':
    head:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendMillContract.exists__head_t2OperLeakageTrendMillContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendMillContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendMillContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageTrendMillContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendMillContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendMillContract.prototype.updateAttributes__put_t2OperLeakageTrendMillContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
        - name: id
          in: path
          description: t2OperLeakageTrendMillContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendMillContract.prototype.updateAttributes__patch_t2OperLeakageTrendMillContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
        - name: id
          in: path
          description: t2OperLeakageTrendMillContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
  '/t2OperLeakageTrendMillContract/{id}/replace':
    post:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageTrendMillContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
  /t2OperLeakageTrendMillContract/findOne:
    get:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageTrendMillContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      deprecated: false
  /t2OperLeakageTrendMillContract/update:
    post:
      tags:
        - t2OperLeakageTrendMillContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageTrendMillContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendMillContract/count:
    get:
      tags:
        - t2OperLeakageTrendMillContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageTrendMillContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendMillWorkNum:
    post:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageTrendMillWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendMillWorkNum.upsert__put_t2OperLeakageTrendMillWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendMillWorkNum.upsert__patch_t2OperLeakageTrendMillWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendMillWorkNum
      operationId: t2OperLeakageTrendMillWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageTrendMillWorkNum:
                type: object
      deprecated: false
  /t2OperLeakageTrendMillWorkNum/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendMillWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
  /t2OperLeakageTrendMillWorkNum/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageTrendMillWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
  '/t2OperLeakageTrendMillWorkNum/{id}/exists':
    get:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendMillWorkNum.exists__get_t2OperLeakageTrendMillWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageTrendMillWorkNum/{id}':
    head:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendMillWorkNum.exists__head_t2OperLeakageTrendMillWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendMillWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendMillWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendMillWorkNum.prototype.updateAttributes__put_t2OperLeakageTrendMillWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
        - name: id
          in: path
          description: t2OperLeakageTrendMillWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendMillWorkNum.prototype.updateAttributes__patch_t2OperLeakageTrendMillWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
        - name: id
          in: path
          description: t2OperLeakageTrendMillWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
  '/t2OperLeakageTrendMillWorkNum/{id}/replace':
    post:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageTrendMillWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
  /t2OperLeakageTrendMillWorkNum/findOne:
    get:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageTrendMillWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      deprecated: false
  /t2OperLeakageTrendMillWorkNum/update:
    post:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageTrendMillWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendMillWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendMillWorkNum/count:
    get:
      tags:
        - t2OperLeakageTrendMillWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageTrendMillWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendPercContract:
    post:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageTrendPercContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendPercContract.upsert__put_t2OperLeakageTrendPercContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendPercContract.upsert__patch_t2OperLeakageTrendPercContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendPercContract
      operationId: t2OperLeakageTrendPercContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageTrendPercContract:
                type: object
      deprecated: false
  /t2OperLeakageTrendPercContract/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendPercContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
  /t2OperLeakageTrendPercContract/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageTrendPercContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
  '/t2OperLeakageTrendPercContract/{id}/exists':
    get:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendPercContract.exists__get_t2OperLeakageTrendPercContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageTrendPercContract/{id}':
    head:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendPercContract.exists__head_t2OperLeakageTrendPercContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendPercContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendPercContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageTrendPercContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendPercContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendPercContract.prototype.updateAttributes__put_t2OperLeakageTrendPercContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
        - name: id
          in: path
          description: t2OperLeakageTrendPercContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendPercContract.prototype.updateAttributes__patch_t2OperLeakageTrendPercContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
        - name: id
          in: path
          description: t2OperLeakageTrendPercContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
  '/t2OperLeakageTrendPercContract/{id}/replace':
    post:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageTrendPercContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
  /t2OperLeakageTrendPercContract/findOne:
    get:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageTrendPercContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      deprecated: false
  /t2OperLeakageTrendPercContract/update:
    post:
      tags:
        - t2OperLeakageTrendPercContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageTrendPercContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendPercContract/count:
    get:
      tags:
        - t2OperLeakageTrendPercContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageTrendPercContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendPercWorkNum:
    post:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageTrendPercWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendPercWorkNum.upsert__put_t2OperLeakageTrendPercWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendPercWorkNum.upsert__patch_t2OperLeakageTrendPercWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendPercWorkNum
      operationId: t2OperLeakageTrendPercWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageTrendPercWorkNum:
                type: object
      deprecated: false
  /t2OperLeakageTrendPercWorkNum/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTrendPercWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
  /t2OperLeakageTrendPercWorkNum/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageTrendPercWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
  '/t2OperLeakageTrendPercWorkNum/{id}/exists':
    get:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendPercWorkNum.exists__get_t2OperLeakageTrendPercWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageTrendPercWorkNum/{id}':
    head:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTrendPercWorkNum.exists__head_t2OperLeakageTrendPercWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendPercWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTrendPercWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendPercWorkNum.prototype.updateAttributes__put_t2OperLeakageTrendPercWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
        - name: id
          in: path
          description: t2OperLeakageTrendPercWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTrendPercWorkNum.prototype.updateAttributes__patch_t2OperLeakageTrendPercWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
        - name: id
          in: path
          description: t2OperLeakageTrendPercWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
  '/t2OperLeakageTrendPercWorkNum/{id}/replace':
    post:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageTrendPercWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
  /t2OperLeakageTrendPercWorkNum/findOne:
    get:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageTrendPercWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      deprecated: false
  /t2OperLeakageTrendPercWorkNum/update:
    post:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageTrendPercWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTrendPercWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTrendPercWorkNum/count:
    get:
      tags:
        - t2OperLeakageTrendPercWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageTrendPercWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageDetailsContract:
    post:
      tags:
        - t2OperLeakageDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
    put:
      tags:
        - t2OperLeakageDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageDetailsContract.upsert__put_t2OperLeakageDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageDetailsContract.upsert__patch_t2OperLeakageDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
    get:
      tags:
        - t2OperLeakageDetailsContract
      operationId: t2OperLeakageDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageDetailsContract:
                type: object
      deprecated: false
  /t2OperLeakageDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
  /t2OperLeakageDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
  '/t2OperLeakageDetailsContract/{id}/exists':
    get:
      tags:
        - t2OperLeakageDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageDetailsContract.exists__get_t2OperLeakageDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageDetailsContract/{id}':
    head:
      tags:
        - t2OperLeakageDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageDetailsContract.exists__head_t2OperLeakageDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageDetailsContract.prototype.updateAttributes__put_t2OperLeakageDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsContract'
        - name: id
          in: path
          description: t2OperLeakageDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageDetailsContract.prototype.updateAttributes__patch_t2OperLeakageDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsContract'
        - name: id
          in: path
          description: t2OperLeakageDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
  '/t2OperLeakageDetailsContract/{id}/replace':
    post:
      tags:
        - t2OperLeakageDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
  /t2OperLeakageDetailsContract/findOne:
    get:
      tags:
        - t2OperLeakageDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      deprecated: false
  /t2OperLeakageDetailsContract/update:
    post:
      tags:
        - t2OperLeakageDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageDetailsContract/count:
    get:
      tags:
        - t2OperLeakageDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageDetailsWorkNum:
    post:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageDetailsWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
    put:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageDetailsWorkNum.upsert__put_t2OperLeakageDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageDetailsWorkNum.upsert__patch_t2OperLeakageDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
    get:
      tags:
        - t2OperLeakageDetailsWorkNum
      operationId: t2OperLeakageDetailsWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageDetailsWorkNum:
                type: object
      deprecated: false
  /t2OperLeakageDetailsWorkNum/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageDetailsWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
  /t2OperLeakageDetailsWorkNum/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageDetailsWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
  '/t2OperLeakageDetailsWorkNum/{id}/exists':
    get:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageDetailsWorkNum.exists__get_t2OperLeakageDetailsWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageDetailsWorkNum/{id}':
    head:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageDetailsWorkNum.exists__head_t2OperLeakageDetailsWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageDetailsWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageDetailsWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageDetailsWorkNum.prototype.updateAttributes__put_t2OperLeakageDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
        - name: id
          in: path
          description: t2OperLeakageDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageDetailsWorkNum.prototype.updateAttributes__patch_t2OperLeakageDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
        - name: id
          in: path
          description: t2OperLeakageDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
  '/t2OperLeakageDetailsWorkNum/{id}/replace':
    post:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageDetailsWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
  /t2OperLeakageDetailsWorkNum/findOne:
    get:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageDetailsWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      deprecated: false
  /t2OperLeakageDetailsWorkNum/update:
    post:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageDetailsWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageDetailsWorkNum/count:
    get:
      tags:
        - t2OperLeakageDetailsWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageDetailsWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakagePopupContract:
    post:
      tags:
        - t2OperLeakagePopupContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakagePopupContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
    put:
      tags:
        - t2OperLeakagePopupContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakagePopupContract.upsert__put_t2OperLeakagePopupContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakagePopupContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakagePopupContract.upsert__patch_t2OperLeakagePopupContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
    get:
      tags:
        - t2OperLeakagePopupContract
      operationId: t2OperLeakagePopupContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakagePopupContract:
                type: object
      deprecated: false
  /t2OperLeakagePopupContract/replaceOrCreate:
    post:
      tags:
        - t2OperLeakagePopupContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakagePopupContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
  /t2OperLeakagePopupContract/upsertWithWhere:
    post:
      tags:
        - t2OperLeakagePopupContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakagePopupContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
  '/t2OperLeakagePopupContract/{id}/exists':
    get:
      tags:
        - t2OperLeakagePopupContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakagePopupContract.exists__get_t2OperLeakagePopupContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakagePopupContract/{id}':
    head:
      tags:
        - t2OperLeakagePopupContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakagePopupContract.exists__head_t2OperLeakagePopupContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakagePopupContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakagePopupContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
    delete:
      tags:
        - t2OperLeakagePopupContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakagePopupContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakagePopupContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakagePopupContract.prototype.updateAttributes__put_t2OperLeakagePopupContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupContract'
        - name: id
          in: path
          description: t2OperLeakagePopupContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakagePopupContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakagePopupContract.prototype.updateAttributes__patch_t2OperLeakagePopupContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupContract'
        - name: id
          in: path
          description: t2OperLeakagePopupContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
  '/t2OperLeakagePopupContract/{id}/replace':
    post:
      tags:
        - t2OperLeakagePopupContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakagePopupContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
  /t2OperLeakagePopupContract/findOne:
    get:
      tags:
        - t2OperLeakagePopupContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakagePopupContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupContract'
      deprecated: false
  /t2OperLeakagePopupContract/update:
    post:
      tags:
        - t2OperLeakagePopupContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakagePopupContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakagePopupContract/count:
    get:
      tags:
        - t2OperLeakagePopupContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakagePopupContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakagePopupWorkNum:
    post:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakagePopupWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
    put:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakagePopupWorkNum.upsert__put_t2OperLeakagePopupWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakagePopupWorkNum.upsert__patch_t2OperLeakagePopupWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
    get:
      tags:
        - t2OperLeakagePopupWorkNum
      operationId: t2OperLeakagePopupWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakagePopupWorkNum:
                type: object
      deprecated: false
  /t2OperLeakagePopupWorkNum/replaceOrCreate:
    post:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakagePopupWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
  /t2OperLeakagePopupWorkNum/upsertWithWhere:
    post:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakagePopupWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
  '/t2OperLeakagePopupWorkNum/{id}/exists':
    get:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakagePopupWorkNum.exists__get_t2OperLeakagePopupWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakagePopupWorkNum/{id}':
    head:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakagePopupWorkNum.exists__head_t2OperLeakagePopupWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakagePopupWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
    delete:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakagePopupWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakagePopupWorkNum.prototype.updateAttributes__put_t2OperLeakagePopupWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
        - name: id
          in: path
          description: t2OperLeakagePopupWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakagePopupWorkNum.prototype.updateAttributes__patch_t2OperLeakagePopupWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
        - name: id
          in: path
          description: t2OperLeakagePopupWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
  '/t2OperLeakagePopupWorkNum/{id}/replace':
    post:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakagePopupWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
  /t2OperLeakagePopupWorkNum/findOne:
    get:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakagePopupWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      deprecated: false
  /t2OperLeakagePopupWorkNum/update:
    post:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakagePopupWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakagePopupWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakagePopupWorkNum/count:
    get:
      tags:
        - t2OperLeakagePopupWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakagePopupWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTotalContract:
    post:
      tags:
        - t2OperLeakageTotalContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageTotalContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
    put:
      tags:
        - t2OperLeakageTotalContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTotalContract.upsert__put_t2OperLeakageTotalContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTotalContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTotalContract.upsert__patch_t2OperLeakageTotalContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
    get:
      tags:
        - t2OperLeakageTotalContract
      operationId: t2OperLeakageTotalContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageTotalContract:
                type: object
      deprecated: false
  /t2OperLeakageTotalContract/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageTotalContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTotalContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
  /t2OperLeakageTotalContract/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageTotalContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageTotalContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
  '/t2OperLeakageTotalContract/{id}/exists':
    get:
      tags:
        - t2OperLeakageTotalContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTotalContract.exists__get_t2OperLeakageTotalContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageTotalContract/{id}':
    head:
      tags:
        - t2OperLeakageTotalContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTotalContract.exists__head_t2OperLeakageTotalContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageTotalContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTotalContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageTotalContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTotalContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageTotalContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTotalContract.prototype.updateAttributes__put_t2OperLeakageTotalContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalContract'
        - name: id
          in: path
          description: t2OperLeakageTotalContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTotalContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTotalContract.prototype.updateAttributes__patch_t2OperLeakageTotalContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalContract'
        - name: id
          in: path
          description: t2OperLeakageTotalContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
  '/t2OperLeakageTotalContract/{id}/replace':
    post:
      tags:
        - t2OperLeakageTotalContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageTotalContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
  /t2OperLeakageTotalContract/findOne:
    get:
      tags:
        - t2OperLeakageTotalContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageTotalContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalContract'
      deprecated: false
  /t2OperLeakageTotalContract/update:
    post:
      tags:
        - t2OperLeakageTotalContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageTotalContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTotalContract/count:
    get:
      tags:
        - t2OperLeakageTotalContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageTotalContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTotalWorkNum:
    post:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2OperLeakageTotalWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
    put:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTotalWorkNum.upsert__put_t2OperLeakageTotalWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTotalWorkNum.upsert__patch_t2OperLeakageTotalWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
    get:
      tags:
        - t2OperLeakageTotalWorkNum
      operationId: t2OperLeakageTotalWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2OperLeakageTotalWorkNum:
                type: object
      deprecated: false
  /t2OperLeakageTotalWorkNum/replaceOrCreate:
    post:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2OperLeakageTotalWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
  /t2OperLeakageTotalWorkNum/upsertWithWhere:
    post:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2OperLeakageTotalWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
  '/t2OperLeakageTotalWorkNum/{id}/exists':
    get:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTotalWorkNum.exists__get_t2OperLeakageTotalWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2OperLeakageTotalWorkNum/{id}':
    head:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2OperLeakageTotalWorkNum.exists__head_t2OperLeakageTotalWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTotalWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
    delete:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2OperLeakageTotalWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTotalWorkNum.prototype.updateAttributes__put_t2OperLeakageTotalWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
        - name: id
          in: path
          description: t2OperLeakageTotalWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
    patch:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2OperLeakageTotalWorkNum.prototype.updateAttributes__patch_t2OperLeakageTotalWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
        - name: id
          in: path
          description: t2OperLeakageTotalWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
  '/t2OperLeakageTotalWorkNum/{id}/replace':
    post:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2OperLeakageTotalWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
  /t2OperLeakageTotalWorkNum/findOne:
    get:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2OperLeakageTotalWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      deprecated: false
  /t2OperLeakageTotalWorkNum/update:
    post:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2OperLeakageTotalWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2OperLeakageTotalWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2OperLeakageTotalWorkNum/count:
    get:
      tags:
        - t2OperLeakageTotalWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2OperLeakageTotalWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1CompScorecard:
    post:
      tags:
        - t1CompScorecard
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1CompScorecard.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
    put:
      tags:
        - t1CompScorecard
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1CompScorecard.upsert__put_t1CompScorecard
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
    patch:
      tags:
        - t1CompScorecard
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1CompScorecard.upsert__patch_t1CompScorecard
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
    get:
      tags:
        - t1CompScorecard
      operationId: t1CompScorecard.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1CompScorecard:
                type: object
      deprecated: false
  /t1CompScorecard/replaceOrCreate:
    post:
      tags:
        - t1CompScorecard
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1CompScorecard.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
  /t1CompScorecard/upsertWithWhere:
    post:
      tags:
        - t1CompScorecard
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1CompScorecard.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
  '/t1CompScorecard/{id}/exists':
    get:
      tags:
        - t1CompScorecard
      summary: Check whether a model instance exists in the data source.
      operationId: 't1CompScorecard.exists__get_t1CompScorecard_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1CompScorecard/{id}':
    head:
      tags:
        - t1CompScorecard
      summary: Check whether a model instance exists in the data source.
      operationId: 't1CompScorecard.exists__head_t1CompScorecard_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1CompScorecard
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1CompScorecard.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
    delete:
      tags:
        - t1CompScorecard
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1CompScorecard.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1CompScorecard
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1CompScorecard.prototype.updateAttributes__put_t1CompScorecard_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1CompScorecard'
        - name: id
          in: path
          description: t1CompScorecard id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
    patch:
      tags:
        - t1CompScorecard
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1CompScorecard.prototype.updateAttributes__patch_t1CompScorecard_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1CompScorecard'
        - name: id
          in: path
          description: t1CompScorecard id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
  '/t1CompScorecard/{id}/replace':
    post:
      tags:
        - t1CompScorecard
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1CompScorecard.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
  /t1CompScorecard/findOne:
    get:
      tags:
        - t1CompScorecard
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1CompScorecard.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1CompScorecard'
      deprecated: false
  /t1CompScorecard/update:
    post:
      tags:
        - t1CompScorecard
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1CompScorecard.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1CompScorecard'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1CompScorecard/count:
    get:
      tags:
        - t1CompScorecard
      summary: Count instances of the model matched by where from the data source.
      operationId: t1CompScorecard.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompSummary:
    post:
      tags:
        - t2CompSummary
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompSummary.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
    put:
      tags:
        - t2CompSummary
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompSummary.upsert__put_t2CompSummary
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
    patch:
      tags:
        - t2CompSummary
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompSummary.upsert__patch_t2CompSummary
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
    get:
      tags:
        - t2CompSummary
      operationId: t2CompSummary.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompSummary:
                type: object
      deprecated: false
  /t2CompSummary/replaceOrCreate:
    post:
      tags:
        - t2CompSummary
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompSummary.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
  /t2CompSummary/upsertWithWhere:
    post:
      tags:
        - t2CompSummary
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompSummary.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
  '/t2CompSummary/{id}/exists':
    get:
      tags:
        - t2CompSummary
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompSummary.exists__get_t2CompSummary_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompSummary/{id}':
    head:
      tags:
        - t2CompSummary
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompSummary.exists__head_t2CompSummary_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompSummary
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompSummary.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
    delete:
      tags:
        - t2CompSummary
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompSummary.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompSummary
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompSummary.prototype.updateAttributes__put_t2CompSummary_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummary'
        - name: id
          in: path
          description: t2CompSummary id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
    patch:
      tags:
        - t2CompSummary
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompSummary.prototype.updateAttributes__patch_t2CompSummary_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummary'
        - name: id
          in: path
          description: t2CompSummary id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
  '/t2CompSummary/{id}/replace':
    post:
      tags:
        - t2CompSummary
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompSummary.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
  /t2CompSummary/findOne:
    get:
      tags:
        - t2CompSummary
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompSummary.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummary'
      deprecated: false
  /t2CompSummary/update:
    post:
      tags:
        - t2CompSummary
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompSummary.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummary'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompSummary/count:
    get:
      tags:
        - t2CompSummary
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompSummary.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TieredLeakContract:
    post:
      tags:
        - t2TieredLeakContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TieredLeakContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
    put:
      tags:
        - t2TieredLeakContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakContract.upsert__put_t2TieredLeakContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakContract.upsert__patch_t2TieredLeakContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
    get:
      tags:
        - t2TieredLeakContract
      operationId: t2TieredLeakContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              T2tieredleakcontract:
                type: object
      deprecated: false
  /t2TieredLeakContract/replaceOrCreate:
    post:
      tags:
        - t2TieredLeakContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
  /t2TieredLeakContract/upsertWithWhere:
    post:
      tags:
        - t2TieredLeakContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TieredLeakContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
  '/t2TieredLeakContract/{id}/exists':
    get:
      tags:
        - t2TieredLeakContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakContract.exists__get_t2TieredLeakContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TieredLeakContract/{id}':
    head:
      tags:
        - t2TieredLeakContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakContract.exists__head_t2TieredLeakContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TieredLeakContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
    delete:
      tags:
        - t2TieredLeakContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TieredLeakContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakContract.prototype.updateAttributes__put_t2TieredLeakContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContract'
        - name: id
          in: path
          description: t2TieredLeakContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakContract.prototype.updateAttributes__patch_t2TieredLeakContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContract'
        - name: id
          in: path
          description: t2TieredLeakContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
  '/t2TieredLeakContract/{id}/replace':
    post:
      tags:
        - t2TieredLeakContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TieredLeakContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
  /t2TieredLeakContract/findOne:
    get:
      tags:
        - t2TieredLeakContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TieredLeakContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContract'
      deprecated: false
  /t2TieredLeakContract/update:
    post:
      tags:
        - t2TieredLeakContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TieredLeakContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TieredLeakContract/count:
    get:
      tags:
        - t2TieredLeakContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TieredLeakContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TieredLeakContractExport:
    post:
      tags:
        - t2TieredLeakContractExport
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TieredLeakContractExport.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
    put:
      tags:
        - t2TieredLeakContractExport
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakContractExport.upsert__put_t2TieredLeakContractExport
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakContractExport
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakContractExport.upsert__patch_t2TieredLeakContractExport
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
    get:
      tags:
        - t2TieredLeakContractExport
      operationId: t2TieredLeakContractExport.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TieredLeakContractExport:
                type: object
      deprecated: false
  /t2TieredLeakContractExport/replaceOrCreate:
    post:
      tags:
        - t2TieredLeakContractExport
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakContractExport.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
  /t2TieredLeakContractExport/upsertWithWhere:
    post:
      tags:
        - t2TieredLeakContractExport
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TieredLeakContractExport.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
  '/t2TieredLeakContractExport/{id}/exists':
    get:
      tags:
        - t2TieredLeakContractExport
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakContractExport.exists__get_t2TieredLeakContractExport_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TieredLeakContractExport/{id}':
    head:
      tags:
        - t2TieredLeakContractExport
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakContractExport.exists__head_t2TieredLeakContractExport_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TieredLeakContractExport
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakContractExport.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
    delete:
      tags:
        - t2TieredLeakContractExport
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakContractExport.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TieredLeakContractExport
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakContractExport.prototype.updateAttributes__put_t2TieredLeakContractExport_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContractExport'
        - name: id
          in: path
          description: t2TieredLeakContractExport id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakContractExport
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakContractExport.prototype.updateAttributes__patch_t2TieredLeakContractExport_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContractExport'
        - name: id
          in: path
          description: t2TieredLeakContractExport id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
  '/t2TieredLeakContractExport/{id}/replace':
    post:
      tags:
        - t2TieredLeakContractExport
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TieredLeakContractExport.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
  /t2TieredLeakContractExport/findOne:
    get:
      tags:
        - t2TieredLeakContractExport
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TieredLeakContractExport.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakContractExport'
      deprecated: false
  /t2TieredLeakContractExport/update:
    post:
      tags:
        - t2TieredLeakContractExport
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TieredLeakContractExport.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakContractExport'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TieredLeakContractExport/count:
    get:
      tags:
        - t2TieredLeakContractExport
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TieredLeakContractExport.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TieredLeakWorkNumExport:
    post:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TieredLeakWorkNumExport.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
    put:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakWorkNumExport.upsert__put_t2TieredLeakWorkNumExport
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakWorkNumExport.upsert__patch_t2TieredLeakWorkNumExport
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
    get:
      tags:
        - t2TieredLeakWorkNumExport
      operationId: t2TieredLeakWorkNumExport.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2TieredLeakWorkNumExport:
                type: object
      deprecated: false
  /t2TieredLeakWorkNumExport/replaceOrCreate:
    post:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakWorkNumExport.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
  /t2TieredLeakWorkNumExport/upsertWithWhere:
    post:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TieredLeakWorkNumExport.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
  '/t2TieredLeakWorkNumExport/{id}/exists':
    get:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakWorkNumExport.exists__get_t2TieredLeakWorkNumExport_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TieredLeakWorkNumExport/{id}':
    head:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakWorkNumExport.exists__head_t2TieredLeakWorkNumExport_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TieredLeakWorkNumExport
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakWorkNumExport.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
    delete:
      tags:
        - t2TieredLeakWorkNumExport
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakWorkNumExport.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakWorkNumExport.prototype.updateAttributes__put_t2TieredLeakWorkNumExport_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
        - name: id
          in: path
          description: t2TieredLeakWorkNumExport id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakWorkNumExport.prototype.updateAttributes__patch_t2TieredLeakWorkNumExport_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
        - name: id
          in: path
          description: t2TieredLeakWorkNumExport id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
  '/t2TieredLeakWorkNumExport/{id}/replace':
    post:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TieredLeakWorkNumExport.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
  /t2TieredLeakWorkNumExport/findOne:
    get:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TieredLeakWorkNumExport.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      deprecated: false
  /t2TieredLeakWorkNumExport/update:
    post:
      tags:
        - t2TieredLeakWorkNumExport
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TieredLeakWorkNumExport.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNumExport'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TieredLeakWorkNumExport/count:
    get:
      tags:
        - t2TieredLeakWorkNumExport
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TieredLeakWorkNumExport.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2TieredLeakWorkNum:
    post:
      tags:
        - t2TieredLeakWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2TieredLeakWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
    put:
      tags:
        - t2TieredLeakWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakWorkNum.upsert__put_t2TieredLeakWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakWorkNum.upsert__patch_t2TieredLeakWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
    get:
      tags:
        - t2TieredLeakWorkNum
      operationId: t2TieredLeakWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              T2tieredleakworknum:
                type: object
      deprecated: false
  /t2TieredLeakWorkNum/replaceOrCreate:
    post:
      tags:
        - t2TieredLeakWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2TieredLeakWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
  /t2TieredLeakWorkNum/upsertWithWhere:
    post:
      tags:
        - t2TieredLeakWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2TieredLeakWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
  '/t2TieredLeakWorkNum/{id}/exists':
    get:
      tags:
        - t2TieredLeakWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakWorkNum.exists__get_t2TieredLeakWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2TieredLeakWorkNum/{id}':
    head:
      tags:
        - t2TieredLeakWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2TieredLeakWorkNum.exists__head_t2TieredLeakWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2TieredLeakWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
    delete:
      tags:
        - t2TieredLeakWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2TieredLeakWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2TieredLeakWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakWorkNum.prototype.updateAttributes__put_t2TieredLeakWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNum'
        - name: id
          in: path
          description: t2TieredLeakWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
    patch:
      tags:
        - t2TieredLeakWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2TieredLeakWorkNum.prototype.updateAttributes__patch_t2TieredLeakWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNum'
        - name: id
          in: path
          description: t2TieredLeakWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
  '/t2TieredLeakWorkNum/{id}/replace':
    post:
      tags:
        - t2TieredLeakWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2TieredLeakWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
  /t2TieredLeakWorkNum/findOne:
    get:
      tags:
        - t2TieredLeakWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2TieredLeakWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2TieredLeakWorkNum'
      deprecated: false
  /t2TieredLeakWorkNum/update:
    post:
      tags:
        - t2TieredLeakWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2TieredLeakWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2TieredLeakWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2TieredLeakWorkNum/count:
    get:
      tags:
        - t2TieredLeakWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2TieredLeakWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /USER_ACKNOWLEDGEMENTS:
    post:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Create a new instance of the model and persist it into the data source.
      operationId: USER_ACKNOWLEDGEMENTS.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
    put:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: USER_ACKNOWLEDGEMENTS.upsert__put_USER_ACKNOWLEDGEMENTS
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
    patch:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: USER_ACKNOWLEDGEMENTS.upsert__patch_USER_ACKNOWLEDGEMENTS
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
    get:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Find all instances of the model matched by filter from the data source.
      operationId: USER_ACKNOWLEDGEMENTS.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
  /USER_ACKNOWLEDGEMENTS/replaceOrCreate:
    post:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: USER_ACKNOWLEDGEMENTS.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
  /USER_ACKNOWLEDGEMENTS/upsertWithWhere:
    post:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: USER_ACKNOWLEDGEMENTS.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
  '/USER_ACKNOWLEDGEMENTS/{id}/exists':
    get:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Check whether a model instance exists in the data source.
      operationId: 'USER_ACKNOWLEDGEMENTS.exists__get_USER_ACKNOWLEDGEMENTS_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/USER_ACKNOWLEDGEMENTS/{id}':
    head:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Check whether a model instance exists in the data source.
      operationId: 'USER_ACKNOWLEDGEMENTS.exists__head_USER_ACKNOWLEDGEMENTS_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: USER_ACKNOWLEDGEMENTS.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
    delete:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: USER_ACKNOWLEDGEMENTS.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'USER_ACKNOWLEDGEMENTS.prototype.updateAttributes__put_USER_ACKNOWLEDGEMENTS_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
        - name: id
          in: path
          description: USER_ACKNOWLEDGEMENTS id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
    patch:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'USER_ACKNOWLEDGEMENTS.prototype.updateAttributes__patch_USER_ACKNOWLEDGEMENTS_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
        - name: id
          in: path
          description: USER_ACKNOWLEDGEMENTS id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
  '/USER_ACKNOWLEDGEMENTS/{id}/replace':
    post:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: USER_ACKNOWLEDGEMENTS.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
  /USER_ACKNOWLEDGEMENTS/findOne:
    get:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Find first instance of the model matched by filter from the data source.
      operationId: USER_ACKNOWLEDGEMENTS.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      deprecated: false
  /USER_ACKNOWLEDGEMENTS/update:
    post:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: USER_ACKNOWLEDGEMENTS.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/USER_ACKNOWLEDGEMENTS'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /USER_ACKNOWLEDGEMENTS/count:
    get:
      tags:
        - USER_ACKNOWLEDGEMENTS
      summary: Count instances of the model matched by where from the data source.
      operationId: USER_ACKNOWLEDGEMENTS.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompSummaryGeo:
    post:
      tags:
        - t2CompSummaryGeo
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompSummaryGeo.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
    put:
      tags:
        - t2CompSummaryGeo
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompSummaryGeo.upsert__put_t2CompSummaryGeo
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
    patch:
      tags:
        - t2CompSummaryGeo
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompSummaryGeo.upsert__patch_t2CompSummaryGeo
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
    get:
      tags:
        - t2CompSummaryGeo
      operationId: t2CompSummaryGeo.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompSummaryGeo:
                type: object
      deprecated: false
  /t2CompSummaryGeo/replaceOrCreate:
    post:
      tags:
        - t2CompSummaryGeo
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompSummaryGeo.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
  /t2CompSummaryGeo/upsertWithWhere:
    post:
      tags:
        - t2CompSummaryGeo
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompSummaryGeo.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
  '/t2CompSummaryGeo/{id}/exists':
    get:
      tags:
        - t2CompSummaryGeo
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompSummaryGeo.exists__get_t2CompSummaryGeo_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompSummaryGeo/{id}':
    head:
      tags:
        - t2CompSummaryGeo
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompSummaryGeo.exists__head_t2CompSummaryGeo_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompSummaryGeo
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompSummaryGeo.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
    delete:
      tags:
        - t2CompSummaryGeo
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompSummaryGeo.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompSummaryGeo
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompSummaryGeo.prototype.updateAttributes__put_t2CompSummaryGeo_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGeo'
        - name: id
          in: path
          description: t2CompSummaryGeo id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
    patch:
      tags:
        - t2CompSummaryGeo
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompSummaryGeo.prototype.updateAttributes__patch_t2CompSummaryGeo_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGeo'
        - name: id
          in: path
          description: t2CompSummaryGeo id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
  '/t2CompSummaryGeo/{id}/replace':
    post:
      tags:
        - t2CompSummaryGeo
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompSummaryGeo.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
  /t2CompSummaryGeo/findOne:
    get:
      tags:
        - t2CompSummaryGeo
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompSummaryGeo.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGeo'
      deprecated: false
  /t2CompSummaryGeo/update:
    post:
      tags:
        - t2CompSummaryGeo
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompSummaryGeo.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGeo'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompSummaryGeo/count:
    get:
      tags:
        - t2CompSummaryGeo
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompSummaryGeo.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompSummaryGrowthPltfrm:
    post:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompSummaryGrowthPltfrm.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
    put:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompSummaryGrowthPltfrm.upsert__put_t2CompSummaryGrowthPltfrm
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
    patch:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompSummaryGrowthPltfrm.upsert__patch_t2CompSummaryGrowthPltfrm
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
    get:
      tags:
        - t2CompSummaryGrowthPltfrm
      operationId: t2CompSummaryGrowthPltfrm.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompSummaryGrowthPltfrm:
                type: object
      deprecated: false
  /t2CompSummaryGrowthPltfrm/replaceOrCreate:
    post:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompSummaryGrowthPltfrm.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
  /t2CompSummaryGrowthPltfrm/upsertWithWhere:
    post:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompSummaryGrowthPltfrm.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
  '/t2CompSummaryGrowthPltfrm/{id}/exists':
    get:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompSummaryGrowthPltfrm.exists__get_t2CompSummaryGrowthPltfrm_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompSummaryGrowthPltfrm/{id}':
    head:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompSummaryGrowthPltfrm.exists__head_t2CompSummaryGrowthPltfrm_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompSummaryGrowthPltfrm.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
    delete:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompSummaryGrowthPltfrm.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompSummaryGrowthPltfrm.prototype.updateAttributes__put_t2CompSummaryGrowthPltfrm_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
        - name: id
          in: path
          description: t2CompSummaryGrowthPltfrm id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
    patch:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompSummaryGrowthPltfrm.prototype.updateAttributes__patch_t2CompSummaryGrowthPltfrm_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
        - name: id
          in: path
          description: t2CompSummaryGrowthPltfrm id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
  '/t2CompSummaryGrowthPltfrm/{id}/replace':
    post:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompSummaryGrowthPltfrm.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
  /t2CompSummaryGrowthPltfrm/findOne:
    get:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompSummaryGrowthPltfrm.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      deprecated: false
  /t2CompSummaryGrowthPltfrm/update:
    post:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompSummaryGrowthPltfrm.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompSummaryGrowthPltfrm'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompSummaryGrowthPltfrm/count:
    get:
      tags:
        - t2CompSummaryGrowthPltfrm
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompSummaryGrowthPltfrm.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /complianceSnapshots:
    post:
      tags:
        - complianceSnapshots
      summary: Create a new instance of the model and persist it into the data source.
      operationId: complianceSnapshots.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
    put:
      tags:
        - complianceSnapshots
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: complianceSnapshots.upsert__put_complianceSnapshots
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
    patch:
      tags:
        - complianceSnapshots
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: complianceSnapshots.upsert__patch_complianceSnapshots
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
    get:
      tags:
        - complianceSnapshots
      operationId: complianceSnapshots.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              ComplianceSnapshots:
                type: object
      deprecated: false
  /complianceSnapshots/replaceOrCreate:
    post:
      tags:
        - complianceSnapshots
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: complianceSnapshots.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
  /complianceSnapshots/upsertWithWhere:
    post:
      tags:
        - complianceSnapshots
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: complianceSnapshots.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
  '/complianceSnapshots/{id}/exists':
    get:
      tags:
        - complianceSnapshots
      summary: Check whether a model instance exists in the data source.
      operationId: 'complianceSnapshots.exists__get_complianceSnapshots_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/complianceSnapshots/{id}':
    head:
      tags:
        - complianceSnapshots
      summary: Check whether a model instance exists in the data source.
      operationId: 'complianceSnapshots.exists__head_complianceSnapshots_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - complianceSnapshots
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: complianceSnapshots.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
    delete:
      tags:
        - complianceSnapshots
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: complianceSnapshots.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - complianceSnapshots
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'complianceSnapshots.prototype.updateAttributes__put_complianceSnapshots_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/complianceSnapshots'
        - name: id
          in: path
          description: complianceSnapshots id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
    patch:
      tags:
        - complianceSnapshots
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'complianceSnapshots.prototype.updateAttributes__patch_complianceSnapshots_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/complianceSnapshots'
        - name: id
          in: path
          description: complianceSnapshots id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
  '/complianceSnapshots/{id}/replace':
    post:
      tags:
        - complianceSnapshots
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: complianceSnapshots.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
  /complianceSnapshots/findOne:
    get:
      tags:
        - complianceSnapshots
      summary: Find first instance of the model matched by filter from the data source.
      operationId: complianceSnapshots.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/complianceSnapshots'
      deprecated: false
  /complianceSnapshots/update:
    post:
      tags:
        - complianceSnapshots
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: complianceSnapshots.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/complianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /complianceSnapshots/count:
    get:
      tags:
        - complianceSnapshots
      summary: Count instances of the model matched by where from the data source.
      operationId: complianceSnapshots.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompCPMTrend:
    post:
      tags:
        - t2CompCPMTrend
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompCPMTrend.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
    put:
      tags:
        - t2CompCPMTrend
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMTrend.upsert__put_t2CompCPMTrend
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
    patch:
      tags:
        - t2CompCPMTrend
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMTrend.upsert__patch_t2CompCPMTrend
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
    get:
      tags:
        - t2CompCPMTrend
      operationId: t2CompCPMTrend.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompCPMTrend:
                type: object
      deprecated: false
  /t2CompCPMTrend/replaceOrCreate:
    post:
      tags:
        - t2CompCPMTrend
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMTrend.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
  /t2CompCPMTrend/upsertWithWhere:
    post:
      tags:
        - t2CompCPMTrend
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompCPMTrend.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
  '/t2CompCPMTrend/{id}/exists':
    get:
      tags:
        - t2CompCPMTrend
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMTrend.exists__get_t2CompCPMTrend_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompCPMTrend/{id}':
    head:
      tags:
        - t2CompCPMTrend
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMTrend.exists__head_t2CompCPMTrend_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompCPMTrend
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompCPMTrend.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
    delete:
      tags:
        - t2CompCPMTrend
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompCPMTrend.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompCPMTrend
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMTrend.prototype.updateAttributes__put_t2CompCPMTrend_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMTrend'
        - name: id
          in: path
          description: t2CompCPMTrend id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
    patch:
      tags:
        - t2CompCPMTrend
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMTrend.prototype.updateAttributes__patch_t2CompCPMTrend_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMTrend'
        - name: id
          in: path
          description: t2CompCPMTrend id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
  '/t2CompCPMTrend/{id}/replace':
    post:
      tags:
        - t2CompCPMTrend
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompCPMTrend.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
  /t2CompCPMTrend/findOne:
    get:
      tags:
        - t2CompCPMTrend
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompCPMTrend.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMTrend'
      deprecated: false
  /t2CompCPMTrend/update:
    post:
      tags:
        - t2CompCPMTrend
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompCPMTrend.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompCPMTrend/count:
    get:
      tags:
        - t2CompCPMTrend
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompCPMTrend.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompCPMDetails:
    post:
      tags:
        - t2CompCPMDetails
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompCPMDetails.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
    put:
      tags:
        - t2CompCPMDetails
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMDetails.upsert__put_t2CompCPMDetails
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
    patch:
      tags:
        - t2CompCPMDetails
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMDetails.upsert__patch_t2CompCPMDetails
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
    get:
      tags:
        - t2CompCPMDetails
      operationId: t2CompCPMDetails.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompCPMDetails:
                type: object
      deprecated: false
  /t2CompCPMDetails/replaceOrCreate:
    post:
      tags:
        - t2CompCPMDetails
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMDetails.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
  /t2CompCPMDetails/upsertWithWhere:
    post:
      tags:
        - t2CompCPMDetails
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompCPMDetails.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
  '/t2CompCPMDetails/{id}/exists':
    get:
      tags:
        - t2CompCPMDetails
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMDetails.exists__get_t2CompCPMDetails_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompCPMDetails/{id}':
    head:
      tags:
        - t2CompCPMDetails
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMDetails.exists__head_t2CompCPMDetails_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompCPMDetails
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompCPMDetails.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
    delete:
      tags:
        - t2CompCPMDetails
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompCPMDetails.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompCPMDetails
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMDetails.prototype.updateAttributes__put_t2CompCPMDetails_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMDetails'
        - name: id
          in: path
          description: t2CompCPMDetails id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
    patch:
      tags:
        - t2CompCPMDetails
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMDetails.prototype.updateAttributes__patch_t2CompCPMDetails_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMDetails'
        - name: id
          in: path
          description: t2CompCPMDetails id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
  '/t2CompCPMDetails/{id}/replace':
    post:
      tags:
        - t2CompCPMDetails
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompCPMDetails.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
  /t2CompCPMDetails/findOne:
    get:
      tags:
        - t2CompCPMDetails
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompCPMDetails.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMDetails'
      deprecated: false
  /t2CompCPMDetails/update:
    post:
      tags:
        - t2CompCPMDetails
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompCPMDetails.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMDetails'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompCPMDetails/count:
    get:
      tags:
        - t2CompCPMDetails
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompCPMDetails.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompCPMCount:
    post:
      tags:
        - t2CompCPMCount
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompCPMCount.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
    put:
      tags:
        - t2CompCPMCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMCount.upsert__put_t2CompCPMCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
    patch:
      tags:
        - t2CompCPMCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMCount.upsert__patch_t2CompCPMCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
    get:
      tags:
        - t2CompCPMCount
      operationId: t2CompCPMCount.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompCPMcount:
                type: object
      deprecated: false
  /t2CompCPMCount/replaceOrCreate:
    post:
      tags:
        - t2CompCPMCount
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMCount.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
  /t2CompCPMCount/upsertWithWhere:
    post:
      tags:
        - t2CompCPMCount
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompCPMCount.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
  '/t2CompCPMCount/{id}/exists':
    get:
      tags:
        - t2CompCPMCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMCount.exists__get_t2CompCPMCount_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompCPMCount/{id}':
    head:
      tags:
        - t2CompCPMCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMCount.exists__head_t2CompCPMCount_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompCPMCount
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompCPMCount.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
    delete:
      tags:
        - t2CompCPMCount
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompCPMCount.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompCPMCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMCount.prototype.updateAttributes__put_t2CompCPMCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMCount'
        - name: id
          in: path
          description: t2CompCPMCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
    patch:
      tags:
        - t2CompCPMCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMCount.prototype.updateAttributes__patch_t2CompCPMCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMCount'
        - name: id
          in: path
          description: t2CompCPMCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
  '/t2CompCPMCount/{id}/replace':
    post:
      tags:
        - t2CompCPMCount
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompCPMCount.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
  /t2CompCPMCount/findOne:
    get:
      tags:
        - t2CompCPMCount
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompCPMCount.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMCount'
      deprecated: false
  /t2CompCPMCount/update:
    post:
      tags:
        - t2CompCPMCount
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompCPMCount.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMCount'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompCPMCount/count:
    get:
      tags:
        - t2CompCPMCount
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompCPMCount.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /entitlementLineage:
    post:
      tags:
        - entitlementLineage
      summary: Create a new instance of the model and persist it into the data source.
      operationId: entitlementLineage.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
    put:
      tags:
        - entitlementLineage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: entitlementLineage.upsert__put_entitlementLineage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
    patch:
      tags:
        - entitlementLineage
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: entitlementLineage.upsert__patch_entitlementLineage
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
    get:
      tags:
        - entitlementLineage
      operationId: entitlementLineage.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              Entitlement:
                type: object
      deprecated: false
  /entitlementLineage/replaceOrCreate:
    post:
      tags:
        - entitlementLineage
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: entitlementLineage.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
  /entitlementLineage/upsertWithWhere:
    post:
      tags:
        - entitlementLineage
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: entitlementLineage.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
  '/entitlementLineage/{id}/exists':
    get:
      tags:
        - entitlementLineage
      summary: Check whether a model instance exists in the data source.
      operationId: 'entitlementLineage.exists__get_entitlementLineage_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/entitlementLineage/{id}':
    head:
      tags:
        - entitlementLineage
      summary: Check whether a model instance exists in the data source.
      operationId: 'entitlementLineage.exists__head_entitlementLineage_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - entitlementLineage
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: entitlementLineage.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
    delete:
      tags:
        - entitlementLineage
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: entitlementLineage.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - entitlementLineage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'entitlementLineage.prototype.updateAttributes__put_entitlementLineage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlementLineage'
        - name: id
          in: path
          description: entitlementLineage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
    patch:
      tags:
        - entitlementLineage
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'entitlementLineage.prototype.updateAttributes__patch_entitlementLineage_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlementLineage'
        - name: id
          in: path
          description: entitlementLineage id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
  '/entitlementLineage/{id}/replace':
    post:
      tags:
        - entitlementLineage
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: entitlementLineage.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
  /entitlementLineage/findOne:
    get:
      tags:
        - entitlementLineage
      summary: Find first instance of the model matched by filter from the data source.
      operationId: entitlementLineage.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/entitlementLineage'
      deprecated: false
  /entitlementLineage/update:
    post:
      tags:
        - entitlementLineage
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: entitlementLineage.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/entitlementLineage'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /entitlementLineage/count:
    get:
      tags:
        - entitlementLineage
      summary: Count instances of the model matched by where from the data source.
      operationId: entitlementLineage.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /cpmComplianceSnapshots:
    post:
      tags:
        - cpmComplianceSnapshots
      summary: Create a new instance of the model and persist it into the data source.
      operationId: cpmComplianceSnapshots.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
    put:
      tags:
        - cpmComplianceSnapshots
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: cpmComplianceSnapshots.upsert__put_cpmComplianceSnapshots
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
    patch:
      tags:
        - cpmComplianceSnapshots
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: cpmComplianceSnapshots.upsert__patch_cpmComplianceSnapshots
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
    get:
      tags:
        - cpmComplianceSnapshots
      operationId: cpmComplianceSnapshots.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              cpmComplianceSnapshots:
                type: object
      deprecated: false
  /cpmComplianceSnapshots/replaceOrCreate:
    post:
      tags:
        - cpmComplianceSnapshots
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: cpmComplianceSnapshots.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
  /cpmComplianceSnapshots/upsertWithWhere:
    post:
      tags:
        - cpmComplianceSnapshots
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: cpmComplianceSnapshots.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
  '/cpmComplianceSnapshots/{id}/exists':
    get:
      tags:
        - cpmComplianceSnapshots
      summary: Check whether a model instance exists in the data source.
      operationId: 'cpmComplianceSnapshots.exists__get_cpmComplianceSnapshots_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/cpmComplianceSnapshots/{id}':
    head:
      tags:
        - cpmComplianceSnapshots
      summary: Check whether a model instance exists in the data source.
      operationId: 'cpmComplianceSnapshots.exists__head_cpmComplianceSnapshots_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - cpmComplianceSnapshots
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: cpmComplianceSnapshots.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
    delete:
      tags:
        - cpmComplianceSnapshots
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: cpmComplianceSnapshots.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - cpmComplianceSnapshots
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'cpmComplianceSnapshots.prototype.updateAttributes__put_cpmComplianceSnapshots_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/cpmComplianceSnapshots'
        - name: id
          in: path
          description: cpmComplianceSnapshots id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
    patch:
      tags:
        - cpmComplianceSnapshots
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'cpmComplianceSnapshots.prototype.updateAttributes__patch_cpmComplianceSnapshots_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/cpmComplianceSnapshots'
        - name: id
          in: path
          description: cpmComplianceSnapshots id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
  '/cpmComplianceSnapshots/{id}/replace':
    post:
      tags:
        - cpmComplianceSnapshots
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: cpmComplianceSnapshots.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
  /cpmComplianceSnapshots/findOne:
    get:
      tags:
        - cpmComplianceSnapshots
      summary: Find first instance of the model matched by filter from the data source.
      operationId: cpmComplianceSnapshots.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/cpmComplianceSnapshots'
      deprecated: false
  /cpmComplianceSnapshots/update:
    post:
      tags:
        - cpmComplianceSnapshots
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: cpmComplianceSnapshots.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/cpmComplianceSnapshots'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /cpmComplianceSnapshots/count:
    get:
      tags:
        - cpmComplianceSnapshots
      summary: Count instances of the model matched by where from the data source.
      operationId: cpmComplianceSnapshots.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpCount:
    post:
      tags:
        - t2ExpCount
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpCount.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
    put:
      tags:
        - t2ExpCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpCount.upsert__put_t2ExpCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
    patch:
      tags:
        - t2ExpCount
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpCount.upsert__patch_t2ExpCount
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
    get:
      tags:
        - t2ExpCount
      operationId: t2ExpCount.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpCount:
                type: object
      deprecated: false
  /t2ExpCount/replaceOrCreate:
    post:
      tags:
        - t2ExpCount
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpCount.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
  /t2ExpCount/upsertWithWhere:
    post:
      tags:
        - t2ExpCount
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpCount.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
  '/t2ExpCount/{id}/exists':
    get:
      tags:
        - t2ExpCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpCount.exists__get_t2ExpCount_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpCount/{id}':
    head:
      tags:
        - t2ExpCount
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpCount.exists__head_t2ExpCount_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpCount
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpCount.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
    delete:
      tags:
        - t2ExpCount
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpCount.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpCount.prototype.updateAttributes__put_t2ExpCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpCount'
        - name: id
          in: path
          description: t2ExpCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
    patch:
      tags:
        - t2ExpCount
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpCount.prototype.updateAttributes__patch_t2ExpCount_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpCount'
        - name: id
          in: path
          description: t2ExpCount id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
  '/t2ExpCount/{id}/replace':
    post:
      tags:
        - t2ExpCount
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpCount.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
  /t2ExpCount/findOne:
    get:
      tags:
        - t2ExpCount
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpCount.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpCount'
      deprecated: false
  /t2ExpCount/update:
    post:
      tags:
        - t2ExpCount
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpCount.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpCount'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpCount/count:
    get:
      tags:
        - t2ExpCount
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpCount.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpContractList:
    post:
      tags:
        - t2ExpContractList
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpContractList.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
    put:
      tags:
        - t2ExpContractList
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpContractList.upsert__put_t2ExpContractList
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
    patch:
      tags:
        - t2ExpContractList
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpContractList.upsert__patch_t2ExpContractList
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
    get:
      tags:
        - t2ExpContractList
      operationId: t2ExpContractList.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpContractList:
                type: object
      deprecated: false
  /t2ExpContractList/replaceOrCreate:
    post:
      tags:
        - t2ExpContractList
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpContractList.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
  /t2ExpContractList/upsertWithWhere:
    post:
      tags:
        - t2ExpContractList
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpContractList.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
  '/t2ExpContractList/{id}/exists':
    get:
      tags:
        - t2ExpContractList
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpContractList.exists__get_t2ExpContractList_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpContractList/{id}':
    head:
      tags:
        - t2ExpContractList
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpContractList.exists__head_t2ExpContractList_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpContractList
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpContractList.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
    delete:
      tags:
        - t2ExpContractList
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpContractList.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpContractList
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpContractList.prototype.updateAttributes__put_t2ExpContractList_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpContractList'
        - name: id
          in: path
          description: t2ExpContractList id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
    patch:
      tags:
        - t2ExpContractList
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpContractList.prototype.updateAttributes__patch_t2ExpContractList_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpContractList'
        - name: id
          in: path
          description: t2ExpContractList id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
  '/t2ExpContractList/{id}/replace':
    post:
      tags:
        - t2ExpContractList
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpContractList.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
  /t2ExpContractList/findOne:
    get:
      tags:
        - t2ExpContractList
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpContractList.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpContractList'
      deprecated: false
  /t2ExpContractList/update:
    post:
      tags:
        - t2ExpContractList
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpContractList.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpContractList'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpContractList/count:
    get:
      tags:
        - t2ExpContractList
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpContractList.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpTrend:
    post:
      tags:
        - t2ExpTrend
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpTrend.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
    put:
      tags:
        - t2ExpTrend
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpTrend.upsert__put_t2ExpTrend
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
    patch:
      tags:
        - t2ExpTrend
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpTrend.upsert__patch_t2ExpTrend
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
    get:
      tags:
        - t2ExpTrend
      operationId: t2ExpTrend.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpTrend:
                type: object
      deprecated: false
  /t2ExpTrend/replaceOrCreate:
    post:
      tags:
        - t2ExpTrend
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpTrend.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
  /t2ExpTrend/upsertWithWhere:
    post:
      tags:
        - t2ExpTrend
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpTrend.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
  '/t2ExpTrend/{id}/exists':
    get:
      tags:
        - t2ExpTrend
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpTrend.exists__get_t2ExpTrend_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpTrend/{id}':
    head:
      tags:
        - t2ExpTrend
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpTrend.exists__head_t2ExpTrend_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpTrend
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpTrend.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
    delete:
      tags:
        - t2ExpTrend
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpTrend.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpTrend
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpTrend.prototype.updateAttributes__put_t2ExpTrend_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpTrend'
        - name: id
          in: path
          description: t2ExpTrend id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
    patch:
      tags:
        - t2ExpTrend
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpTrend.prototype.updateAttributes__patch_t2ExpTrend_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpTrend'
        - name: id
          in: path
          description: t2ExpTrend id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
  '/t2ExpTrend/{id}/replace':
    post:
      tags:
        - t2ExpTrend
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpTrend.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
  /t2ExpTrend/findOne:
    get:
      tags:
        - t2ExpTrend
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpTrend.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpTrend'
      deprecated: false
  /t2ExpTrend/update:
    post:
      tags:
        - t2ExpTrend
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpTrend.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpTrend'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpTrend/count:
    get:
      tags:
        - t2ExpTrend
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpTrend.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpDetailsContract:
    post:
      tags:
        - t2ExpDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
    put:
      tags:
        - t2ExpDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpDetailsContract.upsert__put_t2ExpDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2ExpDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpDetailsContract.upsert__patch_t2ExpDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
    get:
      tags:
        - t2ExpDetailsContract
      operationId: t2ExpDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpDetailsContract:
                type: object
      deprecated: false
  /t2ExpDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2ExpDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
  /t2ExpDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2ExpDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
  '/t2ExpDetailsContract/{id}/exists':
    get:
      tags:
        - t2ExpDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpDetailsContract.exists__get_t2ExpDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpDetailsContract/{id}':
    head:
      tags:
        - t2ExpDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpDetailsContract.exists__head_t2ExpDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2ExpDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpDetailsContract.prototype.updateAttributes__put_t2ExpDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsContract'
        - name: id
          in: path
          description: t2ExpDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2ExpDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpDetailsContract.prototype.updateAttributes__patch_t2ExpDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsContract'
        - name: id
          in: path
          description: t2ExpDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
  '/t2ExpDetailsContract/{id}/replace':
    post:
      tags:
        - t2ExpDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
  /t2ExpDetailsContract/findOne:
    get:
      tags:
        - t2ExpDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsContract'
      deprecated: false
  /t2ExpDetailsContract/update:
    post:
      tags:
        - t2ExpDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpDetailsContract/count:
    get:
      tags:
        - t2ExpDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpDetailsWorkNum:
    post:
      tags:
        - t2ExpDetailsWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpDetailsWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
    put:
      tags:
        - t2ExpDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpDetailsWorkNum.upsert__put_t2ExpDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ExpDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpDetailsWorkNum.upsert__patch_t2ExpDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
    get:
      tags:
        - t2ExpDetailsWorkNum
      operationId: t2ExpDetailsWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpDetailsWorkNum:
                type: object
      deprecated: false
  /t2ExpDetailsWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ExpDetailsWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpDetailsWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
  /t2ExpDetailsWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ExpDetailsWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpDetailsWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
  '/t2ExpDetailsWorkNum/{id}/exists':
    get:
      tags:
        - t2ExpDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpDetailsWorkNum.exists__get_t2ExpDetailsWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpDetailsWorkNum/{id}':
    head:
      tags:
        - t2ExpDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpDetailsWorkNum.exists__head_t2ExpDetailsWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpDetailsWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpDetailsWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ExpDetailsWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpDetailsWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpDetailsWorkNum.prototype.updateAttributes__put_t2ExpDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsWorkNum'
        - name: id
          in: path
          description: t2ExpDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ExpDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpDetailsWorkNum.prototype.updateAttributes__patch_t2ExpDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsWorkNum'
        - name: id
          in: path
          description: t2ExpDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
  '/t2ExpDetailsWorkNum/{id}/replace':
    post:
      tags:
        - t2ExpDetailsWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpDetailsWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
  /t2ExpDetailsWorkNum/findOne:
    get:
      tags:
        - t2ExpDetailsWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpDetailsWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      deprecated: false
  /t2ExpDetailsWorkNum/update:
    post:
      tags:
        - t2ExpDetailsWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpDetailsWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpDetailsWorkNum/count:
    get:
      tags:
        - t2ExpDetailsWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpDetailsWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpExportContract:
    post:
      tags:
        - t2ExpExportContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpExportContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
    put:
      tags:
        - t2ExpExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpExportContract.upsert__put_t2ExpExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
    patch:
      tags:
        - t2ExpExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpExportContract.upsert__patch_t2ExpExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
    get:
      tags:
        - t2ExpExportContract
      operationId: t2ExpExportContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpExportContract:
                type: object
      deprecated: false
  /t2ExpExportContract/replaceOrCreate:
    post:
      tags:
        - t2ExpExportContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpExportContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
  /t2ExpExportContract/upsertWithWhere:
    post:
      tags:
        - t2ExpExportContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpExportContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
  '/t2ExpExportContract/{id}/exists':
    get:
      tags:
        - t2ExpExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpExportContract.exists__get_t2ExpExportContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpExportContract/{id}':
    head:
      tags:
        - t2ExpExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpExportContract.exists__head_t2ExpExportContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpExportContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpExportContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
    delete:
      tags:
        - t2ExpExportContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpExportContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpExportContract.prototype.updateAttributes__put_t2ExpExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportContract'
        - name: id
          in: path
          description: t2ExpExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
    patch:
      tags:
        - t2ExpExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpExportContract.prototype.updateAttributes__patch_t2ExpExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportContract'
        - name: id
          in: path
          description: t2ExpExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
  '/t2ExpExportContract/{id}/replace':
    post:
      tags:
        - t2ExpExportContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpExportContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
  /t2ExpExportContract/findOne:
    get:
      tags:
        - t2ExpExportContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpExportContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportContract'
      deprecated: false
  /t2ExpExportContract/update:
    post:
      tags:
        - t2ExpExportContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpExportContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpExportContract/count:
    get:
      tags:
        - t2ExpExportContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpExportContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ExpExportWorkNum:
    post:
      tags:
        - t2ExpExportWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ExpExportWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
    put:
      tags:
        - t2ExpExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpExportWorkNum.upsert__put_t2ExpExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ExpExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ExpExportWorkNum.upsert__patch_t2ExpExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
    get:
      tags:
        - t2ExpExportWorkNum
      operationId: t2ExpExportWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ExpExportWorkNum:
                type: object
      deprecated: false
  /t2ExpExportWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ExpExportWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ExpExportWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
  /t2ExpExportWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ExpExportWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ExpExportWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
  '/t2ExpExportWorkNum/{id}/exists':
    get:
      tags:
        - t2ExpExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpExportWorkNum.exists__get_t2ExpExportWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ExpExportWorkNum/{id}':
    head:
      tags:
        - t2ExpExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ExpExportWorkNum.exists__head_t2ExpExportWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ExpExportWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ExpExportWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ExpExportWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ExpExportWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ExpExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpExportWorkNum.prototype.updateAttributes__put_t2ExpExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportWorkNum'
        - name: id
          in: path
          description: t2ExpExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ExpExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ExpExportWorkNum.prototype.updateAttributes__patch_t2ExpExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportWorkNum'
        - name: id
          in: path
          description: t2ExpExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
  '/t2ExpExportWorkNum/{id}/replace':
    post:
      tags:
        - t2ExpExportWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ExpExportWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
  /t2ExpExportWorkNum/findOne:
    get:
      tags:
        - t2ExpExportWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ExpExportWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ExpExportWorkNum'
      deprecated: false
  /t2ExpExportWorkNum/update:
    post:
      tags:
        - t2ExpExportWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ExpExportWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ExpExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ExpExportWorkNum/count:
    get:
      tags:
        - t2ExpExportWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ExpExportWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppDetailsContract:
    post:
      tags:
        - t2gppDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
    put:
      tags:
        - t2gppDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsContract.upsert__put_t2gppDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsContract.upsert__patch_t2gppDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
    get:
      tags:
        - t2gppDetailsContract
      operationId: t2gppDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppDetailsContract:
                type: object
      deprecated: false
  /t2gppDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2gppDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
  /t2gppDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2gppDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
  '/t2gppDetailsContract/{id}/exists':
    get:
      tags:
        - t2gppDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsContract.exists__get_t2gppDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppDetailsContract/{id}':
    head:
      tags:
        - t2gppDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsContract.exists__head_t2gppDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2gppDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsContract.prototype.updateAttributes__put_t2gppDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsContract'
        - name: id
          in: path
          description: t2gppDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsContract.prototype.updateAttributes__patch_t2gppDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsContract'
        - name: id
          in: path
          description: t2gppDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
  '/t2gppDetailsContract/{id}/replace':
    post:
      tags:
        - t2gppDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
  /t2gppDetailsContract/findOne:
    get:
      tags:
        - t2gppDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsContract'
      deprecated: false
  /t2gppDetailsContract/update:
    post:
      tags:
        - t2gppDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppDetailsContract/count:
    get:
      tags:
        - t2gppDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppDetailsWorkNum:
    post:
      tags:
        - t2gppDetailsWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppDetailsWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
    put:
      tags:
        - t2gppDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsWorkNum.upsert__put_t2gppDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsWorkNum.upsert__patch_t2gppDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
    get:
      tags:
        - t2gppDetailsWorkNum
      operationId: t2gppDetailsWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppDetailsWorkNum:
                type: object
      deprecated: false
  /t2gppDetailsWorkNum/replaceOrCreate:
    post:
      tags:
        - t2gppDetailsWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
  /t2gppDetailsWorkNum/upsertWithWhere:
    post:
      tags:
        - t2gppDetailsWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppDetailsWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
  '/t2gppDetailsWorkNum/{id}/exists':
    get:
      tags:
        - t2gppDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsWorkNum.exists__get_t2gppDetailsWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppDetailsWorkNum/{id}':
    head:
      tags:
        - t2gppDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsWorkNum.exists__head_t2gppDetailsWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppDetailsWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
    delete:
      tags:
        - t2gppDetailsWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsWorkNum.prototype.updateAttributes__put_t2gppDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsWorkNum'
        - name: id
          in: path
          description: t2gppDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsWorkNum.prototype.updateAttributes__patch_t2gppDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsWorkNum'
        - name: id
          in: path
          description: t2gppDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
  '/t2gppDetailsWorkNum/{id}/replace':
    post:
      tags:
        - t2gppDetailsWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppDetailsWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
  /t2gppDetailsWorkNum/findOne:
    get:
      tags:
        - t2gppDetailsWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppDetailsWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsWorkNum'
      deprecated: false
  /t2gppDetailsWorkNum/update:
    post:
      tags:
        - t2gppDetailsWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppDetailsWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppDetailsWorkNum/count:
    get:
      tags:
        - t2gppDetailsWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppDetailsWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppTrendMonthFin:
    post:
      tags:
        - t2gppTrendMonthFin
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppTrendMonthFin.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
    put:
      tags:
        - t2gppTrendMonthFin
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendMonthFin.upsert__put_t2gppTrendMonthFin
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
    patch:
      tags:
        - t2gppTrendMonthFin
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendMonthFin.upsert__patch_t2gppTrendMonthFin
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
    get:
      tags:
        - t2gppTrendMonthFin
      operationId: t2gppTrendMonthFin.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppTrendMonthFin:
                type: object
      deprecated: false
  /t2gppTrendMonthFin/replaceOrCreate:
    post:
      tags:
        - t2gppTrendMonthFin
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendMonthFin.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
  /t2gppTrendMonthFin/upsertWithWhere:
    post:
      tags:
        - t2gppTrendMonthFin
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppTrendMonthFin.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
  '/t2gppTrendMonthFin/{id}/exists':
    get:
      tags:
        - t2gppTrendMonthFin
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendMonthFin.exists__get_t2gppTrendMonthFin_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppTrendMonthFin/{id}':
    head:
      tags:
        - t2gppTrendMonthFin
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendMonthFin.exists__head_t2gppTrendMonthFin_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppTrendMonthFin
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppTrendMonthFin.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
    delete:
      tags:
        - t2gppTrendMonthFin
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppTrendMonthFin.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppTrendMonthFin
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendMonthFin.prototype.updateAttributes__put_t2gppTrendMonthFin_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthFin'
        - name: id
          in: path
          description: t2gppTrendMonthFin id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
    patch:
      tags:
        - t2gppTrendMonthFin
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendMonthFin.prototype.updateAttributes__patch_t2gppTrendMonthFin_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthFin'
        - name: id
          in: path
          description: t2gppTrendMonthFin id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
  '/t2gppTrendMonthFin/{id}/replace':
    post:
      tags:
        - t2gppTrendMonthFin
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppTrendMonthFin.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
  /t2gppTrendMonthFin/findOne:
    get:
      tags:
        - t2gppTrendMonthFin
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppTrendMonthFin.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthFin'
      deprecated: false
  /t2gppTrendMonthFin/update:
    post:
      tags:
        - t2gppTrendMonthFin
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppTrendMonthFin.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthFin'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppTrendMonthFin/count:
    get:
      tags:
        - t2gppTrendMonthFin
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppTrendMonthFin.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppTrendQtrFin:
    post:
      tags:
        - t2gppTrendQtrFin
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppTrendQtrFin.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
    put:
      tags:
        - t2gppTrendQtrFin
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendQtrFin.upsert__put_t2gppTrendQtrFin
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
    patch:
      tags:
        - t2gppTrendQtrFin
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendQtrFin.upsert__patch_t2gppTrendQtrFin
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
    get:
      tags:
        - t2gppTrendQtrFin
      operationId: t2gppTrendQtrFin.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppTrendQtrFin:
                type: object
      deprecated: false
  /t2gppTrendQtrFin/replaceOrCreate:
    post:
      tags:
        - t2gppTrendQtrFin
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendQtrFin.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
  /t2gppTrendQtrFin/upsertWithWhere:
    post:
      tags:
        - t2gppTrendQtrFin
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppTrendQtrFin.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
  '/t2gppTrendQtrFin/{id}/exists':
    get:
      tags:
        - t2gppTrendQtrFin
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendQtrFin.exists__get_t2gppTrendQtrFin_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppTrendQtrFin/{id}':
    head:
      tags:
        - t2gppTrendQtrFin
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendQtrFin.exists__head_t2gppTrendQtrFin_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppTrendQtrFin
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppTrendQtrFin.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
    delete:
      tags:
        - t2gppTrendQtrFin
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppTrendQtrFin.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppTrendQtrFin
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendQtrFin.prototype.updateAttributes__put_t2gppTrendQtrFin_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrFin'
        - name: id
          in: path
          description: t2gppTrendQtrFin id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
    patch:
      tags:
        - t2gppTrendQtrFin
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendQtrFin.prototype.updateAttributes__patch_t2gppTrendQtrFin_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrFin'
        - name: id
          in: path
          description: t2gppTrendQtrFin id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
  '/t2gppTrendQtrFin/{id}/replace':
    post:
      tags:
        - t2gppTrendQtrFin
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppTrendQtrFin.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
  /t2gppTrendQtrFin/findOne:
    get:
      tags:
        - t2gppTrendQtrFin
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppTrendQtrFin.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrFin'
      deprecated: false
  /t2gppTrendQtrFin/update:
    post:
      tags:
        - t2gppTrendQtrFin
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppTrendQtrFin.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrFin'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppTrendQtrFin/count:
    get:
      tags:
        - t2gppTrendQtrFin
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppTrendQtrFin.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppTrendMonthPlan:
    post:
      tags:
        - t2gppTrendMonthPlan
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppTrendMonthPlan.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
    put:
      tags:
        - t2gppTrendMonthPlan
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendMonthPlan.upsert__put_t2gppTrendMonthPlan
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
    patch:
      tags:
        - t2gppTrendMonthPlan
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendMonthPlan.upsert__patch_t2gppTrendMonthPlan
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
    get:
      tags:
        - t2gppTrendMonthPlan
      operationId: t2gppTrendMonthPlan.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppTrendMonthPlan:
                type: object
      deprecated: false
  /t2gppTrendMonthPlan/replaceOrCreate:
    post:
      tags:
        - t2gppTrendMonthPlan
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendMonthPlan.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
  /t2gppTrendMonthPlan/upsertWithWhere:
    post:
      tags:
        - t2gppTrendMonthPlan
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppTrendMonthPlan.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
  '/t2gppTrendMonthPlan/{id}/exists':
    get:
      tags:
        - t2gppTrendMonthPlan
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendMonthPlan.exists__get_t2gppTrendMonthPlan_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppTrendMonthPlan/{id}':
    head:
      tags:
        - t2gppTrendMonthPlan
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendMonthPlan.exists__head_t2gppTrendMonthPlan_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppTrendMonthPlan
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppTrendMonthPlan.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
    delete:
      tags:
        - t2gppTrendMonthPlan
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppTrendMonthPlan.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppTrendMonthPlan
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendMonthPlan.prototype.updateAttributes__put_t2gppTrendMonthPlan_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthPlan'
        - name: id
          in: path
          description: t2gppTrendMonthPlan id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
    patch:
      tags:
        - t2gppTrendMonthPlan
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendMonthPlan.prototype.updateAttributes__patch_t2gppTrendMonthPlan_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthPlan'
        - name: id
          in: path
          description: t2gppTrendMonthPlan id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
  '/t2gppTrendMonthPlan/{id}/replace':
    post:
      tags:
        - t2gppTrendMonthPlan
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppTrendMonthPlan.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
  /t2gppTrendMonthPlan/findOne:
    get:
      tags:
        - t2gppTrendMonthPlan
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppTrendMonthPlan.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendMonthPlan'
      deprecated: false
  /t2gppTrendMonthPlan/update:
    post:
      tags:
        - t2gppTrendMonthPlan
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppTrendMonthPlan.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendMonthPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppTrendMonthPlan/count:
    get:
      tags:
        - t2gppTrendMonthPlan
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppTrendMonthPlan.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppTrendQtrPlan:
    post:
      tags:
        - t2gppTrendQtrPlan
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppTrendQtrPlan.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
    put:
      tags:
        - t2gppTrendQtrPlan
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendQtrPlan.upsert__put_t2gppTrendQtrPlan
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
    patch:
      tags:
        - t2gppTrendQtrPlan
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendQtrPlan.upsert__patch_t2gppTrendQtrPlan
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
    get:
      tags:
        - t2gppTrendQtrPlan
      operationId: t2gppTrendQtrPlan.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppTrendQtrPlan:
                type: object
      deprecated: false
  /t2gppTrendQtrPlan/replaceOrCreate:
    post:
      tags:
        - t2gppTrendQtrPlan
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppTrendQtrPlan.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
  /t2gppTrendQtrPlan/upsertWithWhere:
    post:
      tags:
        - t2gppTrendQtrPlan
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppTrendQtrPlan.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
  '/t2gppTrendQtrPlan/{id}/exists':
    get:
      tags:
        - t2gppTrendQtrPlan
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendQtrPlan.exists__get_t2gppTrendQtrPlan_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppTrendQtrPlan/{id}':
    head:
      tags:
        - t2gppTrendQtrPlan
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppTrendQtrPlan.exists__head_t2gppTrendQtrPlan_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppTrendQtrPlan
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppTrendQtrPlan.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
    delete:
      tags:
        - t2gppTrendQtrPlan
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppTrendQtrPlan.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppTrendQtrPlan
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendQtrPlan.prototype.updateAttributes__put_t2gppTrendQtrPlan_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrPlan'
        - name: id
          in: path
          description: t2gppTrendQtrPlan id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
    patch:
      tags:
        - t2gppTrendQtrPlan
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppTrendQtrPlan.prototype.updateAttributes__patch_t2gppTrendQtrPlan_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrPlan'
        - name: id
          in: path
          description: t2gppTrendQtrPlan id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
  '/t2gppTrendQtrPlan/{id}/replace':
    post:
      tags:
        - t2gppTrendQtrPlan
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppTrendQtrPlan.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
  /t2gppTrendQtrPlan/findOne:
    get:
      tags:
        - t2gppTrendQtrPlan
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppTrendQtrPlan.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppTrendQtrPlan'
      deprecated: false
  /t2gppTrendQtrPlan/update:
    post:
      tags:
        - t2gppTrendQtrPlan
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppTrendQtrPlan.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppTrendQtrPlan'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppTrendQtrPlan/count:
    get:
      tags:
        - t2gppTrendQtrPlan
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppTrendQtrPlan.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1PredRisk:
    post:
      tags:
        - t1PredRisk
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1PredRisk.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
    put:
      tags:
        - t1PredRisk
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1PredRisk.upsert__put_t1PredRisk
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
    patch:
      tags:
        - t1PredRisk
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1PredRisk.upsert__patch_t1PredRisk
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
    get:
      tags:
        - t1PredRisk
      operationId: t1PredRisk.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1PredRisk:
                type: object
      deprecated: false
  /t1PredRisk/replaceOrCreate:
    post:
      tags:
        - t1PredRisk
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1PredRisk.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
  /t1PredRisk/upsertWithWhere:
    post:
      tags:
        - t1PredRisk
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1PredRisk.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
  '/t1PredRisk/{id}/exists':
    get:
      tags:
        - t1PredRisk
      summary: Check whether a model instance exists in the data source.
      operationId: 't1PredRisk.exists__get_t1PredRisk_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1PredRisk/{id}':
    head:
      tags:
        - t1PredRisk
      summary: Check whether a model instance exists in the data source.
      operationId: 't1PredRisk.exists__head_t1PredRisk_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1PredRisk
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1PredRisk.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
    delete:
      tags:
        - t1PredRisk
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1PredRisk.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1PredRisk
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1PredRisk.prototype.updateAttributes__put_t1PredRisk_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PredRisk'
        - name: id
          in: path
          description: t1PredRisk id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
    patch:
      tags:
        - t1PredRisk
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1PredRisk.prototype.updateAttributes__patch_t1PredRisk_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PredRisk'
        - name: id
          in: path
          description: t1PredRisk id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
  '/t1PredRisk/{id}/replace':
    post:
      tags:
        - t1PredRisk
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1PredRisk.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
  /t1PredRisk/findOne:
    get:
      tags:
        - t1PredRisk
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1PredRisk.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1PredRisk'
      deprecated: false
  /t1PredRisk/update:
    post:
      tags:
        - t1PredRisk
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1PredRisk.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1PredRisk'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1PredRisk/count:
    get:
      tags:
        - t1PredRisk
      summary: Count instances of the model matched by where from the data source.
      operationId: t1PredRisk.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppExportContract:
    post:
      tags:
        - t2gppExportContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppExportContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
    put:
      tags:
        - t2gppExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportContract.upsert__put_t2gppExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
    patch:
      tags:
        - t2gppExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportContract.upsert__patch_t2gppExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
    get:
      tags:
        - t2gppExportContract
      operationId: t2gppExportContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppExportContract:
                type: object
      deprecated: false
  /t2gppExportContract/replaceOrCreate:
    post:
      tags:
        - t2gppExportContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppExportContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
  /t2gppExportContract/upsertWithWhere:
    post:
      tags:
        - t2gppExportContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppExportContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
  '/t2gppExportContract/{id}/exists':
    get:
      tags:
        - t2gppExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportContract.exists__get_t2gppExportContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppExportContract/{id}':
    head:
      tags:
        - t2gppExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportContract.exists__head_t2gppExportContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppExportContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppExportContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
    delete:
      tags:
        - t2gppExportContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppExportContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportContract.prototype.updateAttributes__put_t2gppExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportContract'
        - name: id
          in: path
          description: t2gppExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
    patch:
      tags:
        - t2gppExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportContract.prototype.updateAttributes__patch_t2gppExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportContract'
        - name: id
          in: path
          description: t2gppExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
  '/t2gppExportContract/{id}/replace':
    post:
      tags:
        - t2gppExportContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppExportContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
  /t2gppExportContract/findOne:
    get:
      tags:
        - t2gppExportContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppExportContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportContract'
      deprecated: false
  /t2gppExportContract/update:
    post:
      tags:
        - t2gppExportContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppExportContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppExportContract/count:
    get:
      tags:
        - t2gppExportContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppExportContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppExportWorkNum:
    post:
      tags:
        - t2gppExportWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppExportWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
    put:
      tags:
        - t2gppExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportWorkNum.upsert__put_t2gppExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportWorkNum.upsert__patch_t2gppExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
    get:
      tags:
        - t2gppExportWorkNum
      operationId: t2gppExportWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppExportWorkNum:
                type: object
      deprecated: false
  /t2gppExportWorkNum/replaceOrCreate:
    post:
      tags:
        - t2gppExportWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppExportWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
  /t2gppExportWorkNum/upsertWithWhere:
    post:
      tags:
        - t2gppExportWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppExportWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
  '/t2gppExportWorkNum/{id}/exists':
    get:
      tags:
        - t2gppExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportWorkNum.exists__get_t2gppExportWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppExportWorkNum/{id}':
    head:
      tags:
        - t2gppExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportWorkNum.exists__head_t2gppExportWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppExportWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppExportWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
    delete:
      tags:
        - t2gppExportWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppExportWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportWorkNum.prototype.updateAttributes__put_t2gppExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportWorkNum'
        - name: id
          in: path
          description: t2gppExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportWorkNum.prototype.updateAttributes__patch_t2gppExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportWorkNum'
        - name: id
          in: path
          description: t2gppExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
  '/t2gppExportWorkNum/{id}/replace':
    post:
      tags:
        - t2gppExportWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppExportWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
  /t2gppExportWorkNum/findOne:
    get:
      tags:
        - t2gppExportWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppExportWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportWorkNum'
      deprecated: false
  /t2gppExportWorkNum/update:
    post:
      tags:
        - t2gppExportWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppExportWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppExportWorkNum/count:
    get:
      tags:
        - t2gppExportWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppExportWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppDetailsMonthContract:
    post:
      tags:
        - t2gppDetailsMonthContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppDetailsMonthContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
    put:
      tags:
        - t2gppDetailsMonthContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsMonthContract.upsert__put_t2gppDetailsMonthContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsMonthContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsMonthContract.upsert__patch_t2gppDetailsMonthContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
    get:
      tags:
        - t2gppDetailsMonthContract
      operationId: t2gppDetailsMonthContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppDetailsMonthContract:
                type: object
      deprecated: false
  /t2gppDetailsMonthContract/replaceOrCreate:
    post:
      tags:
        - t2gppDetailsMonthContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsMonthContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
  /t2gppDetailsMonthContract/upsertWithWhere:
    post:
      tags:
        - t2gppDetailsMonthContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppDetailsMonthContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
  '/t2gppDetailsMonthContract/{id}/exists':
    get:
      tags:
        - t2gppDetailsMonthContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsMonthContract.exists__get_t2gppDetailsMonthContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppDetailsMonthContract/{id}':
    head:
      tags:
        - t2gppDetailsMonthContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsMonthContract.exists__head_t2gppDetailsMonthContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppDetailsMonthContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsMonthContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
    delete:
      tags:
        - t2gppDetailsMonthContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsMonthContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppDetailsMonthContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsMonthContract.prototype.updateAttributes__put_t2gppDetailsMonthContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthContract'
        - name: id
          in: path
          description: t2gppDetailsMonthContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsMonthContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsMonthContract.prototype.updateAttributes__patch_t2gppDetailsMonthContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthContract'
        - name: id
          in: path
          description: t2gppDetailsMonthContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
  '/t2gppDetailsMonthContract/{id}/replace':
    post:
      tags:
        - t2gppDetailsMonthContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppDetailsMonthContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
  /t2gppDetailsMonthContract/findOne:
    get:
      tags:
        - t2gppDetailsMonthContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppDetailsMonthContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthContract'
      deprecated: false
  /t2gppDetailsMonthContract/update:
    post:
      tags:
        - t2gppDetailsMonthContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppDetailsMonthContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppDetailsMonthContract/count:
    get:
      tags:
        - t2gppDetailsMonthContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppDetailsMonthContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppDetailsMonthWorkNum:
    post:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppDetailsMonthWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
    put:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsMonthWorkNum.upsert__put_t2gppDetailsMonthWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsMonthWorkNum.upsert__patch_t2gppDetailsMonthWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
    get:
      tags:
        - t2gppDetailsMonthWorkNum
      operationId: t2gppDetailsMonthWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppDetailsMonthWorkNum:
                type: object
      deprecated: false
  /t2gppDetailsMonthWorkNum/replaceOrCreate:
    post:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppDetailsMonthWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
  /t2gppDetailsMonthWorkNum/upsertWithWhere:
    post:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppDetailsMonthWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
  '/t2gppDetailsMonthWorkNum/{id}/exists':
    get:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsMonthWorkNum.exists__get_t2gppDetailsMonthWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppDetailsMonthWorkNum/{id}':
    head:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppDetailsMonthWorkNum.exists__head_t2gppDetailsMonthWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsMonthWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
    delete:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppDetailsMonthWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsMonthWorkNum.prototype.updateAttributes__put_t2gppDetailsMonthWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
        - name: id
          in: path
          description: t2gppDetailsMonthWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppDetailsMonthWorkNum.prototype.updateAttributes__patch_t2gppDetailsMonthWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
        - name: id
          in: path
          description: t2gppDetailsMonthWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
  '/t2gppDetailsMonthWorkNum/{id}/replace':
    post:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppDetailsMonthWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
  /t2gppDetailsMonthWorkNum/findOne:
    get:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppDetailsMonthWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      deprecated: false
  /t2gppDetailsMonthWorkNum/update:
    post:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppDetailsMonthWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppDetailsMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppDetailsMonthWorkNum/count:
    get:
      tags:
        - t2gppDetailsMonthWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppDetailsMonthWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppExportMonthContract:
    post:
      tags:
        - t2gppExportMonthContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppExportMonthContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
    put:
      tags:
        - t2gppExportMonthContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportMonthContract.upsert__put_t2gppExportMonthContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
    patch:
      tags:
        - t2gppExportMonthContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportMonthContract.upsert__patch_t2gppExportMonthContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
    get:
      tags:
        - t2gppExportMonthContract
      operationId: t2gppExportMonthContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppExportMonthContract:
                type: object
      deprecated: false
  /t2gppExportMonthContract/replaceOrCreate:
    post:
      tags:
        - t2gppExportMonthContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppExportMonthContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
  /t2gppExportMonthContract/upsertWithWhere:
    post:
      tags:
        - t2gppExportMonthContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppExportMonthContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
  '/t2gppExportMonthContract/{id}/exists':
    get:
      tags:
        - t2gppExportMonthContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportMonthContract.exists__get_t2gppExportMonthContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppExportMonthContract/{id}':
    head:
      tags:
        - t2gppExportMonthContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportMonthContract.exists__head_t2gppExportMonthContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppExportMonthContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppExportMonthContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
    delete:
      tags:
        - t2gppExportMonthContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppExportMonthContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppExportMonthContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportMonthContract.prototype.updateAttributes__put_t2gppExportMonthContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthContract'
        - name: id
          in: path
          description: t2gppExportMonthContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
    patch:
      tags:
        - t2gppExportMonthContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportMonthContract.prototype.updateAttributes__patch_t2gppExportMonthContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthContract'
        - name: id
          in: path
          description: t2gppExportMonthContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
  '/t2gppExportMonthContract/{id}/replace':
    post:
      tags:
        - t2gppExportMonthContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppExportMonthContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
  /t2gppExportMonthContract/findOne:
    get:
      tags:
        - t2gppExportMonthContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppExportMonthContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthContract'
      deprecated: false
  /t2gppExportMonthContract/update:
    post:
      tags:
        - t2gppExportMonthContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppExportMonthContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppExportMonthContract/count:
    get:
      tags:
        - t2gppExportMonthContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppExportMonthContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2gppExportMonthWorkNum:
    post:
      tags:
        - t2gppExportMonthWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2gppExportMonthWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
    put:
      tags:
        - t2gppExportMonthWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportMonthWorkNum.upsert__put_t2gppExportMonthWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppExportMonthWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2gppExportMonthWorkNum.upsert__patch_t2gppExportMonthWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
    get:
      tags:
        - t2gppExportMonthWorkNum
      operationId: t2gppExportMonthWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2gppExportMonthWorkNum:
                type: object
      deprecated: false
  /t2gppExportMonthWorkNum/replaceOrCreate:
    post:
      tags:
        - t2gppExportMonthWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2gppExportMonthWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
  /t2gppExportMonthWorkNum/upsertWithWhere:
    post:
      tags:
        - t2gppExportMonthWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2gppExportMonthWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
  '/t2gppExportMonthWorkNum/{id}/exists':
    get:
      tags:
        - t2gppExportMonthWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportMonthWorkNum.exists__get_t2gppExportMonthWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2gppExportMonthWorkNum/{id}':
    head:
      tags:
        - t2gppExportMonthWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2gppExportMonthWorkNum.exists__head_t2gppExportMonthWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2gppExportMonthWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2gppExportMonthWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
    delete:
      tags:
        - t2gppExportMonthWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2gppExportMonthWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2gppExportMonthWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportMonthWorkNum.prototype.updateAttributes__put_t2gppExportMonthWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthWorkNum'
        - name: id
          in: path
          description: t2gppExportMonthWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
    patch:
      tags:
        - t2gppExportMonthWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2gppExportMonthWorkNum.prototype.updateAttributes__patch_t2gppExportMonthWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthWorkNum'
        - name: id
          in: path
          description: t2gppExportMonthWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
  '/t2gppExportMonthWorkNum/{id}/replace':
    post:
      tags:
        - t2gppExportMonthWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2gppExportMonthWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
  /t2gppExportMonthWorkNum/findOne:
    get:
      tags:
        - t2gppExportMonthWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2gppExportMonthWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      deprecated: false
  /t2gppExportMonthWorkNum/update:
    post:
      tags:
        - t2gppExportMonthWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2gppExportMonthWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2gppExportMonthWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2gppExportMonthWorkNum/count:
    get:
      tags:
        - t2gppExportMonthWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2gppExportMonthWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t1UBAR:
    post:
      tags:
        - t1UBAR
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t1UBAR.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
    put:
      tags:
        - t1UBAR
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1UBAR.upsert__put_t1UBAR
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
    patch:
      tags:
        - t1UBAR
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t1UBAR.upsert__patch_t1UBAR
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
    get:
      tags:
        - t1UBAR
      operationId: t1UBAR.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t1UBAR:
                type: object
      deprecated: false
  /t1UBAR/replaceOrCreate:
    post:
      tags:
        - t1UBAR
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t1UBAR.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
  /t1UBAR/upsertWithWhere:
    post:
      tags:
        - t1UBAR
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t1UBAR.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
  '/t1UBAR/{id}/exists':
    get:
      tags:
        - t1UBAR
      summary: Check whether a model instance exists in the data source.
      operationId: 't1UBAR.exists__get_t1UBAR_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t1UBAR/{id}':
    head:
      tags:
        - t1UBAR
      summary: Check whether a model instance exists in the data source.
      operationId: 't1UBAR.exists__head_t1UBAR_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t1UBAR
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t1UBAR.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
    delete:
      tags:
        - t1UBAR
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t1UBAR.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t1UBAR
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1UBAR.prototype.updateAttributes__put_t1UBAR_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1UBAR'
        - name: id
          in: path
          description: t1UBAR id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
    patch:
      tags:
        - t1UBAR
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't1UBAR.prototype.updateAttributes__patch_t1UBAR_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1UBAR'
        - name: id
          in: path
          description: t1UBAR id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
  '/t1UBAR/{id}/replace':
    post:
      tags:
        - t1UBAR
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t1UBAR.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
  /t1UBAR/findOne:
    get:
      tags:
        - t1UBAR
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t1UBAR.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t1UBAR'
      deprecated: false
  /t1UBAR/update:
    post:
      tags:
        - t1UBAR
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t1UBAR.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t1UBAR'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t1UBAR/count:
    get:
      tags:
        - t1UBAR
      summary: Count instances of the model matched by where from the data source.
      operationId: t1UBAR.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBCountContract:
    post:
      tags:
        - t2UBCountContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBCountContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
    put:
      tags:
        - t2UBCountContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBCountContract.upsert__put_t2UBCountContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
    patch:
      tags:
        - t2UBCountContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBCountContract.upsert__patch_t2UBCountContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
    get:
      tags:
        - t2UBCountContract
      operationId: t2UBCountContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBCountContract:
                type: object
      deprecated: false
  /t2UBCountContract/replaceOrCreate:
    post:
      tags:
        - t2UBCountContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBCountContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
  /t2UBCountContract/upsertWithWhere:
    post:
      tags:
        - t2UBCountContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBCountContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
  '/t2UBCountContract/{id}/exists':
    get:
      tags:
        - t2UBCountContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBCountContract.exists__get_t2UBCountContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBCountContract/{id}':
    head:
      tags:
        - t2UBCountContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBCountContract.exists__head_t2UBCountContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBCountContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBCountContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
    delete:
      tags:
        - t2UBCountContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBCountContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBCountContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBCountContract.prototype.updateAttributes__put_t2UBCountContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountContract'
        - name: id
          in: path
          description: t2UBCountContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
    patch:
      tags:
        - t2UBCountContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBCountContract.prototype.updateAttributes__patch_t2UBCountContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountContract'
        - name: id
          in: path
          description: t2UBCountContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
  '/t2UBCountContract/{id}/replace':
    post:
      tags:
        - t2UBCountContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBCountContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
  /t2UBCountContract/findOne:
    get:
      tags:
        - t2UBCountContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBCountContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountContract'
      deprecated: false
  /t2UBCountContract/update:
    post:
      tags:
        - t2UBCountContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBCountContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBCountContract/count:
    get:
      tags:
        - t2UBCountContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBCountContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBCountWorkNum:
    post:
      tags:
        - t2UBCountWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBCountWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
    put:
      tags:
        - t2UBCountWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBCountWorkNum.upsert__put_t2UBCountWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBCountWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBCountWorkNum.upsert__patch_t2UBCountWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
    get:
      tags:
        - t2UBCountWorkNum
      operationId: t2UBCountWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBCountWorknum:
                type: object
      deprecated: false
  /t2UBCountWorkNum/replaceOrCreate:
    post:
      tags:
        - t2UBCountWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBCountWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
  /t2UBCountWorkNum/upsertWithWhere:
    post:
      tags:
        - t2UBCountWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBCountWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
  '/t2UBCountWorkNum/{id}/exists':
    get:
      tags:
        - t2UBCountWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBCountWorkNum.exists__get_t2UBCountWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBCountWorkNum/{id}':
    head:
      tags:
        - t2UBCountWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBCountWorkNum.exists__head_t2UBCountWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBCountWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBCountWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
    delete:
      tags:
        - t2UBCountWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBCountWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBCountWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBCountWorkNum.prototype.updateAttributes__put_t2UBCountWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountWorkNum'
        - name: id
          in: path
          description: t2UBCountWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBCountWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBCountWorkNum.prototype.updateAttributes__patch_t2UBCountWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountWorkNum'
        - name: id
          in: path
          description: t2UBCountWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
  '/t2UBCountWorkNum/{id}/replace':
    post:
      tags:
        - t2UBCountWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBCountWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
  /t2UBCountWorkNum/findOne:
    get:
      tags:
        - t2UBCountWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBCountWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBCountWorkNum'
      deprecated: false
  /t2UBCountWorkNum/update:
    post:
      tags:
        - t2UBCountWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBCountWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBCountWorkNum/count:
    get:
      tags:
        - t2UBCountWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBCountWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBDetailsContract:
    post:
      tags:
        - t2UBDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
    put:
      tags:
        - t2UBDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBDetailsContract.upsert__put_t2UBDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2UBDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBDetailsContract.upsert__patch_t2UBDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
    get:
      tags:
        - t2UBDetailsContract
      operationId: t2UBDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBDetailsContract:
                type: object
      deprecated: false
  /t2UBDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2UBDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
  /t2UBDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2UBDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
  '/t2UBDetailsContract/{id}/exists':
    get:
      tags:
        - t2UBDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBDetailsContract.exists__get_t2UBDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBDetailsContract/{id}':
    head:
      tags:
        - t2UBDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBDetailsContract.exists__head_t2UBDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2UBDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBDetailsContract.prototype.updateAttributes__put_t2UBDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsContract'
        - name: id
          in: path
          description: t2UBDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2UBDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBDetailsContract.prototype.updateAttributes__patch_t2UBDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsContract'
        - name: id
          in: path
          description: t2UBDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
  '/t2UBDetailsContract/{id}/replace':
    post:
      tags:
        - t2UBDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
  /t2UBDetailsContract/findOne:
    get:
      tags:
        - t2UBDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsContract'
      deprecated: false
  /t2UBDetailsContract/update:
    post:
      tags:
        - t2UBDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBDetailsContract/count:
    get:
      tags:
        - t2UBDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBDetailsWorkNum:
    post:
      tags:
        - t2UBDetailsWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBDetailsWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
    put:
      tags:
        - t2UBDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBDetailsWorkNum.upsert__put_t2UBDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBDetailsWorkNum.upsert__patch_t2UBDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
    get:
      tags:
        - t2UBDetailsWorkNum
      operationId: t2UBDetailsWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBDetailsWorkNum:
                type: object
      deprecated: false
  /t2UBDetailsWorkNum/replaceOrCreate:
    post:
      tags:
        - t2UBDetailsWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBDetailsWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
  /t2UBDetailsWorkNum/upsertWithWhere:
    post:
      tags:
        - t2UBDetailsWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBDetailsWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
  '/t2UBDetailsWorkNum/{id}/exists':
    get:
      tags:
        - t2UBDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBDetailsWorkNum.exists__get_t2UBDetailsWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBDetailsWorkNum/{id}':
    head:
      tags:
        - t2UBDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBDetailsWorkNum.exists__head_t2UBDetailsWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBDetailsWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBDetailsWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
    delete:
      tags:
        - t2UBDetailsWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBDetailsWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBDetailsWorkNum.prototype.updateAttributes__put_t2UBDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsWorkNum'
        - name: id
          in: path
          description: t2UBDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBDetailsWorkNum.prototype.updateAttributes__patch_t2UBDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsWorkNum'
        - name: id
          in: path
          description: t2UBDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
  '/t2UBDetailsWorkNum/{id}/replace':
    post:
      tags:
        - t2UBDetailsWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBDetailsWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
  /t2UBDetailsWorkNum/findOne:
    get:
      tags:
        - t2UBDetailsWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBDetailsWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBDetailsWorkNum'
      deprecated: false
  /t2UBDetailsWorkNum/update:
    post:
      tags:
        - t2UBDetailsWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBDetailsWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBDetailsWorkNum/count:
    get:
      tags:
        - t2UBDetailsWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBDetailsWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBTrendContract:
    post:
      tags:
        - t2UBTrendContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBTrendContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
    put:
      tags:
        - t2UBTrendContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBTrendContract.upsert__put_t2UBTrendContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
    patch:
      tags:
        - t2UBTrendContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBTrendContract.upsert__patch_t2UBTrendContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
    get:
      tags:
        - t2UBTrendContract
      operationId: t2UBTrendContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBTrendContract:
                type: object
      deprecated: false
  /t2UBTrendContract/replaceOrCreate:
    post:
      tags:
        - t2UBTrendContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBTrendContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
  /t2UBTrendContract/upsertWithWhere:
    post:
      tags:
        - t2UBTrendContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBTrendContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
  '/t2UBTrendContract/{id}/exists':
    get:
      tags:
        - t2UBTrendContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBTrendContract.exists__get_t2UBTrendContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBTrendContract/{id}':
    head:
      tags:
        - t2UBTrendContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBTrendContract.exists__head_t2UBTrendContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBTrendContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBTrendContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
    delete:
      tags:
        - t2UBTrendContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBTrendContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBTrendContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBTrendContract.prototype.updateAttributes__put_t2UBTrendContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendContract'
        - name: id
          in: path
          description: t2UBTrendContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
    patch:
      tags:
        - t2UBTrendContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBTrendContract.prototype.updateAttributes__patch_t2UBTrendContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendContract'
        - name: id
          in: path
          description: t2UBTrendContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
  '/t2UBTrendContract/{id}/replace':
    post:
      tags:
        - t2UBTrendContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBTrendContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
  /t2UBTrendContract/findOne:
    get:
      tags:
        - t2UBTrendContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBTrendContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendContract'
      deprecated: false
  /t2UBTrendContract/update:
    post:
      tags:
        - t2UBTrendContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBTrendContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBTrendContract/count:
    get:
      tags:
        - t2UBTrendContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBTrendContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBTrendWorkNum:
    post:
      tags:
        - t2UBTrendWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBTrendWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
    put:
      tags:
        - t2UBTrendWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBTrendWorkNum.upsert__put_t2UBTrendWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBTrendWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBTrendWorkNum.upsert__patch_t2UBTrendWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
    get:
      tags:
        - t2UBTrendWorkNum
      operationId: t2UBTrendWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBTrendWorkNum:
                type: object
      deprecated: false
  /t2UBTrendWorkNum/replaceOrCreate:
    post:
      tags:
        - t2UBTrendWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBTrendWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
  /t2UBTrendWorkNum/upsertWithWhere:
    post:
      tags:
        - t2UBTrendWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBTrendWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
  '/t2UBTrendWorkNum/{id}/exists':
    get:
      tags:
        - t2UBTrendWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBTrendWorkNum.exists__get_t2UBTrendWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBTrendWorkNum/{id}':
    head:
      tags:
        - t2UBTrendWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBTrendWorkNum.exists__head_t2UBTrendWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBTrendWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBTrendWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
    delete:
      tags:
        - t2UBTrendWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBTrendWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBTrendWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBTrendWorkNum.prototype.updateAttributes__put_t2UBTrendWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendWorkNum'
        - name: id
          in: path
          description: t2UBTrendWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBTrendWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBTrendWorkNum.prototype.updateAttributes__patch_t2UBTrendWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendWorkNum'
        - name: id
          in: path
          description: t2UBTrendWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
  '/t2UBTrendWorkNum/{id}/replace':
    post:
      tags:
        - t2UBTrendWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBTrendWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
  /t2UBTrendWorkNum/findOne:
    get:
      tags:
        - t2UBTrendWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBTrendWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBTrendWorkNum'
      deprecated: false
  /t2UBTrendWorkNum/update:
    post:
      tags:
        - t2UBTrendWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBTrendWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBTrendWorkNum/count:
    get:
      tags:
        - t2UBTrendWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBTrendWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBExpanClient:
    post:
      tags:
        - t2UBExpanClient
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBExpanClient.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
    put:
      tags:
        - t2UBExpanClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanClient.upsert__put_t2UBExpanClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
    patch:
      tags:
        - t2UBExpanClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanClient.upsert__patch_t2UBExpanClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
    get:
      tags:
        - t2UBExpanClient
      operationId: t2UBExpanClient.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBExpanClient:
                type: object
      deprecated: false
  /t2UBExpanClient/replaceOrCreate:
    post:
      tags:
        - t2UBExpanClient
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanClient.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
  /t2UBExpanClient/upsertWithWhere:
    post:
      tags:
        - t2UBExpanClient
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBExpanClient.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
  '/t2UBExpanClient/{id}/exists':
    get:
      tags:
        - t2UBExpanClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExpanClient.exists__get_t2UBExpanClient_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBExpanClient/{id}':
    head:
      tags:
        - t2UBExpanClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExpanClient.exists__head_t2UBExpanClient_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBExpanClient
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBExpanClient.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
    delete:
      tags:
        - t2UBExpanClient
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBExpanClient.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBExpanClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExpanClient.prototype.updateAttributes__put_t2UBExpanClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanClient'
        - name: id
          in: path
          description: t2UBExpanClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
    patch:
      tags:
        - t2UBExpanClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExpanClient.prototype.updateAttributes__patch_t2UBExpanClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanClient'
        - name: id
          in: path
          description: t2UBExpanClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
  '/t2UBExpanClient/{id}/replace':
    post:
      tags:
        - t2UBExpanClient
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBExpanClient.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
  /t2UBExpanClient/findOne:
    get:
      tags:
        - t2UBExpanClient
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBExpanClient.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanClient'
      deprecated: false
  /t2UBExpanClient/update:
    post:
      tags:
        - t2UBExpanClient
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBExpanClient.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBExpanClient/count:
    get:
      tags:
        - t2UBExpanClient
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBExpanClient.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBExpanContract:
    post:
      tags:
        - t2UBExpanContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBExpanContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
    put:
      tags:
        - t2UBExpanContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanContract.upsert__put_t2UBExpanContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
    patch:
      tags:
        - t2UBExpanContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanContract.upsert__patch_t2UBExpanContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
    get:
      tags:
        - t2UBExpanContract
      operationId: t2UBExpanContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBExpanContract:
                type: object
      deprecated: false
  /t2UBExpanContract/replaceOrCreate:
    post:
      tags:
        - t2UBExpanContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
  /t2UBExpanContract/upsertWithWhere:
    post:
      tags:
        - t2UBExpanContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBExpanContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
  '/t2UBExpanContract/{id}/exists':
    get:
      tags:
        - t2UBExpanContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExpanContract.exists__get_t2UBExpanContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBExpanContract/{id}':
    head:
      tags:
        - t2UBExpanContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExpanContract.exists__head_t2UBExpanContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBExpanContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBExpanContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
    delete:
      tags:
        - t2UBExpanContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBExpanContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBExpanContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExpanContract.prototype.updateAttributes__put_t2UBExpanContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanContract'
        - name: id
          in: path
          description: t2UBExpanContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
    patch:
      tags:
        - t2UBExpanContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExpanContract.prototype.updateAttributes__patch_t2UBExpanContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanContract'
        - name: id
          in: path
          description: t2UBExpanContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
  '/t2UBExpanContract/{id}/replace':
    post:
      tags:
        - t2UBExpanContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBExpanContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
  /t2UBExpanContract/findOne:
    get:
      tags:
        - t2UBExpanContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBExpanContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanContract'
      deprecated: false
  /t2UBExpanContract/update:
    post:
      tags:
        - t2UBExpanContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBExpanContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBExpanContract/count:
    get:
      tags:
        - t2UBExpanContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBExpanContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBExpanWorkNum:
    post:
      tags:
        - t2UBExpanWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBExpanWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
    put:
      tags:
        - t2UBExpanWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanWorkNum.upsert__put_t2UBExpanWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBExpanWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanWorkNum.upsert__patch_t2UBExpanWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
    get:
      tags:
        - t2UBExpanWorkNum
      operationId: t2UBExpanWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBExpanWorkNum:
                type: object
      deprecated: false
  /t2UBExpanWorkNum/replaceOrCreate:
    post:
      tags:
        - t2UBExpanWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBExpanWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
  /t2UBExpanWorkNum/upsertWithWhere:
    post:
      tags:
        - t2UBExpanWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBExpanWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
  '/t2UBExpanWorkNum/{id}/exists':
    get:
      tags:
        - t2UBExpanWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExpanWorkNum.exists__get_t2UBExpanWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBExpanWorkNum/{id}':
    head:
      tags:
        - t2UBExpanWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExpanWorkNum.exists__head_t2UBExpanWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBExpanWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBExpanWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
    delete:
      tags:
        - t2UBExpanWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBExpanWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBExpanWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExpanWorkNum.prototype.updateAttributes__put_t2UBExpanWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanWorkNum'
        - name: id
          in: path
          description: t2UBExpanWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBExpanWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExpanWorkNum.prototype.updateAttributes__patch_t2UBExpanWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanWorkNum'
        - name: id
          in: path
          description: t2UBExpanWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
  '/t2UBExpanWorkNum/{id}/replace':
    post:
      tags:
        - t2UBExpanWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBExpanWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
  /t2UBExpanWorkNum/findOne:
    get:
      tags:
        - t2UBExpanWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBExpanWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExpanWorkNum'
      deprecated: false
  /t2UBExpanWorkNum/update:
    post:
      tags:
        - t2UBExpanWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBExpanWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBExpanWorkNum/count:
    get:
      tags:
        - t2UBExpanWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBExpanWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBExportClient:
    post:
      tags:
        - t2UBExportClient
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBExportClient.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
    put:
      tags:
        - t2UBExportClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExportClient.upsert__put_t2UBExportClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
    patch:
      tags:
        - t2UBExportClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExportClient.upsert__patch_t2UBExportClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
    get:
      tags:
        - t2UBExportClient
      operationId: t2UBExportClient.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBExportClient:
                type: object
      deprecated: false
  /t2UBExportClient/replaceOrCreate:
    post:
      tags:
        - t2UBExportClient
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBExportClient.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
  /t2UBExportClient/upsertWithWhere:
    post:
      tags:
        - t2UBExportClient
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBExportClient.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
  '/t2UBExportClient/{id}/exists':
    get:
      tags:
        - t2UBExportClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExportClient.exists__get_t2UBExportClient_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBExportClient/{id}':
    head:
      tags:
        - t2UBExportClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExportClient.exists__head_t2UBExportClient_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBExportClient
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBExportClient.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
    delete:
      tags:
        - t2UBExportClient
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBExportClient.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBExportClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExportClient.prototype.updateAttributes__put_t2UBExportClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportClient'
        - name: id
          in: path
          description: t2UBExportClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
    patch:
      tags:
        - t2UBExportClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExportClient.prototype.updateAttributes__patch_t2UBExportClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportClient'
        - name: id
          in: path
          description: t2UBExportClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
  '/t2UBExportClient/{id}/replace':
    post:
      tags:
        - t2UBExportClient
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBExportClient.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
  /t2UBExportClient/findOne:
    get:
      tags:
        - t2UBExportClient
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBExportClient.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportClient'
      deprecated: false
  /t2UBExportClient/update:
    post:
      tags:
        - t2UBExportClient
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBExportClient.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBExportClient/count:
    get:
      tags:
        - t2UBExportClient
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBExportClient.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBExportContract:
    post:
      tags:
        - t2UBExportContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBExportContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
    put:
      tags:
        - t2UBExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExportContract.upsert__put_t2UBExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
    patch:
      tags:
        - t2UBExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExportContract.upsert__patch_t2UBExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
    get:
      tags:
        - t2UBExportContract
      operationId: t2UBExportContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBExportContract:
                type: object
      deprecated: false
  /t2UBExportContract/replaceOrCreate:
    post:
      tags:
        - t2UBExportContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBExportContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
  /t2UBExportContract/upsertWithWhere:
    post:
      tags:
        - t2UBExportContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBExportContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
  '/t2UBExportContract/{id}/exists':
    get:
      tags:
        - t2UBExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExportContract.exists__get_t2UBExportContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBExportContract/{id}':
    head:
      tags:
        - t2UBExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExportContract.exists__head_t2UBExportContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBExportContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBExportContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
    delete:
      tags:
        - t2UBExportContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBExportContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExportContract.prototype.updateAttributes__put_t2UBExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportContract'
        - name: id
          in: path
          description: t2UBExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
    patch:
      tags:
        - t2UBExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExportContract.prototype.updateAttributes__patch_t2UBExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportContract'
        - name: id
          in: path
          description: t2UBExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
  '/t2UBExportContract/{id}/replace':
    post:
      tags:
        - t2UBExportContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBExportContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
  /t2UBExportContract/findOne:
    get:
      tags:
        - t2UBExportContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBExportContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportContract'
      deprecated: false
  /t2UBExportContract/update:
    post:
      tags:
        - t2UBExportContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBExportContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBExportContract/count:
    get:
      tags:
        - t2UBExportContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBExportContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2UBExportWorkNum:
    post:
      tags:
        - t2UBExportWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2UBExportWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
    put:
      tags:
        - t2UBExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExportWorkNum.upsert__put_t2UBExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2UBExportWorkNum.upsert__patch_t2UBExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
    get:
      tags:
        - t2UBExportWorkNum
      operationId: t2UBExportWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2UBExportWorkNum:
                type: object
      deprecated: false
  /t2UBExportWorkNum/replaceOrCreate:
    post:
      tags:
        - t2UBExportWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2UBExportWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
  /t2UBExportWorkNum/upsertWithWhere:
    post:
      tags:
        - t2UBExportWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2UBExportWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
  '/t2UBExportWorkNum/{id}/exists':
    get:
      tags:
        - t2UBExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExportWorkNum.exists__get_t2UBExportWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2UBExportWorkNum/{id}':
    head:
      tags:
        - t2UBExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2UBExportWorkNum.exists__head_t2UBExportWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2UBExportWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2UBExportWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
    delete:
      tags:
        - t2UBExportWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2UBExportWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2UBExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExportWorkNum.prototype.updateAttributes__put_t2UBExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportWorkNum'
        - name: id
          in: path
          description: t2UBExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2UBExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2UBExportWorkNum.prototype.updateAttributes__patch_t2UBExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportWorkNum'
        - name: id
          in: path
          description: t2UBExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
  '/t2UBExportWorkNum/{id}/replace':
    post:
      tags:
        - t2UBExportWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2UBExportWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
  /t2UBExportWorkNum/findOne:
    get:
      tags:
        - t2UBExportWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2UBExportWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2UBExportWorkNum'
      deprecated: false
  /t2UBExportWorkNum/update:
    post:
      tags:
        - t2UBExportWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2UBExportWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2UBExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2UBExportWorkNum/count:
    get:
      tags:
        - t2UBExportWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2UBExportWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARCountContract:
    post:
      tags:
        - t2ARCountContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARCountContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
    put:
      tags:
        - t2ARCountContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARCountContract.upsert__put_t2ARCountContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
    patch:
      tags:
        - t2ARCountContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARCountContract.upsert__patch_t2ARCountContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
    get:
      tags:
        - t2ARCountContract
      operationId: t2ARCountContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARCountContract:
                type: object
      deprecated: false
  /t2ARCountContract/replaceOrCreate:
    post:
      tags:
        - t2ARCountContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARCountContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
  /t2ARCountContract/upsertWithWhere:
    post:
      tags:
        - t2ARCountContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARCountContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
  '/t2ARCountContract/{id}/exists':
    get:
      tags:
        - t2ARCountContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARCountContract.exists__get_t2ARCountContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARCountContract/{id}':
    head:
      tags:
        - t2ARCountContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARCountContract.exists__head_t2ARCountContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARCountContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARCountContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
    delete:
      tags:
        - t2ARCountContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARCountContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARCountContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARCountContract.prototype.updateAttributes__put_t2ARCountContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountContract'
        - name: id
          in: path
          description: t2ARCountContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
    patch:
      tags:
        - t2ARCountContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARCountContract.prototype.updateAttributes__patch_t2ARCountContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountContract'
        - name: id
          in: path
          description: t2ARCountContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
  '/t2ARCountContract/{id}/replace':
    post:
      tags:
        - t2ARCountContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARCountContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
  /t2ARCountContract/findOne:
    get:
      tags:
        - t2ARCountContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARCountContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountContract'
      deprecated: false
  /t2ARCountContract/update:
    post:
      tags:
        - t2ARCountContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARCountContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARCountContract/count:
    get:
      tags:
        - t2ARCountContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARCountContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARCountWorkNum:
    post:
      tags:
        - t2ARCountWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARCountWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
    put:
      tags:
        - t2ARCountWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARCountWorkNum.upsert__put_t2ARCountWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARCountWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARCountWorkNum.upsert__patch_t2ARCountWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
    get:
      tags:
        - t2ARCountWorkNum
      operationId: t2ARCountWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARCountWorkNum:
                type: object
      deprecated: false
  /t2ARCountWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ARCountWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARCountWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
  /t2ARCountWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ARCountWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARCountWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
  '/t2ARCountWorkNum/{id}/exists':
    get:
      tags:
        - t2ARCountWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARCountWorkNum.exists__get_t2ARCountWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARCountWorkNum/{id}':
    head:
      tags:
        - t2ARCountWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARCountWorkNum.exists__head_t2ARCountWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARCountWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARCountWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ARCountWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARCountWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARCountWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARCountWorkNum.prototype.updateAttributes__put_t2ARCountWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountWorkNum'
        - name: id
          in: path
          description: t2ARCountWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARCountWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARCountWorkNum.prototype.updateAttributes__patch_t2ARCountWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountWorkNum'
        - name: id
          in: path
          description: t2ARCountWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
  '/t2ARCountWorkNum/{id}/replace':
    post:
      tags:
        - t2ARCountWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARCountWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
  /t2ARCountWorkNum/findOne:
    get:
      tags:
        - t2ARCountWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARCountWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARCountWorkNum'
      deprecated: false
  /t2ARCountWorkNum/update:
    post:
      tags:
        - t2ARCountWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARCountWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARCountWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARCountWorkNum/count:
    get:
      tags:
        - t2ARCountWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARCountWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARDetailsContract:
    post:
      tags:
        - t2ARDetailsContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARDetailsContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
    put:
      tags:
        - t2ARDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARDetailsContract.upsert__put_t2ARDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2ARDetailsContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARDetailsContract.upsert__patch_t2ARDetailsContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
    get:
      tags:
        - t2ARDetailsContract
      operationId: t2ARDetailsContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARDetailsContract:
                type: object
      deprecated: false
  /t2ARDetailsContract/replaceOrCreate:
    post:
      tags:
        - t2ARDetailsContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARDetailsContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
  /t2ARDetailsContract/upsertWithWhere:
    post:
      tags:
        - t2ARDetailsContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARDetailsContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
  '/t2ARDetailsContract/{id}/exists':
    get:
      tags:
        - t2ARDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARDetailsContract.exists__get_t2ARDetailsContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARDetailsContract/{id}':
    head:
      tags:
        - t2ARDetailsContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARDetailsContract.exists__head_t2ARDetailsContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARDetailsContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARDetailsContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
    delete:
      tags:
        - t2ARDetailsContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARDetailsContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARDetailsContract.prototype.updateAttributes__put_t2ARDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsContract'
        - name: id
          in: path
          description: t2ARDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
    patch:
      tags:
        - t2ARDetailsContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARDetailsContract.prototype.updateAttributes__patch_t2ARDetailsContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsContract'
        - name: id
          in: path
          description: t2ARDetailsContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
  '/t2ARDetailsContract/{id}/replace':
    post:
      tags:
        - t2ARDetailsContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARDetailsContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
  /t2ARDetailsContract/findOne:
    get:
      tags:
        - t2ARDetailsContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARDetailsContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsContract'
      deprecated: false
  /t2ARDetailsContract/update:
    post:
      tags:
        - t2ARDetailsContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARDetailsContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARDetailsContract/count:
    get:
      tags:
        - t2ARDetailsContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARDetailsContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARDetailsWorkNum:
    post:
      tags:
        - t2ARDetailsWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARDetailsWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
    put:
      tags:
        - t2ARDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARDetailsWorkNum.upsert__put_t2ARDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARDetailsWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARDetailsWorkNum.upsert__patch_t2ARDetailsWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
    get:
      tags:
        - t2ARDetailsWorkNum
      operationId: t2ARDetailsWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARDetailsWorkNum:
                type: object
      deprecated: false
  /t2ARDetailsWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ARDetailsWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARDetailsWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
  /t2ARDetailsWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ARDetailsWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARDetailsWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
  '/t2ARDetailsWorkNum/{id}/exists':
    get:
      tags:
        - t2ARDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARDetailsWorkNum.exists__get_t2ARDetailsWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARDetailsWorkNum/{id}':
    head:
      tags:
        - t2ARDetailsWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARDetailsWorkNum.exists__head_t2ARDetailsWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARDetailsWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARDetailsWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ARDetailsWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARDetailsWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARDetailsWorkNum.prototype.updateAttributes__put_t2ARDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsWorkNum'
        - name: id
          in: path
          description: t2ARDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARDetailsWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARDetailsWorkNum.prototype.updateAttributes__patch_t2ARDetailsWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsWorkNum'
        - name: id
          in: path
          description: t2ARDetailsWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
  '/t2ARDetailsWorkNum/{id}/replace':
    post:
      tags:
        - t2ARDetailsWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARDetailsWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
  /t2ARDetailsWorkNum/findOne:
    get:
      tags:
        - t2ARDetailsWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARDetailsWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARDetailsWorkNum'
      deprecated: false
  /t2ARDetailsWorkNum/update:
    post:
      tags:
        - t2ARDetailsWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARDetailsWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARDetailsWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARDetailsWorkNum/count:
    get:
      tags:
        - t2ARDetailsWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARDetailsWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARTrendContract:
    post:
      tags:
        - t2ARTrendContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARTrendContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
    put:
      tags:
        - t2ARTrendContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARTrendContract.upsert__put_t2ARTrendContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
    patch:
      tags:
        - t2ARTrendContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARTrendContract.upsert__patch_t2ARTrendContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
    get:
      tags:
        - t2ARTrendContract
      operationId: t2ARTrendContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARTrendContract:
                type: object
      deprecated: false
  /t2ARTrendContract/replaceOrCreate:
    post:
      tags:
        - t2ARTrendContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARTrendContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
  /t2ARTrendContract/upsertWithWhere:
    post:
      tags:
        - t2ARTrendContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARTrendContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
  '/t2ARTrendContract/{id}/exists':
    get:
      tags:
        - t2ARTrendContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARTrendContract.exists__get_t2ARTrendContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARTrendContract/{id}':
    head:
      tags:
        - t2ARTrendContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARTrendContract.exists__head_t2ARTrendContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARTrendContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARTrendContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
    delete:
      tags:
        - t2ARTrendContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARTrendContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARTrendContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARTrendContract.prototype.updateAttributes__put_t2ARTrendContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendContract'
        - name: id
          in: path
          description: t2ARTrendContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
    patch:
      tags:
        - t2ARTrendContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARTrendContract.prototype.updateAttributes__patch_t2ARTrendContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendContract'
        - name: id
          in: path
          description: t2ARTrendContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
  '/t2ARTrendContract/{id}/replace':
    post:
      tags:
        - t2ARTrendContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARTrendContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
  /t2ARTrendContract/findOne:
    get:
      tags:
        - t2ARTrendContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARTrendContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendContract'
      deprecated: false
  /t2ARTrendContract/update:
    post:
      tags:
        - t2ARTrendContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARTrendContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARTrendContract/count:
    get:
      tags:
        - t2ARTrendContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARTrendContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARTrendWorkNum:
    post:
      tags:
        - t2ARTrendWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARTrendWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
    put:
      tags:
        - t2ARTrendWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARTrendWorkNum.upsert__put_t2ARTrendWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARTrendWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARTrendWorkNum.upsert__patch_t2ARTrendWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
    get:
      tags:
        - t2ARTrendWorkNum
      operationId: t2ARTrendWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARTrendWorkNum:
                type: object
      deprecated: false
  /t2ARTrendWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ARTrendWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARTrendWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
  /t2ARTrendWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ARTrendWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARTrendWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
  '/t2ARTrendWorkNum/{id}/exists':
    get:
      tags:
        - t2ARTrendWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARTrendWorkNum.exists__get_t2ARTrendWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARTrendWorkNum/{id}':
    head:
      tags:
        - t2ARTrendWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARTrendWorkNum.exists__head_t2ARTrendWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARTrendWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARTrendWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ARTrendWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARTrendWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARTrendWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARTrendWorkNum.prototype.updateAttributes__put_t2ARTrendWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendWorkNum'
        - name: id
          in: path
          description: t2ARTrendWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARTrendWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARTrendWorkNum.prototype.updateAttributes__patch_t2ARTrendWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendWorkNum'
        - name: id
          in: path
          description: t2ARTrendWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
  '/t2ARTrendWorkNum/{id}/replace':
    post:
      tags:
        - t2ARTrendWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARTrendWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
  /t2ARTrendWorkNum/findOne:
    get:
      tags:
        - t2ARTrendWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARTrendWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARTrendWorkNum'
      deprecated: false
  /t2ARTrendWorkNum/update:
    post:
      tags:
        - t2ARTrendWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARTrendWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARTrendWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARTrendWorkNum/count:
    get:
      tags:
        - t2ARTrendWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARTrendWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARExpanClient:
    post:
      tags:
        - t2ARExpanClient
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARExpanClient.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
    put:
      tags:
        - t2ARExpanClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanClient.upsert__put_t2ARExpanClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
    patch:
      tags:
        - t2ARExpanClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanClient.upsert__patch_t2ARExpanClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
    get:
      tags:
        - t2ARExpanClient
      operationId: t2ARExpanClient.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARExpanClient:
                type: object
      deprecated: false
  /t2ARExpanClient/replaceOrCreate:
    post:
      tags:
        - t2ARExpanClient
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanClient.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
  /t2ARExpanClient/upsertWithWhere:
    post:
      tags:
        - t2ARExpanClient
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARExpanClient.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
  '/t2ARExpanClient/{id}/exists':
    get:
      tags:
        - t2ARExpanClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExpanClient.exists__get_t2ARExpanClient_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARExpanClient/{id}':
    head:
      tags:
        - t2ARExpanClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExpanClient.exists__head_t2ARExpanClient_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARExpanClient
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARExpanClient.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
    delete:
      tags:
        - t2ARExpanClient
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARExpanClient.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARExpanClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExpanClient.prototype.updateAttributes__put_t2ARExpanClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanClient'
        - name: id
          in: path
          description: t2ARExpanClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
    patch:
      tags:
        - t2ARExpanClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExpanClient.prototype.updateAttributes__patch_t2ARExpanClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanClient'
        - name: id
          in: path
          description: t2ARExpanClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
  '/t2ARExpanClient/{id}/replace':
    post:
      tags:
        - t2ARExpanClient
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARExpanClient.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
  /t2ARExpanClient/findOne:
    get:
      tags:
        - t2ARExpanClient
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARExpanClient.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanClient'
      deprecated: false
  /t2ARExpanClient/update:
    post:
      tags:
        - t2ARExpanClient
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARExpanClient.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanClient'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARExpanClient/count:
    get:
      tags:
        - t2ARExpanClient
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARExpanClient.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARExpanContract:
    post:
      tags:
        - t2ARExpanContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARExpanContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
    put:
      tags:
        - t2ARExpanContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanContract.upsert__put_t2ARExpanContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
    patch:
      tags:
        - t2ARExpanContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanContract.upsert__patch_t2ARExpanContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
    get:
      tags:
        - t2ARExpanContract
      operationId: t2ARExpanContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARExpanContract:
                type: object
      deprecated: false
  /t2ARExpanContract/replaceOrCreate:
    post:
      tags:
        - t2ARExpanContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
  /t2ARExpanContract/upsertWithWhere:
    post:
      tags:
        - t2ARExpanContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARExpanContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
  '/t2ARExpanContract/{id}/exists':
    get:
      tags:
        - t2ARExpanContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExpanContract.exists__get_t2ARExpanContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARExpanContract/{id}':
    head:
      tags:
        - t2ARExpanContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExpanContract.exists__head_t2ARExpanContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARExpanContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARExpanContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
    delete:
      tags:
        - t2ARExpanContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARExpanContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARExpanContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExpanContract.prototype.updateAttributes__put_t2ARExpanContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanContract'
        - name: id
          in: path
          description: t2ARExpanContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
    patch:
      tags:
        - t2ARExpanContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExpanContract.prototype.updateAttributes__patch_t2ARExpanContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanContract'
        - name: id
          in: path
          description: t2ARExpanContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
  '/t2ARExpanContract/{id}/replace':
    post:
      tags:
        - t2ARExpanContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARExpanContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
  /t2ARExpanContract/findOne:
    get:
      tags:
        - t2ARExpanContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARExpanContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanContract'
      deprecated: false
  /t2ARExpanContract/update:
    post:
      tags:
        - t2ARExpanContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARExpanContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARExpanContract/count:
    get:
      tags:
        - t2ARExpanContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARExpanContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARExpanWorkNum:
    post:
      tags:
        - t2ARExpanWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARExpanWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
    put:
      tags:
        - t2ARExpanWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanWorkNum.upsert__put_t2ARExpanWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARExpanWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanWorkNum.upsert__patch_t2ARExpanWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
    get:
      tags:
        - t2ARExpanWorkNum
      operationId: t2ARExpanWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARExpanWorkNum:
                type: object
      deprecated: false
  /t2ARExpanWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ARExpanWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARExpanWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
  /t2ARExpanWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ARExpanWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARExpanWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
  '/t2ARExpanWorkNum/{id}/exists':
    get:
      tags:
        - t2ARExpanWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExpanWorkNum.exists__get_t2ARExpanWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARExpanWorkNum/{id}':
    head:
      tags:
        - t2ARExpanWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExpanWorkNum.exists__head_t2ARExpanWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARExpanWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARExpanWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ARExpanWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARExpanWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARExpanWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExpanWorkNum.prototype.updateAttributes__put_t2ARExpanWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanWorkNum'
        - name: id
          in: path
          description: t2ARExpanWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARExpanWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExpanWorkNum.prototype.updateAttributes__patch_t2ARExpanWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanWorkNum'
        - name: id
          in: path
          description: t2ARExpanWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
  '/t2ARExpanWorkNum/{id}/replace':
    post:
      tags:
        - t2ARExpanWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARExpanWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
  /t2ARExpanWorkNum/findOne:
    get:
      tags:
        - t2ARExpanWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARExpanWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExpanWorkNum'
      deprecated: false
  /t2ARExpanWorkNum/update:
    post:
      tags:
        - t2ARExpanWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARExpanWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExpanWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARExpanWorkNum/count:
    get:
      tags:
        - t2ARExpanWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARExpanWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARExportClient:
    post:
      tags:
        - t2ARExportClient
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARExportClient.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
    put:
      tags:
        - t2ARExportClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExportClient.upsert__put_t2ARExportClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
    patch:
      tags:
        - t2ARExportClient
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExportClient.upsert__patch_t2ARExportClient
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
    get:
      tags:
        - t2ARExportClient
      operationId: t2ARExportClient.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARExportClient:
                type: object
      deprecated: false
  /t2ARExportClient/replaceOrCreate:
    post:
      tags:
        - t2ARExportClient
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARExportClient.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
  /t2ARExportClient/upsertWithWhere:
    post:
      tags:
        - t2ARExportClient
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARExportClient.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
  '/t2ARExportClient/{id}/exists':
    get:
      tags:
        - t2ARExportClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExportClient.exists__get_t2ARExportClient_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARExportClient/{id}':
    head:
      tags:
        - t2ARExportClient
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExportClient.exists__head_t2ARExportClient_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARExportClient
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARExportClient.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
    delete:
      tags:
        - t2ARExportClient
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARExportClient.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARExportClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExportClient.prototype.updateAttributes__put_t2ARExportClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportClient'
        - name: id
          in: path
          description: t2ARExportClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
    patch:
      tags:
        - t2ARExportClient
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExportClient.prototype.updateAttributes__patch_t2ARExportClient_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportClient'
        - name: id
          in: path
          description: t2ARExportClient id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
  '/t2ARExportClient/{id}/replace':
    post:
      tags:
        - t2ARExportClient
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARExportClient.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
  /t2ARExportClient/findOne:
    get:
      tags:
        - t2ARExportClient
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARExportClient.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportClient'
      deprecated: false
  /t2ARExportClient/update:
    post:
      tags:
        - t2ARExportClient
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARExportClient.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportClient'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARExportClient/count:
    get:
      tags:
        - t2ARExportClient
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARExportClient.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARExportContract:
    post:
      tags:
        - t2ARExportContract
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARExportContract.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
    put:
      tags:
        - t2ARExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExportContract.upsert__put_t2ARExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
    patch:
      tags:
        - t2ARExportContract
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExportContract.upsert__patch_t2ARExportContract
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
    get:
      tags:
        - t2ARExportContract
      operationId: t2ARExportContract.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARExportContract:
                type: object
      deprecated: false
  /t2ARExportContract/replaceOrCreate:
    post:
      tags:
        - t2ARExportContract
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARExportContract.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
  /t2ARExportContract/upsertWithWhere:
    post:
      tags:
        - t2ARExportContract
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARExportContract.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
  '/t2ARExportContract/{id}/exists':
    get:
      tags:
        - t2ARExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExportContract.exists__get_t2ARExportContract_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARExportContract/{id}':
    head:
      tags:
        - t2ARExportContract
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExportContract.exists__head_t2ARExportContract_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARExportContract
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARExportContract.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
    delete:
      tags:
        - t2ARExportContract
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARExportContract.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExportContract.prototype.updateAttributes__put_t2ARExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportContract'
        - name: id
          in: path
          description: t2ARExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
    patch:
      tags:
        - t2ARExportContract
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExportContract.prototype.updateAttributes__patch_t2ARExportContract_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportContract'
        - name: id
          in: path
          description: t2ARExportContract id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
  '/t2ARExportContract/{id}/replace':
    post:
      tags:
        - t2ARExportContract
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARExportContract.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
  /t2ARExportContract/findOne:
    get:
      tags:
        - t2ARExportContract
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARExportContract.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportContract'
      deprecated: false
  /t2ARExportContract/update:
    post:
      tags:
        - t2ARExportContract
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARExportContract.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportContract'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARExportContract/count:
    get:
      tags:
        - t2ARExportContract
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARExportContract.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2ARExportWorkNum:
    post:
      tags:
        - t2ARExportWorkNum
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2ARExportWorkNum.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
    put:
      tags:
        - t2ARExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExportWorkNum.upsert__put_t2ARExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARExportWorkNum
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2ARExportWorkNum.upsert__patch_t2ARExportWorkNum
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
    get:
      tags:
        - t2ARExportWorkNum
      operationId: t2ARExportWorkNum.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2ARExportWorkNum:
                type: object
      deprecated: false
  /t2ARExportWorkNum/replaceOrCreate:
    post:
      tags:
        - t2ARExportWorkNum
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2ARExportWorkNum.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
  /t2ARExportWorkNum/upsertWithWhere:
    post:
      tags:
        - t2ARExportWorkNum
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2ARExportWorkNum.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
  '/t2ARExportWorkNum/{id}/exists':
    get:
      tags:
        - t2ARExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExportWorkNum.exists__get_t2ARExportWorkNum_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2ARExportWorkNum/{id}':
    head:
      tags:
        - t2ARExportWorkNum
      summary: Check whether a model instance exists in the data source.
      operationId: 't2ARExportWorkNum.exists__head_t2ARExportWorkNum_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2ARExportWorkNum
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2ARExportWorkNum.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
    delete:
      tags:
        - t2ARExportWorkNum
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2ARExportWorkNum.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2ARExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExportWorkNum.prototype.updateAttributes__put_t2ARExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportWorkNum'
        - name: id
          in: path
          description: t2ARExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
    patch:
      tags:
        - t2ARExportWorkNum
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2ARExportWorkNum.prototype.updateAttributes__patch_t2ARExportWorkNum_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportWorkNum'
        - name: id
          in: path
          description: t2ARExportWorkNum id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
  '/t2ARExportWorkNum/{id}/replace':
    post:
      tags:
        - t2ARExportWorkNum
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2ARExportWorkNum.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
  /t2ARExportWorkNum/findOne:
    get:
      tags:
        - t2ARExportWorkNum
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2ARExportWorkNum.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2ARExportWorkNum'
      deprecated: false
  /t2ARExportWorkNum/update:
    post:
      tags:
        - t2ARExportWorkNum
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2ARExportWorkNum.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2ARExportWorkNum'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2ARExportWorkNum/count:
    get:
      tags:
        - t2ARExportWorkNum
      summary: Count instances of the model matched by where from the data source.
      operationId: t2ARExportWorkNum.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /t2CompCPMExport:
    post:
      tags:
        - t2CompCPMExport
      summary: Create a new instance of the model and persist it into the data source.
      operationId: t2CompCPMExport.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
    put:
      tags:
        - t2CompCPMExport
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMExport.upsert__put_t2CompCPMExport
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
    patch:
      tags:
        - t2CompCPMExport
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMExport.upsert__patch_t2CompCPMExport
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
    get:
      tags:
        - t2CompCPMExport
      operationId: t2CompCPMExport.processChild
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              t2CompCPMExport:
                type: object
      deprecated: false
  /t2CompCPMExport/replaceOrCreate:
    post:
      tags:
        - t2CompCPMExport
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: t2CompCPMExport.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
  /t2CompCPMExport/upsertWithWhere:
    post:
      tags:
        - t2CompCPMExport
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: t2CompCPMExport.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
  '/t2CompCPMExport/{id}/exists':
    get:
      tags:
        - t2CompCPMExport
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMExport.exists__get_t2CompCPMExport_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/t2CompCPMExport/{id}':
    head:
      tags:
        - t2CompCPMExport
      summary: Check whether a model instance exists in the data source.
      operationId: 't2CompCPMExport.exists__head_t2CompCPMExport_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - t2CompCPMExport
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: t2CompCPMExport.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
    delete:
      tags:
        - t2CompCPMExport
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: t2CompCPMExport.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - t2CompCPMExport
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMExport.prototype.updateAttributes__put_t2CompCPMExport_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMExport'
        - name: id
          in: path
          description: t2CompCPMExport id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
    patch:
      tags:
        - t2CompCPMExport
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 't2CompCPMExport.prototype.updateAttributes__patch_t2CompCPMExport_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMExport'
        - name: id
          in: path
          description: t2CompCPMExport id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
  '/t2CompCPMExport/{id}/replace':
    post:
      tags:
        - t2CompCPMExport
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: t2CompCPMExport.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
  /t2CompCPMExport/findOne:
    get:
      tags:
        - t2CompCPMExport
      summary: Find first instance of the model matched by filter from the data source.
      operationId: t2CompCPMExport.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/t2CompCPMExport'
      deprecated: false
  /t2CompCPMExport/update:
    post:
      tags:
        - t2CompCPMExport
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: t2CompCPMExport.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/t2CompCPMExport'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /t2CompCPMExport/count:
    get:
      tags:
        - t2CompCPMExport
      summary: Count instances of the model matched by where from the data source.
      operationId: t2CompCPMExport.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
  /systemMessagesToDisplay:
    post:
      tags:
        - systemMessagesToDisplay
      summary: Create a new instance of the model and persist it into the data source.
      operationId: systemMessagesToDisplay.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
    put:
      tags:
        - systemMessagesToDisplay
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: systemMessagesToDisplay.upsert__put_systemMessagesToDisplay
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
    patch:
      tags:
        - systemMessagesToDisplay
      summary: Patch an existing model instance or insert a new one into the data source.
      operationId: systemMessagesToDisplay.upsert__patch_systemMessagesToDisplay
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
    get:
      tags:
        - systemMessagesToDisplay
      summary: Find all instances of the model matched by filter from the data source.
      operationId: systemMessagesToDisplay.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
  /systemMessagesToDisplay/replaceOrCreate:
    post:
      tags:
        - systemMessagesToDisplay
      summary: Replace an existing model instance or insert a new one into the data source.
      operationId: systemMessagesToDisplay.replaceOrCreate
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
  /systemMessagesToDisplay/upsertWithWhere:
    post:
      tags:
        - systemMessagesToDisplay
      summary: Update an existing model instance or insert a new one into the data source based on the where criteria.
      operationId: systemMessagesToDisplay.upsertWithWhere
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
  '/systemMessagesToDisplay/{id}/exists':
    get:
      tags:
        - systemMessagesToDisplay
      summary: Check whether a model instance exists in the data source.
      operationId: 'systemMessagesToDisplay.exists__get_systemMessagesToDisplay_{id}_exists'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
  '/systemMessagesToDisplay/{id}':
    head:
      tags:
        - systemMessagesToDisplay
      summary: Check whether a model instance exists in the data source.
      operationId: 'systemMessagesToDisplay.exists__head_systemMessagesToDisplay_{id}'
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              exists:
                type: boolean
      deprecated: false
    get:
      tags:
        - systemMessagesToDisplay
      summary: 'Find a model instance by {{id}} from the data source.'
      operationId: systemMessagesToDisplay.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: 'Filter defining fields and include - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
    delete:
      tags:
        - systemMessagesToDisplay
      summary: 'Delete a model instance by {{id}} from the data source.'
      operationId: systemMessagesToDisplay.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - systemMessagesToDisplay
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'systemMessagesToDisplay.prototype.updateAttributes__put_systemMessagesToDisplay_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/systemMessagesToDisplay'
        - name: id
          in: path
          description: systemMessagesToDisplay id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
    patch:
      tags:
        - systemMessagesToDisplay
      summary: Patch attributes for a model instance and persist it into the data source.
      operationId: 'systemMessagesToDisplay.prototype.updateAttributes__patch_systemMessagesToDisplay_{id}'
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/systemMessagesToDisplay'
        - name: id
          in: path
          description: systemMessagesToDisplay id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
  '/systemMessagesToDisplay/{id}/replace':
    post:
      tags:
        - systemMessagesToDisplay
      summary: Replace attributes for a model instance and persist it into the data source.
      operationId: systemMessagesToDisplay.replaceById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
  /systemMessagesToDisplay/findOne:
    get:
      tags:
        - systemMessagesToDisplay
      summary: Find first instance of the model matched by filter from the data source.
      operationId: systemMessagesToDisplay.findOne
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({"something":"value"})'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/systemMessagesToDisplay'
      deprecated: false
  /systemMessagesToDisplay/update:
    post:
      tags:
        - systemMessagesToDisplay
      summary: 'Update instances of the model matched by {{where}} from the data source.'
      operationId: systemMessagesToDisplay.updateAll
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: '#/definitions/systemMessagesToDisplay'
      responses:
        '200':
          description: Request was successful
          schema:
            description: Information related to the outcome of the operation
            type: object
            properties:
              count:
                description: The number of instances updated
                type: number
                format: double
      deprecated: false
  /systemMessagesToDisplay/count:
    get:
      tags:
        - systemMessagesToDisplay
      summary: Count instances of the model matched by where from the data source.
      operationId: systemMessagesToDisplay.count
      parameters:
        - name: where
          in: query
          description: Criteria to match model instances
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              count:
                type: number
                format: double
      deprecated: false
definitions:
  x-any:
    properties: {}
  Parameter:
    properties:
      dataType:
        description: Enumerated data type of parameter
        type: number
        format: double
      description:
        description: Parameter description
        type: string
      domain:
        description: Domain of valid values (future release)
        type: string
      externalName:
        description: External Name
        type: string
      name:
        description: Parameter Name
        type: string
      requiredInd:
        description: 'Required Indicator (default false, Optional)'
        type: boolean
      serviceName:
        description: Service Name
        type: string
      defaultValue:
        description: Default Value when parameter is missing
        $ref: '#/definitions/x-any'
    required:
      - dataType
      - name
      - serviceName
    additionalProperties: false
  Service:
    properties:
      name:
        description: Service Name
        type: string
      sqlTemplate:
        description: SQL Template
        type: string
      targetModelName:
        description: Target Model Name
        type: string
      description:
        description: Description
        type: string
    required:
      - name
      - sqlTemplate
      - targetModelName
    additionalProperties: false
  ApiController:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1TieredLeakage:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  MenuItem:
    properties:
      value:
        description: Business attribute code represented by the menu item (e..g. GEO_CD)
        type: string
      valueDesc:
        description: Business attribute description represented by the menu item (e..g. GEO_DESC)
        type: string
      menuCd:
        description: Parent Menu Code (e.g. busAttr)
        type: string
      menuItemId:
        description: Menu Item Identifier
        type: number
        format: double
      label:
        description: Menu Item Name (e.g. Geography)
        type: string
      id:
        type: number
        format: double
    required:
      - menuCd
      - menuItemId
    additionalProperties: false
  Menu:
    properties:
      menuCd:
        description: 'Menu Code (e.g. busAttr, viewBy1.2, viewBy2.1)'
        type: string
      menuDescription:
        type: string
    required:
      - menuCd
    additionalProperties: false
  phdbFilter:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  ApiStub:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1FinancialSummary:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ReportVariance:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ReportLeakage12MthTrend:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsWorkPopupDetail:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsContractPopupDetail:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsQtrGpLeakageWorkNumber:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsQtrGpLeakageContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ReportTieredLeakagePercentage:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ReportTieredLeakageWorkCount:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ReportTieredLeakageContractCount:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ReportTieredLeakageMillions:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsEac2PlanWorkNumber:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsEac2PlanContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsCostOverrunWorkNumber:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TopContributorsCostOverrunContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  ApiStubSimple:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  entitlement:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  phdbContractCount:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  phdbFinancialSummary:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthWorkPopupDetail:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthContractPopupDetail:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  financialSnapshots:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  financialQuarters:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthExclusionContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthExclusionWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1PlanHealthView:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthExclusionDetailsWorkNumber:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthExclusionDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  T2planHealthExclusionTrendContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  T2planHealthExclusionTrendWorkNumber:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageContractPopupDetail:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageWorkPopupDetail:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1BusinessGPLeakage:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionDetailsWorkNumber:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionExclusionTrendPercentage:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionContractTotal:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionWorkNumTotal:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthExclusionDetailsWorkNumberAll:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2PlanHealthExclusionDetailsContractAll:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionExclusionTrendMillions:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  T2planHealthExclusionTrendContractAll:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  T2planHealthExclusionTrendWorkNumberAll:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionExclusionTrendPercentageWork:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2BusinessLeakageExpansionExclusionTrendMillionsWork:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1OperGPLeakage:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageCountContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageCountWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageTrendMillContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageTrendMillWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageTrendPercContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageTrendPercWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageDetailsWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakagePopupContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakagePopupWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageTotalContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2OperLeakageTotalWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1CompScorecard:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2CompSummary:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TieredLeakContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TieredLeakContractExport:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TieredLeakWorkNumExport:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2TieredLeakWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  USER_ACKNOWLEDGEMENTS:
    properties:
      EMAIL_ID:
        description: Intranet Id
        type: string
      T_C_TMS:
        type: string
        format: date-time
      EU_PI_TMS:
        type: string
        format: date-time
    required:
      - EMAIL_ID
    additionalProperties: false
  t2CompSummaryGeo:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2CompSummaryGrowthPltfrm:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  complianceSnapshots:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2CompCPMTrend:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2CompCPMDetails:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2CompCPMCount:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  entitlementLineage:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  cpmComplianceSnapshots:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpCount:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpContractList:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpTrend:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpDetailsWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpExportContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ExpExportWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppDetailsWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppTrendMonthFin:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppTrendQtrFin:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppTrendMonthPlan:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppTrendQtrPlan:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1PredRisk:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppExportContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppExportWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppDetailsMonthContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppDetailsMonthWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppExportMonthContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2gppExportMonthWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t1UBAR:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBCountContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBCountWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBDetailsWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBTrendContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBTrendWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBExpanClient:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBExpanContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBExpanWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBExportClient:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBExportContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2UBExportWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARCountContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARCountWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARDetailsContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARDetailsWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARTrendContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARTrendWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARExpanClient:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARExpanContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARExpanWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARExportClient:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARExportContract:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2ARExportWorkNum:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  t2CompCPMExport:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  systemMessagesToDisplay:
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
basePath: /api
swagger: '2.0'
info:
  x-ibm-name: pldb-poc
  version: 1.0.0
  title: pldb-poc
schemes:
  - https
host: $(catalog.host)
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'https://phd-dev-api.w3ibm.mybluemix.net'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
