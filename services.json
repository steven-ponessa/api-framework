{
  "ids": {
    "Service": 224,
    "Parameter": 839
  },
  "models": {
    "Service": {
      "getBrandTest": "{\"name\":\"getBrandTest\",\"sqlTemplate\":\"select BRAND_CD, BRAND_NM FROM RQG40283.REFT_BRAND_DIM \",\"targetModelName\":\"ApiController\",\"description\":\"Test to retrieve EDS.BRAND_DIM\"}",
      "getResourceByGrowthPlatform": {
        "name":"getResourceByGrowthPlatform",
        "targetModelName":"ApiController",
        "description":"Description of the API",
        "sqlTemplate":"select GP.GROWTH_PLATFORM_CD,GP.GROWTH_PLATFORM_CD,P.PRACTICE_CD, P.PRACTICE_NM, SUM(RESOURCE_CNT) AS RESOURCE_CNT, SUM(FTE_CNT) AS FTE_CNT FROM EDS.RESOURCE_FACT F, EDS.GROWTH_PLATFORM_DIM GP,  EDS.PRACTICE_DIM P WHERE F.GROWTH_PLATFORM_CD = GP.GROWTH_PLATFORM_CD AND F.PRACTICE_CD = P.PRACTICE_CD AND  F.GROWTH_PLATFORM_CD = '{growth-platform-cd}' GROUP BY GP.GROWTH_PLATFORM_CD, GP.GROWTH_PLATFORM_CD, P.PRACTICE_CD, P.PRACTICE_NM"
      },
      "phdbFilters": "{\"name\":\"phdbFilters\",\"sqlTemplate\":\"select distinct {busAttr} FROM PHD.FILTERS {filter} ORDER BY {busAttr} \",\"targetModelName\":\"ApiController\",\"description\":\"Service to pull data for filters based on current specified filters\"}",
      "entitlementLineage": "{\"name\":\"entitlementLineage\",\"sqlTemplate\":\"with geo_flag as ( select 'Y' as is_geo, role_id from ctrlctr.role_ref where role_typ_cd = 'L' ), base as ( select distinct geo_desc as geo, mkt_desc as market, rgn_desc as region, ctry_desc as country from phd.filters ), geos as ( select distinct geo as geo_value, geo from base ), markets as ( select distinct market as geo_value, geo from base ), regions as ( select distinct region as geo_value, geo from base ), countries as ( select distinct country as geo_value, geo from base ), geo_alignment as ( select * from geos union select * from markets union select * from regions union select * from countries union select * from (values ('Japan', 'Japan'), ('ISA', 'Asia Pacific'), ('UKI', 'Europe')) as fixes(geo_value, geo) ), user_list as ( select distinct ura.inet_id, coalesce(ga.geo, (case when ure.value_id is null then 'Global' else 'Unknown' end)) as geo from ctrlctr.cc_user_role_assoc ura left join ctrlctr.cc_user_role_entitlement ure on ure.inet_id = ura.inet_id and ure.role_id = ura.role_id and ure.appl_id = ura.appl_id left join geo_alignment ga on ga.geo_value = ure.value_id where ura.appl_id = 300 and ura.role_id <> 550 ), multi_geo_users as ( select inet_id from user_list group by inet_id having count(*) > 1 ), qpb_users as ( select * from multi_geo_users union select inet_id from user_list where geo = 'Global' ), quarter_point_blackout as ( select qpb_ind as flag from phd.acct_dates ), base_entitlements as ( select inet_id as email, appl_id as role_id, null as value, 'N' as is_geo, null as geo from ctrlctr.cc_user_application_assoc where appl_id = 300 and inet_id = lower('{email}') union all select ura.inet_id as email, ura.role_id, ure.value_id as value, coalesce(gf.is_geo, 'N') as is_geo, coalesce(ga.geo, (case when ure.value_id is null and gf.is_geo = 'Y' then 'Global' else 'Unknown' end)) as geo from ctrlctr.cc_user_role_assoc ura left join ctrlctr.cc_user_role_entitlement ure on ure.inet_id = ura.inet_id and ure.appl_id = ura.appl_id and ure.role_id = ura.role_id left join geo_flag gf on gf.role_id = ura.role_id left join geo_alignment ga on ga.geo_value = ure.value_id and ura.role_id <> 550 where ura.appl_id = 300 and ura.inet_id = lower('{email}') ), qpb_restriction_assigned as ( select distinct value as geo from base_entitlements where role_id = 550 fetch first 1 rows only ), qpb_restriction_default as ( select case when geo = 'Global' then (select geo from user_list where geo not in ('Global', 'Unknown') fetch first 1 rows only) else geo end as geo, 'Default' as qpb_type from user_list where inet_id = lower('{email}') fetch first 1 rows only ), qpb_restriction as ( select coalesce( (select distinct qra.geo from qpb_restriction_assigned qra inner join user_list ul on (ul.geo = qra.geo or ul.geo = 'Global' or lower(qra.geo) = 'exception') and ul.inet_id = lower('{email}')), (select geo from qpb_restriction_default) ) as geo from sysibm.sysdummy1 ), converted_global as ( select email, case when role_id = 4 then 8 else role_id end as role_id, case when role_id = 4 then (select coalesce(geo, 'Unknown') from qpb_restriction) else value end as value, is_geo, case when role_id = 4 then (select distinct coalesce(geo, 'Unknown') from geo_alignment where geo_value = (select coalesce(geo, 'Unknown') from qpb_restriction)) else geo end as geo from base_entitlements ), restricted_access as ( select cg.email, cg.role_id, cg.value, 'Y' as qpb_restrict from converted_global cg inner join qpb_restriction qr on qr.geo = cg.geo ), combined as ( select email, role_id, value, 'N/A' as qpb_restrict from base_entitlements where is_geo = 'N' and role_id <> 550 union all select email, role_id, value, 'Y' as qpb_restrict from restricted_access union all select email, role_id, value, 'N' as qpb_restrict from base_entitlements where is_geo = 'Y' and role_id <> 550 ), final_entitlement as ( select email, role_id, value from combined where qpb_restrict = 'N/A' union select email, role_id, value from combined where qpb_restrict = (case when (select flag from quarter_point_blackout) = 'Y' and (select count(*) from qpb_users where inet_id = lower('{email}')) > 0 and (select lower(geo) from qpb_restriction) != 'exception' and (select count(*) from restricted_access) > 0 then 'Y' else 'N' end) ), mkt_alignment as ( select distinct geo_desc, mkt_desc from phd.country_ref ) select email as inet_id , cast('WW' as varchar(2)) as role, 'World Wide' as value_id, cast(null as varchar(10)) as parent_desc from final_entitlement where role_id = 4 union all select fe.email as inet_id, case fe.role_id when (8) then 'GEO' when(16) then 'MKT' else cast(fe.role_id as varchar(5)) end as role, fe.value as value_id, coalesce(rtrim(m.geo_desc), 'World Wide') as parent_desc from final_entitlement fe left join mkt_alignment m on m.mkt_desc = fe.value where fe.role_id <> 4 and fe.role_id <> 300 order by inet_id, role, value_id with ur; \",\"targetModelName\":\"ApiController\",\"description\":\"Service to pull entitlements, including the lineage of the markets or countries the user is entitled to, for the specified user.\"}",
      "entitlement": "{\"name\":\"entitlement\",\"sqlTemplate\":\"with geo_flag as ( select 'Y' as is_geo, role_id from ctrlctr.role_ref where role_typ_cd = 'L' ), base as ( select distinct geo_desc as geo, mkt_desc as market, rgn_desc as region, ctry_desc as country from phd.filters ), geos as ( select distinct geo as geo_value, geo from base ), markets as ( select distinct market as geo_value, geo from base ), regions as ( select distinct region as geo_value, geo from base ), countries as ( select distinct country as geo_value, geo from base ), geo_alignment as ( select * from geos union select * from markets union select * from regions union select * from countries union select * from (values ('Japan', 'Japan'), ('ISA', 'Asia Pacific'), ('UKI', 'Europe')) as fixes(geo_value, geo) ), user_list as ( select distinct ura.inet_id, coalesce(ga.geo, (case when ure.value_id is null then 'Global' else 'Unknown' end)) as geo from ctrlctr.cc_user_role_assoc ura left join ctrlctr.cc_user_role_entitlement ure on ure.inet_id = ura.inet_id and ure.role_id = ura.role_id and ure.appl_id = ura.appl_id left join geo_alignment ga on ga.geo_value = ure.value_id where ura.appl_id = 300 and ura.role_id <> 550 ), multi_geo_users as ( select inet_id from user_list group by inet_id having count(*) > 1 ), qpb_users as ( select * from multi_geo_users union select inet_id from user_list where geo = 'Global' ), quarter_point_blackout as ( select qpb_ind as flag from phd.acct_dates ), base_entitlements as ( select inet_id as email, appl_id as role_id, null as value, 'N' as is_geo, null as geo from ctrlctr.cc_user_application_assoc where appl_id = 300 and inet_id = lower('{email}') union all select ura.inet_id as email, ura.role_id, ure.value_id as value, coalesce(gf.is_geo, 'N') as is_geo, coalesce(ga.geo, (case when ure.value_id is null and gf.is_geo = 'Y' then 'Global' else 'Unknown' end)) as geo from ctrlctr.cc_user_role_assoc ura left join ctrlctr.cc_user_role_entitlement ure on ure.inet_id = ura.inet_id and ure.appl_id = ura.appl_id and ure.role_id = ura.role_id left join geo_flag gf on gf.role_id = ura.role_id left join geo_alignment ga on ga.geo_value = ure.value_id and ura.role_id <> 550 where ura.appl_id = 300 and ura.inet_id = lower('{email}') ), qpb_restriction_assigned as ( select distinct value as geo from base_entitlements where role_id = 550 fetch first 1 rows only ), qpb_restriction_default as ( select case when geo = 'Global' then (select geo from user_list where geo not in ('Global', 'Unknown') fetch first 1 rows only) else geo end as geo, 'Default' as qpb_type from user_list where inet_id = lower('{email}') fetch first 1 rows only ), qpb_restriction as ( select coalesce( (select distinct qra.geo from qpb_restriction_assigned qra inner join user_list ul on (ul.geo = qra.geo or ul.geo = 'Global' or lower(qra.geo) = 'exception') and ul.inet_id = lower('{email}')), (select geo from qpb_restriction_default) ) as geo from sysibm.sysdummy1 ), converted_global as ( select email, case when role_id = 4 then 8 else role_id end as role_id, case when role_id = 4 then (select coalesce(geo, 'Unknown') from qpb_restriction) else value end as value, is_geo, case when role_id = 4 then (select distinct coalesce(geo, 'Unknown') from geo_alignment where geo_value = (select coalesce(geo, 'Unknown') from qpb_restriction)) else geo end as geo from base_entitlements ), restricted_access as ( select cg.email, cg.role_id, cg.value, 'Y' as qpb_restrict from converted_global cg inner join qpb_restriction qr on qr.geo = cg.geo ), combined as ( select email, role_id, value, 'N/A' as qpb_restrict from base_entitlements where is_geo = 'N' and role_id <> 550 union all select email, role_id, value, 'Y' as qpb_restrict from restricted_access union all select email, role_id, value, 'N' as qpb_restrict from base_entitlements where is_geo = 'Y' and role_id <> 550 ) select email, role_id, value from combined where qpb_restrict = 'N/A' union select email, role_id, value from combined where qpb_restrict = (case when (select flag from quarter_point_blackout) = 'Y' and (select count(*) from qpb_users where inet_id = lower('{email}')) > 0 and (select lower(geo) from qpb_restriction) != 'exception' and (select count(*) from restricted_access) > 0 then 'Y' else 'N' end) with ur; \",\"targetModelName\":\"ApiController\",\"description\":\"Service to pull entitlements for the specified user.\"}",
      "financialSnapshots": "{\"name\":\"financialSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='GP_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='GP_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ; \",\"description\":\"Retrieve list of available snapshot dates\"}",
      "financialQuarters": "{\"name\":\"financialQuarters\",\"sqlTemplate\":\"with all_option as( select '0000Q1' as value, 'All' as label from phd.cntrct_sgnd_qtrs fetch first row only  ), quarter_options as( select year||qtr as value, label as label from phd.cntrct_sgnd_qtrs  ) select * from quarter_options where value <= '{yrQtrKey}' union all select * from all_option \",\"description\":\"Retrieve list of available contract signed quarters information\"}",
      "complianceSnapshots": "{\"name\":\"complianceSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='CPL_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='CPL_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Available summary compliance snapshot dates\"}",
      "cpmComplianceSnapshots": "{\"name\":\"cpmComplianceSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='CPM_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='CPM_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Available cpm compliance (back to basics) snapshot dates\"}",
      "cpmPhaseGateSnapshots": "{\"name\":\"cpmPhaseGateSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='PG_CB_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='PG_CB_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Available phase gate snapshot dates\"}",
      "cpm7KeysSnapshots": "{\"name\":\"cpm7KeysSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='SK_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='SK_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Available 7 keys snapshot dates\"}",
      "cpmIPPFSnapshots": "{\"name\":\"cpmIPPFSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='FC_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='FC_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Available IPPF compliance snapshot dates\"}",
      "cpmCOSSnapshots": "{\"name\":\"cpmCOSSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='COS_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='COS_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Available CoS snapshot dates\"}",
      "cpmExpanList": "{\"name\":\"cpmExpanList\",\"sqlTemplate\":\"SELECT d.directive_full_desc AS directive, m.msurmt_cd AS valueDesc, /*m.msurmt_full_desc as label, */ CASE WHEN m.msurmt_cd = '2.1' THEN 'Delivery: Complete PM&T Profile' WHEN m.msurmt_cd = '2.2' THEN 'Delivery: Comply with PM&T Delivery Standards' WHEN m.msurmt_cd = '5.1' THEN 'Assign / staff CPM' WHEN m.msurmt_cd = '5.2' THEN '% Phase Gate 0 compliance' WHEN m.msurmt_cd = '5.3' THEN 'Perform Phase Gate 1-4' WHEN m.msurmt_cd = '5.4' THEN 'Submit 7 Keys Assessment' WHEN m.msurmt_cd = '5.5' THEN 'Establish Conditions of Satisfaction' WHEN m.msurmt_cd = '5.6' THEN 'Delivery Start Metric' WHEN m.msurmt_cd = '6.1' THEN 'IPPF Forecast compliance' WHEN m.msurmt_cd = '8.1' THEN '# GDPR impacted contracts' WHEN m.msurmt_cd = '8.2' THEN '# Non-GDPR impacted contracts' WHEN m.msurmt_cd = '8.3' THEN 'Active Contracts Not Asessed for GDPR' END AS label, CASE WHEN m.msurmt_cd = '2.1' or m.msurmt_cd = '2.2' THEN 'Delivery Methods' WHEN m.msurmt_cd = '5.1' THEN 'Back to Basics' WHEN m.msurmt_cd = '5.2' OR m.msurmt_cd = '5.3' THEN 'Phase Gates' WHEN m.msurmt_cd = '5.4' THEN '7 Keys' WHEN m.msurmt_cd = '6.1' THEN 'IPPF Forecast Compliance' WHEN m.msurmt_cd = '5.5' THEN 'Conditions of Satisfaction (CoS)' WHEN m.msurmt_cd = '5.6' THEN 'Delivery Start' WHEN m.msurmt_cd = '8.1' THEN '# GDPR Impacted Contracts' WHEN m.msurmt_cd = '8.2' THEN '# Non-GDPR Impacted Contracts' WHEN m.msurmt_cd = '8.3' THEN 'Active Contracts Not Asessed for GDPR' END AS new_label FROM phd.compliance_summary_fact_new f INNER JOIN phd.directive_dim d ON f.directive_key = d.directive_key INNER JOIN phd.measurement_dim m ON f.msurmt_key = m.msurmt_key AND f.msurmt_key <> 16 INNER JOIN phd.acct_drop a ON a.mth_key = f.mth_key AND a.graph_nm = 'CPL_L2_GR1' AND a.yr_mo_key = 'CURRENT' WHERE m.msurmt_cd IN ('2.1', '2.2', '5.1', '5.2', '5.3', '5.4', '5.5', '5.6', '6.1', '8.1', '8.2', '8.3') GROUP BY m.msurmt_full_desc, m.msurmt_cd, m.msurmt_key, d.directive_full_desc ORDER BY msurmt_cd; \",\"description\":\"Compliance available expansions\"}",
      "cpmQuarters": "{\"name\":\"cpmQuarters\",\"sqlTemplate\":\"with all_option as ( select '0000Q1' as value, 'All' as label from phd.cntrct_sgnd_qtrs fetch first row only  ), pcw_option as ( select '9999Q4' as value, 'PCW' as label from phd.cntrct_sgnd_qtrs fetch first row only  ), quarter_options as ( select year||qtr as value, label as label from phd.cntrct_sgnd_qtrs  ) select * from all_option union all select * from pcw_option union all select * from quarter_options where value <= '{yrQtrKey}' ;\",\"description\":\"Retrieve list of available CPM contract signed quarters information\"}",
      "ubarSnapshots": "{\"name\":\"ubarSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='UB_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='UB_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Retrieve list of available UBAR snapshot dates\"}",
      "gppSnapshots": "{\"name\":\"gppSnapshots\",\"sqlTemplate\":\"select rtrim(yr_mo_key) as value , case when (curr_acct_mo) in (01,02,03) then (curr_acct_yr)||('Q'||'1') when (curr_acct_mo) in (04,05,06) then (curr_acct_yr)||('Q'||'2') when (curr_acct_mo) in (07,08,09) then (curr_acct_yr)||('Q'||'3') when (curr_acct_mo) in (10,11,12) then (curr_acct_yr)||('Q'||'4') end as yrQtrKey, case when curr_acct_mo='01' then 'January ' ||curr_acct_yr when curr_acct_mo='02' then 'February ' ||curr_acct_yr when curr_acct_mo='03' then 'March ' ||curr_acct_yr when curr_acct_mo='04' then 'April ' ||curr_acct_yr when curr_acct_mo='05' then 'May ' ||curr_acct_yr when curr_acct_mo='06' then 'June ' ||curr_acct_yr when curr_acct_mo='07' then 'July ' ||curr_acct_yr when curr_acct_mo='08' then 'August ' ||curr_acct_yr when curr_acct_mo='09' then 'September '||curr_acct_yr when curr_acct_mo='10' then 'October ' ||curr_acct_yr when curr_acct_mo='11' then 'November ' ||curr_acct_yr when curr_acct_mo='12' then 'December ' ||curr_acct_yr else 'Error - '||curr_acct_mo end as label from phd.acct_drop a where a.graph_nm='GP_L2_GR1' and not exists (select 1 from phd.acct_drop b where b.yr_mo_key = 'CURRENT' and b.graph_nm='GP_L2_GR1' and a.curr_acct_yr=b.curr_acct_yr and a.curr_acct_mo=b.curr_acct_mo and a.yr_mo_key <> 'CURRENT') order by yr_mo_key desc ;\",\"description\":\"Retrieve list of available GPP snapshot dates\"}",
      "systemMessagesToDisplay": "{\"name\":\"systemMessagesToDisplay\",\"sqlTemplate\":\" with base as( select 'true' as msg_to_display, msg_txt as msg, seq_num from ctrlctr.system_messages where appl_id = 300 and start_time <= current timestamp and (end_time is null or end_time >= current timestamp)), anythingToDisplay as ( select case when (select count(*) from base) > 0 then 'true' else 'false' end as msg_to_display from sysibm.sysdummy1 ) select atd.*, coalesce(base.msg, '') as msg from anythingToDisplay atd left join base on base.msg_to_display = atd.msg_to_display order by base.seq_num with ur; \",\"description\":\"Get system messages for the user\"}",
      "phdPageLogger": "{\"name\":\"phdPageLogger\",\"sqlTemplate\":\"select '{page}' as pageName from sysibm.sysdummy1 \",\"targetModelName\":\"ApiController\",\"description\":\"Service for page logging\"}",
      "phdFilterLogger": "{\"name\":\"phdFilterLogger\",\"sqlTemplate\":\"select '{filters}' as filters from sysibm.sysdummy1 \",\"targetModelName\":\"ApiController\",\"description\":\"Service for filter logging\"}",
      "cmntMetrics": "{\"name\":\"cmntMetrics\",\"sqlTemplate\":\"select metric_key, metric_short_desc, msurmt_cd from phd.metric_dim order by metric_key ; \",\"description\":\"Comments metric options\"}",      

      "t1TieredLeakage": "{\"name\":\"t1TieredLeakage\",\"sqlTemplate\":\"SELECT rtrim({busAttr}) AS CATEGORY, AD.DATA_LOAD_DESC AS DATA_LOAD_DATE, D.ACCT_YR_NUM, D.ACCT_MTH_NUM, SUM(T1_CQ_GP_LKG_AMT) AS T1_QTR_GP_LKG, SUM(T1_CQ_REV_AMT) AS T1_CQ_REV, SUM(T1_CQ_GP_LKG_PRI_MTH_AMT) AS T1_QTR_GP_LKG_PRI_MTH, SUM(T1_CQ_REV_PRI_MTH_AMT) AS T1_CQ_REV_PRI_MTH, SUM(T2_CQ_GP_LKG_AMT) AS T2_QTR_GP_LKG, SUM(T2_CQ_REV_AMT) AS T2_CQ_REV, SUM(T2_CQ_GP_LKG_PRI_MTH_AMT) AS T2_QTR_GP_LKG_PRI_MTH, SUM(T2_CQ_REV_PRI_MTH_AMT) AS T2_CQ_REV_PRI_MTH, SUM(T3_CQ_GP_LKG_AMT) AS T3_QTR_GP_LKG, SUM(T3_CQ_REV_AMT) AS T3_CQ_REV, SUM(T3_CQ_GP_LKG_PRI_MTH_AMT) AS T3_QTR_GP_LKG_PRI_MTH, SUM(T3_CQ_REV_PRI_MTH_AMT) AS T3_CQ_REV_PRI_MTH, SUM(T0_CQ_GP_LKG_AMT) AS T0_QTR_GP_LKG, SUM(T0_CQ_REV_AMT) AS T0_CQ_REV, SUM(T0_CQ_GP_LKG_PRI_MTH_AMT) AS T0_QTR_GP_LKG_PRI_MTH, SUM(T0_CQ_REV_PRI_MTH_AMT) AS T0_CQ_REV_PRI_MTH, SUM(T1_EAC_LKG_AMT) AS T1_EAC_LKG, SUM(T1_TCV_AMT) AS T1_TCV_PLAN_RT_USD, SUM(T1_EAC_LKG_PRI_MTH_AMT) AS T1_EAC_LKG_PRI_MTH, SUM(T1_TCV_PRI_MTH_AMT) AS T1_TCV_PLAN_RT_USD_PRI_MTH, SUM(T2_EAC_LKG_AMT) AS T2_EAC_LKG, SUM(T2_TCV_AMT) AS T2_TCV_PLAN_RT_USD, SUM(T2_EAC_LKG_PRI_MTH_AMT) AS T2_EAC_LKG_PRI_MTH, SUM(T2_TCV_PRI_MTH_AMT) AS T2_TCV_PLAN_RT_USD_PRI_MTH, SUM(T3_EAC_LKG_AMT) AS T3_EAC_LKG, SUM(T3_TCV_AMT) AS T3_TCV_PLAN_RT_USD, SUM(T3_EAC_LKG_PRI_MTH_AMT) AS T3_EAC_LKG_PRI_MTH, SUM(T3_TCV_PRI_MTH_AMT) AS T3_TCV_PLAN_RT_USD_PRI_MTH, SUM(T0_EAC_LKG_AMT) AS T0_EAC_LKG, SUM(T0_TCV_AMT) AS T0_TCV_PLAN_RT_USD, SUM(T0_EAC_LKG_PRI_MTH_AMT) AS T0_EAC_LKG_PRI_MTH, SUM(T0_TCV_PRI_MTH_AMT) AS T0_TCV_PLAN_RT_USD_PRI_MTH, SUM(T1_OVERRUN_AMT) AS T1_COST_OVERRUN, SUM(T1_LST_3_MTH_OVERRUN_AMT) AS T1_LAST_3MO_COST_PLAN, SUM(T1_OVERRUN_PRI_MTH_AMT) AS T1_COST_OVERRUN_PRI_MTH, SUM(T1_LST_3_MTH_OVERRUN_PRI_MTH_AMT) AS T1_LAST_3MO_COST_PLAN_PRI_MTH, SUM(T2_OVERRUN_AMT) AS T2_COST_OVERRUN, SUM(T2_LST_3_MTH_OVERRUN_AMT) AS T2_LAST_3MO_COST_PLAN, SUM(T2_OVERRUN_PRI_MTH_AMT) AS T2_COST_OVERRUN_PRI_MTH, SUM(T2_LST_3_MTH_OVERRUN_PRI_MTH_AMT) AS T2_LAST_3MO_COST_PLAN_PRI_MTH, SUM(T3_OVERRUN_AMT) AS T3_COST_OVERRUN, SUM(T3_LST_3_MTH_OVERRUN_AMT) AS T3_LAST_3MO_COST_PLAN, SUM(T3_OVERRUN_PRI_MTH_AMT) AS T3_COST_OVERRUN_PRI_MTH, SUM(T3_LST_3_MTH_OVERRUN_PRI_MTH_AMT) AS T3_LAST_3MO_COST_PLAN_PRI_MTH, SUM(T0_OVERRUN_AMT) AS T0_COST_OVERRUN, SUM(T0_LST_3_MTH_OVERRUN_AMT) AS T0_LAST_3MO_COST_PLAN, SUM(T0_OVERRUN_PRI_MTH_AMT) AS T0_COST_OVERRUN_PRI_MTH, SUM(T0_LST_3_MTH_OVERRUN_PRI_MTH_AMT) AS T0_LAST_3MO_COST_PLAN_PRI_MTH FROM(SELECT TLF.*, 'Total' AS TOTAL FROM PHD.TIERED_LKG_FACT TLF) F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLTFRM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_GB_KEY = S.SCTR_GB_KEY INNER JOIN PHD.DATE_DIM D ON D.DATE_KEY = F.DATE_KEY,PHD.ACCT_DROP AD {filter} <filter?AND:WHERE> /*((STATUS_ABBR = 'A' AND '_AC' LIKE '') {status} OR ((STATUS_ABBR ='A' OR STATUS_ABBR = 'C') AND '_AC' LIKE '_AC')) AND {status} */ AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = 'CURRENT' GROUP BY {busAttr}, AD.DATA_LOAD_DESC, ACCT_YR_NUM, ACCT_MTH_NUM \",\"description\":\"Service to pull data for the first level tiered leakage report by the specified business attributes and the specified filters\"}",
      "t2ReportTieredLeakageMillions": "{\"name\":\"t2ReportTieredLeakageMillions\",\"sqlTemplate\":\"WITH CURR_DATA AS( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T0_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_ACTLS_REV_AC_PV_AMT ELSE 0.0 END) AS T0_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T0_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.TCV_AMT ELSE 0.0 END) AS T0_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T0_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T0_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T1_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_REV_PV_AMT ELSE 0.0 END) AS T1_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T1_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.TCV_AMT ELSE 0.0 END) AS T1_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T1_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T1_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T2_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_REV_PV_AMT ELSE 0.0 END) AS T2_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T2_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.TCV_AMT ELSE 0.0 END) AS T2_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T2_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T2_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T3_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_REV_PV_AMT ELSE 0.0 END) AS T3_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T3_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.TCV_AMT ELSE 0.0 END) AS T3_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T3_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T3_AP_LAST_3MO_COST FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' /*AND ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD = 'A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC'))*/ GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO  ), PRI_DATA AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T0_CQ_GP_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T0_EAC_LKG, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T0_COST_OVERRUN, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T1_CQ_GP_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T1_EAC_LKG, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T1_COST_OVERRUN, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T2_CQ_GP_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T2_EAC_LKG, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T2_COST_OVERRUN, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T3_CQ_GP_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T3_EAC_LKG, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T3_COST_OVERRUN FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.CURR_ACCT_MO = D.CURR_ACCT_MO - 1 AND F.CURR_ACCT_YR = D.CURR_ACCT_YR - 1 AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD = 'A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ) SELECT C.LABEL, C.DATA_LOAD_DESC AS DATA_LOAD_DATE, C.CURR_ACCT_YR AS ACCT_YR, C.CURR_ACCT_MO AS ACCT_MO, C.T0_CQ_GP_LKG, T0_CQ_AP_REV, T0_EAC_LKG, T0_TCV_PLAN_RT_USD, T0_COST_OVERRUN, T0_AP_LAST_3MO_COST, T1_CQ_GP_LKG, T1_CQ_AP_REV, T1_EAC_LKG, T1_TCV_PLAN_RT_USD, T1_COST_OVERRUN, T1_AP_LAST_3MO_COST, T2_CQ_GP_LKG, T2_CQ_AP_REV, T2_EAC_LKG, T2_TCV_PLAN_RT_USD, T2_COST_OVERRUN, T2_AP_LAST_3MO_COST, T3_CQ_GP_LKG, T3_CQ_AP_REV, T3_EAC_LKG, T3_TCV_PLAN_RT_USD, T3_COST_OVERRUN, T3_AP_LAST_3MO_COST, PRI_T0_CQ_GP_LKG, PRI_T0_EAC_LKG, PRI_T0_COST_OVERRUN, PRI_T1_CQ_GP_LKG, PRI_T1_EAC_LKG, PRI_T1_COST_OVERRUN, PRI_T2_CQ_GP_LKG, PRI_T2_EAC_LKG, PRI_T2_COST_OVERRUN, PRI_T3_CQ_GP_LKG, PRI_T3_EAC_LKG, PRI_T3_COST_OVERRUN FROM CURR_DATA C LEFT JOIN PRI_DATA P ON C.LABEL = P.LABEL \",\"description\":\"Service to pull data for the first level tiered leakage report by the specified business attributes and the specified filters \"}",
      "t2ReportTieredLeakagePercentage": "{\"name\":\"t2ReportTieredLeakagePercentage\",\"sqlTemplate\":\"WITH CURR_DATA AS( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T0_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS T0_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T0_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS T0_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T0_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T0_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T1_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS T1_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T1_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS T1_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T1_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T1_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T2_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS T2_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T2_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS T2_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T2_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T2_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS T3_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS T3_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS T3_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS T3_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS T3_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS T3_AP_LAST_3MO_COST FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.TCV_SNAP_FACT TCV ON F.PROJ_KEY = TCV.PROJ_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD = 'A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO  ), PRI_DATA AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T0_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS PRI_T0_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T0_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS PRI_T0_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T0_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS PRI_T0_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T1_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS PRI_T1_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T1_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS PRI_T1_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T1_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS PRI_T1_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T2_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS PRI_T2_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T2_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS PRI_T2_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T2_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS PRI_T2_AP_LAST_3MO_COST, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_GP_LKG_AC_AMT ELSE 0.0 END) AS PRI_T3_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_REV_AC_PV_AMT ELSE 0.0 END) AS PRI_T3_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.EAC_ACTLS_GP_LKG_AMT ELSE 0.0 END) AS PRI_T3_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN TCV.TCV_PLN_AMT ELSE 0.0 END) AS PRI_T3_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.OVERRUN_COST_AMT ELSE 0.0 END) AS PRI_T3_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.LST_3_MTH_COST_APRVD_AMT ELSE 0.0 END) AS PRI_T3_AP_LAST_3MO_COST FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.TCV_SNAP_FACT TCV ON F.PROJ_KEY = TCV.PROJ_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.CURR_ACCT_MO = D.CURR_ACCT_MO AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD = 'A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ) SELECT C.LABEL, C.DATA_LOAD_DESC AS DATA_LOAD_DATE, C.CURR_ACCT_YR AS ACCT_YR, C.CURR_ACCT_MO AS ACCT_MO, T0_CQ_GP_LKG, T0_CQ_AP_REV, T0_EAC_LKG, T0_TCV_PLAN_RT_USD, T0_COST_OVERRUN, T0_AP_LAST_3MO_COST, T1_CQ_GP_LKG, T1_CQ_AP_REV, T1_EAC_LKG, T1_TCV_PLAN_RT_USD, T1_COST_OVERRUN, T1_AP_LAST_3MO_COST, T2_CQ_GP_LKG, T2_CQ_AP_REV, T2_EAC_LKG, T2_TCV_PLAN_RT_USD, T2_COST_OVERRUN, T2_AP_LAST_3MO_COST, T3_CQ_GP_LKG, T3_CQ_AP_REV, T3_EAC_LKG, T3_TCV_PLAN_RT_USD, T3_COST_OVERRUN, T3_AP_LAST_3MO_COST, PRI_T0_CQ_GP_LKG, PRI_T0_CQ_AP_REV, PRI_T0_EAC_LKG, PRI_T0_TCV_PLAN_RT_USD, PRI_T0_COST_OVERRUN, PRI_T0_AP_LAST_3MO_COST, PRI_T1_CQ_GP_LKG, PRI_T1_CQ_AP_REV, PRI_T1_EAC_LKG, PRI_T1_TCV_PLAN_RT_USD, PRI_T1_COST_OVERRUN, PRI_T1_AP_LAST_3MO_COST, PRI_T2_CQ_GP_LKG, PRI_T2_CQ_AP_REV, PRI_T2_EAC_LKG, PRI_T2_TCV_PLAN_RT_USD, PRI_T2_COST_OVERRUN, PRI_T2_AP_LAST_3MO_COST, PRI_T3_CQ_GP_LKG, PRI_T3_CQ_AP_REV, PRI_T3_EAC_LKG, PRI_T3_TCV_PLAN_RT_USD, PRI_T3_COST_OVERRUN, PRI_T3_AP_LAST_3MO_COST FROM CURR_DATA C LEFT JOIN PRI_DATA P ON C.LABEL = P.LABEL \",\"description\":\"Service to pull data for the first level tiered leakage report by the specified business attributes and the specified filters \"}",
      "t2ReportTieredLeakageContractCount": "{\"name\":\"t2ReportTieredLeakageContractCount\",\"sqlTemplate\":\"WITH GP_LKG_CNTRCT_CNT AS( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN CN.CNTRCT_NUM END)) AS T0_GP_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN CN.CNTRCT_NUM END)) AS T1_GP_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN CN.CNTRCT_NUM END)) AS T2_GP_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN CN.CNTRCT_NUM END)) AS T3_GP_LKG_CNTRCT_NUM_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((COALESCE(F.CQ_GP_LKG_AC_AMT,0.0) <> 0.0 AND '{status}' = '_AC') OR (COALESCE(F.CQ_GP_LKG_PV_AMT,0.0) <> 0.0 AND '{status}' = ' ')) AND F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO  ), PRI_GP_LKG_CNTRCT_CNT AS ( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN CN.CNTRCT_NUM END)) AS PRI_T0_GP_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN CN.CNTRCT_NUM END)) AS PRI_T1_GP_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN CN.CNTRCT_NUM END)) AS PRI_T2_GP_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN CN.CNTRCT_NUM END)) AS PRI_T3_GP_LKG_CNTRCT_NUM_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((COALESCE(F.CQ_GP_LKG_AC_AMT,0.0) <> 0.0 AND '{status}' = '_AC') OR (COALESCE(F.CQ_GP_LKG_PV_AMT,0.0) <> 0.0 AND '{status}' = ' ')) AND F.MTH_KEY = (D.MTH_KEY - 1) AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), EAC_LKG_CNTRCT_CNT AS ( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN CN.CNTRCT_NUM END)) AS T0_EAC_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN CN.CNTRCT_NUM END)) AS T1_EAC_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN CN.CNTRCT_NUM END)) AS T2_EAC_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN CN.CNTRCT_NUM END)) AS T3_EAC_LKG_CNTRCT_NUM_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.EAC_ACTLS_GP_LKG_AMT,0.0) < 0.0 AND F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), PRI_EAC_LKG_CNTRCT_CNT AS ( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN CN.CNTRCT_NUM END)) AS PRI_T0_EAC_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN CN.CNTRCT_NUM END)) AS PRI_T1_EAC_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN CN.CNTRCT_NUM END)) AS PRI_T2_EAC_LKG_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN CN.CNTRCT_NUM END)) AS PRI_T3_EAC_LKG_CNTRCT_NUM_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.EAC_ACTLS_GP_LKG_AMT,0.0) < 0.0 AND F.MTH_KEY = (D.MTH_KEY - 1) AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), COST_OVERRUN_CNTRCT_CNT AS ( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN CN.CNTRCT_NUM END)) AS T0_COST_OVERRUN_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN CN.CNTRCT_NUM END)) AS T1_COST_OVERRUN_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN CN.CNTRCT_NUM END)) AS T2_COST_OVERRUN_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN CN.CNTRCT_NUM END)) AS T3_COST_OVERRUN_CNTRCT_NUM_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.OVERRUN_COST_AMT,0.0) < 0.0 AND F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), PRI_COST_OVERRUN_CNTRCT_CNT AS ( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN CN.CNTRCT_NUM END)) AS PRI_T0_COST_OVERRUN_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN CN.CNTRCT_NUM END)) AS PRI_T1_COST_OVERRUN_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN CN.CNTRCT_NUM END)) AS PRI_T2_COST_OVERRUN_CNTRCT_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN CN.CNTRCT_NUM END)) AS PRI_T3_COST_OVERRUN_CNTRCT_NUM_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.OVERRUN_COST_AMT,0.0) < 0.0 AND F.MTH_KEY = (D.MTH_KEY - 1) AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), STATUS_DATA AS ( SELECT {busAttr} AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, CASE WHEN '{status}' = '_AC' THEN SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT END) ELSE SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_PV_AMT END)END AS T0_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_ACTLS_REV_AC_PV_AMT /*{status}*/ END) AS T0_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T0_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.TCV_CB_AMT END) AS T0_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.OVERRUN_COST_AMT END) AS T0_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T0_AP_LAST_3MO_COST, CASE WHEN '{status}' = '_AC' THEN SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT END) ELSE SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_PV_AMT END)END AS T1_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_ACTLS_REV_AC_PV_AMT END) AS T1_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T1_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.TCV_CB_AMT END) AS T1_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.OVERRUN_COST_AMT END) AS T1_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T1_AP_LAST_3MO_COST, CASE WHEN '{status}' = '_AC' THEN SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT END) ELSE SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_PV_AMT END)END AS T2_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_ACTLS_REV_AC_PV_AMT END) AS T2_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T2_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.TCV_CB_AMT END) AS T2_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.OVERRUN_COST_AMT END) AS T2_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T2_AP_LAST_3MO_COST, CASE WHEN '{status}' = '_AC' THEN SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT END) ELSE SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_PV_AMT END)END AS T3_CQ_GP_LKG, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_ACTLS_REV_AC_PV_AMT END) AS T3_CQ_AP_REV, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T3_EAC_LKG, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.TCV_CB_AMT END) AS T3_TCV_PLAN_RT_USD, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.OVERRUN_COST_AMT END) AS T3_COST_OVERRUN, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T3_AP_LAST_3MO_COST FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ) SELECT TD.LABEL, TD.DATA_LOAD_DESC AS DATA_LOAD_DATE, TD.CURR_ACCT_YR AS ACCT_YR, TD.CURR_ACCT_MO AS ACCT_MO, COALESCE(T0_GP_LKG_CNTRCT_NUM_CNT,0) AS T0_GP_LKG_CNTRCT_NUM_CNT, COALESCE(T1_GP_LKG_CNTRCT_NUM_CNT,0) AS T1_GP_LKG_CNTRCT_NUM_CNT, COALESCE(T2_GP_LKG_CNTRCT_NUM_CNT,0) AS T2_GP_LKG_CNTRCT_NUM_CNT, COALESCE(T3_GP_LKG_CNTRCT_NUM_CNT,0) AS T3_GP_LKG_CNTRCT_NUM_CNT, COALESCE(T0_EAC_LKG_CNTRCT_NUM_CNT,0) AS T0_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(T1_EAC_LKG_CNTRCT_NUM_CNT,0) AS T1_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(T2_EAC_LKG_CNTRCT_NUM_CNT,0) AS T2_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(T3_EAC_LKG_CNTRCT_NUM_CNT,0) AS T3_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(T0_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS T0_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(T1_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS T1_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(T2_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS T2_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(T3_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS T3_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(PRI_T0_GP_LKG_CNTRCT_NUM_CNT,0) AS PRI_T0_GP_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T1_GP_LKG_CNTRCT_NUM_CNT,0) AS PRI_T1_GP_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T2_GP_LKG_CNTRCT_NUM_CNT,0) AS PRI_T2_GP_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T3_GP_LKG_CNTRCT_NUM_CNT,0) AS PRI_T3_GP_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T0_EAC_LKG_CNTRCT_NUM_CNT,0) AS PRI_T0_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T1_EAC_LKG_CNTRCT_NUM_CNT,0) AS PRI_T1_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T2_EAC_LKG_CNTRCT_NUM_CNT,0) AS PRI_T2_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T3_EAC_LKG_CNTRCT_NUM_CNT,0) AS PRI_T3_EAC_LKG_CNTRCT_NUM_CNT, COALESCE(PRI_T0_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS PRI_T0_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(PRI_T1_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS PRI_T1_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(PRI_T2_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS PRI_T2_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(PRI_T3_COST_OVERRUN_CNTRCT_NUM_CNT,0) AS PRI_T3_COST_OVERRUN_CNTRCT_NUM_CNT, COALESCE(T0_CQ_GP_LKG,0.0) AS T0_CQ_GP_LKG, COALESCE(T0_CQ_AP_REV,0.0) AS T0_CQ_AP_REV, COALESCE(T0_EAC_LKG,0.0) AS T0_EAC_LKG, COALESCE(T0_TCV_PLAN_RT_USD,0.0) AS T0_TCV_PLAN_RT_USD, COALESCE(T0_COST_OVERRUN,0.0) AS T0_COST_OVERRUN, COALESCE(T0_AP_LAST_3MO_COST,0.0) AS T0_AP_LAST_3MO_COST, COALESCE(T1_CQ_GP_LKG,0.0) AS T1_CQ_GP_LKG, COALESCE(T1_CQ_AP_REV,0.0) AS T1_CQ_AP_REV, COALESCE(T1_EAC_LKG,0.0) AS T1_EAC_LKG, COALESCE(T1_TCV_PLAN_RT_USD,0.0) AS T1_TCV_PLAN_RT_USD, COALESCE(T1_COST_OVERRUN,0.0) AS T1_COST_OVERRUN, COALESCE(T1_AP_LAST_3MO_COST,0.0) AS T1_AP_LAST_3MO_COST, COALESCE(T2_CQ_GP_LKG,0.0) AS T2_CQ_GP_LKG, COALESCE(T2_CQ_AP_REV,0.0) AS T2_CQ_AP_REV, COALESCE(T2_EAC_LKG,0.0) AS T2_EAC_LKG, COALESCE(T2_TCV_PLAN_RT_USD,0.0) AS T2_TCV_PLAN_RT_USD, COALESCE(T2_COST_OVERRUN,0.0) AS T2_COST_OVERRUN, COALESCE(T2_AP_LAST_3MO_COST,0.0) AS T2_AP_LAST_3MO_COST, COALESCE(T3_CQ_GP_LKG,0.0) AS T3_CQ_GP_LKG, COALESCE(T3_CQ_AP_REV,0.0) AS T3_CQ_AP_REV, COALESCE(T3_EAC_LKG,0.0) AS T3_EAC_LKG, COALESCE(T3_TCV_PLAN_RT_USD,0.0) AS T3_TCV_PLAN_RT_USD, COALESCE(T3_COST_OVERRUN,0.0) AS T3_COST_OVERRUN, COALESCE(T3_AP_LAST_3MO_COST,0.0) AS T3_AP_LAST_3MO_COST FROM STATUS_DATA TD LEFT JOIN COST_OVERRUN_CNTRCT_CNT CRC ON TD.LABEL = CRC.LABEL LEFT JOIN PRI_COST_OVERRUN_CNTRCT_CNT PRI_CRC ON TD.LABEL = PRI_CRC.LABEL LEFT JOIN GP_LKG_CNTRCT_CNT GC ON TD.LABEL = GC.LABEL LEFT JOIN PRI_GP_LKG_CNTRCT_CNT PRI_GC ON TD.LABEL = PRI_GC.LABEL LEFT JOIN EAC_LKG_CNTRCT_CNT EC ON TD.LABEL = EC.LABEL LEFT JOIN PRI_EAC_LKG_CNTRCT_CNT PRI_EC ON TD.LABEL = PRI_EC.LABEL\",\"description\":\"Service to pull data for the first level tiered leakage report by the specified business attributes and the specified filters \"}",
      "t2ReportTieredLeakageWorkCount": "{\"name\":\"t2ReportTieredLeakageWorkCount\",\"sqlTemplate\":\"WITH GP_LKG_WKNUM_CNT AS( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN P.PROJ_NUM END)) AS T0_GP_LKG_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN P.PROJ_NUM END)) AS T1_GP_LKG_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN P.PROJ_NUM END)) AS T2_GP_LKG_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN P.PROJ_NUM END)) AS T3_GP_LKG_P_PROJ_NUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.CQ_GP_LKG_AC_AMT,0.0) <> 0.0 AND F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD = 'A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO  ), PRI_GP_LKG_WKNUM_CNT AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN P.PROJ_NUM END)) AS PRI_T0_GP_LKG_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN P.PROJ_NUM END)) AS PRI_T1_GP_LKG_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN P.PROJ_NUM END)) AS PRI_T2_GP_LKG_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN P.PROJ_NUM END)) AS PRI_T3_GP_LKG_P_PROJ_NUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.CQ_GP_LKG_AC_AMT,0.0) <> 0.0 AND F.MTH_KEY = (D.MTH_KEY - 1) AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD = 'A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), EAC_ACTLS_GP_LKG_AMT_WKNUM_CNT AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN P.PROJ_NUM END)) AS T0_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN P.PROJ_NUM END)) AS T1_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN P.PROJ_NUM END)) AS T2_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN P.PROJ_NUM END)) AS T3_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.EAC_ACTLS_GP_LKG_AMT,0.0) < 0.0 AND F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), PRI_EAC_ACTLS_GP_LKG_AMT_WKNUM_CNT AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN P.PROJ_NUM END)) AS PRI_T0_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN P.PROJ_NUM END)) AS PRI_T1_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN P.PROJ_NUM END)) AS PRI_T2_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN P.PROJ_NUM END)) AS PRI_T3_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.EAC_ACTLS_GP_LKG_AMT,0.0) < 0.0 AND F.MTH_KEY = (D.MTH_KEY - 1) AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), OVERRUN_COST_AMT_WKNUM_CNT AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN P.PROJ_NUM END)) AS T0_OVERRUN_COST_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN P.PROJ_NUM END)) AS T1_OVERRUN_COST_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN P.PROJ_NUM END)) AS T2_OVERRUN_COST_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN P.PROJ_NUM END)) AS T3_OVERRUN_COST_AMT_P_PROJ_NUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.OVERRUN_COST_AMT,0.0) < 0.0 AND F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), PRI_OVERRUN_COST_AMT_WKNUM_CNT AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN P.PROJ_NUM END)) AS PRI_T0_OVERRUN_COST_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN P.PROJ_NUM END)) AS PRI_T1_OVERRUN_COST_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN P.PROJ_NUM END)) AS PRI_T2_OVERRUN_COST_AMT_P_PROJ_NUM_CNT, COUNT(DISTINCT (CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN P.PROJ_NUM END)) AS PRI_T3_OVERRUN_COST_AMT_P_PROJ_NUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> COALESCE(F.OVERRUN_COST_AMT,0.0) < 0.0 AND F.MTH_KEY = (D.MTH_KEY - 1) AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ), STATUS_DATA AS ( SELECT rtrim({busAttr}) AS LABEL, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_GP_LKG_AC_AMT END) AS T0_CQ_GP_LKG_AC_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 0 THEN F.CQ_REV_AC_PV_AMT END) AS T0_CQ_APRVD_REV_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T0_EAC_ACTLS_GP_LKG_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 0 THEN F.TCV_AMT END) AS T0_TCV_PLN_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.OVERRUN_COST_AMT END) AS T0_OVERRUN_COST_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 0 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T0_LST_3_MTH_COST_APRVD_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_GP_LKG_AC_AMT END) AS T1_CQ_GP_LKG_AC_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 1 THEN F.CQ_REV_AC_PV_AMT END) AS T1_CQ_APRVD_REV_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T1_EAC_ACTLS_GP_LKG_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 1 THEN F.TCV_AMT END) AS T1_TCV_PLN_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.OVERRUN_COST_AMT END) AS T1_OVERRUN_COST_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 1 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T1_LST_3_MTH_COST_APRVD_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_GP_LKG_AC_AMT END) AS T2_CQ_GP_LKG_AC_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 2 THEN F.CQ_REV_AC_PV_AMT END) AS T2_CQ_APRVD_REV_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T2_EAC_ACTLS_GP_LKG_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 2 THEN F.TCV_AMT END) AS T2_TCV_PLN_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.OVERRUN_COST_AMT END) AS T2_OVERRUN_COST_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 2 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T2_LST_3_MTH_COST_APRVD_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_GP_LKG_AC_AMT END) AS T3_CQ_GP_LKG_AC_AMT, SUM(CASE WHEN F.TIER_GP_LKG_NUM = 3 THEN F.CQ_REV_AC_PV_AMT END) AS T3_CQ_APRVD_REV_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.EAC_ACTLS_GP_LKG_AMT END) AS T3_EAC_ACTLS_GP_LKG_AMT, SUM(CASE WHEN F.TIER_EAC_LKG_NUM = 3 THEN F.TCV_AMT END) AS T3_TCV_PLN_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.OVERRUN_COST_AMT END) AS T3_OVERRUN_COST_AMT, SUM(CASE WHEN F.TIER_COST_OVERRUN_NUM = 3 THEN F.LST_3_MTH_COST_APRVD_AMT END) AS T3_LST_3_MTH_COST_APRVD_AMT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY,PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.MTH_KEY = D.MTH_KEY AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' GROUP BY GEO1.GEO_LVL1_NM, D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO   ) SELECT TD.LABEL, TD.DATA_LOAD_DESC AS DATA_LOAD_DATE, TD.CURR_ACCT_YR AS ACCT_YR, TD.CURR_ACCT_MO AS ACCT_MO, COALESCE(GC.T0_GP_LKG_P_PROJ_NUM_CNT,0) AS T0_GP_LKG_WORK_NUM_CNT, COALESCE(GC.T1_GP_LKG_P_PROJ_NUM_CNT,0) AS T1_GP_LKG_WORK_NUM_CNT, COALESCE(GC.T2_GP_LKG_P_PROJ_NUM_CNT,0) AS T2_GP_LKG_WORK_NUM_CNT, COALESCE(GC.T3_GP_LKG_P_PROJ_NUM_CNT,0) AS T3_GP_LKG_WORK_NUM_CNT, COALESCE(EC.T0_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS T0_EAC_LKG_WORK_NUM_CNT, COALESCE(EC.T1_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS T1_EAC_LKG_WORK_NUM_CNT, COALESCE(EC.T2_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS T2_EAC_LKG_WORK_NUM_CNT, COALESCE(EC.T3_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS T3_EAC_LKG_WORK_NUM_CNT, COALESCE(CRC.T0_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS T0_COST_OVERRUN_WORK_NUM_CNT, COALESCE(CRC.T1_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS T1_COST_OVERRUN_WORK_NUM_CNT, COALESCE(CRC.T2_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS T2_COST_OVERRUN_WORK_NUM_CNT, COALESCE(CRC.T3_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS T3_COST_OVERRUN_WORK_NUM_CNT, COALESCE(PRI_GC.PRI_T0_GP_LKG_P_PROJ_NUM_CNT,0) AS PRI_T0_GP_LKG_WORK_NUM_CNT, COALESCE(PRI_GC.PRI_T1_GP_LKG_P_PROJ_NUM_CNT,0) AS PRI_T1_GP_LKG_WORK_NUM_CNT, COALESCE(PRI_GC.PRI_T2_GP_LKG_P_PROJ_NUM_CNT,0) AS PRI_T2_GP_LKG_WORK_NUM_CNT, COALESCE(PRI_GC.PRI_T3_GP_LKG_P_PROJ_NUM_CNT,0) AS PRI_T3_GP_LKG_WORK_NUM_CNT, COALESCE(PRI_EC.PRI_T0_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS PRI_T0_EAC_LKG_WORK_NUM_CNT, COALESCE(PRI_EC.PRI_T1_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS PRI_T1_EAC_LKG_WORK_NUM_CNT, COALESCE(PRI_EC.PRI_T2_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS PRI_T2_EAC_LKG_WORK_NUM_CNT, COALESCE(PRI_EC.PRI_T3_EAC_ACTLS_GP_LKG_AMT_P_PROJ_NUM_CNT,0) AS PRI_T3_EAC_LKG_WORK_NUM_CNT, COALESCE(PRI_CRC.PRI_T0_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS PRI_T0_COST_OVERRUN_WORK_NUM_CNT, COALESCE(PRI_CRC.PRI_T1_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS PRI_T1_COST_OVERRUN_WORK_NUM_CNT, COALESCE(PRI_CRC.PRI_T2_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS PRI_T2_COST_OVERRUN_WORK_NUM_CNT, COALESCE(PRI_CRC.PRI_T3_OVERRUN_COST_AMT_P_PROJ_NUM_CNT,0) AS PRI_T3_COST_OVERRUN_WORK_NUM_CNT, COALESCE(TD.T0_CQ_GP_LKG_AC_AMT,0.0) AS T0_CQ_GP_LKG, COALESCE(TD.T0_CQ_APRVD_REV_AMT,0.0) AS T0_CQ_AP_REV, COALESCE(TD.T0_EAC_ACTLS_GP_LKG_AMT,0.0) AS T0_EAC_LKG, COALESCE(TD.T0_TCV_PLN_AMT,0.0) AS T0_TCV_PLAN_RT_USD, COALESCE(TD.T0_OVERRUN_COST_AMT,0.0) AS T0_COST_OVERRUN, COALESCE(TD.T0_LST_3_MTH_COST_APRVD_AMT,0.0) AS T0_AP_LAST_3MO_COST, COALESCE(TD.T1_CQ_GP_LKG_AC_AMT,0.0) AS T1_CQ_GP_LKG, COALESCE(TD.T1_CQ_APRVD_REV_AMT,0.0) AS T1_CQ_AP_REV, COALESCE(TD.T1_EAC_ACTLS_GP_LKG_AMT,0.0) AS T1_EAC_LKG, COALESCE(TD.T1_TCV_PLN_AMT,0.0) AS T1_TCV_PLAN_RT_USD, COALESCE(TD.T1_OVERRUN_COST_AMT,0.0) AS T1_COST_OVERRUN, COALESCE(TD.T1_LST_3_MTH_COST_APRVD_AMT,0.0) AS T1_AP_LAST_3MO_COST, COALESCE(TD.T2_CQ_GP_LKG_AC_AMT,0.0) AS T2_CQ_GP_LKG, COALESCE(TD.T2_CQ_APRVD_REV_AMT,0.0) AS T2_CQ_AP_REV, COALESCE(TD.T2_EAC_ACTLS_GP_LKG_AMT,0.0) AS T2_EAC_LKG, COALESCE(TD.T2_TCV_PLN_AMT,0.0) AS T2_TCV_PLAN_RT_USD, COALESCE(TD.T2_OVERRUN_COST_AMT,0.0) AS T2_COST_OVERRUN, COALESCE(TD.T2_LST_3_MTH_COST_APRVD_AMT,0.0) AS T2_AP_LAST_3MO_COST, COALESCE(TD.T3_CQ_GP_LKG_AC_AMT,0.0) AS T3_CQ_GP_LKG, COALESCE(TD.T3_CQ_APRVD_REV_AMT,0.0) AS T3_CQ_AP_REV, COALESCE(TD.T3_EAC_ACTLS_GP_LKG_AMT,0.0) AS T3_EAC_LKG, COALESCE(TD.T3_TCV_PLN_AMT,0.0) AS T3_TCV_PLAN_RT_USD, COALESCE(TD.T3_OVERRUN_COST_AMT,0.0) AS T3_COST_OVERRUN, COALESCE(TD.T3_LST_3_MTH_COST_APRVD_AMT,0.0) AS T3_AP_LAST_3MO_COST FROM STATUS_DATA TD LEFT JOIN OVERRUN_COST_AMT_WKNUM_CNT CRC ON TD.LABEL = CRC.LABEL LEFT JOIN PRI_OVERRUN_COST_AMT_WKNUM_CNT PRI_CRC ON TD.LABEL = PRI_CRC.LABEL LEFT JOIN GP_LKG_WKNUM_CNT GC ON TD.LABEL = GC.LABEL LEFT JOIN PRI_GP_LKG_WKNUM_CNT PRI_GC ON TD.LABEL = PRI_GC.LABEL LEFT JOIN EAC_ACTLS_GP_LKG_AMT_WKNUM_CNT EC ON TD.LABEL = EC.LABEL LEFT JOIN PRI_EAC_ACTLS_GP_LKG_AMT_WKNUM_CNT PRI_EC ON TD.LABEL = PRI_EC.LABEL\",\"description\":\"Service to pull data for the first level tiered leakage report by the specified business attributes and the specified filters Versiosn 2\"}",
      "t2ReportLeakage12MthTrend": "{\"name\":\"t2ReportLeakage12MthTrend\",\"sqlTemplate\":\"SELECT current timestamp from sysibm.sysdummy1 \",\"description\":\"Service to pull data for Tier 2 Report Leakage 12 Month Trend \"}",
      "t2ReportVariance": "{\"name\":\"t2ReportVariance\",\"description\":\"Service to pull data for Tier 2 Report Leakage Variance\",\"sqlTemplate\":\"WITH GROUPED_DATE AS( SELECT CASE WHEN(D.CURR_ACCT_MO) IN ('01','02','03') THEN '12' WHEN (D.CURR_ACCT_MO) IN ('04','05','06') THEN '03' WHEN (D.CURR_ACCT_MO) IN ('07','08','09') THEN '06' ELSE '09' END AS GROUPED_MO, CASE WHEN (D.CURR_ACCT_MO) IN ('01','02','03') THEN D.CURR_ACCT_YR - 1 ELSE D.CURR_ACCT_YR END AS GROUPED_YR FROM PHD.ACCT_DROP D WHERE D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = 'CURRENT') SELECT rtrim({busAttr}) AS CATEGORY, SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_MO = D.CURR_ACCT_YR) THEN COALESCE(F.CQ_GP_LKG_AC_AMT, 0.0) ELSE 0.0 END) - SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_MO = D.CURR_ACCT_YR - 1) THEN COALESCE(F.CQ_GP_LKG_AC_AMT, 0.0) ELSE 0.0 END) AS CQ_GP_LKG_YtY, SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) THEN COALESCE(F.CQ_GP_LKG_AC_AMT, 0.0) ELSE 0.0 END) - SUM( CASE WHEN ( F.CURR_ACCT_MO = GROUPED_MO AND F.CURR_ACCT_YR = GROUPED_YR) THEN COALESCE(F.CQ_GP_LKG_AC_AMT, 0.0) ELSE 0.0 END) AS CQ_GP_LKG_QtQ, SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) THEN COALESCE(F.EAC_ACTLS_GP_LKG_AMT, 0.0) ELSE 0.0 END) - SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR - 1) THEN COALESCE(F.EAC_ACTLS_GP_LKG_AMT, 0.0) ELSE 0.0 END) AS EAC_LKG_YtY, SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) THEN COALESCE(F.EAC_ACTLS_GP_LKG_AMT, 0.0) ELSE 0.0 END) - SUM( CASE WHEN ( F.CURR_ACCT_MO = GROUPED_MO AND F.CURR_ACCT_YR = GROUPED_YR) THEN COALESCE(F.EAC_ACTLS_GP_LKG_AMT, 0.0) ELSE 0.0 END) AS EAC_LKG_QtQ, SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) THEN COALESCE(F.OVERRUN_COST_AMT, 0.0) ELSE 0.0 END) - SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR - 1) THEN COALESCE(F.OVERRUN_COST_AMT, 0.0) ELSE 0.0 END) AS COST_OVERRUN_YtY, SUM( CASE WHEN ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) THEN COALESCE(F.OVERRUN_COST_AMT, 0.0) ELSE 0.0 END) - SUM( CASE WHEN ( F.CURR_ACCT_MO = GROUPED_MO AND F.CURR_ACCT_YR = GROUPED_YR) THEN COALESCE(F.OVERRUN_COST_AMT, 0.0) ELSE 0.0 END) AS COST_OVERRUN_QtQ FROM ( SELECT F.*, 'Total' AS TOTAL FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F) F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY, PHD.ACCT_DROP D, GROUPED_DATE GD {filter} <filter?AND:WHERE> ((A.ACTIVE_TYP_CD = 'A' AND '{status}' LIKE '' ) OR ((A.ACTIVE_TYP_CD ='A' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC' )) AND D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = 'CURRENT' AND F.MTH_KEY = D.MTH_KEY GROUP BY {busAttr} \"}",

      "t2TopContributorsQtrGpLeakageContract": "{\"name\":\"t2TopContributorsQtrGpLeakageContract\",\"sqlTemplate\":\"SELECT rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, rtrim(A.ACTIVE_TYP_CD) AS STATUS_ABBR, rtrim(SL.SVC_LINE_CD) AS SVC_LINE_ABBR, rtrim(GP.GRTH_PLFM_CD) AS GROWTH_PLATFORM_ABBR, rtrim(S.SCTR_GB_CD) AS SECTOR_ABBR, RTRIM(CU.CUST_NM) AS CUSTOMER_NM, RTRIM(CN.CNTRCT_DESC) AS DESCRIPTION, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,1) || '. ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) +1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS PE_NOTES_ID, F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, D.DATA_LOAD_DESC AS DATA_LOAD_DATE, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT) END AS COST_OVERRUN_3MO_VAR_PCT, CASE WHEN COALESCE(SUM(F.TCV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.TCV_CB_AMT),0.0) AS FLOAT) END AS EAC_TO_PLAN, COALESCE(SUM(F.TCV_CB_AMT),0.0) AS TCV, COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_REV_AC_AMT ELSE F.CQ_APRVD_REV_AMT END),0.0) AS CQ_GP_PLAN, COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_REV_AC_PV_AMT ELSE F.CQ_REV_PV_AMT END),0.0) AS CQ_GP_ACTUAL, CASE WHEN (COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_AC_PV_PCT ELSE F.CQ_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0)) < 0 AND CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_AC_PV_PCT ELSE F.CQ_GP_PV_PCT END IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_AC_PV_PCT ELSE F.CQ_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0) ELSE 0.0 END AS CQ_GP_LKG_VARIANCE_PCT, COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END),0.0) AS CQ_GP_LKG_VARIANCE FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = 'CURRENT' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY CN.CNTRCT_NUM, CN.CNTRCT_DESC, A.ACTIVE_TYP_CD, SL.SVC_LINE_CD, GP.GRTH_PLFM_CD, S.SCTR_GB_CD, CU.CUST_NM, CN.PE_NOTES_ID, F.CURR_ACCT_MO, F.CURR_ACCT_YR, D.DATA_LOAD_DESC, F.CQ_APRVD_GP_PCT, F.CQ_APRVD_GP_AC_PCT, F.CQ_GP_AC_PV_PCT, F.CQ_GP_PV_PCT ORDER BY CQ_GP_LKG_VARIANCE ASC FETCH FIRST 30 ROWS ONLY \"}",
      "t2TopContributorsQtrGpLeakageWorkNumber": "{\"name\":\"t2TopContributorsQtrGpLeakageWorkNumber\",\"sqlTemplate\":\"SELECT rtrim(P.PROJ_NUM) AS WORK_NUM, rtrim(A.ACTIVE_TYP_CD) AS STATUS_ABBR, rtrim(SL.SVC_LINE_CD) AS SVC_LINE_ABBR, rtrim(GP.GRTH_PLFM_CD) AS GROWTH_PLATFORM_ABBR, rtrim(S.SCTR_GB_CD) AS SECTOR_ABBR, rtrim(CU.CUST_NM) AS CUSTOMER_NM, rtrim(P.PROJ_DESC) AS DESCRIPTION, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (P.PE_NOTES_ID,1,1) || '. ' || SUBSTR (P.PE_NOTES_ID,(LOCATE (' ',P.PE_NOTES_ID) +1),((LOCATE ('/',P.PE_NOTES_ID) - 1) -(LOCATE (' ',P.PE_NOTES_ID))))) END AS PE_NOTES_ID, F.CURR_ACCT_MO AS ACCT_MO, D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, CASE WHEN COALESCE(SUM(LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT) END AS COST_OVERRUN_3MO_VAR_PCT, CASE WHEN COALESCE(SUM(F.TCV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.TCV_AMT),0.0) AS FLOAT) END AS EAC_TO_PLAN, COALESCE(SUM(F.TCV_AMT),0.0) AS TCV, COALESCE(SUM(CQ_APRVD_REV_AMT),0.0) AS CQ_GP_PLAN, COALESCE(SUM(CQ_REV_AC_PV_AMT),0.0) AS CQ_GP_ACTUAL, CASE WHEN (COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0)) < 0 AND CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0) ELSE 0.0 END AS CQ_GP_LKG_VARIANCE_PCT, COALESCE(SUM(CQ_GP_LKG_AC_AMT),0.0) AS CQ_GP_LKG_VARIANCE FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO1 ON GEO1.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY P.PROJ_NUM, A.ACTIVE_TYP_CD, SL.SVC_LINE_CD, GP.GRTH_PLFM_CD, S.SCTR_GB_CD, CU.CUST_NM, P.PROJ_DESC, P.PE_NOTES_ID, F.CURR_ACCT_MO, F.CURR_ACCT_YR, D.DATA_LOAD_DESC, F.CQ_APRVD_GP_PCT, F.CQ_APRVD_GP_AC_PCT, F.CQ_ACTLS_GP_AC_PV_PCT, F.CQ_ACTLS_GP_PV_PCT ORDER BY CQ_GP_LKG_VARIANCE ASC FETCH FIRST 30 ROWS ONLY \"}",
      "t2TopContributorsEac2PlanContract": "{\"name\":\"t2TopContributorsEac2PlanContract\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, rtrim(A.ACTIVE_TYP_CD) AS STATUS_ABBR, rtrim(SL.SVC_LINE_CD) AS SVC_LINE_ABBR, rtrim(GP.GRTH_PLFM_CD) AS GROWTH_PLATFORM_ABBR, rtrim(S.SCTR_GB_CD) AS SECTOR_ABBR, rtrim(CU.CUST_NM) AS CUSTOMER_NM, rtrim(CN.CNTRCT_DESC) AS C_DESC, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,1) || '. ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) +1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS C_BPE, CASE WHEN COALESCE(F.CQ_REV_AC_PV_AMT,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (F.CQ_GP_LKG_AC_AMT),0.0) AS FLOAT)*ABS(CAST(COALESCE(F.CQ_GP_LKG_AC_AMT,0.0) AS FLOAT) / CAST(COALESCE(F.CQ_REV_AC_PV_AMT,0.0) AS FLOAT)) END AS QTR_GP_LKG, CASE WHEN COALESCE(F.LST_3_MTH_COST_APRVD_AMT,0.0) = 0.00 THEN NULL ELSE (CAST(COALESCE(F.OVERRUN_COST_AMT,0.0) AS FLOAT) / CAST(COALESCE(F.LST_3_MTH_COST_APRVD_AMT,0.0) AS FLOAT)) END AS COST_OVERRUN, F.TCV_CB_AMT AS TCV_PLAN_RT_USD, F.APRVD_GP_PCT AS EAC_TO_PLAN_PLAN, CASE WHEN (F.APRVD_REV_AMT) = 0.00 OR (F.TCV_CB_AMT) = 0.00 THEN NULL ELSE CAST(F.APRVD_GP_AMT AS FLOAT) / CAST(F.APRVD_REV_AMT AS FLOAT) +(CAST(F.EAC_ACTLS_GP_LKG_AMT AS FLOAT) / CAST(F.TCV_CB_AMT AS FLOAT)) END AS EAC_TO_PLAN_ACT, CASE WHEN (COALESCE(F.CQ_PV_GP_AC_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0)) < 0 AND CQ_PV_GP_AC_PCT IS NOT NULL AND CQ_APRVD_GP_AC_PCT IS NOT NULL THEN COALESCE(F.CQ_PV_GP_AC_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0) ELSE 0.0 END AS VAR_PERC, F.EAC_ACTLS_GP_LKG_AMT AS EAC_TO_PLAN_VAR FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' ORDER BY (F.EAC_ACTLS_GP_LKG_AMT) ASC FETCH FIRST 30 ROWS ONLY \",\"description\":\"Service to pull data for the tiered leakage report top contributers by contract number\"}",
      "t2TopContributorsEac2PlanWorkNumber": "{\"name\":\"t2TopContributorsEac2PlanWorkNumber\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, rtrim(P.PROJ_NUM) AS WORK_NUM, rtrim(A.ACTIVE_TYP_CD) AS STATUS_ABBR, rtrim(SL.SVC_LINE_CD) AS SVC_LINE_ABBR, rtrim(GP.GRTH_PLFM_CD) AS GROWTH_PLATFORM_ABBR, rtrim(S.SCTR_GB_CD) AS SECTOR_ABBR, rtrim(CU.CUST_NM) AS CUSTOMER_NM, rtrim(P.PROJ_DESC) AS W_DESC, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (P.PE_NOTES_ID,1,1) || '. ' || SUBSTR (P.PE_NOTES_ID,(LOCATE (' ',P.PE_NOTES_ID) +1),((LOCATE ('/',P.PE_NOTES_ID) - 1) -(LOCATE (' ',P.PE_NOTES_ID))))) END AS PE_NOTES_ID, CASE WHEN (COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0)) < 0 AND F.CQ_GP_AC_PV_PCT IS NOT NULL AND F.CQ_APRVD_GP_AC_PCT IS NOT NULL THEN COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0) ELSE 0.0 END AS QTR_GP_LKG, CASE WHEN (F.LST_3_MTH_COST_APRVD_AMT = 0.00) THEN NULL ELSE (CAST(F.OVERRUN_COST_AMT AS FLOAT) / CAST(F.LST_3_MTH_COST_APRVD_AMT AS FLOAT)) END AS COST_OVERRUN, F.TCV_AMT AS TCV_PLAN_RT_USD, F.APRVD_GP_PCT AS EAC_TO_PLAN_PLAN, F.EAC_ACTLS_GP_PCT AS EAC_TO_PLAN_ACT, F.EAC_ACTLS_GP_LKG_AMT AS EAC_LKGT, CASE WHEN F.TCV_AMT = 0.00 THEN NULL ELSE CAST(F.EAC_ACTLS_GP_LKG_AMT AS FLOAT) / CAST(F.TCV_AMT AS FLOAT) END AS VAR_PERC, F.EAC_ACTLS_GP_LKG_AMT AS EAC_TO_PLAN_VAR FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND F.INVLD_PC_FLG = 'N' AND D.GRAPH_NM = 'GP_L2_GR1' ORDER BY F.EAC_ACTLS_GP_LKG_AMT ASC FETCH FIRST 30 ROWS ONLY \",\"description\":\"Service to pull data for the tiered leakage report top contributers by work number \"}",
      "t2TopContributorsCostOverrunContract": "{\"name\":\"t2TopContributorsCostOverrunContract\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, rtrim(A.ACTIVE_TYP_CD) AS STATUS_ABBR, rtrim(SL.SVC_LINE_CD) AS SVC_LINE_ABBR, rtrim(GP.GRTH_PLFM_CD) AS GROWTH_PLATFORM_ABBR, rtrim(S.SCTR_GB_CD) AS SECTOR_ABBR, rtrim(CU.CUST_NM) AS CUSTOMER_NM, rtrim(CN.CNTRCT_DESC) AS DESCRIPTION, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,1) || '. ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) +1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS PE_NOTES_ID, CASE WHEN (COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0)) < 0 AND F.CQ_GP_AC_PV_PCT IS NOT NULL AND F.CQ_APRVD_GP_AC_PCT IS NOT NULL THEN COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0) ELSE 0.0 END AS QUARTER_GP_LEAKAGE, CASE WHEN COALESCE(F.TCV_CB_AMT,0.0) = 0.0 THEN 0.0 ELSE COALESCE(CAST(F.EAC_ACTLS_GP_LKG_AMT AS FLOAT) / CAST(F.TCV_CB_AMT AS FLOAT),0.0) END AS EAC_TO_PLAN, F.TCV_CB_AMT AS TCV_PLAN_RT_USD, (F.LST_3_MTH_ACTLS_COST_AMT + F.OVERRUN_COST_AMT) AS LAST_3MO_COST_PLAN, F.LST_3_MTH_ACTLS_COST_AMT AS LAST_3MO_COST_ACT, CASE WHEN (COALESCE(F.LST_3_MTH_ACTLS_COST_AMT,0.0) +COALESCE(F.OVERRUN_COST_AMT,0.0)) = 0.0 THEN 0.0 ELSE COALESCE(CAST(F.OVERRUN_COST_AMT AS FLOAT) / CAST((F.LST_3_MTH_ACTLS_COST_AMT) +(F.OVERRUN_COST_AMT) AS FLOAT),0.0) END AS THREE_MO_COST_VAR, F.OVERRUN_COST_AMT AS COST_OVERRUN FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' ORDER BY COST_OVERRUN ASC FETCH FIRST 30 ROWS ONLY \",\"description\":\"\"}",
      "t2TopContributorsCostOverrunWorkNumber": "{\"name\":\"t2TopContributorsCostOverrunWorkNumber\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, rtrim(P.PROJ_NUM) AS WORK_NUM, rtrim(A.ACTIVE_TYP_CD) AS STATUS_ABBR, rtrim(SL.SVC_LINE_CD) AS SVC_LINE_ABBR, rtrim(GP.GRTH_PLFM_CD) AS GROWTH_PLATFORM_ABBR, rtrim(S.SCTR_GB_CD) AS SECTOR_ABBR, rtrim(CU.CUST_NM) AS CUSTOMER_NM, rtrim(P.PROJ_DESC) AS DESCRIPTION, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (P.PE_NOTES_ID,1,1) || '. ' || SUBSTR (P.PE_NOTES_ID,(LOCATE (' ',P.PE_NOTES_ID) +1),((LOCATE ('/',P.PE_NOTES_ID) - 1) -(LOCATE (' ',P.PE_NOTES_ID))))) END AS PE_NOTES_ID, CASE WHEN (COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0)) < 0 AND F.CQ_GP_AC_PV_PCT IS NOT NULL AND F.CQ_APRVD_GP_AC_PCT IS NOT NULL THEN COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0) ELSE 0.0 END AS QUARTER_GP_LEAKAGE, CASE WHEN COALESCE(F.TCV_AMT,0.0) = 0.0 THEN 0.0 ELSE COALESCE(CAST(F.EAC_ACTLS_GP_LKG_AMT AS FLOAT) / CAST(F.TCV_AMT AS FLOAT),0.0) END AS EAC_TO_PLAN, F.TCV_AMT AS TCV_PLAN_RT_USD, F.LST_3_MTH_COST_APRVD_AMT AS LAST_3MO_COST_PLAN, F.LST_3_MTH_ACTLS_COST_AMT AS LAST_3MO_COST_ACT, CASE WHEN COALESCE(F.LST_3_MTH_COST_APRVD_AMT,0.0) = 0.0 THEN 0.0 ELSE COALESCE(CAST(F.OVERRUN_COST_AMT AS FLOAT) / CAST(F.LST_3_MTH_COST_APRVD_AMT AS FLOAT),0.0) END AS THREE_MO_COST_VAR, F.OVERRUN_COST_AMT AS COST_OVERRUN FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND A.ACTIVE_TYP_CD = 'A' AND F.INVLD_PC_CB_FLG = 'N' AND D.GRAPH_NM = 'GP_L2_GR1' ORDER BY F.OVERRUN_COST_AMT ASC FETCH FIRST 30 ROWS ONLY \",\"description\":\"Cost Overrun TC details \"}",
      "t2TopContributorsContractPopupDetail": "{\"name\":\"t2TopContributorsContractPopupDetail\",\"sqlTemplate\":\"SELECT rtrim(CN.CNTRCT_NUM) AS NUMBER, 'contract' AS TYPE, rtrim(A.ACTIVE_TYP_DESC) AS STATUS, rtrim(SL.SVC_LINE_NM) AS SERVICE_LINE, rtrim(GP.GRTH_PLFM_DESC) AS GROWTH_PLATFORM, rtrim(S.SCTR_GB_NM) AS SECTOR, rtrim(CU.CUST_NM) AS CUSTOMER_NM, rtrim(CN.CNTRCT_DESC) AS PROJECT, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN rtrim(SUBSTR (CN.PE_NOTES_ID,1,LOCATE (' ',CN.PE_NOTES_ID) - 1) || ' ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) + 1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS BRAND_PE, CN.STRTD_DT AS START_DATE, CN.END_DT AS END_DATE, rtrim(GEO1.GEO_LVL1_NM) AS GEOGRAPHY, rtrim(GEO2.GEO_LVL2_NM) AS REGION, rtrim(CTRY.CTRY_NM) AS COUNTRY, CASE WHEN COALESCE(SUM(F.CQ_REV_AC_PV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.CQ_GP_LKG_AC_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.CQ_GP_LKG_AC_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.CQ_REV_AC_PV_AMT),0.0) AS FLOAT)) END AS QTD_GP_LEAKAGE_PCT, COALESCE(SUM(F.CQ_GP_LKG_AC_AMT),0.0) AS QTD_GP_LEAKAGE, CASE WHEN COALESCE(SUM(F.TCV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.TCV_CB_AMT),0.0) AS FLOAT)) END AS EAC_TO_PLAN, SUM(F.TCV_CB_AMT) AS TCV, SUM(F.LST_3_MTH_COST_APRVD_AMT) AS PLAN, SUM(F.LST_3_MTH_ACTLS_COST_AMT) AS ACTUAL, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT)) END AS VARIANCE_PERCENTAGE, SUM(F.OVERRUN_COST_AMT) AS VARIANCE, CN.PHD_URL AS IPPF_URL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY WHERE D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' AND CNTRCT_NUM = '{cntrctNum}' GROUP BY CN.CNTRCT_NUM, A.ACTIVE_TYP_DESC, SL.SVC_LINE_NM, GP.GRTH_PLFM_DESC, S.SCTR_GB_NM, CU.CUST_NM, CN.CNTRCT_DESC, CN.PE_NOTES_ID, CN.STRTD_DT, CN.END_DT, GEO1.GEO_LVL1_NM, GEO2.GEO_LVL2_NM, CTRY.CTRY_NM, CN.PHD_URL \",\"description\":\"Contract Detail\"}",
      "t2TopContributorsWorkPopupDetail": "{\"name\":\"t2TopContributorsWorkPopupDetail\",\"sqlTemplate\":\"SELECT rtrim(P.PROJ_NUM) AS NUMBER, 'work number' AS TYPE, rtrim(CN.CNTRCT_NUM) AS CONTRACT, rtrim(A.ACTIVE_TYP_DESC) AS STATUS, rtrim(SL.SVC_LINE_NM) AS SERVICE_LINE, rtrim(GP.GRTH_PLFM_DESC) AS GROWTH_PLATFORM, rtrim(S.SCTR_GB_NM) AS SECTOR, rtrim(CU.CUST_NM) AS CUSTOMER, rtrim(P.PROJ_DESC) AS PROJECT, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (P.PE_NOTES_ID,1,LOCATE (' ',P.PE_NOTES_ID) - 1) || ' ' || SUBSTR (P.PE_NOTES_ID,(LOCATE (' ',P.PE_NOTES_ID) + 1),((LOCATE ('/',P.PE_NOTES_ID) - 1) -(LOCATE (' ',P.PE_NOTES_ID))))) END AS BRAND_PE, P.STRT_DT AS START_DATE, P.END_DT AS END_DATE, P.APRV_PLN_DT AS APPR_PLAN_DATE, rtrim(G1.GEO_LVL1_NM) AS GEOGRAPHY, rtrim(G2.GEO_LVL2_NM) AS REGION, rtrim(G4.CTRY_NM) AS COUNTRY, CASE WHEN COALESCE(SUM(CQ_REV_AC_PV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(CQ_GP_LKG_AC_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(CQ_GP_LKG_AC_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(CQ_REV_AC_PV_AMT),0.0) AS FLOAT)) END AS QTD_GP_LEAKAGE, COALESCE(SUM(CQ_GP_LKG_AC_AMT),0.0) AS QTD_GP_LEAKAGE, CASE WHEN COALESCE(SUM(TCV.TCV_PLN_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(TCV.TCV_PLN_AMT),0.0) AS FLOAT)) END AS EAC_TO_PLAN, SUM(TCV.TCV_PLN_AMT) AS TCV, SUM(LST_3_MTH_COST_APRVD_AMT) AS PLAN, SUM(LST_3_MTH_ACTLS_COST_AMT) AS ACTUAL, CASE WHEN COALESCE(SUM(LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT)) END AS VARIANCE_PERCENTAGE, SUM(OVERRUN_COST_AMT) AS VARIANCE, CN.PHD_URL AS IPPF_URL FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM G1 ON G1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM G2 ON G2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM G4 ON G4.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.TCV_SNAP_FACT TCV ON F.PROJ_KEY = TCV.PROJ_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY WHERE D.YR_MO_KEY = '{yrMoKey}' AND P.PROJ_NUM = '{workNum}' AND D.GRAPH_NM = 'GP_L2_GR1' GROUP BY P.PROJ_NUM, CN.CNTRCT_NUM, A.ACTIVE_TYP_DESC, SL.SVC_LINE_NM, GP.GRTH_PLFM_DESC, S.SCTR_GB_NM, CU.CUST_NM, P.PROJ_DESC, P.PE_NOTES_ID, P.STRT_DT, P.END_DT, P.APRV_PLN_DT, G1.GEO_LVL1_NM, G2.GEO_LVL2_NM, G4.CTRY_NM, CN.PHD_URL ;\",\"description\":\"Work Number Detail\"}",

      "t2TieredLeakContract": "{\"name\":\"t2TieredLeakContract\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC as DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.CNTRCT_DESC AS DESCRIPTION, RTRIM(A.ACTIVE_TYP_CD) AS STATUS_ABBR, GEO2.GEO_LVL2_KEY AS MKT_ABBR, S.SCTR_GB_CD AS SECTOR_ABBR, CN.SGND_DT AS CNTRCT_SGND_DT, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,1) || '. ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) + 1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS PE_NOTES_ID, '--' AS AP_DATE, COALESCE(SUM(F.PC_REV_AMT),0.0) AS PC_PLAN_REV_A, COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END),0.0) AS CQ_GP_LKG, CASE WHEN (COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END),0.0) - COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END,0.0)) < 0 AND SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END) IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END),0.0) - COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END,0.0) ELSE 0.0 END AS CQ_GP_LKG_PCT, F.TIER_GP_LKG_NUM, COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS EAC_LKG, CASE WHEN COALESCE(SUM(F.TCV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(SUM(F.TCV_CB_AMT) AS FLOAT) END AS EAC_LKG_PCT, F.TIER_EAC_LKG_NUM, COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS COST_OVERRUN, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(SUM(F.LST_3_MTH_COST_APRVD_AMT) AS FLOAT) END AS COST_OVERRUN_PCT, F.TIER_COST_OVERRUN_NUM as TIER_COST_OVERRUN_NUM FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE '') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, CN.CNTRCT_NUM, CN.CNTRCT_DESC, A.ACTIVE_TYP_CD, GEO2.GEO_LVL2_KEY, S.SCTR_GB_CD, CN.SGND_DT, CN.PE_NOTES_ID, F.TIER_GP_LKG_NUM, F.TIER_EAC_LKG_NUM, F.TIER_COST_OVERRUN_NUM, F.CQ_APRVD_GP_AC_PCT, F.CQ_ACTLS_GP_AC_PV_PCT, F.CQ_ACTLS_GP_PV_PCT, F.CQ_APRVD_GP_PCT, CN.PE_NOTES_ID ORDER BY {orderColumn} {orderDirection} FETCH FIRST 30 ROWS ONLY \",\"description\":\"Tiered leakage contract \"}",
      "t2TieredLeakWorkNum": "{\"name\":\"t2TieredLeakWorkNum\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, RTRIM(P.PROJ_NUM) AS WORK_NUM, CN.CNTRCT_DESC AS DESCRIPTION, RTRIM(A.ACTIVE_TYP_CD) AS STATUS_ABBR, GEO2.GEO_LVL2_CD AS MKT_ABBR, S.SCTR_GB_CD AS SECTOR_ABBR, CN.SGND_DT AS CNTRCT_SGND_DT, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN(( LOCATE('/', P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ( ( LOCATE('/', P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM(SUBSTR(P.PE_NOTES_ID, 1, 1) || '. ' || SUBSTR(P.PE_NOTES_ID, (LOCATE(' ', P.PE_NOTES_ID) + 1), ((LOCATE('/', P.PE_NOTES_ID) - 1) - (LOCATE(' ', P.PE_NOTES_ID))))) END AS PE_NOTES_ID, P.APRV_PLN_DT AS APPR_PLAN_DATE, COALESCE(F.PC_REV_AMT, 0.0) AS PC_PLAN_REV, COALESCE(F.CQ_GP_LKG_PV_AMT, 0.0) AS CQ_GP_LKG, CASE WHEN ( COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END, 0.0) - COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END, 0.0)) < 0 AND CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END, 0.0) - COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END, 0.0) ELSE 0.0 END AS CQ_GP_LKG_PCT, F.TIER_GP_LKG_NUM, COALESCE(F.EAC_ACTLS_GP_LKG_AMT, 0.0) AS EAC_LKG, CASE WHEN COALESCE(F.TCV_AMT, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(F.EAC_ACTLS_GP_LKG_AMT, 0.0) AS FLOAT) / CAST(F.TCV_AMT AS FLOAT) END AS EAC_LKG_PCT, F.TIER_EAC_LKG_NUM, COALESCE(F.OVERRUN_COST_AMT, 0.0) AS COST_OVERRUN, CASE WHEN COALESCE(F.LST_3_MTH_COST_APRVD_AMT, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(F.OVERRUN_COST_AMT, 0.0) AS FLOAT) / CAST(F.LST_3_MTH_COST_APRVD_AMT AS FLOAT) END AS COST_OVERRUN_PCT, F.TIER_COST_OVERRUN_NUM FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON F.GEO_LVL2_KEY = GEO2.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> RTRIM(CN.CNTRCT_NUM) LIKE '{cntrctNum}' AND F.CURR_ACCT_MO = D.CURR_ACCT_MO AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND ((A.ACTIVE_TYP_CD IN ('A') AND '{status}' LIKE '') OR (A.ACTIVE_TYP_CD IN ('A', 'C') AND '{status}' LIKE '_AC' )) GROUP BY D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, CN.CNTRCT_NUM, CN.CNTRCT_DESC, CN.SGND_DT, P.PROJ_NUM, P.POC_IND, F.PC_REV_AMT, A.ACTIVE_TYP_CD, GEO2.GEO_LVL2_CD, S.SCTR_GB_CD, D.ACCT_QTR_NUM, P.PE_NOTES_ID, P.APRV_PLN_DT, F.TIER_GP_LKG_NUM, F.TIER_EAC_LKG_NUM, F.TIER_COST_OVERRUN_NUM, F.CQ_APRVD_GP_AC_PCT, F.CQ_GP_LKG_PV_AMT, F.CQ_ACTLS_GP_AC_PV_PCT, F.CQ_ACTLS_GP_PV_PCT, F.CQ_APRVD_GP_PCT, F.EAC_ACTLS_GP_LKG_AMT, F.TCV_AMT, F.OVERRUN_COST_AMT, F.LST_3_MTH_COST_APRVD_AMT ORDER BY {orderColumn} {orderDirection} \",\"description\":\"Tiered Leakage work number \"}",
      "t2TieredLeakContractExport": "{\"name\":\"t2TieredLeakContractExport\",\"sqlTemplate\":\"SELECT rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.POC_IND AS CNTRCT_DESC, rtrim(GEO1.GEO_LVL1_NM) AS GEO_DESC, rtrim(GEO2.GEO_LVL2_NM) AS MKT_DESC, rtrim(CTRY.CTRY_NM) AS COUNTRY, rtrim(S.SCTR_GB_NM) AS SECTOR_DESC, rtrim(CTRY.CTRY_NM) AS growth_platform, rtrim(SL.SVC_LINE_NM) AS SERVICE_LINE, 'P.CLUST_NM' AS CLUSTER_NAME, CU.CUST_NM AS CUSTOMER, CN.SGND_DT AS CNTRCT_SGND_DT, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, rtrim(A.ACTIVE_TYP_CD) AS STATUS, COALESCE(SUM(F.TCV_CB_AMT),0.0) AS TCV, COALESCE(SUM(F.PC_REV_AMT),0.0) AS PC_PLAN_REV, COALESCE(SUM(F.PC_COST_AMT),0.0) AS PC_PLAN_COST, COALESCE(SUM(F.PC_GP_AMT),0.0) AS PC_GP, F.PC_GP_PCT AS PC_GP_PCT, COALESCE(SUM(F.EAC_ACTLS_REV_AMT),0.0) AS EAC_REV, COALESCE(SUM(F.EAC_ACTLS_COST_AMT),0.0) AS EAC_COST, COALESCE(SUM(F.EAC_ACTLS_GP_AMT),0.0) AS EAC_GP, SUM(F.EAC_ACTLS_GP_PCT) AS EAC_GP_PCT, COALESCE(SUM(F.APRVD_REV_AMT),0.0) AS AP_REV, COALESCE(SUM(F.APRVD_COST_AMT),0.0) AS AP_COST, COALESCE(SUM(F.APRVD_GP_AMT),0.0) AS AP_GP, SUM(F.APRVD_GP_PCT) AS AP_GP_PCT, COALESCE(SUM(F.ITD_ACTLS_REV_AMT),0.0) AS ITD_ACT_REV, COALESCE(SUM(F.ITD_ACTLS_COST_AMT),0.0) AS ITD_ACT_COST, COALESCE(SUM(F.ITD_ACTLS_GP_AMT),0.0) AS ITD_ACT_GP, F.ITD_ACTLS_GP_PCT AS ITD_ACT_GP_PCT, COALESCE(SUM(F.CQ_GP_LKG_AC_AMT),0.0) AS CQ_GP_LKG, CASE WHEN(COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0)) < 0 AND CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0) ELSE 0.0 END AS CQ_GP_LKG_PCT, SUM(F.TIER_GP_LKG_NUM) AS TIER_GP_LKG_NUM, COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS EAC_LKG, CASE WHEN COALESCE(SUM(F.TCV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.TCV_CB_AMT),0.0) AS FLOAT)) END AS EAC_LKG_PCT, F.TIER_EAC_LKG_NUM AS TIER_EAC_LKG_NUM, COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS COST_OVERRUN, CASE WHEN COALESCE(SUM(F.LST_3_MTH_ACTLS_COST_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.LST_3_MTH_ACTLS_COST_AMT),0.0) AS FLOAT)) END AS COST_OVERRUN_PCT, F.TIER_COST_OVERRUN_NUM AS TIER_COST_OVERRUN_NUM, COALESCE(SUM(F.ITD_TO_PC_LKG_AMT),0.0) AS ITD_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.ITD_ACTLS_REV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.ITD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(SUM(F.ITD_ACTLS_REV_CB_AMT) AS FLOAT) END AS ITD_TO_PC_PCT, COALESCE(SUM(F.FRCST_TO_PC_LKG_AMT),0.0) AS FC_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(F.FRCST_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.FRCST_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_TO_PC_PCT, COALESCE(SUM(F.YTD_TO_PC_LKG_AMT),0.0) AS YTD_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.YTD_ACTLS_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.YTD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(SUM(F.YTD_ACTLS_REV_AMT) AS FLOAT) END AS YTD_TO_PC_PCT, COALESCE(SUM(F.FRCST_TO_APRVD_LKG_AMT),0.0) AS FC_TO_AP_LKG, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(F.FRCST_TO_APRVD_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.FRCST_TO_APRVD_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_TO_AP_PCT, COALESCE(SUM(F.APRVD_TO_PC_LKG_AMT),0.0) AS AP_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(F.APRVD_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.APRVD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS AP_TO_PC_PCT, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY /*INNER JOIN PHD.PROJECT_DIM P ON F.CNTRCT_KEY = CN.CNTRCT_KEY*/ INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP SNAP ON SNAP.CURR_ACCT_YR = F.CURR_ACCT_YR AND SNAP.CURR_ACCT_MO = F.CURR_ACCT_MO AND SNAP.YR_MO_KEY = '{yrMoKey}' AND ( (A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE '') OR ( (A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) {filter} GROUP BY CN.CNTRCT_NUM, CN.POC_IND, GEO1.GEO_LVL1_NM, GEO2.GEO_LVL2_NM, CTRY.CTRY_NM, S.SCTR_GB_NM, GP.GRTH_PLFM_DESC, SL.SVC_LINE_NM, /*CN.CLUST_NM,*/ CU.CUST_NM, CN.SGND_DT, F.CURR_ACCT_YR, F.CURR_ACCT_MO, A.ACTIVE_TYP_CD, F.PC_GP_PCT, F.EAC_ACTLS_GP_PCT, F.ITD_ACTLS_GP_PCT, F.CQ_APRVD_GP_AC_PCT, F.CQ_APRVD_GP_PCT, F.CQ_ACTLS_GP_AC_PV_PCT, F.CQ_ACTLS_GP_PV_PCT, F.TIER_GP_LKG_NUM, F.TIER_EAC_LKG_NUM, F.TIER_COST_OVERRUN_NUM ORDER BY {orderColumn} {orderDirection} FETCH first 30 ROWS ONLY \",\"description\":\"Contract Expansion Export \"}",
      "t2TieredLeakWorkNumExport": "{\"name\":\"t2TieredLeakWorkNumExport\",\"sqlTemplate\":\"WITH worst30 AS( SELECT CN.CNTRCT_NUM, P.POC_IND, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, CASE WHEN '{status}' = '_AC' THEN CASE WHEN (COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0)) < 0.0 AND CQ_GP_AC_PV_PCT IS NOT NULL AND CQ_APRVD_GP_AC_PCT IS NOT NULL THEN (COALESCE(F.CQ_GP_AC_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_AC_PCT,0.0)) ELSE 0.0 END ELSE CASE WHEN (COALESCE(F.CQ_GP_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_PCT,0.0)) < 0.0 AND CQ_GP_PV_PCT IS NOT NULL AND CQ_APRVD_GP_PCT IS NOT NULL THEN (COALESCE(F.CQ_GP_PV_PCT,0.0) -COALESCE(F.CQ_APRVD_GP_PCT,0.0)) ELSE 0.0 END END AS CQ_GP_LKG_PCT, CASE WHEN COALESCE(SUM(F.TCV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.TCV_AMT),0.0) AS FLOAT)) END AS eac_lkg_pct, CASE WHEN COALESCE(SUM(F.LST_3_MTH_ACTLS_COST_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.LST_3_MTH_ACTLS_COST_AMT),0.0) AS FLOAT)) END AS cost_overrun_pct, COALESCE(SUM(OVERRUN_COST_AMT),0.0) AS cost_overrun, COALESCE(SUM(F.CQ_GP_LKG_AC_AMT),0.0) AS cq_gp_lkg, COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS EAC_LKG, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.CURR_ACCT_YR = F.CURR_ACCT_YR AND D.CURR_ACCT_MO = F.CURR_ACCT_MO AND D.YR_MO_KEY = '{yrMoKey}' AND ( (A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE '') OR ( (A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) {filter} GROUP BY CN.CNTRCT_NUM, P.POC_IND, F.CURR_ACCT_YR, F.CURR_ACCT_MO, F.CQ_APRVD_GP_PCT, F.CQ_APRVD_GP_AC_PCT, F.CQ_GP_PV_PCT, F.CQ_GP_AC_PV_PCT ORDER BY {orderColumn} {orderDirection} FETCH FIRST 30 ROWS ONLY) SELECT rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, WORST.POC_IND AS CNTRCT_DESC, rtrim(P.PROJ_NUM) AS WORK_NUM, P.POC_IND AS WKNUM_DESC, rtrim(GEO1.GEO_LVL1_NM) AS GEO_DESC, rtrim(GEO2.GEO_LVL2_NM) AS MKT_DESC, rtrim(CTRY.CTRY_NM) AS COUNTRY, S.SCTR_GB_NM AS SECTOR_DESC, GP.GRTH_PLFM_DESC AS GROWTH_PLATFORM, SL.SVC_LINE_NM AS SERVICE_LINE, P.CLUST_NM AS CLUSTER_NAME, C.CUST_NM AS CUSTOMER, CN.SGND_DT, F.CURR_ACCT_YR, F.CURR_ACCT_MO, rtrim(A.ACTIVE_TYP_CD) AS STATUS, COALESCE(SUM(F.TCV_AMT),0.0) AS TCV, COALESCE(SUM(F.PC_REV_AMT),0.0) AS PC_PLAN_REV, COALESCE(SUM(F.PC_COST_AMT),0.0) AS PC_PLAN_COST, COALESCE(SUM(F.PC_GP_AMT),0.0) AS PC_GP, F.PC_GP_PCT AS PC_GP_PCT, COALESCE(SUM(F.EAC_ACTLS_REV_AMT),0.0) AS EAC_REV, COALESCE(SUM(F.EAC_ACTLS_COST_AMT),0.0) AS EAC_COST, COALESCE(SUM(F.EAC_ACTLS_GP_AMT),0.0) AS EAC_GP, F.EAC_ACTLS_GP_PCT AS EAC_ACTLS_GP_PCT, COALESCE(SUM(F.APRVD_REV_AMT),0.0) AS AP_REV, COALESCE(SUM(F.APRVD_COST_AMT),0.0) AS AP_COST, COALESCE(SUM(F.APRVD_GP_AMT),0.0) AS AP_GP, F.CQ_APRVD_GP_PCT AS CQ_APRVD_GP_PCT, COALESCE(SUM(F.ITD_ACTLS_REV_AMT),0.0) AS ITD_ACT_REV, COALESCE(SUM(F.ITD_ACTLS_COST_AMT),0.0) AS ITD_ACT_COST, COALESCE(SUM(F.ITD_ACTLS_GP_AMT),0.0) AS ITD_ACT_GP, F.ITD_ACTLS_GP_PCT AS ITD_ACTLS_GP_PCT, COALESCE(SUM(F.CQ_GP_LKG_AC_AMT),0.0) AS CQ_GP_LKG, CASE WHEN (COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_AC_PV_PCT ELSE F.CQ_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0)) < 0.0 THEN (COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_AC_PV_PCT ELSE F.CQ_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0)) ELSE 0.0 END AS CQ_GP_LKG_PCT, WORST.CQ_GP_LKG_PCT AS CNTRCT_GP_LKG_PCT, F.TIER_GP_LKG_NUM AS TIER_GP_LKG_NUM, COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS EAC_LKG, CASE WHEN COALESCE(SUM(F.TCV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.TCV_AMT),0.0) AS FLOAT)) END AS eac_lkg_pct, F.TIER_EAC_LKG_NUM AS TIER_EAC_LKG_NUM, COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS COST_OVERRUN, CASE WHEN COALESCE(SUM(F.LST_3_MTH_ACTLS_COST_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.LST_3_MTH_ACTLS_COST_AMT),0.0) AS FLOAT)) END AS COST_OVERRUN_PCT, F.TIER_COST_OVERRUN_NUM AS TIER_COST_OVERRUN_NUM, COALESCE(SUM(F.ITD_TO_PC_LKG_AMT),0.0) AS ITD_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.ITD_ACTLS_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.ITD_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.ITD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.ITD_ACTLS_REV_AMT),0.0) AS FLOAT)) END AS ITD_TO_PC_PCT, COALESCE(SUM(F.FRCST_TO_PC_LKG_AMT),0.0) AS FC_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.FRCST_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.FRCST_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_TO_PC_PCT, COALESCE(SUM(F.YTD_TO_PC_LKG_AMT),0.0) AS YTD_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.YTD_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.YTD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS YTD_TO_PC_PCT, COALESCE(SUM(F.FRCST_TO_APRVD_LKG_AMT),0.0) AS FC_TO_AP_LKG, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.FRCST_TO_APRVD_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.FRCST_TO_APRVD_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_TO_AP_PCT, COALESCE(SUM(F.APRVD_TO_PC_LKG_AMT),0.0) AS ap_to_pc_lkg, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.APRVD_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.APRVD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS AP_TO_PC_PCT, WORST.SORT_KEY, WORST.SORT_DIRECTION FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.CUSTOMER_DIM C ON F.CUST_KEY = C.CUST_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN worst30 worst ON WORST.CNTRCT_NUM = CN.CNTRCT_NUM AND WORST.ACCT_YR = F.CURR_ACCT_YR AND WORST.ACCT_MO = F.CURR_ACCT_MO AND ( (A.ACTIVE_TYP_CD IN ('A') AND '{status}' LIKE '') OR (A.ACTIVE_TYP_CD IN ('A', 'C') AND '{status}' LIKE '_AC')) {filter} GROUP BY CN.CNTRCT_NUM, worst.POC_IND, P.PROJ_NUM, P.POC_IND, GEO1.GEO_LVL1_NM, GEO2.GEO_LVL2_NM, CTRY.CTRY_NM, S.SCTR_GB_NM, GP.GRTH_PLFM_DESC, SL.SVC_LINE_NM, P.CLUST_NM, C.CUST_NM, CN.SGND_DT, F.CURR_ACCT_YR, F.CURR_ACCT_MO, A.ACTIVE_TYP_CD, F.PC_GP_PCT, F.EAC_ACTLS_GP_PCT, F.CQ_APRVD_GP_PCT, F.ITD_ACTLS_GP_PCT, WORST.CQ_GP_LKG_PCT, F.TIER_GP_LKG_NUM, F.TIER_EAC_LKG_NUM, F.TIER_COST_OVERRUN_NUM, WORST.SORT_KEY, WORST.SORT_DIRECTION, F.CQ_APRVD_GP_PCT, F.CQ_APRVD_GP_AC_PCT, F.CQ_GP_PV_PCT, F.CQ_GP_AC_PV_PCT ORDER BY {orderColumn} {orderDirection} \",\"description\":\"Work Number Expansion Export\"}",

      "t2TLCountContract": "{\"name\":\"t2TLCountContract\",\"sqlTemplate\":\"with leakage as ( select trim({busAttr}) as category, tier_gp_lkg_num, coalesce(cq_gp_lkg_ac_amt, 0) as cq_gp_lkg_ac_amt, tier_eac_lkg_num, coalesce(frcst_to_aprvd_lkg_amt, 0) as frcst_to_aprvd_lkg_amt, tier_cost_overrun_num, coalesce(overrun_cost_amt, 0) as overrun_cost_amt, tier_gp_lkg_num_prev_mth, coalesce(cq_gp_lkg_ac_amt_prev_mth, 0) as cq_gp_lkg_ac_amt_prev_mth, tier_eac_lkg_num_prev_mth, coalesce(frcst_to_aprvd_lkg_amt_prev_mth, 0) as frcst_to_aprvd_lkg_amt_prev_mth, tier_cost_overrun_num_prev_mth, coalesce(overrun_cost_amt_prev_mth, 0) as overrun_cost_amt_prev_mth, coalesce(cq_gp_lkg_ac_amt, 0) - coalesce(cq_gp_lkg_ac_amt_prev_qtr, 0) as qtq_cq_to_ap, coalesce(frcst_to_aprvd_lkg_amt, 0) - coalesce(frcst_to_aprvd_lkg_amt_prev_qtr, 0) as qtq_fc_eac_to_ap, coalesce(overrun_cost_amt, 0) - coalesce(overrun_cost_amt_prev_qtr, 0) as qtq_mo_cost_over_ap from phd.contract_leakage_fact_16w_v f inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in(0, 21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key and sl.in_scope = 1 inner join phd.practice_dim pd on f.practice_key = pd.practice_key and pd.include = 1 inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.industry_dim id on f.indstry_key = id.indstry_key inner join phd.acct_drop ad on ad.mth_key = f.mth_key and ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_GR1'  {filter}   ) , cq_to_ap as ( select category, tier_gp_lkg_num as tier_no, sum(cq_gp_lkg_ac_amt) as cq_to_ap_lkg, count as cq_to_ap_lkg_cnt, sum(qtq_cq_to_ap) as qtq_cq_to_ap from leakage where ( tier_gp_lkg_num {operator}= {tier} ) group by category, tier_gp_lkg_num ) , fc_eac_to_ap as ( select category, tier_eac_lkg_num as tier_no, sum(frcst_to_aprvd_lkg_amt) as fc_eac_to_ap_lkg, count as fc_eac_to_ap_lkg_cnt, sum(qtq_fc_eac_to_ap) as qtq_fc_eac_to_ap from leakage where (  tier_eac_lkg_num {operator}= {tier} ) group by category, tier_eac_lkg_num ) , mo_cost_over_ap as ( select category, tier_cost_overrun_num as tier_no, sum(overrun_cost_amt) as cost_overrun, count as cost_overrun_cnt, sum(qtq_mo_cost_over_ap) as qtq_mo_cost_over_ap from leakage where ( tier_cost_overrun_num {operator}= {tier} ) group by category, tier_cost_overrun_num ) , cq_to_ap_prev_mth as ( select category, tier_gp_lkg_num_prev_mth as tier_no, sum(cq_gp_lkg_ac_amt_prev_mth) as cq_to_ap_lkg_prev_mth, count as cq_to_ap_lkg_prev_mth_cnt from leakage where ( tier_gp_lkg_num_prev_mth {operator}= {tier} ) group by category, tier_gp_lkg_num_prev_mth ) , fc_eac_to_ap_prev_mth as ( select category, tier_eac_lkg_num_prev_mth as tier_no, sum(frcst_to_aprvd_lkg_amt_prev_mth) as fc_eac_to_ap_lkg_prev_mth, count as fc_eac_to_ap_lkg_prev_mth_cnt from leakage where ( tier_eac_lkg_num_prev_mth {operator}= {tier} ) group by category, tier_eac_lkg_num_prev_mth ) , mo_cost_over_ap_prev_mth as ( select category, tier_cost_overrun_num_prev_mth as tier_no, sum(overrun_cost_amt_prev_mth) as cost_overrun_prev_mth, count as cost_overrun_prev_mth_cnt from leakage where ( tier_cost_overrun_num_prev_mth {operator}= {tier} ) group by category, tier_cost_overrun_num_prev_mth ) , category_tbl as ( select distinct trim({busAttr}) as category, tier.tier_no from phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim gp, phd.svc_line_dim sl, phd.practice_dim pd, phd.sector_gb_dim s, phd.industry_dim id, table ( values (0), (1), (2), (3) ) as tier(tier_no) {filter} <filter?AND:WHERE> geo1.geo_lvl1_key not in(0, 21) and geo1.geo_lvl1_cd != 'JP' and ( tier.tier_no {operator}= {tier} )   ) select category_tbl.category, category_tbl.tier_no, ad.data_load_desc, coalesce(cq_to_ap_lkg, 0) as cq_to_ap_lkg, coalesce(cq_to_ap_lkg_prev_mth, 0) as cq_to_ap_lkg_prev_mth, coalesce(fc_eac_to_ap_lkg, 0) as fc_eac_to_ap_lkg, coalesce(fc_eac_to_ap_lkg_prev_mth, 0) as fc_eac_to_ap_lkg_prev_mth, coalesce(cost_overrun, 0) as cost_overrun, coalesce(cost_overrun_prev_mth, 0) as cost_overrun_prev_mth, coalesce(cast(coalesce(abs(cq_to_ap_lkg), 0) as float) / cast(nullif(sum(coalesce(abs(cq_to_ap_lkg), 0)) over(partition by category_tbl.category), 0) as float), 0) as cq_to_ap_lkg_tier_pct, coalesce(cast(coalesce(abs(fc_eac_to_ap_lkg), 0) as float) / cast(nullif(sum(coalesce(abs(fc_eac_to_ap_lkg), 0)) over(partition by category_tbl.category), 0) as float), 0) as fc_eac_to_ap_lkg_tier_pct, coalesce(cast(coalesce(abs(cost_overrun), 0) as float) / cast(nullif(sum(coalesce(abs(cost_overrun), 0)) over(partition by category_tbl.category), 0) as float), 0) as cost_overrun_tier_pct, sum(coalesce(qtq_cq_to_ap, 0)) over (partition by category_tbl.category) as qtq_cq_to_ap, sum(coalesce(qtq_fc_eac_to_ap, 0)) over (partition by category_tbl.category) as qtq_fc_eac_to_ap, sum(coalesce(qtq_mo_cost_over_ap, 0)) over (partition by category_tbl.category) as qtq_mo_cost_over_ap, coalesce(cast((coalesce(cq_to_ap_lkg, 0) - coalesce(cq_to_ap_lkg_prev_mth, 0)) as float) / cast(abs(nullif(coalesce(cq_to_ap_lkg_prev_mth, 0), 0)) as float), 0) as mtm_cq_to_ap_lkg_pct, coalesce(cast((coalesce(fc_eac_to_ap_lkg, 0) - coalesce(fc_eac_to_ap_lkg_prev_mth, 0)) as float) / cast(abs(nullif(coalesce(fc_eac_to_ap_lkg_prev_mth, 0), 0)) as float), 0) as mtm_fc_eac_to_ap_lkg_pct, coalesce(cast((coalesce(cost_overrun, 0) - coalesce(cost_overrun_prev_mth, 0)) as float) / cast(abs(nullif(coalesce(cost_overrun_prev_mth, 0), 0)) as float), 0) as mtm_cost_overrun_pct, coalesce(coalesce(cq_to_ap_lkg, 0) - coalesce(cq_to_ap_lkg_prev_mth, 0), 0) as mtm_cq_to_ap_lkg_diff, coalesce(coalesce(fc_eac_to_ap_lkg, 0) - coalesce(fc_eac_to_ap_lkg_prev_mth, 0), 0) as mtm_fc_eac_to_ap_lkg_diff, coalesce(coalesce(cost_overrun, 0) - coalesce(cost_overrun_prev_mth, 0), 0) as mtm_cost_overrun_diff from category_tbl left join cq_to_ap on cq_to_ap.tier_no = category_tbl.tier_no and cq_to_ap.category = category_tbl.category left join fc_eac_to_ap on fc_eac_to_ap.tier_no = category_tbl.tier_no and fc_eac_to_ap.category = category_tbl.category left join mo_cost_over_ap on mo_cost_over_ap.tier_no = category_tbl.tier_no and mo_cost_over_ap.category = category_tbl.category left join cq_to_ap_prev_mth on cq_to_ap_prev_mth.tier_no = category_tbl.tier_no and cq_to_ap_prev_mth.category = category_tbl.category left join fc_eac_to_ap_prev_mth on fc_eac_to_ap_prev_mth.tier_no = category_tbl.tier_no and fc_eac_to_ap_prev_mth.category = category_tbl.category left join mo_cost_over_ap_prev_mth on mo_cost_over_ap_prev_mth.tier_no = category_tbl.tier_no and mo_cost_over_ap_prev_mth.category = category_tbl.category left join phd.acct_drop ad on ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_GR1' order by category_tbl.category, category_tbl.tier_no \",\"description\":\"Obtains Tiered Leakage contract counts\"}",
      "t2TLCountWorkNum": "{\"name\":\"t2TLCountWorkNum\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS CATEGORY, {tier} AS tier_no, MIN(ad.data_load_desc) AS data_load_desc, MIN(ad.desc_2) AS desc_2, MIN(ad.data_load_date) AS data_load_date, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num {operator} {tier} AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num {operator} {tier} AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END) , 0), 0) AS lkg_pct, 0 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR '{status}'='_AC') INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_FRC' {filter} GROUP BY RTRIM({busAttr}) UNION ALL SELECT 'World Wide' AS CATEGORY, {tier} AS tier_no, MIN(ad.data_load_desc) AS data_load_desc, MIN(ad.desc_2) AS desc_2, MIN(ad.data_load_date) AS data_load_date, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num {operator} {tier} AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num {operator} {tier} AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END) , 0), 0) AS lkg_pct, 1 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR '{status}'='_AC') INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_FRC' ORDER BY worldwide DESC, category ASC ; \",\"description\":\"Obtains Tiered Leakage work number counts\"}",
      "t2TLCountWorkNumAll": "{\"name\":\"t2TLCountWorkNumAll\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS CATEGORY, MIN(ad.data_load_desc) AS data_load_desc, MIN(ad.desc_2) AS desc_2, MIN(ad.data_load_date) AS data_load_date, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 0 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 0 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 0 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t0, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 0 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 0 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 0 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN 'FC_EAC_APOVER' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t0, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 1 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 1 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 1 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t1, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 1 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 1 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 1 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t1, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 2 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 2 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 2 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t2, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 2 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 2 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 2 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t2, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 3 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 3 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 3 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t3, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 3 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 3 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 3 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t3, 0 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR '{status}'='_AC') INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_FRC' {filter} GROUP BY RTRIM({busAttr}) UNION ALL SELECT 'World Wide' AS CATEGORY, MIN(ad.data_load_desc) AS data_load_desc, MIN(ad.desc_2) AS desc_2, MIN(ad.data_load_date) AS data_load_date, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 0 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 0 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 0 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t0, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 0 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 0 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 0 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN 'FC_EAC_APOVER' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t0, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 1 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 1 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 1 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t1, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 1 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 1 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 1 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t1, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 2 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 2 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 2 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t2, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 2 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 2 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 2 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t2, COALESCE(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 3 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 3 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 3 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END), 0) AS lkg_amt_t3, COALESCE(CAST(SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND tier_gp_lkg_num = 3 AND cq_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN cq_gp_lkg_ac_amt WHEN '{metric}' = 'FC_EAC_AP' AND tier_eac_lkg_num = 3 AND eac_to_ap_flg = 1 AND ad.mth_key IS NOT NULL THEN frcst_to_aprvd_lkg_amt WHEN '{metric}' = 'COST_OVER' AND tier_cost_overrun_num = 3 AND cost_overrun_flg = 1 AND ad.mth_key IS NOT NULL THEN ABS(overrun_cost_amt) END) AS FLOAT) / NULLIF( CASE WHEN '{metric}' = 'COST_OVER' THEN SIGN(SUM(lst_3_mth_cost_aprvd_amt)) ELSE 1 END * SUM( CASE WHEN '{metric}' = 'CQ_TO_AP' AND ad.mth_key IS NOT NULL THEN cq_rev_ac_pv_amt WHEN '{metric}' = 'FC_EAC_AP' AND ad.mth_key IS NOT NULL THEN tcv_amt WHEN '{metric}' = 'COST_OVER' AND ad.mth_key IS NOT NULL THEN lst_3_mth_cost_aprvd_amt END), 0), 0) AS lkg_pct_t3, 1 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR '{status}'='_AC') INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_FRC' ORDER BY worldwide DESC, category ASC ; \",\"description\":\"Obtains Tiered Leakage work number counts\"}",
      "t2TLTrendMthContract": "{\"name\":\"t2TLTrendMthContract\",\"sqlTemplate\":\"WITH leakage AS( SELECT f.mth_key, tier_gp_lkg_num, COALESCE(cq_gp_lkg_ac_amt, 0) AS cq_gp_lkg_ac_amt, tier_eac_lkg_num, COALESCE(frcst_to_aprvd_lkg_amt, 0) AS frcst_to_aprvd_lkg_amt, COALESCE(cq_rev_ac_pv_amt, 0) AS cq_rev_ac_pv_amt, COALESCE(tcv_amt, 0) AS tcv_amt FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key != 'CURRENT' {filter} <filter?AND:WHERE> f.invld_pc_cb_flg = 'N'  ) , cq_to_ap AS ( SELECT leakage.mth_key, SUM(cq_gp_lkg_ac_amt) AS cq_to_ap_lkg, COUNT AS cq_to_ap_lkg_cnt, COALESCE(CAST(SUM(cq_gp_lkg_ac_amt) AS FLOAT) / NULLIF(SUM(cq_rev_ac_pv_amt), 0) , 0) AS cq_to_ap_lkg_tier_pct FROM leakage WHERE tier_gp_lkg_num {operator}= {tier} AND cq_gp_lkg_ac_amt <> 0 GROUP BY leakage.mth_key ) , fc_eac_to_ap AS ( SELECT leakage.mth_key, SUM(frcst_to_aprvd_lkg_amt) AS fc_eac_to_ap_lkg, COUNT AS fc_eac_to_ap_lkg_cnt, COALESCE(CAST(SUM(frcst_to_aprvd_lkg_amt) AS FLOAT) / NULLIF(SUM(tcv_amt), 0), 0) AS fc_eac_to_ap_lkg_tier_pct FROM leakage WHERE tier_eac_lkg_num {operator}= {tier} AND frcst_to_aprvd_lkg_amt < 0 GROUP BY leakage.mth_key ) SELECT ad.curr_acct_yr, ad.curr_acct_mo, COALESCE(cq_to_ap_lkg, 0) AS cq_to_ap_lkg, COALESCE(fc_eac_to_ap_lkg, 0) AS fc_eac_to_ap_lkg, COALESCE(cq_to_ap_lkg_cnt, 0) AS cq_to_ap_lkg_cnt, COALESCE(fc_eac_to_ap_lkg_cnt, 0) AS fc_eac_to_ap_lkg_cnt, COALESCE(cq_to_ap_lkg_tier_pct, 0) AS cq_to_ap_lkg_tier_pct, COALESCE(fc_eac_to_ap_lkg_tier_pct, 0) AS fc_eac_to_ap_lkg_tier_pct FROM phd.acct_drop ad LEFT JOIN cq_to_ap ON ad.mth_key=cq_to_ap.mth_key LEFT JOIN fc_eac_to_ap ON ad.mth_key=fc_eac_to_ap.mth_key WHERE ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key != 'CURRENT' ORDER BY ad.curr_acct_yr, ad.curr_acct_mo ASC FETCH FIRST 13 ROWS ONLY ;\",\"description\":\"Contract Tiered Leakage Trend Monthly\"}",
      "t2TLTrendQtrContract": "{\"name\":\"t2TLTrendQtrContract\",\"sqlTemplate\":\"WITH cq_to_ap AS( SELECT f.mth_key, SUM(COALESCE(cq_gp_lkg_ac_amt, 0)) AS cq_to_ap_lkg, COUNT AS cq_to_ap_lkg_cnt, COALESCE(CAST(SUM(COALESCE(cq_gp_lkg_ac_amt, 0)) AS FLOAT) / NULLIF(SUM(COALESCE(cq_rev_ac_pv_amt, 0)), 0) , 0) AS cq_to_ap_lkg_tier_pct FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key != 'CURRENT' {filter} <filter?AND:WHERE> f.invld_pc_cb_flg = 'N' AND ad.CURR_ACCT_MO IN (3, 6, 9, 12) AND tier_gp_lkg_num {operator}= {tier} AND cq_gp_lkg_ac_amt <> 0 GROUP BY f.mth_key FETCH FIRST 5 ROWS ONLY  ) SELECT m.yr_num || 'Q' || m.qtr_num AS quarter, COALESCE(cq_to_ap_lkg, 0) AS cq_to_ap_lkg, COALESCE(cq_to_ap_lkg_cnt, 0) AS cq_to_ap_lkg_cnt, COALESCE(cq_to_ap_lkg_tier_pct, 0) AS cq_to_ap_lkg_tier_pct FROM phd.acct_drop ad INNER JOIN phd.month_dim m ON ad.mth_key = m.mth_key LEFT JOIN cq_to_ap ON ad.mth_key=cq_to_ap.mth_key WHERE ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key != 'CURRENT' AND ad.CURR_ACCT_MO IN (3, 6, 9, 12) ORDER BY m.yr_num || 'Q' || m.qtr_num ASC FETCH FIRST 5 ROWS ONLY ;\",\"description\":\"Contract Tiered Leakage Trend Quarterly\"}",
      "t2TLTrendMthWorkNum": "{\"name\":\"t2TLTrendMthWorkNum\",\"sqlTemplate\":\"SELECT MIN(ad.curr_acct_yr) AS curr_acct_yr, MIN(ad.curr_acct_mo) AS curr_acct_mo, ad.yr_mo_key, VARCHAR_FORMAT(MIN(ad.data_load_date), 'DD/MM/YYYY') AS data_load_date, MIN(ad.desc_2) AS desc_2, SUM(COALESCE( CASE WHEN tier_eac_lkg_num {operator} {tier} AND eac_to_ap_flg = 1 THEN frcst_to_aprvd_lkg_amt ELSE 0 END, 0)) AS fc_eac_to_ap_lkg, SUM( CASE WHEN tier_eac_lkg_num {operator} {tier} THEN eac_to_ap_flg ELSE 0 END) AS fc_eac_to_ap_lkg_cnt, COALESCE(CAST(SUM(COALESCE( CASE WHEN tier_eac_lkg_num {operator} {tier} AND eac_to_ap_flg = 1 THEN frcst_to_aprvd_lkg_amt ELSE 0 END, 0)) AS FLOAT) / NULLIF(SUM(COALESCE(tcv_amt, 0)), 0), 0) AS fc_eac_to_ap_lkg_tier_pct, SUM(COALESCE( CASE WHEN tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND a.active_typ_cd = 'A' THEN overrun_cost_amt ELSE 0 END, 0)) AS cost_overrun, SUM( CASE WHEN tier_cost_overrun_num {operator} {tier} AND a.active_typ_cd = 'A' THEN cost_overrun_flg ELSE 0 END)AS cost_overrun_cnt, COALESCE(CAST(SUM(COALESCE( CASE WHEN tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND a.active_typ_cd = 'A' THEN overrun_cost_amt ELSE 0 END, 0)) AS FLOAT) / NULLIF(SUM( CASE WHEN a.active_typ_cd = 'A' THEN COALESCE(lst_3_mth_cost_aprvd_amt, 0) ELSE 0 END), 0), 0) AS cost_overrun_tier_pct, SUM(COALESCE( CASE WHEN tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 THEN cq_gp_lkg_ac_amt ELSE 0 END, 0)) AS cq_to_ap_lkg, SUM( CASE WHEN tier_gp_lkg_num {operator} {tier} THEN cq_to_ap_flg ELSE 0 END) AS cq_to_ap_lkg_cnt, COALESCE(CAST(SUM(COALESCE( CASE WHEN tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 THEN cq_gp_lkg_ac_amt ELSE 0 END, 0)) AS FLOAT) / NULLIF (SUM(COALESCE(cq_rev_ac_pv_amt, 0)), 0), 0) AS cq_to_ap_lkg_tier_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key != 'CURRENT' {filter} GROUP BY ad.yr_mo_key ORDER BY ad.yr_mo_key ASC FETCH FIRST 14 ROWS ONLY; \",\"description\":\"Work Number Tiered Leakage Trend Monthly\"}",
      "t2TLTrendQtrWorkNum": "{\"name\":\"t2TLTrendQtrWorkNum\",\"sqlTemplate\":\"SELECT m.yr_num || 'Q' || m.qtr_num AS quarter, SUM(COALESCE( CASE WHEN tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND a.active_typ_cd = 'A' THEN overrun_cost_amt ELSE 0 END, 0)) AS cost_overrun, SUM( CASE WHEN tier_cost_overrun_num {operator} {tier} AND a.active_typ_cd = 'A' THEN cost_overrun_flg ELSE 0 END)AS cost_overrun_cnt, COALESCE(CAST(SUM(COALESCE( CASE WHEN tier_cost_overrun_num {operator} {tier} AND cost_overrun_flg = 1 AND a.active_typ_cd = 'A' THEN overrun_cost_amt ELSE 0 END, 0)) AS FLOAT) / NULLIF(SUM(CASE WHEN a.active_typ_cd = 'A' THEN COALESCE(lst_3_mth_cost_aprvd_amt, 0) ELSE 0 END), 0), 0) AS cost_overrun_tier_pct, SUM(COALESCE( CASE WHEN tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 THEN cq_gp_lkg_ac_amt ELSE 0 END, 0)) AS cq_to_ap_lkg, SUM( CASE WHEN tier_gp_lkg_num {operator} {tier} THEN cq_to_ap_flg ELSE 0 END) AS cq_to_ap_lkg_cnt, COALESCE(CAST(SUM(COALESCE( CASE WHEN tier_gp_lkg_num {operator} {tier} AND cq_to_ap_flg = 1 THEN cq_gp_lkg_ac_amt ELSE 0 END, 0)) AS FLOAT) / NULLIF (SUM(COALESCE(cq_rev_ac_pv_amt, 0)), 0), 0) AS cq_to_ap_lkg_tier_pct FROM phd.project_leakage_fact_6w_v f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ( ad.curr_acct_mo IN (12, 3, 6, 9) AND ad.current != 1) INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key {filter} GROUP BY m.yr_num || 'Q' || m.qtr_num ORDER BY m.yr_num || 'Q' || m.qtr_num ASC FETCH FIRST 5 ROWS ONLY ; \",\"description\":\"Work Number Tiered Leakage Trend Quarterly\"}",
      "t2TLDetailsWorkNum": "{\"name\":\"t2TLDetailsWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(proj.proj_num) AS proj_num, COALESCE(RTRIM(cd.cust_nm), 'N/A') AS customer, COALESCE(tcv_amt, 0) AS tcv, CASE '{metric}' WHEN 'CQ_TO_AP' THEN tier_gp_lkg_num WHEN 'FC_EAC_AP' THEN tier_eac_lkg_num WHEN 'COST_OVER' THEN tier_cost_overrun_num END AS tier_num, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_rev_ac_pv_amt , 0) WHEN 'FC_EAC_AP' THEN COALESCE(f.aprvd_gp_amt, 0) + COALESCE(f.frcst_to_aprvd_lkg_amt, 0) WHEN 'COST_OVER' THEN COALESCE((lst_3_mth_actls_cost_amt) , 0) END AS act, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_aprvd_rev_ac_amt, 0) WHEN 'FC_EAC_AP' THEN COALESCE(aprvd_gp_amt, 0) WHEN 'COST_OVER' THEN COALESCE((lst_3_mth_cost_aprvd_amt), 0) END AS PLAN, CASE WHEN '{metric}' = 'CQ_TO_AP' AND cq_to_ap_flg = 1 THEN COALESCE(cq_gp_lkg_ac_amt, 0) WHEN '{metric}' = 'FC_EAC_AP' AND eac_to_ap_flg = 1 THEN COALESCE(frcst_to_aprvd_lkg_amt, 0) WHEN '{metric}' = 'COST_OVER' AND cost_overrun_flg = 1 THEN COALESCE((overrun_cost_amt), 0) END AS var, CASE WHEN '{metric}' = 'CQ_TO_AP' AND cq_to_ap_flg = 1 THEN COALESCE(cq_gp_ac_pv_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) WHEN '{metric}' = 'FC_EAC_AP' AND eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) WHEN '{metric}' = 'COST_OVER' AND cost_overrun_flg = 1 THEN COALESCE(CAST((overrun_cost_amt) AS FLOAT) / NULLIF((lst_3_mth_cost_aprvd_amt), 0), 0) END AS variance_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.project_dim proj ON f.proj_key = proj.proj_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR '{status}' = '_AC') INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_FRC' LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key {filter} <filter?AND:WHERE> (( '{metric}' = 'FC_EAC_AP' AND f.eac_to_ap_flg = 1 AND f.tier_eac_lkg_num {operator} {tier}) OR ( '{metric}' = 'CQ_TO_AP' AND f.cq_to_ap_flg = 1 AND f.tier_gp_lkg_num {operator} {tier}) OR ( '{metric}' = 'COST_OVER' AND f.cost_overrun_flg = 1 AND f.tier_cost_overrun_num {operator} {tier})) ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 ROWS ONLY ; \",\"description\":\"Tiered Leakage Top Contrib Work No. Details\"}",
      "t2TLDetailsContract": "{\"name\":\"t2TLDetailsContract\",\"sqlTemplate\":\"WITH contract AS( SELECT RTRIM(cn.cntrct_num) AS cntrct_num, COALESCE(RTRIM(cd.cust_nm), 'N/A') AS customer, COALESCE(tcv_amt, 0) AS tcv, CASE '{metric}' WHEN 'CQ_TO_AP' THEN tier_gp_lkg_num WHEN 'FC_EAC_TO_AP' THEN tier_eac_lkg_num END AS tier_num, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_rev_ac_pv_amt , 0) WHEN 'FC_EAC_AP' THEN COALESCE(f.aprvd_gp_amt, 0) + COALESCE(f.frcst_to_aprvd_lkg_amt, 0) END AS actual_amt, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_aprvd_rev_ac_amt, 0) WHEN 'FC_EAC_AP' THEN COALESCE(aprvd_gp_amt, 0) END AS plan_amt, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_gp_lkg_ac_amt, 0) WHEN 'FC_EAC_AP' THEN COALESCE(frcst_to_aprvd_lkg_amt, 0) END AS variance_diff, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_pv_gp_ac_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) WHEN 'FC_EAC_AP' THEN COALESCE(aprvd_gp_cb_pct, 0) - COALESCE(etc_actls_gp_pct, 0) END AS variance_pct FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON f.indstry_key = id.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_GR1' LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key {filter} <filter?AND:WHERE> f.invld_pc_cb_flg = 'N'  ) SELECT * FROM contract WHERE contract.tier_num {operator} {tier} ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 ROWS ONLY;\",\"description\":\"Tiered Leakage Top Contrib Contract Details\"}",
      "t2TLPopupContract": "{\"name\":\"t2TLPopupContract\",\"sqlTemplate\":\"SELECT 'contract' AS type, ad.data_load_desc, RTRIM(cntr.cntrct_num) AS NUMBER, RTRIM(cntr.cntrct_desc) AS contract_name, cntr.cntrct_key, CASE WHEN pe_notes_id != '' THEN SUBSTR(pe_notes_id, 1, locate('/',pe_notes_id)-1) ELSE '' END AS partner_name, DATE(cntr.sgnd_dt) AS sign_date, RTRIM(sgd.sctr_gb_nm) AS sector, COALESCE(pc_gp_cb_pct, 0) AS pc_gp_pct, COALESCE(aprvd_gp_cb_pct, 0) AS ap_gp_pct, COALESCE(etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(tcv_amt, 0) AS tcv_amt, RTRIM(cd.cust_nm) AS client_nm, RTRIM(ctry.ctry_nm) AS country, RTRIM(sl.svc_line_nm) AS service_line, RTRIM(gp.grth_plfm_desc) AS growth_platform, COALESCE(pc_gp_cb_amt, 0) AS pc_gp_amt, COALESCE(aprvd_gp_cb_amt, 0) AS ap_gp_amt, COALESCE(etc_actls_gp_amt, 0) AS fc_gp_amt, COALESCE(frcst_to_aprvd_lkg_amt, 0) AS fc_eac_to_ap_lkg, COALESCE(aprvd_gp_cb_pct, 0) - COALESCE(eac_actls_gp_pct, 0) AS fc_to_ap_lkg_pct, COALESCE(cq_gp_lkg_ac_amt, 0) AS cq_to_ap_lkg, COALESCE(cq_pv_gp_ac_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) AS cq_to_ap_lkg_pct, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_aprvd_rev_ac_amt, 0) WHEN 'FC_EAC_AP' THEN COALESCE(aprvd_gp_amt, 0) END AS lkg_plan, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_rev_ac_pv_amt , 0) WHEN 'FC_EAC_AP' THEN COALESCE(f.aprvd_gp_amt, 0) + COALESCE(f.frcst_to_aprvd_lkg_amt, 0) END AS lkg_actual, CASE '{metric}' WHEN 'CQ_TO_AP' THEN tier_gp_lkg_num WHEN 'FC_EAC_AP' THEN tier_eac_lkg_num END AS tier_num, cntr.phd_url AS ippf_url FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key WHERE ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' AND cntr.cntrct_num = '{cntrctNum}' FETCH FIRST row only ; \",\"description\":\"Tiered Leakage Contract Detail popup\"}",
      "t2TLPopupWorkNum": "{\"name\":\"t2TLPopupWorkNum\",\"sqlTemplate\":\"SELECT 'work number' AS type, ad.data_load_desc, RTRIM(proj.proj_num) AS project_number, proj.cntrct_key, proj.proj_key, COALESCE(RTRIM(proj.proj_desc), 'N/A') AS project_name, RTRIM(cntr.cntrct_num) AS contract_number, COALESCE(RTRIM(cntr.cntrct_desc), 'N/A') AS contract_name, CASE WHEN proj.prtnr_nm != '' THEN SUBSTR(proj.prtnr_nm, 1, locate('/',proj.prtnr_nm)-1) ELSE 'N/A' END AS partner_name, DATE(cntr.sgnd_dt) AS contract_sign_date, RTRIM(sgd.sctr_gb_nm) AS sector, RTRIM(gp.grth_plfm_desc) AS growth_platform, COALESCE(pc_gp_pct, 0) AS pc_gp_pct, COALESCE(aprvd_gp_pct, 0) AS ap_gp_pct, COALESCE(etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(tcv_amt, 0) AS tcv_amt, RTRIM(cd.cust_nm) AS client_nm, RTRIM(ctry.ctry_nm) AS country, DATE(proj.aprv_pln_dt) AS approved_plan_date, DATE(proj.frcst_sbmt_tms) AS forecast_approved_date, RTRIM(sl.svc_line_nm) AS service_line, COALESCE(pc_gp_amt, 0) AS pc_gp_amt, COALESCE(aprvd_gp_amt, 0) AS ap_gp_amt, COALESCE(etc_actls_gp_amt, 0) AS fc_gp_amt, CASE WHEN cq_to_ap_flg = 1 THEN COALESCE(cq_gp_lkg_ac_amt, 0) ELSE 0 END AS cq_to_ap_lkg_variance_diff, CASE WHEN cq_to_ap_flg = 1 THEN COALESCE(cq_gp_ac_pv_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) ELSE 0 END AS cq_to_ap_lkg_variance_pct, CASE WHEN eac_to_ap_flg = 1 THEN COALESCE(frcst_to_aprvd_lkg_amt, 0) ELSE 0 END AS fc_to_ap_lkg_variance_diff, CASE WHEN eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END AS fc_to_ap_lkg_variance_pct, CASE WHEN cost_overrun_flg = 1 THEN COALESCE(overrun_cost_amt, 0) ELSE 0 END AS cost_over_variance_diff, CASE WHEN cost_overrun_flg = 1 THEN COALESCE(CAST(overrun_cost_amt AS FLOAT) / NULLIF(lst_3_mth_cost_aprvd_amt, 0), 0) ELSE 0 END AS cost_over_variance_pct, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_aprvd_rev_ac_amt, 0) WHEN 'FC_EAC_AP' THEN COALESCE(aprvd_gp_amt, 0) WHEN 'COST_OVER' THEN COALESCE(lst_3_mth_cost_aprvd_amt, 0) END AS lkg_plan, CASE '{metric}' WHEN 'CQ_TO_AP' THEN COALESCE(cq_rev_ac_pv_amt , 0) WHEN 'FC_EAC_AP' THEN COALESCE(f.aprvd_gp_amt, 0) + COALESCE(f.frcst_to_aprvd_lkg_amt, 0) WHEN 'COST_OVER' THEN COALESCE(lst_3_mth_actls_cost_amt , 0) END AS lkg_actual, CASE '{metric}' WHEN 'CQ_TO_AP' THEN tier_gp_lkg_num WHEN 'FC_EAC_AP' THEN tier_eac_lkg_num WHEN 'COST_OVER' THEN tier_cost_overrun_num END AS tier_num, proj.phd_url AS ippf_url FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.project_dim proj ON f.proj_key = proj.proj_key INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' WHERE proj.proj_num = '{workNum}' FETCH FIRST row only ; \",\"description\":\"Tiered Leakage Work Number Detail popup\"}",
      "t2TLTrendMthMetContract": "{\"name\":\"t2TLTrendMthMetContract\",\"sqlTemplate\":\"SELECT Rtrim(cntrct_num) AS cntrct_num, f.curr_acct_mo AS acct_mo, f.curr_acct_yr AS acct_yr, COALESCE(Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS frcst_to_pc_lkg, Sum( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0)) AS cq_to_pc_lkg, COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END), 0.0 ) AS ap_to_pc_lkg, COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END ), 0.0 ) AS fc_to_ap_lkg, COALESCE(Sum(f.overrun_cost_amt),0.0) AS cost_over, COALESCE(Sum(f.cq_gp_lkg_pv_amt), 0.0) AS cq_to_ap_lkg, CASE WHEN COALESCE(Sum(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast(Sum(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_pct, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, CASE WHEN COALESCE(Sum(f.cq_actls_rev_ac_pv_amt),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sum(f.cq_gp_lkg_pv_amt), 0.0) AS FLOAT) / Cast(Sum(f.cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_ap_pct, CASE WHEN COALESCE(Sum(f.lst_3_mth_cost_aprvd_amt),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum(f.overrun_cost_amt)),0.0) AS FLOAT)*Abs(Cast(COALESCE(Sum(f.overrun_cost_amt),0.0) AS FLOAT) / Cast(COALESCE(Sum(f.lst_3_mth_cost_aprvd_amt),0.0) AS FLOAT)) END AS cost_over_pct FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key LEFT JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE>( d.qtr_key {operator} replace('{yrQtrKey}', 'Q', '') AND cn.cntrct_num = '{cntrctNum}') GROUP BY cn.cntrct_num, f.curr_acct_mo, f.curr_acct_yr ORDER BY f.curr_acct_yr, f.curr_acct_mo ASC FETCH first 13 rows only ;\",\"description\":\"Contract Tiered Leakage Trend Metric Monthly\"}",
      "t2TLTrendQtrMetContract": "{\"name\":\"t2TLTrendQtrMetContract\",\"sqlTemplate\":\"SELECT m.yr_num || 'Q' || m.qtr_num AS qtr_key_cd, COALESCE(Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, Sum( COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END , 0.0)) AS cq_to_pc_lkg, CASE WHEN COALESCE(Sum(pq_actls_rev_ac_amt),0.0) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END),0.0) AS FLOAT ) / Cast(Sum(pq_actls_rev_ac_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct FROM phd.contract_leakage_fact_6w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim M ON f.mth_key = m.mth_key LEFT JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> f.key_day_ind = '6W' AND( f.curr_acct_yr >= ad.curr_acct_yr AND d.qtr_key {operator} replace('{yrQtrKey}', 'Q', '') AND f.curr_acct_mo IN('03', '06', '09', '12') AND cn.cntrct_num = '{cntrctNum}') GROUP BY m.yr_num || 'Q' || m.qtr_num ORDER BY qtr_key_cd ASC FETCH first 6 rows only ;\",\"description\":\"Contract Tiered Leakage Trend Metric Quarterly\"}",
      "t2TLTrendMthMetWorkNum": "{\"name\":\"t2TLTrendMthMetWorkNum\",\"sqlTemplate\":\"SELECT Rtrim(p.proj_num) AS work_num, f.curr_acct_mo AS acct_mo, f.curr_acct_yr AS acct_yr, COALESCE(Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS frcst_to_pc_lkg, Sum( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END, 0.0)) AS cq_to_pc_lkg, COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END),0.0) AS ap_to_pc_lkg, COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END), 0.0 ) AS fc_to_ap_lkg, COALESCE(Sum(f.overrun_cost_amt),0.0) AS cost_over, COALESCE(Sum(f.cq_gp_lkg_pv_amt), 0.0) AS cq_to_ap, CASE WHEN COALESCE(Sum(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast(Sum(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_pct, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, CASE WHEN COALESCE(Sum(f.cq_actls_rev_ac_pv_amt),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sum(f.cq_gp_lkg_pv_amt), 0.0) AS FLOAT) / Cast(Sum(f.cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_ap_pct, CASE WHEN COALESCE(Sum(f.lst_3_mth_cost_aprvd_amt),0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum(f.overrun_cost_amt)),0.0) AS FLOAT)*Abs(Cast(COALESCE(Sum(f.overrun_cost_amt),0.0) AS FLOAT) / Cast(COALESCE(Sum(f.lst_3_mth_cost_aprvd_amt),0.0) AS FLOAT)) END AS cost_over_pct FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 LEFT JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.curr_acct_yr >= ad.curr_acct_yr AND ad.yr_mo_key <> 'CURRENT' AND d.qtr_key {operator} replace('{yrQtrKey}','Q','') AND p.proj_num = '{workNum}' GROUP BY p.proj_num, f.curr_acct_mo, f.curr_acct_yr ORDER BY f.curr_acct_yr, f.curr_acct_mo ASC FETCH first 13 rows only ;\",\"description\":\"Work Nbr Tiered Leakage Trend Metric Monthly\"}",
      "t2TLTrendQtrMetWorkNum": "{\"name\":\"t2TLTrendQtrMetWorkNum\",\"sqlTemplate\":\"SELECT Rtrim(p.proj_num) AS work_num, m.yr_num ||'Q' ||m.qtr_num AS qtr_key_cd, COALESCE(Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, Sum( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END, 0.0)) AS cq_to_pc_lkg, CASE WHEN COALESCE(Sum(pq_actls_rev_ac_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END), 0.0) AS FLOAT ) / Cast(Sum(pq_actls_rev_ac_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 LEFT JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.month_dim M ON f.mth_key = m.mth_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.curr_acct_yr >= ad.curr_acct_yr AND d.qtr_key {operator} replace('{yrQtrKey}','Q','') AND f.curr_acct_mo IN('03', '06', '09', '12') AND ad.yr_mo_key <> 'CURRENT' AND p.proj_num = '{workNum}' GROUP BY p.proj_num, m.yr_num ||'Q' ||m.qtr_num ORDER BY qtr_key_cd ASC FETCH first 13 rows only ;\",\"description\":\"Work Nbr Tiered Leakage Trend Metric Quarterly\"}",
      "t2TLExportContract": "{\"name\":\"t2TLExportContract\",\"sqlTemplate\":\"SELECT Rtrim(cn.cntrct_num) AS cntrct_num, cn.cntrct_desc AS cntrct_desc, Rtrim(geo1.geo_lvl1_nm) AS geo_desc, Rtrim(geo2.geo_lvl2_nm) AS mkt_desc, cu.cust_nm AS customer, Rtrim(ctry.ctry_nm) AS country, s.sctr_gb_nm AS sector_desc, indstry.indstry_cmr_nm AS industry_desc, gp.grth_plfm_desc AS growth_platform, rtrim(sl.svc_line_nm) AS service_line, 'Not Available' AS cluster_name, Date(cn.sgnd_dt) AS cntrct_sgnd_dt, Date(cn.end_dt) AS end_date, Date(cn.strtd_dt) AS start_date, Rtrim(cn.pe_notes_id) AS partner_nm, f.curr_acct_yr AS acct_yr, f.curr_acct_mo AS acct_mo, Rtrim(a.active_typ_cd) AS status, COALESCE(f.tcv_cb_amt, 0.0) AS tcv, COALESCE(Sum(f.pc_rev_amt), 0.0) AS revenue, COALESCE(f.pc_cost_amt, 0.0) AS pc_plan_cost, COALESCE(f.pc_actls_gp_ac_amt, 0.0) AS pc_gp, Sum(f.pc_gp_pct) AS pc_gp_pct, COALESCE(f.aprvd_rev_amt, 0.0) AS ap_rev, COALESCE(f.aprvd_cost_amt, 0.0) AS ap_cost, COALESCE(f.aprvd_gp_amt, 0.0) AS ap_gp, f.aprvd_gp_pct AS ap_gp_pct, COALESCE(f.eac_actls_rev_amt, 0.0) AS fc_rev, COALESCE(f.eac_actls_cost_amt, 0.0) AS fc_cost, COALESCE(f.eac_actls_gp_amt, 0.0) AS fc_gp, f.eac_actls_gp_pct AS fc_gp_pct, COALESCE(f.itd_actls_rev_cb_amt, 0.0) AS itd_act_rev, COALESCE(f.itd_actls_cost_cb_amt, 0.0) AS itd_act_cost, COALESCE(f.itd_actls_gp_cb_amt, 0.0) AS itd_act_gp, f.itd_actls_gp_cb_pct AS itd_act_gp_pct, COALESCE(f.cq_gp_lkg_ac_amt, 0.0) AS cq_gp, CASE WHEN COALESCE(Sum(f.cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sum(f.cq_gp_lkg_ac_amt), 0.0) AS FLOAT) / Cast(Sum(f.cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_gp_pct, Sum(f.tier_gp_lkg_num) AS tier_gp_lkg_num, Sum(COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt < 0 THEN cq_to_pc_lkg_amt ELSE 0 END END END, 0.0)) AS cqpc, CASE WHEN COALESCE(Sum(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END), 0.0) AS FLOAT) / Cast(Sum(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_eac_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE Cast( COALESCE( Sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / Cast( Sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fcap, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_eac_ap_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * Abs(Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / Cast(COALESCE(Sum( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, COALESCE(f.cq_gp_lkg_pv_amt, 0.0) AS cqap, CASE WHEN COALESCE(Sum(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sum(cq_gp_lkg_pv_amt), 0.0) AS FLOAT) / Cast(Sum(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_ap_pct, COALESCE(f.overrun_cost_amt, 0.0) AS cstovrn, CASE WHEN COALESCE(Sum(f.lst_3_mth_cost_aprvd_amt), 0.0) = 0.0 THEN 0.0 ELSE Cast(COALESCE(Sign(Sum(f.overrun_cost_amt)), 0.0) AS FLOAT)* Abs(Cast(COALESCE(Sum(f.overrun_cost_amt), 0.0) AS FLOAT) / Cast(COALESCE(Sum(f.lst_3_mth_cost_aprvd_amt), 0.0) AS FLOAT)) END AS cost_over_pct, f.tier_cost_overrun_num AS tier_cost_over_num, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak, Substr(d.qtr_key, 1, 4) || 'Q' || Substr(d.qtr_key, 5, 1) AS qtr_value FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key LEFT JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop snap ON snap.mth_key = f.mth_key AND snap.graph_nm = 'GP_L2_GR1' AND snap.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> d.qtr_key {operator} replace('{yrQtrKey}', 'Q', '') GROUP BY cn.cntrct_num, cn.cntrct_desc, geo1.geo_lvl1_nm, geo2.geo_lvl2_nm, ctry.ctry_nm, s.sctr_gb_nm, indstry.indstry_cmr_nm, gp.grth_plfm_desc, sl.svc_line_nm, cu.cust_nm, cn.end_dt, cn.sgnd_dt, cn.strtd_dt, cn.pe_notes_id, f.curr_acct_yr, f.curr_acct_mo, f.pc_gp_pct, f.aprvd_gp_pct, f.aprvd_gp_amt, f.pc_actls_gp_ac_amt, f.tcv_cb_amt, f.cq_gp_lkg_ac_amt, f.itd_actls_gp_cb_pct, f.itd_actls_gp_cb_amt, f.itd_actls_cost_cb_amt, f.itd_actls_rev_cb_amt, f.eac_actls_gp_amt, f.eac_actls_cost_amt, f.eac_actls_rev_amt, f.eac_actls_gp_pct, f.aprvd_cost_amt, f.aprvd_rev_amt, f.pc_actls_gp_ac_amt, f.pc_cost_amt, f.pc_actls_rev_ac_amt, a.active_typ_cd, f.itd_to_pc_lkg_w_cntgcy_amt, f.frcst_to_pc_lkg_w_cntgcy_amt, f.ytd_to_pc_lkg_w_cntgcy_amt, f.frcst_to_aprvd_lkg_w_cntgcy_amt, f.aprvd_to_pc_lkg_w_cntgcy_amt, f.cq_to_pc_lkg_w_cntgcy_amt, f.itd_to_pc_lkg_amt, f.frcst_to_pc_lkg_amt, f.ytd_to_pc_lkg_amt, f.frcst_to_aprvd_lkg_amt, f.aprvd_to_pc_lkg_amt, f.cq_gp_lkg_pv_amt, f.overrun_cost_amt, f.tier_cost_overrun_num, d.qtr_key, invld_pc_flg, invld_pc_ac_flg, invld_pc_cb_flg, invld_aprvd_flg, invld_frcst_flg ORDER BY {orderColumn} {orderDirection} ;\",\"description\":\"Contract Tiered Leakage Export\"}",
      "t2TLExportWorkNum": "{\"name\":\"t2TLExportWorkNum\",\"sqlTemplate\":\"SELECT cntr.cntrct_num AS contract_number, cntr.cntrct_desc AS contract_desc, proj.proj_num AS work_number, proj.proj_desc AS work_desc, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, sgd.sctr_gb_nm AS sector, gp.grth_plfm_desc AS growth_platform, RTRIM(sl.svc_line_nm) AS service_line, proj.clust_nm AS cluster_name, cd.cust_nm AS customer, tcv_amt AS tcv, DATE(cntr.sgnd_dt) AS contract_sign_date, ad.curr_acct_yr, ad.curr_acct_mo, a.active_typ_desc AS status, f.pc_rev_amt AS pc_plan_rev, f.pc_cost_amt AS pc_plan_cost, f.pc_gp_amt AS pc_gp, f.pc_gp_pct AS pc_gp_pct, f.etc_actls_rev_amt AS eac_rev, f.etc_actls_cost_amt AS eac_cost, f.etc_actls_gp_amt AS eac_gp, f.etc_actls_gp_pct AS eac_actls_gp_pct, f.aprvd_rev_amt AS ap_rev, f.aprvd_cost_amt AS ap_cost, f.aprvd_gp_amt AS ap_gp, f.aprvd_gp_pct AS ap_pct, f.itd_actls_rev_amt AS itd_act_rev, f.itd_actls_cost_amt AS itd_act_cost, f.itd_actls_gp_amt AS itd_act_gp, f.itd_actls_gp_pct AS itd_act_gp_pct, CASE WHEN cq_to_ap_flg = 1 THEN cq_gp_lkg_ac_amt ELSE 0 END AS cq_gp_lkg, CASE WHEN cq_to_ap_flg = 1 THEN COALESCE(cq_gp_ac_pv_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) ELSE 0 END AS cq_gp_lkg_pct, CASE WHEN eac_to_ap_flg = 1 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END AS fc_to_ap_lkg, CASE WHEN eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END AS fc_to_ap_pct, CASE WHEN eac_to_ap_flg = 1 THEN frcst_to_aprvd_lkg_amt ELSE 0 END AS eac_lkg, CASE WHEN eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END AS eac_lkg_pct, CASE WHEN cost_overrun_flg = 1 THEN ABS(overrun_cost_amt) ELSE 0 END AS cost_overrun, CASE WHEN cost_overrun_flg = 1 THEN COALESCE(CAST(ABS(overrun_cost_amt) AS FLOAT) / NULLIF(ABS(lst_3_mth_cost_aprvd_amt), 0), 0) ELSE 0 END AS cost_overrun_pct, f.tier_gp_lkg_num AS tier_gp_lkg_num, f.tier_cost_overrun_num AS tier_cost_overrun_num, f.tier_eac_lkg_num AS tier_eac_lkg_num, f.itd_to_pc_lkg_amt AS itd_to_pc_lkg, COALESCE(CAST(itd_to_pc_lkg_amt AS FLOAT) / NULLIF(itd_actls_rev_amt, 0), 0) AS itd_to_pc_pct, f.frcst_to_pc_lkg_amt AS fc_to_pc_lkg, COALESCE(CAST(f.frcst_to_pc_lkg_amt AS FLOAT) / NULLIF(pc_rev_amt, 0), 0) AS fc_to_pc_pct, f.ytd_to_pc_lkg_amt AS ytd_to_pc_lkg, COALESCE(CAST(ytd_to_pc_lkg_amt AS FLOAT) / NULLIF(pc_rev_amt, 0), 0) AS ytd_to_pc_pct, f.aprvd_to_pc_lkg_amt AS ap_to_pc_lkg, COALESCE(CAST(aprvd_to_pc_lkg_amt AS FLOAT) / NULLIF(pc_rev_amt, 0), 0) AS ap_to_pc_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.project_dim proj ON f.proj_key = proj.proj_key INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.practice_dim pd ON f.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR '{status}'='_AC') INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> (( '{metric}' = 'FC_EAC_AP' AND f.eac_to_ap_flg = 1 AND f.tier_eac_lkg_num {operator} {tier}) OR ( '{metric}' = 'CQ_TO_AP' AND f.cq_to_ap_flg = 1 AND f.tier_gp_lkg_num {operator} {tier}) OR ( '{metric}' = 'COST_OVER' AND f.cost_overrun_flg = 1 AND f.tier_cost_overrun_num {operator} {tier})) ORDER BY CASE WHEN '{orderColumn}' = 'var' THEN CASE '{metric}' WHEN 'CQ_TO_AP' THEN cq_gp_lkg WHEN 'FC_EAC_AP' THEN eac_lkg WHEN 'COST_OVER' THEN cost_overrun END ELSE tcv END {orderDirection} ; \",\"description\":\"Work Number TieredLeakage Export\"}",
      "t2TLWorldWideWorkNum": "{\"name\":\"t2TLWorldWideWorkNum\",\"sqlTemplate\":\"SELECT COALESCE(CASE '{metric}' WHEN 'CQ_TO_AP' THEN SUM(COALESCE(cq_gp_lkg_ac_amt * cq_to_ap_flg, 0)) WHEN 'FC_EAC_AP' THEN SUM(COALESCE(frcst_to_aprvd_lkg_amt * eac_to_ap_flg, 0)) WHEN 'COST_OVER' THEN SUM(COALESCE(overrun_cost_amt * cost_overrun_flg, 0)) END, 0) AS lkg_amt, COALESCE(CASE '{metric}' WHEN 'CQ_TO_AP' THEN CAST(SUM(COALESCE(cq_gp_lkg_ac_amt * cq_to_ap_flg, 0)) AS FLOAT) / NULLIF(SUM(COALESCE(cq_rev_ac_pv_amt, 0)), 0) WHEN 'FC_EAC_AP' THEN CAST(SUM(COALESCE(frcst_to_aprvd_lkg_amt * eac_to_ap_flg, 0)) AS FLOAT) / NULLIF(SUM(COALESCE(tcv_amt, 0)), 0) WHEN 'COST_OVER' THEN CAST(SUM(COALESCE(overrun_cost_amt * cost_overrun_flg, 0)) AS FLOAT) / NULLIF(SUM(COALESCE(lst_3_mth_cost_aprvd_amt, 0)), 0) END, 0) AS lkg_pct FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND( a.active_typ_cd = 'A' OR ( '{status}'='_AC' AND a.active_typ_cd = 'C')) INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' WHERE ('{metric}' != 'FC_EAC_AP' OR tier_eac_lkg_num > -1) AND ('{metric}' != 'CQ_TO_AP' OR tier_gp_lkg_num > -1) AND ('{metric}' != 'COST_OVER' OR tier_cost_overrun_num > -1) FETCH FIRST ROW ONLY ;\",\"description\":\"Work Number World Wide TieredLeakage\"}",  

      "t1PlanHealthView": "{\"name\":\"t1PlanHealthView\",\"sqlTemplate\":\"SELECT MAX(f.modified_on_tms) AS LOAD_DATE, MAX(CASE WHEN f.mth_curr_flg = 1 THEN qd.QTR_NUM ELSE NULL END) AS QTR_NUM, MAX(CASE WHEN f.mth_curr_flg = 1 THEN md.MTH_NUM ELSE NULL END) AS CURR_MO, MAX(CASE WHEN f.mth_prev_flg = 1 THEN qd.qtr_num ELSE NULL END) AS PREV_QTR_NUM, MAX(CASE WHEN f.mth_prev_flg = 1 THEN md.MTH_NUM ELSE NULL END) AS LAST_MO_PREV_QTR, SUM( CASE WHEN f.INVLD_PC_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS PCE_LAST_MO_PREV_QTR_ADD, SUM( CASE WHEN f.INVLD_PC_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS PCE_LAST_MO_PREV_QTR_ADD_PRI_PREV_QTR, SUM( CASE WHEN f.INVLD_PC_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS PCE_CURR_QTR_ADD, SUM( CASE WHEN f.INVLD_PC_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS PCE_CURR_QTR_ADD_PRI_CURR_QTR, SUM( CASE WHEN f.INVLD_APRVD_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS APE_LAST_MO_PREV_QTR_ADD, SUM( CASE WHEN f.INVLD_APRVD_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS APE_LAST_MO_PREV_QTR_ADD_PRI_PREV_QTR, SUM( CASE WHEN f.INVLD_APRVD_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS APE_CURR_QTR_ADD, SUM( CASE WHEN f.INVLD_APRVD_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS APE_CURR_QTR_ADD_PRI_CURR_QTR, SUM( CASE WHEN f.INVLD_FRCST_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS FE_LAST_MO_PREV_QTR_ADD, SUM( CASE WHEN f.INVLD_FRCST_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS FE_LAST_MO_PREV_QTR_ADD_PRI_PREV_QTR, SUM( CASE WHEN f.INVLD_FRCST_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS FE_CURR_QTR_ADD, SUM( CASE WHEN f.INVLD_FRCST_FLG = 'Y' AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS FE_CURR_QTR_ADD_PRI_CURR_QTR, SUM( CASE WHEN (F.INVLD_PC_FLG = 'Y' OR F.INVLD_APRVD_FLG = 'Y' OR F.INVLD_FRCST_FLG = 'Y') AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS TOTAL_LAST_MO_PREV_QTR_ADD, SUM( CASE WHEN (F.INVLD_PC_FLG = 'Y' OR F.INVLD_APRVD_FLG = 'Y' OR F.INVLD_FRCST_FLG = 'Y') AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_prev_flg = 1 THEN 1 ELSE 0 END) AS TOTAL_LAST_MO_PREV_QTR_ADD_PRI_PREV_QTR, SUM( CASE WHEN (F.INVLD_PC_FLG = 'Y' OR F.INVLD_APRVD_FLG = 'Y' OR F.INVLD_FRCST_FLG = 'Y') AND REPLACE(F.QTR_KEY_CD, 'Q', '') >= qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS TOTAL_CURR_QTR_ADD, SUM( CASE WHEN (F.INVLD_PC_FLG = 'Y' OR F.INVLD_APRVD_FLG = 'Y' OR F.INVLD_FRCST_FLG = 'Y') AND REPLACE(F.QTR_KEY_CD, 'Q', '') < qd.QTR_KEY AND f.mth_curr_flg = 1 THEN 1 ELSE 0 END) AS TOTAL_CURR_QTR_ADD_PRI_CURR_QTR, MIN(ad.DATA_LOAD_DESC) AS DATA_LOAD_DATE FROM phd.CONTRACT_LEAKAGE_FACT_PH_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM G4 ON F.CTRY_KEY = G4.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY AND GP.IN_SCOPE = 1 INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY AND SL.IN_SCOPE = 1 INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN phd.MONTH_DIM md ON f.mth_key = md.mth_key INNER JOIN PHD.QUARTER_DIM qd ON qd.QTR_KEY = md.QTR_KEY INNER JOIN phd.acct_drop ad ON ad.current = 1 AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.qtr_key_cd > '0000Q1' AND ( f.mth_prev_flg = 1 OR f.mth_curr_flg = 1) FETCH FIRST ROW ONLY OPTIMIZE FOR 1 ROW ; \",\"description\":\"Plan Health Work View of contracts signed with exclusions\"}",
      "t2PlanHealthExclusionContract": "{\"name\":\"t2PlanHealthExclusionContract\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS BUS_ATTR, MIN(ad.data_load_desc) AS DATA_LOAD_DESC, SUM(CASE WHEN f.INVLD_PC_FLG = 'Y' THEN 1 ELSE 0 END) AS PC_EXCLUDED_CNTRCT_CNT, SUM(CASE WHEN COALESCE(f.INVLD_PC_FLG, '') != '' THEN 1 ELSE 0 END) AS PC_NOT_NULL_CNTRCT_CNT, SUM(CASE WHEN f.INVLD_APRVD_FLG = 'Y' THEN 1 ELSE 0 END) AS AP_EXCLUDED_CNTRCT_CNT, SUM(CASE WHEN COALESCE(f.INVLD_APRVD_FLG, '') != '' THEN 1 ELSE 0 END) AS AP_NOT_NULL_CNTRCT_CNT, SUM(CASE WHEN f.INVLD_FRCST_FLG = 'Y' THEN 1 ELSE 0 END) AS FC_EXCLUDED_CNTRCT_CNT, SUM(CASE WHEN COALESCE(f.INVLD_FRCST_FLG, '') != '' THEN 1 ELSE 0 END) AS FC_NOT_NULL_CNTRCT_CNT, SUM(CASE WHEN f.INVLD_PC_FLG = 'Y' THEN f.PC_REV_AMT ELSE 0 END) AS PC_EXCLUDED_REV_AMT, SUM(CASE WHEN COALESCE(f.INVLD_PC_FLG, '') != '' THEN f.PC_REV_AMT ELSE 0 END) AS PC_NOT_NULL_REV_AMT, SUM(CASE WHEN f.INVLD_APRVD_FLG = 'Y' THEN f.APRVD_REV_AMT ELSE 0 END) AS AP_EXCLUDED_REV_AMT, SUM(CASE WHEN COALESCE(f.INVLD_APRVD_FLG, '') != '' THEN f.APRVD_REV_AMT ELSE 0 END) AS AP_NOT_NULL_REV_AMT, SUM(CASE WHEN f.INVLD_FRCST_FLG = 'Y' THEN f.EAC_ACTLS_REV_AMT ELSE 0 END) AS FC_EXCLUDED_REV_AMT, SUM(CASE WHEN COALESCE(f.INVLD_FRCST_FLG, '') != '' THEN f.EAC_ACTLS_REV_AMT ELSE 0 END) AS FC_NOT_NULL_REV_AMT FROM PHD.CONTRACT_LEAKAGE_FACT_PH_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY AND GP.IN_SCOPE = 1 INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY AND SL.IN_SCOPE = 1 INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP AD ON f.mth_key = ad.mth_key AND AD.GRAPH_NM = 'GP_L2_GR1' AND AD.CURRENT = 1 {filter} <filter?AND:WHERE> F.QTR_KEY_CD {operator} '{yrQtrKey}' GROUP BY RTRIM({busAttr}) ORDER BY RTRIM({busAttr}) ;\",\"description\":\"Obtains contract count for Plan Health exlusions\"}",
      "t2PlanHealthExclusionWorkNum": "{\"name\":\"t2PlanHealthExclusionWorkNum\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS BUS_ATTR, MIN(ad.data_load_desc) AS DATA_LOAD_DESC, SUM(CASE WHEN f.INVLD_PC_FLG = 'Y' THEN 1 ELSE 0 END) AS PC_EXCLUDED_CNTRCT_CNT, SUM(CASE WHEN COALESCE(f.INVLD_PC_FLG, '') != '' THEN 1 ELSE 0 END) AS PC_NOT_NULL_CNTRCT_CNT, SUM(CASE WHEN f.INVLD_APRVD_FLG = 'Y' THEN 1 ELSE 0 END) AS AP_EXCLUDED_CNTRCT_CNT, SUM(CASE WHEN COALESCE(f.INVLD_APRVD_FLG, '') != '' THEN 1 ELSE 0 END) AS AP_NOT_NULL_CNTRCT_CNT, SUM(CASE WHEN f.INVLD_FRCST_FLG = 'Y' THEN 1 ELSE 0 END) AS FC_EXCLUDED_CNTRCT_CNT, SUM(CASE WHEN COALESCE(f.INVLD_FRCST_FLG, '') != '' THEN 1 ELSE 0 END) AS FC_NOT_NULL_CNTRCT_CNT, SUM(CASE WHEN f.INVLD_PC_FLG = 'Y' THEN f.PC_REV_AMT ELSE 0 END) AS PC_EXCLUDED_REV_AMT, SUM(CASE WHEN COALESCE(f.INVLD_PC_FLG, '') != '' THEN f.PC_REV_AMT ELSE 0 END) AS PC_NOT_NULL_REV_AMT, SUM(CASE WHEN f.INVLD_APRVD_FLG = 'Y' THEN f.APRVD_REV_AMT ELSE 0 END) AS AP_EXCLUDED_REV_AMT, SUM(CASE WHEN COALESCE(f.INVLD_APRVD_FLG, '') != '' THEN f.APRVD_REV_AMT ELSE 0 END) AS AP_NOT_NULL_REV_AMT, SUM(CASE WHEN f.INVLD_FRCST_FLG = 'Y' THEN f.EAC_ACTLS_REV_AMT ELSE 0 END) AS FC_EXCLUDED_REV_AMT, SUM(CASE WHEN COALESCE(f.INVLD_FRCST_FLG, '') != '' THEN f.EAC_ACTLS_REV_AMT ELSE 0 END) AS FC_NOT_NULL_REV_AMT FROM PHD.PROJECT_LEAKAGE_FACT_PH_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY AND GP.IN_SCOPE = 1 INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY AND SL.IN_SCOPE = 1 INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP AD ON f.mth_key = ad.mth_key AND AD.GRAPH_NM = 'GP_L2_GR1' AND AD.CURRENT = 1 {filter} <filter?AND:WHERE> F.QTR_KEY_CD {operator} '{yrQtrKey}' GROUP BY RTRIM({busAttr}) ORDER BY RTRIM({busAttr}) ; \",\"description\":\"Obtains work number count for Plan Health exlusions\"}",
      "t2planhealthexclusiontrendcontract": "{\"name\":\"t2planhealthexclusiontrendcontract\",\"sqlTemplate\":\"WITH dat AS ( SELECT f.mth_key, CASE '{metric}' WHEN 'PC' THEN f.exclsn_pc_flg WHEN 'AP' THEN f.exclsn_ap_flg WHEN 'FC' THEN f.exclsn_fc_flg ELSE '-' END AS exclsn_flg, SUM( CASE '{metric}' WHEN 'PC' THEN f.pc_rev_amt WHEN 'AP' THEN f.aprvd_rev_amt WHEN 'FC' THEN f.eac_actls_rev_amt ELSE 0 END) AS rev_amt, SUM( CASE '{metric}' WHEN 'PC' THEN f.droped_exclsn_next_pc_flg WHEN 'AP' THEN f.droped_exclsn_next_ap_flg WHEN 'FC' THEN f.droped_exclsn_next_fc_flg ELSE 0 END) AS droped_exclsn_next_flg, COUNT AS cnt FROM PHD.CONTRACT_LEAKAGE_FACT_PH_V AS f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.CURRENT != 1 {filter} <filter?AND:WHERE> f.qtr_key_cd {operator} '{yrQtrKey}' AND CASE '{metric}' WHEN 'PC' THEN f.exclsn_pc_flg WHEN 'AP' THEN f.exclsn_ap_flg WHEN 'FC' THEN f.exclsn_fc_flg ELSE '-' END != '-' GROUP BY f.mth_key, CASE '{metric}' WHEN 'PC' THEN f.exclsn_pc_flg WHEN 'AP' THEN f.exclsn_ap_flg WHEN 'FC' THEN f.exclsn_fc_flg ELSE '-' END ), monthly AS ( SELECT f.mth_key, SUM(CASE WHEN f.exclsn_flg = 'N' THEN COALESCE(f.cnt, 0) ELSE 0 END) AS new_exclsn_num , SUM(CASE WHEN f.exclsn_flg = 'N' THEN COALESCE(f.rev_amt, 0) ELSE 0 END) AS new_exclsn_rev_amt, SUM(CASE WHEN f.exclsn_flg = 'E' THEN COALESCE(f.cnt, 0) ELSE 0 END) AS existg_exclsn_num , SUM(CASE WHEN f.exclsn_flg = 'E' THEN COALESCE(f.rev_amt, 0) ELSE 0 END) AS existg_exclsn_rev_amt, SUM(COALESCE(CASE WHEN f.exclsn_flg = 'D' THEN f.cnt ELSE 0 END, 0)) AS drop_exclsn_num , SUM(CASE WHEN f.exclsn_flg = 'D' THEN COALESCE(f.rev_amt, 0) ELSE 0 END) AS drop_exclsn_rev_amt, SUM(COALESCE(f.droped_exclsn_next_flg, 0)) AS droped_exclsn_next_flg_cnt, SUM(CASE WHEN f.exclsn_flg = 'N' OR f.exclsn_flg = 'E' THEN COALESCE(f.cnt, 0) ELSE 0 END) AS exclsn_total FROM dat as f group by f.mth_key ) SELECT ad.curr_acct_yr, ad.curr_acct_mo, f.new_exclsn_num AS new_exclsn_cntrct_num, f.new_exclsn_rev_amt, DECIMAL(f.new_exclsn_num, 31, 9) / NULLIF(f.exclsn_total, 0) AS new_exclsn_pct, f.existg_exclsn_num AS existg_exclsn_cntrct_num , f.existg_exclsn_rev_amt, DECIMAL (f.existg_exclsn_num, 31, 9) / NULLIF(f.exclsn_total, 0) AS existg_exclsn_pct, f.drop_exclsn_num + LAG(f.droped_exclsn_next_flg_cnt, 1, 0) OVER(ORDER BY f.mth_key ASC) AS drop_exclsn_cntrct_num, f.drop_exclsn_rev_amt, COALESCE(DECIMAL (f.drop_exclsn_num + LAG(f.droped_exclsn_next_flg_cnt, 1, 0) OVER(ORDER BY f.mth_key ASC), 31, 9) / NULLIF(LAG(f.exclsn_total) OVER(ORDER BY f.mth_key ASC), 0), 0) AS drop_exclsn_pct FROM monthly f INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.CURRENT != 1 ORDER BY f.mth_key FETCH FIRST 13 ROWS ONLY OPTIMIZE FOR 13 ROWS ;\",\"description\":\"Contract Plan Health Exclusion Trend\"}",
      "t2planhealthexclusiontrendworknumber": "{\"name\":\"t2planhealthexclusiontrendworknumber\",\"sqlTemplate\":\"WITH dat AS ( SELECT f.mth_key, CASE '{metric}' WHEN 'PC' THEN f.exclsn_pc_flg WHEN 'AP' THEN f.exclsn_ap_flg WHEN 'FC' THEN f.exclsn_fc_flg ELSE '-' END AS exclsn_flg, SUM( CASE '{metric}' WHEN 'PC' THEN f.pc_rev_amt WHEN 'AP' THEN f.aprvd_rev_amt WHEN 'FC' THEN f.eac_actls_rev_amt ELSE 0 END) AS rev_amt, SUM( CASE '{metric}' WHEN 'PC' THEN f.droped_exclsn_next_pc_flg WHEN 'AP' THEN f.droped_exclsn_next_ap_flg WHEN 'FC' THEN f.droped_exclsn_next_fc_flg ELSE 0 END) AS droped_exclsn_next_flg, COUNT AS cnt FROM PHD.PROJECT_LEAKAGE_FACT_PH_V AS f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.CURRENT != 1 {filter} <filter?AND:WHERE> f.qtr_key_cd {operator} '{yrQtrKey}' AND CASE '{metric}' WHEN 'PC' THEN f.exclsn_pc_flg WHEN 'AP' THEN f.exclsn_ap_flg WHEN 'FC' THEN f.exclsn_fc_flg ELSE '-' END != '-' GROUP BY f.mth_key, CASE '{metric}' WHEN 'PC' THEN f.exclsn_pc_flg WHEN 'AP' THEN f.exclsn_ap_flg WHEN 'FC' THEN f.exclsn_fc_flg ELSE '-' END ), monthly AS ( SELECT f.mth_key, SUM(CASE WHEN f.exclsn_flg = 'N' THEN COALESCE(f.cnt, 0) ELSE 0 END) AS new_exclsn_num , SUM(CASE WHEN f.exclsn_flg = 'N' THEN COALESCE(f.rev_amt, 0) ELSE 0 END) AS new_exclsn_rev_amt, SUM(CASE WHEN f.exclsn_flg = 'E' THEN COALESCE(f.cnt, 0) ELSE 0 END) AS existg_exclsn_num , SUM(CASE WHEN f.exclsn_flg = 'E' THEN COALESCE(f.rev_amt, 0) ELSE 0 END) AS existg_exclsn_rev_amt, SUM(COALESCE(CASE WHEN f.exclsn_flg = 'D' THEN f.cnt ELSE 0 END, 0)) AS drop_exclsn_num , SUM(CASE WHEN f.exclsn_flg = 'D' THEN COALESCE(f.rev_amt, 0) ELSE 0 END) AS drop_exclsn_rev_amt, SUM(COALESCE(f.droped_exclsn_next_flg, 0)) AS droped_exclsn_next_flg_cnt, SUM(CASE WHEN f.exclsn_flg = 'N' OR f.exclsn_flg = 'E' THEN COALESCE(f.cnt, 0) ELSE 0 END) AS exclsn_total FROM dat as f group by f.mth_key ) SELECT ad.curr_acct_yr, ad.curr_acct_mo, f.new_exclsn_num AS new_exclsn_work_num, f.new_exclsn_rev_amt, DECIMAL(f.new_exclsn_num, 31, 9) / NULLIF(f.exclsn_total, 0) AS new_exclsn_pct, f.existg_exclsn_num AS existg_exclsn_work_num , f.existg_exclsn_rev_amt, DECIMAL (f.existg_exclsn_num, 31, 9) / NULLIF(f.exclsn_total, 0) AS existg_exclsn_pct, f.drop_exclsn_num + LAG(f.droped_exclsn_next_flg_cnt, 1, 0) OVER(ORDER BY f.mth_key ASC) AS drop_exclsn_work_num, f.drop_exclsn_rev_amt, COALESCE(DECIMAL (f.drop_exclsn_num + LAG(f.droped_exclsn_next_flg_cnt, 1, 0) OVER(ORDER BY f.mth_key ASC), 31, 9) / NULLIF(LAG(f.exclsn_total) OVER(ORDER BY f.mth_key ASC), 0), 0) AS drop_exclsn_pct FROM monthly f INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.CURRENT != 1 ORDER BY f.mth_key FETCH FIRST 13 ROWS ONLY OPTIMIZE FOR 13 ROWS ;\",\"description\":\"Work Number Plan Health Exclusion Trend\"}",
      "t2planhealthexclusiondetailscontract": "{\"name\":\"t2planhealthexclusiondetailscontract\",\"sqlTemplate\":\"SELECT RTRIM(cn.cntrct_num) AS cntrct_num, RTRIM(d.qtr_key_cd) AS cntrct_sgnd_dt_qtr_yr, RTRIM(cn.cntrct_desc) AS project_name, RTRIM(cu.cust_nm) AS client_name, CASE '{metric}' WHEN 'PC' THEN f.pc_gp_pct WHEN 'AP' THEN f.aprvd_gp_pct WHEN 'FC' THEN f.eac_actls_gp_pct END AS gpp, COALESCE(f.tcv_amt,0.0) AS tcv, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction FROM phd.contract_leakage_fact_PH_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.date_dim d ON f.sgnd_dt = d.day_dt INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key = 'CURRENT' {filter} <filter?AND:WHERE> CASE '{metric}' WHEN 'PC' THEN f.invld_pc_flg WHEN 'AP' THEN f.invld_aprvd_flg WHEN 'FC' THEN f.invld_frcst_flg END = 'Y' AND d.qtr_key_cd {operator} '{yrQtrKey}' ORDER BY {orderColumn} {orderDirection} FETCH FIRST 30 rows only ;\",\"description\":\"Plan Health Exclusion Contract Details\"}",
      "t2planhealthexclusiondetailsworknumber": "{\"name\":\"t2planhealthexclusiondetailsworknumber\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, RTRIM(p.proj_desc) AS proj_desc, RTRIM(f.qtr_key_cd) AS cntrct_sgnd_dt_qtr_yr, RTRIM(p.PROJ_DESC) AS project_name, RTRIM(cu.cust_nm) AS client_name, CASE '{metric}' WHEN 'PC' THEN f.pc_gp_pct WHEN 'AP' THEN f.aprvd_gp_pct WHEN 'FC' THEN f.eac_actls_gp_pct ELSE 0 END AS gpp, COALESCE(f.tcv_amt,0.0) AS tcv, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction FROM phd.project_leakage_fact_PH_V f INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.current = 1 {filter} <filter?AND:WHERE> CASE '{metric}' WHEN 'PC' THEN f.invld_pc_flg WHEN 'AP' THEN f.invld_aprvd_flg WHEN 'FC' THEN f.invld_frcst_flg END = 'Y' AND f.QTR_KEY_CD {operator} '{yrQtrKey}' ORDER BY {orderColumn} {orderDirection} FETCH FIRST 30 rows only OPTIMIZE FOR 30 ROWS ;\",\"description\":\"Plan Health Exclusion Work Nbr Details\"}",
      "t2PlanHealthContractPopupDetail": "{\"name\":\"t2PlanHealthContractPopupDetail\",\"sqlTemplate\":\"select d.data_load_desc as data_load_date, rtrim(cn.cntrct_num) as number, 'contract' as type, cn.cntrct_key, rtrim(cu.cust_nm) as customer, rtrim(cn.cntrct_desc) as contract_name, date(cn.sgnd_dt) as contract_sign_date, rtrim(cn.cntrct_desc) as project, rtrim(cn.pe_notes_id) as brand_pe, rtrim(ctry.ctry_nm) as country, rtrim(s.sctr_gb_nm) as sector, rtrim(sl.svc_line_nm) as svc_line_nm, rtrim(gp.grth_plfm_desc) as growth_platform, clf.pc_actls_gp_ac_pct as pc_gp_pct, coalesce(clf.pc_gp_amt, 0.0) as pc_gp_amt, clf.cq_aprvd_gp_ac_pct as ap_gp_pct, coalesce(clf.aprvd_gp_amt, 0.0) as ap_gp_amt, clf.eac_actls_gp_pct as eac_gp_pct, coalesce(clf.eac_actls_gp_amt, 0.0) as eac_gp_amt, clf.itd_actls_gp_cb_pct as act_gp_pct, coalesce(clf.tcv_cb_amt, 0.0) as tcv, cn.phd_url as ippf_url from phd.contract_leakage_fact_16w_v clf inner join phd.contract_dim cn on clf.cntrct_key = cn.cntrct_key inner join phd.date_dim dt on cn.sgnd_dt = dt.day_dt inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = clf.geo_lvl1_key and geo1.geo_lvl1_key not in (0, 21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = clf.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = clf.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = clf.indstry_key inner join phd.practice_dim prac on prac.practice_key = clf.practice_key and prac.include = 1 inner join phd.growth_platform_dim gp on clf.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on clf.svc_line_key = sl.svc_line_key and sl.in_scope = 1 inner join phd.customer_dim cu on clf.cust_key = cu.cust_key inner join phd.sector_gb_dim s on clf.sctr_key = s.sctr_gb_key and s.in_scope = 1 inner join phd.acct_drop d on clf.mth_key = d.mth_key and d.yr_mo_key = 'CURRENT' and d.graph_nm = 'GP_L2_GR1' where cn.cntrct_num = '{cntrctNum}' ; \",\"description\":\"Plan Health Contract Detail popup\"}",
      "t2PlanHealthWorkPopupDetail": "{\"name\":\"t2PlanHealthWorkPopupDetail\",\"sqlTemplate\":\"select data_load_desc as data_load_date, rtrim(p.proj_num) as number, 'work number' as type, p.proj_key, cn.cntrct_key, rtrim(cn.cntrct_num) as contract, rtrim(cu.cust_nm) as client_name, rtrim(cn.cntrct_desc) as contract_name, cn.sgnd_dt as contract_sign_date, rtrim(p.proj_desc) as project, rtrim(p.pe_notes_id) as brand_pe, rtrim(ctry.ctry_nm) as country, rtrim(s.sctr_gb_nm) as sector, rtrim(sl.svc_line_nm) as svc_line_nm, rtrim(gp.grth_plfm_desc) as growth_platform, f.pc_actls_gp_ac_pct as pc_gp_pct, coalesce(f.pc_gp_amt, 0.0) as pc_gp_amt, f.aprvd_gp_pct as ap_gp_pct, coalesce(f.aprvd_gp_amt, 0.0) as ap_gp_amt, f.eac_actls_gp_pct as eac_gp_pct, coalesce(f.eac_actls_gp_amt, 0.0) as eac_gp_amt, f.itd_actls_gp_pct as act_gp_pct, coalesce(f.tcv_amt, 0.0) as tcv, p.aprv_pln_dt as appr_plan_date, f.frcst_sbmt_tms as fcast_date, p.phd_url as ippf_url from phd.project_leakage_fact_16w_v f inner join phd.customer_dim cu on f.cust_key = cu.cust_key inner join phd.project_dim p on f.proj_key = p.proj_key inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in (0, 21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key and sl.in_scope = 1 inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key and s.in_scope = 1 inner join phd.acct_drop d on f.mth_key = d.mth_key and graph_nm = 'GP_L2_GR1' and d.yr_mo_key = 'CURRENT' where p.proj_num = '{workNum}' ; \",\"description\":\"Plan Health Work Number Detail popup\"}",
      "t2PlanHealthWorkNumExport": "{\"name\":\"t2PlanHealthWorkNumExport\",\"sqlTemplate\":\"SELECT ad.data_load_desc AS data_load_date, f.curr_acct_yr AS acct_yr, f.curr_acct_mo AS acct_mo, RTRIM(cntrct_num) AS cntrct_num, RTRIM(p.proj_num) AS work_num, RTRIM(p.proj_desc) AS proj_name, RTRIM(cn.cntrct_desc) AS cntrct_name, RTRIM(cu.cust_nm) AS client_name, RTRIM(p.prtnr_nm) AS partner_name, RTRIM(geo1.geo_lvl1_nm) AS geo_desc, RTRIM(geo2.geo_lvl2_nm) AS mkt_desc, RTRIM(ctry.ctry_nm) AS country, DATE(cn.sgnd_dt) AS cntrct_sgnd_dt, RTRIM(gp.grth_plfm_desc) AS growth_platform, RTRIM(s.sctr_gb_nm) AS sector, RTRIM(indstry.indstry_cmr_nm) AS industry_desc, sl.svc_line_nm AS service_line, RTRIM(prac.practice_nm) AS practice_nm, p.clust_nm AS cluster_name, DATE(p.aprv_pln_dt) AS aprv_pln_dt, DATE(f.frcst_sbmt_tms) AS fcast_date, COALESCE(f.tcv_amt,0.0) AS tcv, RTRIM(a.active_typ_cd) AS status_abbr, COALESCE(f.pc_rev_amt,0.0) AS pc_rev_amt, COALESCE(f.pc_cost_amt,0.0) AS pc_cost_amt, f.pc_gp_pct AS pc_gp_pct, COALESCE(f.pc_gp_amt,0.0) AS pc_gp_amt, COALESCE(f.eac_actls_rev_amt,0.0) AS eac_actls_rev_amt, COALESCE(f.eac_actls_cost_amt,0.0) AS eac_actls_cost_amt, f.eac_actls_gp_pct AS eac_actls_gp_pct, COALESCE(f.eac_actls_gp_amt,0.0) AS eac_actls_gp_amt, COALESCE(f.aprvd_rev_amt,0.0) AS aprvd_rev_amt, COALESCE(f.aprvd_cost_amt,0.0) AS aprvd_cost_amt, f.aprvd_gp_pct AS aprvd_gp_pct, COALESCE(f.aprvd_gp_amt,0.0) AS aprvd_gp_amt, COALESCE(f.itd_actls_rev_amt,0.0) AS itd_actls_rev_amt, COALESCE(f.itd_actls_cost_amt,0.0) AS itd_actls_cost_amt, COALESCE(f.itd_actls_gp_amt,0.0) AS itd_actls_gp_amt, f.itd_actls_gp_pct AS itd_actls_gp_pct, '{yrQtrKey}' AS yrqtrkey, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key LEFT JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.CURRENT = 1 {filter} <filter?AND:WHERE> d.qtr_key {operator} REPLACE('{yrQtrKey}','Q' ,'') ORDER BY tcv {orderDirection} FETCH FIRST 2000 ROWS ONLY OPTIMIZE FOR 2000 ROWS ;\",\"description\":\"Plan Health Work Number Export\"}",
      "t2PlanHealthContractExport": "{\"name\":\"t2PlanHealthContractExport\",\"sqlTemplate\":\"SELECT ad.data_load_desc AS data_load_date, f.curr_acct_yr AS acct_yr, f.curr_acct_mo AS acct_mo, RTRIM(cntrct_num) AS cntrct_num, RTRIM(cn.cntrct_desc) AS cntrct_name, RTRIM(cu.cust_nm) AS client_name, RTRIM(geo1.geo_lvl1_nm) AS geo_desc, RTRIM(geo2.geo_lvl2_nm) AS mkt_desc, RTRIM(cn.pe_notes_id) AS partner_name, RTRIM(ctry.ctry_nm) AS country, DATE(cn.sgnd_dt) AS cntrct_sgnd_dt, RTRIM(gp.grth_plfm_desc) AS growth_platform, RTRIM(s.sctr_gb_nm) AS sector, indstry.indstry_cmr_nm AS industry_desc, RTRIM(prac.practice_nm) AS practice_nm, sl.svc_line_nm AS service_line, COALESCE(f.tcv_cb_amt,0.0) AS tcv, RTRIM(a.active_typ_cd) AS status_abbr, COALESCE(f.pc_rev_amt,0.0) AS pc_rev_amt, COALESCE(f.pc_cost_amt,0.0) AS pc_cost_amt, f.pc_gp_pct AS pc_gp_pct, COALESCE(f.pc_gp_amt,0.0) AS pc_gp_amt, COALESCE(f.eac_actls_rev_amt,0.0) AS eac_actls_rev_amt, COALESCE(f.eac_actls_cost_amt,0.0) AS eac_actls_cost_amt, f.eac_actls_gp_pct AS eac_actls_gp_pct, COALESCE(f.eac_actls_gp_amt,0.0) AS eac_actls_gp_amt, COALESCE(f.aprvd_rev_amt,0.0) AS aprvd_rev_amt, COALESCE(f.aprvd_cost_amt,0.0) AS aprvd_cost_amt, f.aprvd_gp_pct AS aprvd_gp_pct, COALESCE(f.aprvd_gp_amt,0.0) AS aprvd_gp_amt, COALESCE(f.itd_actls_rev_amt,0.0) AS itd_actls_rev_amt, COALESCE(f.itd_actls_cost_amt,0.0) AS itd_actls_cost_amt, COALESCE(f.itd_actls_gp_amt,0.0) AS itd_actls_gp_amt, f.itd_actls_gp_pct AS itd_actls_gp_pct, '{yrQtrKey}' AS yrqtrkey, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key LEFT JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.date_dim d ON cn.sgnd_dt = d.day_dt INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.CURRENT = 1 {filter} <filter?AND:WHERE> d.qtr_key {operator} REPLACE('{yrQtrKey}','Q' ,'') ORDER BY tcv {orderDirection} FETCH FIRST 2000 ROWS ONLY OPTIMIZE FOR 2000 ROWS ;\",\"description\":\"Plan Health Contract Export\"}",

      "t1BusinessGPLeakage": "{\"name\":\"t1BusinessGPLeakage\",\"sqlTemplate\":\"with curr_leakage as( select ad.data_load_desc as data_load_date, sum(coalesce(cq_to_pc_lkg_amt, 0.0)) as cq_to_pc_lkg, sum (coalesce(cq_actls_rev_ac_pv_amt, 0.0)) as cq_rev, case when sum(coalesce(cq_actls_rev_ac_pv_amt, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(cq_to_pc_lkg_amt, 0.0) as float)) / sum(cast(coalesce(cq_actls_rev_ac_pv_amt, 0.0) as float)) end as cq_to_pc_perc, sum (coalesce(itd_to_pc_lkg_amt, 0.0)) as itd_to_pc_lkg, sum (coalesce(itd_actls_rev_cb_vldpc_amt, 0.0)) as itd_rev_cb_good_pc, case when sum(coalesce(itd_actls_rev_cb_vldpc_amt, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(itd_to_pc_lkg_amt, 0.0) as float)) / sum(cast(coalesce(itd_actls_rev_cb_vldpc_amt, 0.0) as float)) end as itd_to_pc_perc, sum (coalesce(ytd_to_pc_lkg_amt, 0.0)) as ytd_to_pc_lkg, sum (cast(coalesce(case when invld_pc_cb_flg = 'Y' then 0.0 else ytd_actls_rev_cb_amt end, 0.0) as float)) as ytd_act_rev, case when sum(coalesce( case when invld_pc_cb_flg = 'Y' then 0.0 else ytd_actls_rev_cb_amt end, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(ytd_to_pc_lkg_amt, 0.0) as float)) / sum(coalesce (ytd_actls_rev_cb_amt, 0.0)) end as ytd_to_pc_perc, sum (coalesce(frcst_to_pc_lkg_amt, 0.0)) as fc_to_pc_lkg, sum(cast(coalesce(case when invld_pc_flg = 'Y' then 0.0 else pc_rev_amt end, 0.0) as float)) as pc_plan_rev_a, case when sum(coalesce( case when invld_pc_flg = 'Y' then 0.0 else pc_rev_amt end, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(frcst_to_pc_lkg_amt, 0.0) as float)) / sum(coalesce(pc_rev_amt, 0.0)) end as fc_to_pc_perc from phd.contract_leakage_fact_16w_v f inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim s on s.sctr_gb_key = f.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.acct_drop ad on f.mth_key = ad.mth_key {filter} <filter?AND:WHERE> ad.graph_nm = 'GP_L2_GR1' and yr_mo_key = 'CURRENT' group by ad.data_load_desc  ), prev_leakage as ( select sum (coalesce(cq_to_pc_lkg_amt, 0.0)) as cq_to_pc_lkg, sum (coalesce(cq_actls_rev_ac_pv_amt, 0.0)) as cq_rev, case when sum(coalesce(cq_actls_rev_ac_pv_amt, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(cq_to_pc_lkg_amt, 0.0) as float)) / sum(cast(coalesce(cq_actls_rev_ac_pv_amt, 0.0) as float)) end as cq_to_pc_perc, sum (coalesce(itd_to_pc_lkg_amt, 0.0)) as itd_to_pc_lkg, sum (coalesce(itd_actls_rev_cb_vldpc_amt, 0.0)) as itd_rev_cb_good_pc, case when sum(coalesce(itd_actls_rev_cb_vldpc_amt, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(itd_to_pc_lkg_amt, 0.0) as float)) / sum(cast(coalesce(itd_actls_rev_cb_vldpc_amt, 0.0) as float)) end as itd_to_pc_perc, sum (coalesce(ytd_to_pc_lkg_amt, 0.0)) as ytd_to_pc_lkg, sum (coalesce(case when invld_pc_cb_flg = 'Y' then 0.0 else ytd_actls_rev_cb_amt end, 0.0)) as ytd_act_rev, case when sum(coalesce( case when invld_pc_cb_flg = 'Y' then 0.0 else ytd_actls_rev_cb_amt end, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(ytd_to_pc_lkg_amt, 0.0) as float)) / sum(coalesce (ytd_actls_rev_cb_amt, 0.0)) end as ytd_to_pc_perc, sum (coalesce(frcst_to_pc_lkg_amt, 0.0)) as fc_to_pc_lkg, sum (coalesce(case when invld_pc_flg = 'Y' then 0.0 else pc_rev_amt end, 0.0)) as pc_plan_rev_a, case when sum(coalesce( case when invld_pc_flg = 'Y' then 0.0 else pc_rev_amt end, 0.0)) = 0.0 then 0.0 else sum(cast(coalesce(frcst_to_pc_lkg_amt, 0.0) as float)) / sum(coalesce(pc_rev_amt, 0.0)) end as fc_to_pc_perc from phd.contract_leakage_fact_16w_v f inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim s on s.sctr_gb_key = f.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.acct_drop ad on (f.mth_key = ad.mth_key -1) {filter} <filter?AND:WHERE> ad.graph_nm = 'GP_L2_GR1' and yr_mo_key = 'CURRENT') select cl.data_load_date, pl.cq_to_pc_lkg as prev_cq_to_pc, pl.cq_rev as prev_cq_rev, cl.cq_to_pc_lkg, cl.cq_rev, cl.cq_to_pc_perc, cl.cq_to_pc_perc - pl.cq_to_pc_perc as cq_to_pc_arrow, pl.itd_to_pc_lkg as prev_itd_to_pc, pl.itd_rev_cb_good_pc as prev_itd_rev_cb_good_pc, cl.itd_to_pc_lkg, cl.itd_rev_cb_good_pc, cl.itd_to_pc_perc, cl.itd_to_pc_perc - pl.itd_to_pc_perc as itc_to_pc_arrow, pl.ytd_to_pc_lkg as prev_ytd_to_pc, pl.ytd_act_rev as prev_ytd_to_pc, cl.ytd_to_pc_lkg, cl.ytd_act_rev, cl.ytd_to_pc_perc, cl.ytd_to_pc_perc - pl.ytd_to_pc_perc as ytc_to_pc_arrow, pl.fc_to_pc_lkg as prev_fc_to_pc_lkg, pl.pc_plan_rev_a as prev_pc_plan_rev_a, cl.fc_to_pc_lkg, cl.pc_plan_rev_a, cl.fc_to_pc_perc, cl.fc_to_pc_perc - pl.fc_to_pc_perc as fc_to_pc_arrow from curr_leakage cl, prev_leakage pl \",\"description\":\"Business GP Leakage T1 data\"}",
      "t2BusinessLeakageExpansionContract": "{\"name\":\"t2BusinessLeakageExpansionContract\",\"sqlTemplate\":\"WITH CQ_CNT AS( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS CQ_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND ((F.CQ_TO_PC_LKG_AMT < 0 OR F.CQ_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.CQ_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.CQ_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') AND ('{ngp}' = 'INGP' OR ('{ngp}' = 'ENGP' AND CQ_ACTLS_GP_AC_PV_AMT >= 0)) GROUP BY {busAttr}  ), PQ_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS PQ_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND ((F.PQ_TO_PC_LKG_AMT < 0 OR F.PQ_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.PQ_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.PQ_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') AND ('{ngp}' = 'INGP' OR ('{ngp}' = 'ENGP' AND PQ_ACTLS_GP_AC_AMT >= 0)) GROUP BY {busAttr}   ), ITD_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS ITD_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND ((F.ITD_TO_PC_LKG_AMT < 0 OR F.ITD_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.ITD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.ITD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), YTD_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS YTD_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND ((F.YTD_TO_PC_LKG_AMT < 0 OR F.YTD_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.YTD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.YTD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), FC_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS FC_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND ((F.FRCST_TO_PC_LKG_AMT < 0 OR F.FRCST_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.FRCST_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.FRCST_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), CONTRACT_DATA AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC_LKG, SUM(COALESCE(CASE WHEN ('{ngp}' = 'ENGP' AND CQ_ACTLS_GP_AC_PV_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE CQ_TO_PC_LKG_AMT END END END,0.0)) AS CQ_TO_PC_LKG, COALESCE(SUM(CQ_ACTLS_REV_AC_PV_AMT),0.0) AS CQ_REV, COALESCE(SUM(ITD_ACTLS_REV_CB_VLDPC_AMT),0.0) AS ITD_REV_CB_GOOD_PC, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC_LKG, SUM(COALESCE(CASE WHEN INVLD_PC_CB_FLG = 'Y' THEN 0.0 ELSE YTD_ACTLS_REV_CB_AMT END,0.0)) AS YTD_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_TO_PC_LKG, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE PC_REV_AMT END),0.0) AS PC_PLAN_REV_A, SUM(COALESCE(CASE WHEN ('{ngp}' = 'ENGP' AND PQ_ACTLS_GP_AC_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN PQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE PQ_TO_PC_LKG_N_AMT END END END,0.0)) AS PQ_TO_PC_LKG, COALESCE(SUM(PQ_ACTLS_REV_AC_AMT),0.0) AS PQ_ACT_REV_AC FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') GROUP BY {busAttr}   ) SELECT C.BUS_ATTR, C.CQ_TO_PC_LKG, C.CQ_REV, C.ITD_TO_PC_LKG, C.ITD_REV_CB_GOOD_PC, C.YTD_TO_PC_LKG, C.YTD_ACT_REV, C.FC_TO_PC_LKG, C.PC_PLAN_REV_A, COALESCE(CQ.CQ_CNTRCT_CNT,0) AS CQ_CNTRCT_CNT, COALESCE(I.ITD_CNTRCT_CNT,0) AS ITD_CNTRCT_CNT, COALESCE(Y.YTD_CNTRCT_CNT,0) AS YTD_CNTRCT_CNT, COALESCE(F.FC_CNTRCT_CNT,0) AS FC_CNTRCT_CNT, C.PQ_TO_PC_LKG, C.PQ_ACT_REV_AC, COALESCE(PQ.PQ_CNTRCT_CNT,0) AS PQ_CNTRCT_CNT FROM CONTRACT_DATA C LEFT JOIN CQ_CNT CQ ON C.BUS_ATTR = CQ.BUS_ATTR LEFT JOIN PQ_CNT PQ ON C.BUS_ATTR = PQ.BUS_ATTR LEFT JOIN ITD_CNT I ON C.BUS_ATTR = I.BUS_ATTR LEFT JOIN YTD_CNT Y ON C.BUS_ATTR = Y.BUS_ATTR LEFT JOIN FC_CNT F ON C.BUS_ATTR = F.BUS_ATTR ORDER BY C.BUS_ATTR \",\"description\":\"Obtains business leakage contract counts\"}",
      "t2BusinessLeakageExpansionWorkNum": "{\"name\":\"t2BusinessLeakageExpansionWorkNum\",\"sqlTemplate\":\"WITH CQ_CNT AS( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT(P.PROJ_NUM)) AS CQ_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.CQ_TO_PC_LKG_AMT < 0 OR F.CQ_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.CQ_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.CQ_TO_PC_LKG_W_CNTGCY_AMT > 0 ) AND '{contingency}' = '_W_CNTGCY') AND ('INGP' = '{ngp}' OR ('ENGP' = '{ngp}' AND CQ_ACTLS_GP_AC_PV_AMT >= 0)) GROUP BY {busAttr}  ), PQ_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (P.PROJ_NUM)) AS PQ_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.CQ_TO_PC_LKG_AMT < 0 OR F.CQ_TO_PC_LKG_AMT > 0 ) AND '{contingency}' = ' ') OR ((F.CQ_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.CQ_TO_PC_LKG_W_CNTGCY_AMT > 0 ) AND '{contingency}' = '_W_CNTGCY') AND ('INGP' = '{ngp}' OR ('ENGP' = '{ngp}' AND PQ_ACTLS_GP_AC_AMT >= 0)) GROUP BY {busAttr}   ), ITD_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (P.PROJ_NUM)) AS ITD_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.ITD_TO_PC_LKG_AMT < 0 OR F.ITD_TO_PC_LKG_AMT > 0 ) AND '{contingency}' = ' ') OR ((F.ITD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.ITD_TO_PC_LKG_W_CNTGCY_AMT > 0 ) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), YTD_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (P.PROJ_NUM)) AS YTD_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.YTD_TO_PC_LKG_AMT < 0 OR F.YTD_TO_PC_LKG_AMT > 0 ) AND '{contingency}' = ' ') OR ((F.YTD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.YTD_TO_PC_LKG_W_CNTGCY_AMT > 0 ) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), FC_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (P.PROJ_NUM)) AS FC_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.FRCST_TO_PC_LKG_AMT < 0 OR F.FRCST_TO_PC_LKG_AMT > 0 ) AND '{contingency}' = ' ') OR ((F.FRCST_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.FRCST_TO_PC_LKG_W_CNTGCY_AMT > 0 ) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), WORKNUM_DATA AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, SUM(COALESCE(CASE WHEN ('{ngp}' = 'ENGP' AND CQ_ACTLS_GP_AC_PV_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END END,0.0)) AS CQ_TO_PC_LKG, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE CQ_ACTLS_REV_AC_PV_AMT END),0.0) AS CQ_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC_LKG, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE ITD_ACTLS_REV_AMT END),0.0) AS ITD_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC_LKG, SUM(COALESCE(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE YTD_ACTLS_REV_AMT END,0.0)) AS YTD_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_TO_PC_LKG, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE PC_REV_AMT END),0.0) AS PC_PLN_REV, SUM(COALESCE(CASE WHEN ('{ngp}' = 'ENGP' AND PQ_ACTLS_GP_AC_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN PQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE PQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END END END,0.0)) AS PQ_TO_PC_LKG_AMT, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE PQ_ACTLS_REV_AC_AMT END),0.0) AS PQ_ACTLS_REV_AC_AMT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') GROUP BY {busAttr}   ) SELECT C.BUS_ATTR, C.CQ_TO_PC_LKG, C.CQ_ACT_REV, C.ITD_TO_PC_LKG, C.ITD_ACT_REV, C.YTD_TO_PC_LKG, C.YTD_ACT_REV, C.FC_TO_PC_LKG, C.PC_PLN_REV, COALESCE(CQ.CQ_WORKNUM_CNT,0) AS CQ_WORKNUM_CNT, COALESCE(I.ITD_WORKNUM_CNT,0) AS ITD_WORKNUM_CNT, COALESCE(Y.YTD_WORKNUM_CNT,0) AS YTD_WORKNUM_CNT, COALESCE(F.FC_WORKNUM_CNT,0) AS FC_WORKNUM_CNT, C.PQ_TO_PC_LKG_AMT, C.PQ_ACTLS_REV_AC_AMT, COALESCE(PQ.PQ_WORKNUM_CNT,0) AS PQ_WORKNUM_CNT FROM WORKNUM_DATA C LEFT JOIN CQ_CNT CQ ON C.BUS_ATTR = CQ.BUS_ATTR LEFT JOIN PQ_CNT PQ ON C.BUS_ATTR = PQ.BUS_ATTR LEFT JOIN ITD_CNT I ON C.BUS_ATTR = I.BUS_ATTR LEFT JOIN YTD_CNT Y ON C.BUS_ATTR = Y.BUS_ATTR LEFT JOIN FC_CNT F ON C.BUS_ATTR = F.BUS_ATTR ORDER BY C.BUS_ATTR\",\"description\":\"Obtains business leakage work number counts\"}",
      "t2BusinessLeakageExpansionContractTotal": "{\"name\":\"t2BusinessLeakageExpansionContractTotal\",\"sqlTemplate\":\"WITH CURRENT_ACCT_SNAPSHOT AS( SELECT MTH_KEY FROM PHD.ACCT_DROP WHERE YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1') SELECT SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS ITD_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(F.ITD_ACTLS_REV_CB_VLDPC_AMT,0.0) ELSE 0.0 END) AS ITD_REV_CB_GOOD_PC, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_ITD_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(F.ITD_ACTLS_REV_CB_VLDPC_AMT,0.0) ELSE 0.0 END) AS PRI_ITD_REV_CB_GOOD_PC, SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS YTD_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0.0 ELSE F.YTD_ACTLS_REV_CB_AMT END,0.0) ELSE 0.0 END) AS YTD_ACT_REV, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_YTD_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0.0 ELSE F.YTD_ACTLS_REV_CB_AMT END,0.0) ELSE 0.0 END) AS PRI_YTD_ACT_REV, SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS FC_TO_PC_LKG, COALESCE(SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY AND F.INVLD_PC_FLG = 'Y' THEN 0.0 WHEN F.MTH_KEY = C.MTH_KEY AND F.INVLD_PC_FLG <> 'Y' THEN F.PC_REV_AMT ELSE 0.0 END),0.0) AS PC_PLAN_REV_A, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_FC_TO_PC_LKG, COALESCE(SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) AND F.INVLD_PC_FLG = 'Y' THEN 0.0 WHEN F.MTH_KEY = (C.MTH_KEY -1) AND F.INVLD_PC_FLG <> 'Y' THEN F.PC_REV_AMT ELSE 0.0 END),0.0) AS PRI_PC_PLAN_REV_A, SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS CQ_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(F.CQ_ACTLS_REV_AC_PV_AMT,0.0) ELSE 0.0 END) AS CQ_REV, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_CQ_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = (C.MTH_KEY -1) THEN COALESCE(F.CQ_ACTLS_REV_AC_PV_AMT,0.0) ELSE 0.0 END) AS PRI_CQ_REV FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY,CURRENT_ACCT_SNAPSHOT C {filter} \",\"description\":\"Total for Business GP Leakage by Contract\"}",
      "t2BusinessLeakageExpansionWorkNumTotal": "{\"name\":\"t2BusinessLeakageExpansionWorkNumTotal\",\"sqlTemplate\":\"WITH CURRENT_ACCT_SNAPSHOT AS( SELECT MTH_KEY FROM PHD.ACCT_DROP WHERE YR_MO_KEY = '{yrMoKey}' and GRAPH_NM = 'GP_L2_GR1') SELECT SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS ITD_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(F.ITD_ACTLS_REV_AMT, 0.0) ELSE 0.0 END) AS ITD_ACT_REV, SUM( CASE WHEN F.MTH_KEY =(C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE ITD_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS PRI_ITD_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY =(C.MTH_KEY - 1) THEN COALESCE(ITD_ACTLS_REV_AMT, 0.0) ELSE 0.0 END) AS PRI_ITD_ACT_REV, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS YTD_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE YTD_ACTLS_REV_AMT END, 0.0) ELSE 0.0 END) AS YTD_ACT_REV, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS PRI_YTD_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE YTD_ACTLS_REV_AMT END, 0.0) ELSE 0.0 END) AS PRI_YTD_ACT_REV, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS FC_TO_PC_LKG, COALESCE(SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY AND INVLD_PC_FLG = 'Y' THEN 0.0 WHEN F.MTH_KEY = C.MTH_KEY AND INVLD_PC_FLG <> 'Y' THEN PC_REV_AMT ELSE 0.0 END), 0.0) AS PC_PLAN_REV, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS PRI_FC_TO_PC_LKG, COALESCE(SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) AND INVLD_PC_FLG = 'Y' THEN 0.0 WHEN F.MTH_KEY = (C.MTH_KEY - 1) AND INVLD_PC_FLG <> 'Y' THEN PC_REV_AMT ELSE 0.0 END), 0.0) AS PRI_PC_PLAN_REV, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS CQ_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CQ_ACTLS_REV_AC_PV_AMT, 0.0) ELSE 0.0 END) AS CQ_REV, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END, 0.0) ELSE 0.0 END) AS PRI_CQ_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CQ_ACTLS_REV_AC_PV_AMT, 0.0) ELSE 0.0 END) AS PRI_CQ_REV FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY, CURRENT_ACCT_SNAPSHOT C {filter} \",\"description\":\"Total for Business GP Leakage by WorkNum\"}",
      "t2businessleakageexpansionexclusiontrendmillions": "{\"name\":\"t2businessleakageexpansionexclusiontrendmillions\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE ITD_TO_PC_LKG_AMT END),0.0) AS ITD, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE YTD_TO_PC_LKG_AMT END),0.0) AS YTD, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE FRCST_TO_PC_LKG_AMT END),0.0) AS FRCST, SUM(COALESCE( CASE WHEN('{ngp}' = 'ENGP' AND CQ_GP_AC_PV_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE CQ_TO_PC_LKG_AMT END END END,0.0)) AS CQ FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY WHERE (F.CURR_ACCT_YR >= AD.CURR_ACCT_YR AND D.QTR_KEY {operator} replace('{yrQtrKey}', 'Q', '') AND AD.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N') GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR ORDER BY F.CURR_ACCT_YR DESC, F.CURR_ACCT_MO DESC FETCH FIRST 4 ROWS ONLY \",\"description\":\"Contract Business Leakage Trend Milions\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork": "{\"name\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END), 0.0) AS ITD, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END), 0.0) AS YTD, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END), 0.0) AS FRCST, SUM(COALESCE(CASE WHEN ('INGP' = 'ENGP' AND F.CQ_GP_AC_PV_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END END, 0.0)) AS CQ FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> (F.CURR_ACCT_YR >= AD.CURR_ACCT_YR AND F.INVLD_PC_FLG = 'N' AND AD.GRAPH_NM = 'GP_L2_GR1' AND D.QTR_KEY {operator} replace('{yrQtrKey}', 'Q', '')) GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR ORDER BY ACCT_YR DESC, ACCT_MO DESC FETCH FIRST 4 ROWS ONLY ;\",\"description\":\"Work nbr Business Leakage Trend Milions\"}",
      "t2businessleakageexpansionexclusiontrendpercentage": "{\"name\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC_LKG, COALESCE(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT),0.0) AS ITD_REV_CB_GOOD_PC, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC_LKG, SUM(COALESCE(CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0.0 ELSE F.YTD_ACTLS_REV_CB_AMT END,0.0)) AS YTD_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_TO_PC_LKG, COALESCE(SUM(CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0 ELSE F.PC_REV_AMT END),0.0) AS PC_PLAN_REV_A, SUM(CASE WHEN F.MTH_KEY = AD.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS CQ_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = AD.MTH_KEY THEN COALESCE(F.CQ_ACTLS_REV_AC_PV_AMT,0.0) ELSE 0.0 END) AS CQ_REV FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> F.CURR_ACCT_YR >= AD.CURR_ACCT_YR /*((F.CURR_ACCT_MO <= AD.CURR_ACCT_MO AND F.CURR_ACCT_YR = AD.CURR_ACCT_YR) OR(F.CURR_ACCT_MO > AD.CURR_ACCT_MO AND F.CURR_ACCT_YR + 1 = AD.CURR_ACCT_YR)*/ AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR ORDER BY F.CURR_ACCT_YR DESC, F.CURR_ACCT_MO DESC FETCH FIRST 4 ROWS ONLY \",\"description\":\"Contract Business Leakage Trend Percentage\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework": "{\"name\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC_LKG, COALESCE(SUM(F.ITD_ACTLS_REV_AMT),0.0) AS ITD_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC_LKG, SUM(COALESCE(CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.YTD_ACTLS_REV_AMT END,0.0)) AS YTD_ACT_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_TO_PC_LKG, COALESCE(SUM(PC_REV_AMT),0.0) AS PC_PLAN_REV, SUM(COALESCE(CASE WHEN('INGP' = 'ENGP' AND CQ_GP_AC_PV_AMT < 0) THEN 0.0 ELSE CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END END,0.0)) AS CQ_TO_PC_LKG, COALESCE(SUM(F.CQ_REV_AC_PV_AMT),0.0) AS CQ_REV FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> F.CURR_ACCT_YR >= AD.CURR_ACCT_YR /*(F.CURR_ACCT_YR >= 2018*/ AND F.INVLD_PC_FLG = 'N' AND D.QTR_KEY {operator} replace('{yrQtrKey}','Q','') AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR ORDER BY F.CURR_ACCT_YR DESC, F.CURR_ACCT_MO DESC FETCH FIRST 4 ROWS ONLY \",\"description\":\"Work Nbr Business Leakage Trend Percentage\"}",
      "t2businessleakageexpansiondetailscontract": "{\"name\":\"t2businessleakageexpansiondetailscontract\",\"sqlTemplate\":\"WITH PQ_LKG AS( SELECT RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, F.CNTRCT_KEY AS CNTRCT_KEY, CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.PQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END END AS PREV_GP_VAL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM DT ON CN.SGND_DT = DT.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND (F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}') AND (DT.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ( CASE WHEN '{metric}' = 'FC' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN '{metric}' = 'PQ' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'CQ' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'ITD' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'YTD' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END END< -10000)) AND ('{metric}' <> 'CQ' OR ('{metric}' = 'CQ' AND ('{ngp}' = 'INGP' OR ('{ngp}' = 'ENGP' AND F.PQ_ACTLS_GP_AC_AMT >= 0))))) SELECT '{metric}' AS METRICVAL, '{contingency}' AS CONTVAL, RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, RTRIM(SVC_LINE.SVC_LINE_CD) AS SERVICE_LINE, RTRIM(CN.CNTRCT_DESC) AS PRJCT_NM, RTRIM(CD.CUST_NM) AS CLNT_NM, CASE WHEN '{metric}' = 'ITD' THEN F.TCV_CB_AMT WHEN '{metric}' = 'YTD' THEN F.TCV_CB_AMT WHEN '{metric}' = 'FC' THEN F.TCV_CB_AMT WHEN '{metric}' = 'CQ' THEN F.TCV_CB_AMT END AS TCV, CASE WHEN '{metric}' = 'ITD' THEN CASE WHEN F.ITD_ACTLS_REV_CB_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END AS FLOAT),0.0) /COALESCE(CAST(F.ITD_ACTLS_REV_CB_AMT AS FLOAT),0.0) ELSE 0.0 END WHEN '{metric}' = 'CQ' THEN 0.0 WHEN '{metric}' = 'YTD' THEN CASE WHEN F.YTD_ACTLS_REV_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END AS FLOAT),0.0) /COALESCE(CAST(F.YTD_ACTLS_REV_AMT AS FLOAT),0.0) ELSE 0.0 END WHEN '{metric}' = 'FC' THEN CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END AS FLOAT),0.0) /COALESCE(CAST(F.PC_REV_AMT AS FLOAT),0.0) ELSE 0.0 END END AS GP_PCT, CASE WHEN '{metric}' = 'ITD' THEN F.ITD_TO_PC_LKG_AMT WHEN '{metric}' = 'YTD' THEN F.YTD_TO_PC_LKG_AMT WHEN '{metric}' = 'FC' THEN F.FRCST_TO_PC_LKG_AMT WHEN '{metric}' = 'CQ' THEN CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END END AS GP_VAL, P.PREV_GP_VAL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM DT ON CN.SGND_DT = DT.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON F.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY LEFT JOIN PQ_LKG P ON F.CNTRCT_KEY = P.CNTRCT_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND (F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}') AND F.INVLD_PC_CB_FLG = 'N' AND (DT.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND (CASE WHEN '{metric}' = 'FC' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END /*WHEN 'PQ' '{metric}' = 'PQ' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END*/ WHEN '{metric}' = 'CQ' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'ITD' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'YTD' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END END< -10000)) /*AND ('FC' '{metric}' <> 'CQ' OR ('FC' '{metric}' = 'CQ' AND ('{ngp}' = 'INGP' OR ('{ngp}' = 'ENGP' AND F.CQ_PV_GP_AC_AMT >= 0)))) */ ORDER BY CASE WHEN '{metric}' = 'FC' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END /*WHEN 'PQ' '{metric}' = 'PQ' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END*/ WHEN '{metric}' = 'CQ' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'ITD' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'YTD' THEN CASE WHEN 'contingency' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END END ASC FETCH FIRST 30 ROWS only \",\"description\":\"Business Leakage Top Contrib Contract Details\"}",
      "t2businessleakageexpansiondetailsworknumber  ": "{\"name\":\"t2businessleakageexpansiondetailsworknumber  \",\"sqlTemplate\":\"WITH PQ_LKG AS( SELECT RTRIM(P.PROJ_NUM) AS PROJ_NUM, CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END AS PREV_GP_VAL FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM DT ON CN.SGND_DT = DT.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' AND F.INVLD_PC_FLG = 'N' AND( DT.QTR_KEY {operator} replace('{yrQtrKey}', 'Q', '') AND ((F.FRCST_TO_PC_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.FRCST_TO_PC_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY'))) AND ( '{metric}' <> 'CQ' OR ( '{metric}' = 'CQ' AND ( '{ngp}' = 'INGP' OR ( '{ngp}' = 'ENGP' AND F.PQ_ACTLS_GP_AC_AMT >= 0))))) SELECT '{metric}' AS METRICVAL, RTRIM(P.PROJ_NUM) AS WORK_NUM, RTRIM(SL.SVC_LINE_CD) AS SERVICE_LINE, RTRIM(P.PROJ_DESC) AS PRJCT_NM, RTRIM(CU.CUST_NM) AS CLNT_NM, F.TCV_AMT AS TCV, CASE WHEN '{metric}' = 'ITD' THEN CASE WHEN F.ITD_ACTLS_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END AS FLOAT), 0.0) / CAST(F.ITD_ACTLS_REV_AMT AS FLOAT) ELSE 0.0 END WHEN '{metric}' = 'CQ' THEN 0.0 WHEN '{metric}' = 'YTD' THEN CASE WHEN F.YTD_ACTLS_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END AS FLOAT), 0.0) / CAST(F.YTD_ACTLS_REV_AMT AS FLOAT) ELSE 0.0 END WHEN '{metric}' = 'FC' THEN CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END AS FLOAT), 0.0) / CAST(F.PC_REV_AMT AS FLOAT) ELSE 0.0 END END AS GP_PCT, CASE WHEN '{metric}' = 'ITD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'YTD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN '{metric}' = 'CQ' THEN CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END END AS GP_VAL, COALESCE(PQ.PREV_GP_VAL,0.0) AS PREV_GP_VAL FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM DT ON CN.SGND_DT = DT.DAY_DT INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY LEFT JOIN PQ_LKG PQ ON P.PROJ_NUM = PQ.PROJ_NUM INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' AND F.INVLD_PC_FLG = 'N' AND ( DT.QTR_KEY {operator} replace('{yrQtrKey}', 'Q', '') AND ((F.FRCST_TO_PC_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.FRCST_TO_PC_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY')) ) AND ( '{metric}' <> 'CQ' OR ( '{metric}' = 'CQ' AND ( '{ngp}' = 'INGP' OR ( '{ngp}' = 'ENGP' AND F.CQ_ACTLS_GP_PV_AMT >= 0 )))) ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ;\",\"description\":\"Business Leakage Top Contrib Work No. Details\"}",
      "t2BusinessLeakageContractPopupDetail": "{\"name\":\"t2BusinessLeakageContractPopupDetail\",\"sqlTemplate\":\"SELECT RTRIM(CNTRCT_NUM) AS NUMBER, 'contract' AS TYPE, RTRIM(CN.CNTRCT_DESC) AS CONTRACT_NAME, RTRIM(CD.CUST_NM) AS CUSTOMER, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,LOCATE (' ',CN.PE_NOTES_ID) - 1) || ' ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) + 1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS BRAND_PE, RTRIM(CTRY.CTRY_NM) AS COUNTRY, CN.SGND_DT AS CONTRACT_SIGN_DATE, RTRIM(S.SCTR_GB_NM) AS SECTOR, RTRIM(GP.GRTH_PLFM_DESC) AS GROWTH_PLATFORM, CASE WHEN '{metric}' = 'ITD' THEN F.TCV_CB_AMT WHEN '{metric}' = 'YTD' THEN F.TCV_CB_AMT WHEN '{metric}' = 'FC' THEN F.TCV_CB_AMT WHEN '{metric}' = 'CQ' THEN F.TCV_CB_AMT END AS TCV, CASE WHEN '{metric}' = 'ITD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_CB_AMT > 0 THEN COALESCE(CAST(F.PC_GP_CB_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CNTGCY_CB_AMT AS FLOAT),0.0) / CAST(F.PC_REV_CB_AMT AS FLOAT) WHEN F.PC_REV_CB_AMT <= 0 THEN 0.0 ELSE F.PC_GP_CB_PCT END WHEN '{metric}' = 'CQ' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.CQ_PV_REV_AC_AMT > 0 THEN COALESCE(CAST(F.PC_GP_CB_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CNTGCY_CB_AMT AS FLOAT),0.0) / CAST(F.CQ_PV_REV_AC_AMT AS FLOAT) WHEN F.CQ_PV_REV_AC_AMT <= 0 THEN 0.0 ELSE F.PC_GP_CB_PCT END WHEN '{metric}' = 'YTD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE F.PC_GP_PCT END WHEN '{metric}' = 'FC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE F.PC_GP_PCT END END AS PC_GP_PCT, CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) ELSE 0.0 END AS FC_GP_PCT, CASE WHEN F.YTD_ACTLS_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.YTD_ACTLS_REV_AMT AS FLOAT) ELSE 0.0 END YTD_ACT_GP_PCT, CASE WHEN F.ITD_ACTLS_REV_CB_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.ITD_ACTLS_REV_CB_AMT AS FLOAT) ELSE 0.0 END AS ITD_ACT_GP_PCT, CASE WHEN F.CQ_ACTLS_REV_AC_PV_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END AS FLOAT),0.0) / CAST(F.CQ_ACTLS_REV_AC_PV_AMT AS FLOAT) ELSE 0.0 END AS CQ_ACT_GP_PCT, CASE WHEN '{metric}' = 'ITD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_CB_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CNTGCY_CB_AMT AS FLOAT),0.0) ELSE F.PC_GP_CB_AMT END WHEN '{metric}' = 'CQ' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_CB_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CNTGCY_CB_AMT AS FLOAT),0.0) ELSE F.PC_GP_CB_AMT END WHEN '{metric}' = 'YTD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) ELSE F.PC_GP_AMT END WHEN '{metric}' = 'FC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) ELSE F.PC_GP_AMT END END AS PC_GP, CASE WHEN '{metric}' = 'CQ' THEN F.PC_GP_CB_PCT ELSE NULL END AS PC_GP_PCT_CB, CASE WHEN '{metric}' = 'CQ' THEN F.PC_GP_CB_AMT ELSE NULL END AS PC_GP_CB, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END AS FC_TO_PC_LKG, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END AS YTD_TO_PC_LKG, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END AS ITD_TO_PC_LKG, CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END AS CQ_TO_PC_LKG, CN.PHD_URL AS IPPF_URL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON F.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON GP.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON S.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY WHERE AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' AND CNTRCT_NUM = '{cntrctNum}' ;\",\"description\":\"Business Leakage Contract Detail popup\"}",
      "t2BusinessLeakageWorkPopupDetail": "{\"name\":\"t2BusinessLeakageWorkPopupDetail\",\"sqlTemplate\":\"SELECT RTRIM(P.PROJ_NUM) AS NUMBER, 'work number' AS TYPE, RTRIM(P.PROJ_DESC) AS PROJECT_NAME, RTRIM(CN.CNTRCT_NUM) AS CONTRACT, RTRIM(CN.CNTRCT_DESC) AS CONTRACT_NAME, RTRIM(CU.CUST_NM) AS CUSTOMER, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (P.PE_NOTES_ID,1,LOCATE (' ',P.PE_NOTES_ID) - 1) || ' ' || SUBSTR (P.PE_NOTES_ID,(LOCATE (' ',P.PE_NOTES_ID) + 1),((LOCATE ('/',P.PE_NOTES_ID) - 1) -(LOCATE (' ',P.PE_NOTES_ID))))) END AS BRAND_PE, RTRIM(G4.CTRY_NM) AS COUNTRY, CN.SGND_DT AS CONTRACT_SIGN_DATE, P.APRV_PLN_DT AS APPR_PLAN_DATE, RTRIM(S.SCTR_GB_NM) AS SECTOR, F.FRCST_SBMT_TMS AS FC_APPR_DATE, RTRIM(GP.GRTH_PLFM_DESC) AS GROWTH_PLATFORM, F.TCV_AMT AS TCV, CASE WHEN '{metric}' = 'ITD' OR '{metric}' = 'CQ' OR '{metric}' = 'YTD' OR '{metric}' = 'FC' THEN CASE WHEN ' ' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE F.PC_GP_PCT END END AS PC_GP_PCT, CASE WHEN F.PC_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) END AS FC_GP_PCT, CASE WHEN F.YTD_ACTLS_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.YTD_ACTLS_REV_AMT AS FLOAT) END AS YTD_ACT_GP_PCT, CASE WHEN F.ITD_ACTLS_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.ITD_ACTLS_REV_AMT AS FLOAT) END AS ITD_ACT_GP_PCT, CASE WHEN F.CQ_REV_AC_PV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST( CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END AS FLOAT),0.0) / CAST(F.CQ_REV_AC_PV_AMT AS FLOAT) END AS CQ_ACT_GP_PCT, CASE WHEN '{metric}' = 'ITD' OR '{metric}' = 'CQ' OR '{metric}' = 'YTD' OR '{metric}' = 'FC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) ELSE F.PC_GP_AMT END END AS PC_GP, CASE WHEN '{metric}' = 'CQ' THEN PC_GP_CB_PCT ELSE 0 END AS PC_GP_PCT_CB, CASE WHEN '{metric}' = 'CQ' THEN PC_GP_CB_AMT ELSE 0 END AS PC_GP_CB, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END AS FC_TO_PC_LKG, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END AS YTD_TO_PC_LKG, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END AS ITD_TO_PC_LKG, CASE WHEN '{leak}' = 'NET' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_N_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END AS CQ_TO_PC_LKG, CN.PHD_URL AS IPPF_URL FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY LEFT JOIN PHD.COUNTRY_DIM G4 ON F.CTRY_KEY = G4.CTRY_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY LEFT JOIN PHD.CONTRACT_LEAKAGE_FACT C ON C.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY WHERE P.PROJ_NUM = '{workNum}' AND D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' AND F.INVLD_PC_FLG = 'N' \",\"description\":\"Business Leakage Work Number Detail popup\"}",

      "t1OperGPLeakage": "{\"name\":\"t1OperGPLeakage\",\"sqlTemplate\":\"WITH CURR_LEAKAGE AS( SELECT {busAttr} AS CATEGORY, AD.DATA_LOAD_DESC AS DATA_LOAD_DATE, SUM(CASE WHEN F.MTH_KEY = AD.MTH_KEY THEN COALESCE(APRVD_TO_PC_LKG_AMT, 0.0) ELSE 0.0 END) AS AP_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = AD.MTH_KEY AND INVLD_PC_FLG <> 'Y' THEN COALESCE(PC_REV_AMT, 0.0) ELSE 0.0 END) AS PC_PLAN_REV_A, SUM(CASE WHEN F.MTH_KEY = AD.MTH_KEY THEN COALESCE(FRCST_TO_APRVD_LKG_AMT, 0.0) ELSE 0.0 END) AS FC_TO_AP_LKG FROM (SELECT FCT.*, 'Total' AS TOTAL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V FCT) F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY LEFT JOIN PHD.COUNTRY_DIM G4 ON F.CTRY_KEY = G4.CTRY_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = 'CURRENT' GROUP BY {busAttr}, AD.DATA_LOAD_DESC  ), PREV_LEAKAGE AS ( SELECT {busAttr} AS CATEGORY, SUM(CASE WHEN F.MTH_KEY = (AD.MTH_KEY -1) THEN COALESCE(APRVD_TO_PC_LKG_AMT, 0.0) ELSE 0.0 END) AS PRI_AP_TO_PC_LKG, SUM(CASE WHEN F.MTH_KEY = (AD.MTH_KEY -1) AND INVLD_PC_FLG <> 'Y' THEN COALESCE(PC_REV_AMT, 0.0) ELSE 0.0 END) AS PRI_PC_PLAN_REV_A, SUM(CASE WHEN F.MTH_KEY = (AD.MTH_KEY -1) THEN COALESCE(FRCST_TO_APRVD_LKG_AMT, 0.0) ELSE 0.0 END) AS PRI_FC_TO_AP_LKG FROM (SELECT FCT.*, 'Total' AS TOTAL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V FCT) F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY LEFT JOIN PHD.COUNTRY_DIM G4 ON F.CTRY_KEY = G4.CTRY_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP AD {filter} <filter?AND:WHERE> F.MTH_KEY = (AD.MTH_KEY -1) AND AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = 'CURRENT' GROUP BY {busAttr}  ) SELECT DATA_LOAD_DATE, CL.CATEGORY, CL.AP_TO_PC_LKG, CL.PC_PLAN_REV_A, PL.PRI_AP_TO_PC_LKG, PL.PRI_PC_PLAN_REV_A, CL.FC_TO_AP_LKG, PL.PRI_FC_TO_AP_LKG FROM CURR_LEAKAGE CL LEFT JOIN PREV_LEAKAGE PL ON CL.CATEGORY = PL.CATEGORY \",\"description\":\"Operational GP Leakage T1 data\"}",
      "t2OperLeakageCountContract": "{\"name\":\"t2OperLeakageCountContract\",\"sqlTemplate\":\"WITH FC_CNT AS( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS FC_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.FRCST_TO_APRVD_LKG_AMT < 0 OR F.FRCST_TO_APRVD_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT < 0 OR F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}  ), AP_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS AP_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.APRVD_TO_PC_LKG_AMT < 0 OR F.APRVD_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.APRVD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.APRVD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), CONTRACT_DATA AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END),0.0) AS FC_TO_AP_LKG, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE PC_REV_AMT END),0.0) AS PC_PLAN_REV_A, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END),0.0) AS AP_TO_PC_LKG FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY = '{yrMoKey}' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') GROUP BY {busAttr}   ) SELECT C.BUS_ATTR, C.FC_TO_AP_LKG, C.PC_PLAN_REV_A, C.AP_TO_PC_LKG, COALESCE(F.FC_CNTRCT_CNT,0) AS FC_CNTRCT_CNT, COALESCE(A.AP_CNTRCT_CNT,0) AS AP_CNTRCT_CNT FROM CONTRACT_DATA C LEFT JOIN FC_CNT F ON C.BUS_ATTR = F.BUS_ATTR LEFT JOIN AP_CNT A ON C.BUS_ATTR = A.BUS_ATTR\",\"description\":\"Obtains operational leakage contract counts\"}",
      "t2OperLeakageCountWorkNum": "{\"name\":\"t2OperLeakageCountWorkNum\",\"sqlTemplate\":\"WITH FC_CNT AS( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (P.PROJ_NUM)) AS FC_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.FRCST_TO_APRVD_LKG_AMT < 0 OR F.FRCST_TO_APRVD_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT < 0 OR F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}  ), AP_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (P.PROJ_NUM)) AS AP_WORKNUM_CNT FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') AND ((F.APRVD_TO_PC_LKG_AMT < 0 OR F.APRVD_TO_PC_LKG_AMT > 0) AND '{contingency}' = ' ') OR ((F.APRVD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.APRVD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), WORKNUM_DATA AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END),0.0) AS FC_TO_AP_LKG, COALESCE(SUM(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0.0 ELSE PC_REV_AMT END),0.0) AS PC_PLAN_REV, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END),0.0) AS AP_TO_PC_LKG FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' AND D.QTR_KEY {operator} REPLACE('{yrQtrKey}','Q','') GROUP BY {busAttr}   ) SELECT C.BUS_ATTR, C.FC_TO_AP_LKG, C.PC_PLAN_REV, C.AP_TO_PC_LKG, COALESCE(F.FC_WORKNUM_CNT,0) AS FC_WORKNUM_CNT, COALESCE(A.AP_WORKNUM_CNT,0) AS AP_WORKNUM_CNT FROM WORKNUM_DATA C LEFT JOIN FC_CNT F ON C.BUS_ATTR = F.BUS_ATTR LEFT JOIN AP_CNT A ON C.BUS_ATTR = A.BUS_ATTR\",\"description\":\"Obtains operational leakage work number counts\"}",
      "t2OperLeakageTotalContract": "{\"name\":\"t2OperLeakageTotalContract\",\"sqlTemplate\":\"WITH CURRENT_ACCT_SNAPSHOT AS( SELECT MTH_KEY FROM PHD.ACCT_DROP WHERE YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1') SELECT SUM(CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS AP_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY AND INVLD_PC_FLG <> 'Y' THEN COALESCE(PC_REV_AMT, 0.0) ELSE 0.0 END) AS PC_PLAN_REV_A, SUM( CASE WHEN F.MTH_KEY =(C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_AP_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY =(C.MTH_KEY - 1) AND INVLD_PC_FLG <> 'Y' THEN COALESCE(PC_REV_AMT, 0.0) ELSE 0.0 END) AS PRI_PC_PLAN_REV_A, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0) ELSE 0.0 END) AS FC_TO_AP_LKG, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_FC_TO_AP_LKG FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY, CURRENT_ACCT_SNAPSHOT C {filter} \",\"description\":\"Total for Operational GP Leakage by Contract\"}",
      "t2OperLeakageTotalWorkNum": "{\"name\":\"t2OperLeakageTotalWorkNum\",\"sqlTemplate\":\"WITH CURRENT_ACCT_SNAPSHOT AS( SELECT MTH_KEY FROM PHD.ACCT_DROP WHERE YR_MO_KEY = '{yrMoKey}' and GRAPH_NM = 'GP_L2_GR1') SELECT SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS AP_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY AND INVLD_PC_FLG <> 'Y' THEN COALESCE(PC_REV_AMT, 0.0) ELSE 0.0 END) AS PC_PLAN_REV, SUM( CASE WHEN F.MTH_KEY =(C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_AP_TO_PC_LKG, SUM( CASE WHEN F.MTH_KEY =(C.MTH_KEY - 1) AND INVLD_PC_FLG <> 'Y' THEN COALESCE(PC_REV_AMT, 0.0) ELSE 0.0 END) AS PRI_PC_PLAN_REV, SUM( CASE WHEN F.MTH_KEY = C.MTH_KEY THEN COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0) ELSE 0.0 END) AS FC_TO_AP_LKG, SUM( CASE WHEN F.MTH_KEY = (C.MTH_KEY - 1) THEN COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0) ELSE 0.0 END) AS PRI_FC_TO_AP_LKG FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY, CURRENT_ACCT_SNAPSHOT C {filter} \",\"description\":\"Total for Operational GP Leakage by WorkNum\"}",
      "t2OperLeakageTrendMillContract": "{\"name\":\"t2OperLeakageTrendMillContract\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0)) AS AP_TO_PC, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0)) AS FC_TO_AP FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE>((F.CURR_ACCT_MO <= AD.CURR_ACCT_MO AND F.CURR_ACCT_YR = AD.CURR_ACCT_YR) OR (F.CURR_ACCT_MO > AD.CURR_ACCT_MO AND F.CURR_ACCT_YR + 1 = AD.CURR_ACCT_YR)) AND AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY <> 'CURRENT' GROUP BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ORDER BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ASC FETCH FIRST 13 ROWS ONLY \",\"description\":\"Contract Operational Leakage Trend Milions\"}",
      "t2OperLeakageTrendMillWorkNum": "{\"name\":\"t2OperLeakageTrendMillWorkNum\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0)) AS AP_TO_PC, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0)) AS FC_TO_AP FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE>((F.CURR_ACCT_MO <= D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) OR (F.CURR_ACCT_MO > D.CURR_ACCT_MO AND F.CURR_ACCT_YR + 1 = D.CURR_ACCT_YR)) AND D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY <> 'CURRENT' GROUP BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ORDER BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ASC FETCH FIRST 13 ROWS ONLY \",\"description\":\"Work nbr Operational Leakage Trend Milions\"}",
      "t2OperLeakageTrendPercContract": "{\"name\":\"t2OperLeakageTrendPercContract\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, SUM(COALESCE(CASE WHEN INVLD_PC_FLG = 'Y' THEN 0 ELSE PC_REV_AMT end,0)) AS PC_PLAN_REV_A, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0)) AS AP_TO_PC_LKG, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0)) AS FC_TO_AP_LKG FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE>((F.CURR_ACCT_MO <= AD.CURR_ACCT_MO AND F.CURR_ACCT_YR = AD.CURR_ACCT_YR) OR (F.CURR_ACCT_MO > AD.CURR_ACCT_MO AND F.CURR_ACCT_YR + 1 = AD.CURR_ACCT_YR)) AND AD.GRAPH_NM = 'GP_L2_GR1' AND AD.YR_MO_KEY <> 'CURRENT' GROUP BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ORDER BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ASC FETCH FIRST 13 ROWS ONLY \",\"description\":\"Contract Operational Leakage Trend Percentage\"}",
      "t2OperLeakageTrendPercWorkNum": "{\"name\":\"t2OperLeakageTrendPercWorkNum\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_MO AS ACCT_MO, F.CURR_ACCT_YR AS ACCT_YR, SUM(COALESCE(CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0 ELSE F.PC_REV_AMT END,0)) AS PC_PLAN_REV, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0)) AS AP_TO_PC_LKG, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0)) AS FC_TO_AP_LKG FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE>((F.CURR_ACCT_MO <= D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR) OR (F.CURR_ACCT_MO > D.CURR_ACCT_MO AND F.CURR_ACCT_YR + 1 = D.CURR_ACCT_YR)) AND D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY <> 'CURRENT' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR ORDER BY F.CURR_ACCT_YR, F.CURR_ACCT_MO ASC FETCH FIRST 13 ROWS ONLY \",\"description\":\"Work Nbr Operational Leakage Trend Percentage\"}",
      "t2OperLeakageDetailsContract": "{\"name\":\"t2OperLeakageDetailsContract\",\"sqlTemplate\":\"SELECT rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, rtrim(CN.CNTRCT_DESC) AS PRJCT_NM, rtrim(CD.CUST_NM) AS CLNT_NM, rtrim(SVC_LINE.SVC_LINE_CD) AS SERVICE_LINE, TCV_CB_AMT AS TCV, CASE WHEN '{metric}' = 'FC_TO_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.FRCST_TO_APRVD_LKG_AMT AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 END END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 END END END AS LEAK_PCT, CASE WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN '{metric}' = 'PQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC_TO_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END END AS LEAK FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.DATE_DIM DT ON CN.SGND_DT = DT.DAY_DT INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.ACCT_DROP D ON F.MTH_KEY = D.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' AND( DT.QTR_KEY {operator} replace('{yrQtrKey}', 'Q', '') AND CASE WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN '{metric}' = 'PQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC_TO_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END END < 0) ORDER BY CASE WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN '{metric}' = 'PQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN '{metric}' = 'FC_TO_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END END ASC FETCH FIRST 30 ROWS ONLY \",\"description\":\"Operational Leakage Contract Details\"}",
      "t2OperLeakageDetailsWorkNum": "{\"name\":\"t2OperLeakageDetailsWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(P.PROJ_NUM) AS WORK_NUM, RTRIM(P.PROJ_DESC) AS PRJCT_NM, RTRIM(CU.CUST_NM) AS CLNT_NM, RTRIM(SVC_LINE.SVC_LINE_CD) AS SERVICE_LINE, F.TCV_AMT AS TCV, CASE WHEN '{metric}' = 'FRCST_TO_APRVD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND PC_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END AS FLOAT), 0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.FRCST_TO_APRVD_LKG_AMT AS FLOAT), 0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 END END WHEN '{metric}' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END AS FLOAT), 0.0) / CAST((CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0 ELSE F.PC_REV_AMT END) AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE CASE WHEN F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.APRVD_TO_PC_LKG_AMT AS FLOAT), 0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 END END END AS LEAK_PCT, CASE WHEN 'APRVD_TO_PC' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'PQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'FRCST_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'FRCST_TO_APRVD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END END AS LEAK FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO1 ON GEO1.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.DATE_DIM D ON CN.SGND_DT = D.DAY_DT INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' AND(D.QTR_KEY {operator} replace('{yrQtrKey}', 'Q', '') AND CASE WHEN 'APRVD_TO_PC' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'PQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'FRCST_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'FRCST_TO_APRVD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END END < 0) ORDER BY CASE WHEN 'APRVD_TO_PC' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'PQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.PQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.PQ_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'FRCST_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN 'APRVD_TO_PC' = 'FRCST_TO_APRVD' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END END ASC FETCH FIRST 30 ROWS ONLY \",\"description\":\"Operational Leakage Work No. Details\"}",
      "t2OperLeakagePopupContract": "{\"name\":\"t2OperLeakagePopupContract\",\"sqlTemplate\":\"SELECT RTRIM(CN.CNTRCT_NUM) AS NUMBER, 'contract' AS TYPE, RTRIM(CN.CNTRCT_DESC) AS CONTRACT_NAME, CASE WHEN(CN.PE_NOTES_ID = '--') THEN '--' WHEN((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,LOCATE (' ',CN.PE_NOTES_ID) - 1) || ' ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) + 1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS BRAND_PE, CN.SGND_DT AS CONTRACT_SIGN_DATE, RTRIM(S.SCTR_GB_NM) AS SECTOR, RTRIM(GP.GRTH_PLFM_DESC) AS GROWTH_PLATFORM, RTRIM(CU.CUST_NM) AS CLIENT_NAME, RTRIM(G4.CTRY_NM) AS COUNTRY, F.TCV_CB_AMT AS TCV, CASE WHEN '{metric}' = 'FRCST_TO_APRVD' OR '{metric}' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE F.PC_REV_AMT END END AS PC_GP_PCT, CASE WHEN '{metric}' = 'FRCST_TO_APRVD' OR '{metric}' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) ELSE F.PC_GP_AMT END END AS PC_GP, CASE WHEN F.PC_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) END AS PLN_TO_PC_LEAK_PCT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END AS PLN_TO_PC_LEAK, CASE WHEN F.PC_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) END AS FC_TO_AP_LEAK_PCT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END AS FC_TO_AP_LEAK, CN.PHD_URL AS IPPF_URL FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY LEFT JOIN PHD.COUNTRY_DIM G4 ON F.CTRY_KEY = G4.CTRY_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY WHERE D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND CNTRCT_NUM = '{cntrctNum}' \",\"description\":\"Operational Leakage Contract Detail popup\"}",
      "t2OperLeakagePopupWorkNum": "{\"name\":\"t2OperLeakagePopupWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(P.PROJ_NUM) AS NUMBER, 'work number' AS TYPE, RTRIM(CN.CNTRCT_NUM) AS CONTRACT, RTRIM(P.PROJ_DESC) AS PROJECT_NAME, RTRIM(CN.CNTRCT_DESC) AS CONTRACT_NAME, CASE WHEN(P.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) <= 1) OR (P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',P.PE_NOTES_ID)) > 1) AND NOT (P.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (P.PE_NOTES_ID,1,LOCATE (' ',P.PE_NOTES_ID) - 1) || ' ' || SUBSTR (P.PE_NOTES_ID,(LOCATE (' ',P.PE_NOTES_ID) + 1),((LOCATE ('/',P.PE_NOTES_ID) - 1) -(LOCATE (' ',P.PE_NOTES_ID))))) END AS BRAND_PE, CN.SGND_DT AS CONTRACT_SIGN_DATE, RTRIM(S.SCTR_GB_NM) AS SECTOR, RTRIM(GP.GRTH_PLFM_DESC) AS GROWTH_PLATFORM, RTRIM(CU.CUST_NM) AS CLIENT_NAME, RTRIM(G4.CTRY_NM) AS COUNTRY, P.APRV_PLN_DT AS APPR_PLAN_DATE, F.FRCST_SBMT_TMS AS FC_APPR_DATE, F.TCV_AMT AS TCV, CASE WHEN '{metric}' = 'FRCST_TO_APRVD' OR '{metric}' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND F.PC_REV_AMT > 0 THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) WHEN F.PC_REV_AMT <= 0 THEN 0.0 ELSE F.PC_GP_PCT END END AS PC_GP_PCT, CASE WHEN '{metric}' = 'FRCST_TO_APRVD' OR '{metric}' = 'APRVD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(F.PC_GP_AMT AS FLOAT) - CAST(F.PC_UNAPPR_CTNGCY_AMT AS FLOAT),0.0) ELSE F.PC_GP_AMT END END AS PC_GP, CASE WHEN F.PC_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) END AS PLN_TO_PC_LEAK_PCT, F.APRVD_TO_PC_LKG_AMT AS PLN_TO_PC_LEAK, CASE WHEN F.PC_REV_AMT = 0.0 THEN 0.0 ELSE COALESCE(CAST(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END AS FLOAT),0.0) / CAST(F.PC_REV_AMT AS FLOAT) END AS FC_TO_AP_LEAK_PCT, F.FRCST_TO_APRVD_LKG_AMT AS FC_TO_AP_LEAK, CN.PHD_URL AS IPPF_URL FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY LEFT JOIN PHD.COUNTRY_DIM G4 ON F.CTRY_KEY = G4.CTRY_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY WHERE P.PROJ_NUM = '{workNum}' AND D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' \",\"description\":\"Operational Leakage Work Number Detail popup\"}",

      "t2ExpContractList": "{\"name\":\"t2ExpContractList\",\"sqlTemplate\":\"WITH CQ_GP_LKG_LIST AS( SELECT ROW_NUMBER() OVER (ORDER BY F.CQ_GP_LKG_AC_AMT ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.CQ_GP_LKG_AC_AMT < -10000 AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.CQ_GP_LKG_AC_AMT ORDER BY F.CQ_GP_LKG_AC_AMT ASC FETCH FIRST 30 ROWS ONLY ), FC_EAC_TO_AP_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY F.EAC_ACTLS_GP_LKG_AMT ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.EAC_ACTLS_GP_LKG_AMT < -10000 AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.EAC_ACTLS_GP_LKG_AMT ORDER BY F.EAC_ACTLS_GP_LKG_AMT ASC FETCH FIRST 30 ROWS ONLY ), COST_OVER_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY F.OVERRUN_COST_AMT ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> F.OVERRUN_COST_AMT < -10000 AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.OVERRUN_COST_AMT ORDER BY F.OVERRUN_COST_AMT ASC FETCH FIRST 30 ROWS ONLY ), FC_EAC_AP_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((F.FRCST_TO_APRVD_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY')) AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT, F.FRCST_TO_APRVD_LKG_AMT ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ), AP_TO_PC_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((F.APRVD_TO_PC_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.APRVD_TO_PC_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY')) AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.APRVD_TO_PC_LKG_W_CNTGCY_AMT, F.APRVD_TO_PC_LKG_AMT ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ), ITD_TO_PC_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((F.ITD_TO_PC_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.ITD_TO_PC_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY')) AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.ITD_TO_PC_LKG_W_CNTGCY_AMT, F.ITD_TO_PC_LKG_AMT ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ), YTD_TO_PC_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((F.YTD_TO_PC_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.YTD_TO_PC_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY')) AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.YTD_TO_PC_LKG_W_CNTGCY_AMT, YTD_TO_PC_LKG_AMT ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ), FC_EAC_TO_PC_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((F.FRCST_TO_PC_LKG_AMT < -10000 AND '{contingency}' = ' ') OR (F.FRCST_TO_PC_LKG_W_CNTGCY_AMT < -10000 AND '{contingency}' = '_W_CNTGCY')) AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.FRCST_TO_PC_LKG_W_CNTGCY_AMT, F.FRCST_TO_PC_LKG_AMT ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ), CQ_TO_PC_LIST AS ( SELECT ROW_NUMBER() OVER (ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END ASC) AS ROW#, TRIM(F.CUST_KEY) AS NAME, TRIM(F.CNTRCT_KEY) AS NUMBER FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY, PHD.ACCT_DROP D {filter} <filter?AND:WHERE> ((F.CQ_TO_PC_LKG_AMT <> 0 AND '{contingency}' = ' ') OR (F.CQ_TO_PC_LKG_W_CNTGCY_AMT <> 0 AND '{contingency}' = '_W_CNTGCY')) AND ((F.CQ_TO_PC_LKG_AMT IS NOT NULL AND '{contingency}' = ' ') OR (F.CQ_TO_PC_LKG_W_CNTGCY_AMT IS NOT NULL AND '{contingency}' = '_W_CNTGCY')) AND ( F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}' AND F.CNTRCT_KEY IN ( SELECT DISTINCT (F.CNTRCT_KEY) FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V ) ) AND GRAPH_NM = 'GP_L2_GR1' AND INVLD_PC_CB_FLG = 'N' GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR, F.CUST_KEY, F.CNTRCT_KEY, F.CQ_TO_PC_LKG_W_CNTGCY_AMT, F.CQ_TO_PC_LKG_AMT ORDER BY CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END ASC FETCH FIRST 30 ROWS ONLY ) SELECT CGLL.NAME AS CQ_GP_LKG_CUSTOMER_NM, CGLL.NUMBER AS CQ_GP_LKG_CNTRCT_NUM, FETAL.NAME AS FC_EAC_TO_AP_CUSTOMER_NM, FETAL.NUMBER AS FC_EAC_TO_AP_CNTRCT_NUM, COL.NAME AS COST_OVER_CUSTOMER_NM, COL.NUMBER AS COST_OVER_CNTRCT_NUM, FEAL.NAME AS FC_EAC_AP_CUSTOMER_NM, FEAL.NUMBER AS FC_EAC_AP_CNTRCT_NUM, ATPL.NAME AS AP_TO_PC_CUSTOMER_NM, ATPL.NUMBER AS AP_TO_PC_CNTRCT_NUM, ITPL.NAME AS ITD_TO_PC_CUSTOMER_NM, ITPL.NUMBER AS ITD_TO_PC_CNTRCT_NUM, YTPL.NAME AS YTD_TO_PC_CUSTOMER_NM, YTPL.NUMBER AS YTD_TO_PC_CNTRCT_NUM, FETPL.NAME AS FC_EAC_TO_PC_CUSTOMER_NM, FETPL.NUMBER AS FC_EAC_TO_PC_CNTRCT_NUM, CTPL.NAME AS CQ_TO_PC_CUSTOMER_NM, CTPL.NUMBER AS CQ_TO_PC_CNTRCT_NUM FROM CQ_GP_LKG_LIST CGLL FULL OUTER JOIN FC_EAC_TO_AP_LIST FETAL ON CGLL.ROW# = FETAL.ROW# FULL OUTER JOIN COST_OVER_LIST COL ON FETAL.ROW# = COL.ROW# FULL OUTER JOIN FC_EAC_AP_LIST FEAL ON COL.ROW# = FEAL.ROW# FULL OUTER JOIN AP_TO_PC_LIST ATPL ON FEAL.ROW# = ATPL.ROW# FULL OUTER JOIN ITD_TO_PC_LIST ITPL ON ATPL.ROW# = ITPL.ROW# FULL OUTER JOIN YTD_TO_PC_LIST YTPL ON ITPL.ROW# = YTPL.ROW# FULL OUTER JOIN FC_EAC_TO_PC_LIST FETPL ON YTPL.ROW# = FETPL.ROW# FULL OUTER JOIN CQ_TO_PC_LIST CTPL ON FETPL.ROW# = CTPL.ROW# ORDER BY CGLL.ROW# \",\"description\":\"Contract Expansion Contract list \"}",
      "t2ExpCount": "{\"name\":\"t2ExpCount\",\"sqlTemplate\":\"WITH CQ_CNT AS( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS CQ_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND ((F.CQ_TO_PC_LKG_AMT < 0 OR F.CQ_TO_PC_LKG_AMT > 0) AND '{contigency}' = ' ') OR ((F.CQ_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.CQ_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contingency}' = '_W_CNTGCY') GROUP BY {busAttr}  ), ITD_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS ITD_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND ((F.ITD_TO_PC_LKG_AMT < 0 OR F.ITD_TO_PC_LKG_AMT > 0) AND '{contigency}' = ' ') OR ((F.ITD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.ITD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contigency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), YTD_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS YTD_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND ((F.YTD_TO_PC_LKG_AMT < 0 OR F.YTD_TO_PC_LKG_AMT > 0) AND '{contigency}' = ' ') OR ((F.YTD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.YTD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contigency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), FC_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS FC_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND ((F.FRCST_TO_PC_LKG_AMT < 0 OR F.FRCST_TO_PC_LKG_AMT > 0) AND '{contigency}' = ' ') OR ((F.FRCST_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.FRCST_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contigency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), FC_AP_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS FC_AP_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> (F.CURR_ACCT_MO = D.CURR_ACCT_MO AND F.CURR_ACCT_YR = D.CURR_ACCT_YR AND D.YR_MO_KEY = '{yrMoKey}') AND D.GRAPH_NM = 'GP_L2_GR1' AND ((F.FRCST_TO_APRVD_LKG_AMT < 0 OR F.FRCST_TO_APRVD_LKG_AMT > 0) AND '{contigency}' = ' ') OR ((F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT < 0 OR F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT > 0) AND '{contigency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), AP_PC_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS AP_PC_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND ((F.APRVD_TO_PC_LKG_AMT < 0 OR F.APRVD_TO_PC_LKG_AMT > 0) AND '{contigency}' = ' ') OR ((F.APRVD_TO_PC_LKG_W_CNTGCY_AMT < 0 OR F.APRVD_TO_PC_LKG_W_CNTGCY_AMT > 0) AND '{contigency}' = '_W_CNTGCY') GROUP BY {busAttr}   ), CQ_AP_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS CQ_AP_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND (('{status}' = 'AC' AND COALESCE(F.CQ_GP_LKG_AC_AMT,0.0) <> 0.0) OR ('{status}' = 'PV' AND COALESCE(F.CQ_GP_LKG_PV_AMT,0.0) <> 0.0)) AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) GROUP BY {busAttr}   ), CO_3MO_CNT AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COUNT(DISTINCT (CN.CNTRCT_NUM)) AS CO_3MO_CNTRCT_CNT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND (F.OVERRUN_COST_AMT < 0 OR F.OVERRUN_COST_AMT > 0) GROUP BY {busAttr}   ), CONTRACT_DATA AS ( SELECT rtrim({busAttr}) AS BUS_ATTR, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC_LKG, CASE WHEN CAST(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT) AS FLOAT) <> 0.0 THEN CASE WHEN COALESCE(SUM(F.ITD_TO_PC_LKG_W_CNTGCY_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT) AS FLOAT) END ELSE 0.0 END AS ITD_TO_PC_LKG_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END),0.0) AS CQ_TO_PC_LKG, CASE WHEN COALESCE(SUM(F.CQ_ACTLS_REV_AC_PV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.CQ_ACTLS_REV_AC_PV_AMT) AS FLOAT) END AS CQ_TO_PC_LKG_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC_LKG, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0.0 ELSE F.YTD_ACTLS_REV_CB_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0.0 ELSE F.YTD_ACTLS_REV_CB_AMT END ) AS FLOAT) END AS YTD_TO_PC_LKG_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_TO_PC_LKG, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ) AS FLOAT) END AS FC_TO_PC_LKG_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END),0.0) AS FC_TO_AP_LKG, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ) AS FLOAT) END AS FC_TO_AP_LKG_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END),0.0) AS AP_TO_PC_LKG, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ) AS FLOAT) END AS AP_TO_PC_LKG_PCT, COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END),0.0) AS CQ_TO_AP, CASE WHEN COALESCE(SUM(F.CQ_ACTLS_REV_AC_PV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.CQ_ACTLS_REV_AC_PV_AMT) AS FLOAT) END AS CQ_TO_AP_PCT, SUM(F.OVERRUN_COST_AMT) AS COST_OVERRUN, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(SUM(F.LST_3_MTH_COST_APRVD_AMT) AS FLOAT) END AS COST_OVERRUN_PCT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' /*AND GEO1.GEO_LVL1_KEY = 2*/ GROUP BY {busAttr}   ) SELECT C.BUS_ATTR, C.CQ_TO_PC_LKG, C.CQ_TO_PC_LKG_PCT, C.ITD_TO_PC_LKG, C.ITD_TO_PC_LKG_PCT, C.YTD_TO_PC_LKG, C.YTD_TO_PC_LKG_PCT, C.FC_TO_PC_LKG, C.FC_TO_PC_LKG_PCT, COALESCE(CQ.CQ_CNTRCT_CNT,0) AS CQ_CNTRCT_CNT, COALESCE(I.ITD_CNTRCT_CNT,0) AS ITD_CNTRCT_CNT, COALESCE(Y.YTD_CNTRCT_CNT,0) AS YTD_CNTRCT_CNT, COALESCE(F.FC_CNTRCT_CNT,0) AS FC_CNTRCT_CNT, C.FC_TO_AP_LKG, C.FC_TO_AP_LKG_PCT, C.AP_TO_PC_LKG, C.AP_TO_PC_LKG_PCT, COALESCE(FCAP.FC_AP_CNTRCT_CNT,0) AS FC_AP_CNTRCT_CNT, COALESCE(APPC.AP_PC_CNTRCT_CNT,0) AS AP_PC_CNTRCT_CNT, C.CQ_TO_AP, C.CQ_TO_AP_PCT, C.COST_OVERRUN, C.COST_OVERRUN_PCT, COALESCE(CQAP.CQ_AP_CNTRCT_CNT,0) AS CQ_AP_CNTRCT_CNT, COALESCE(CO3MO.CO_3MO_CNTRCT_CNT,0) AS CO_3MO_CNTRCT_CNT FROM CONTRACT_DATA C LEFT JOIN CQ_CNT CQ ON C.BUS_ATTR = CQ.BUS_ATTR LEFT JOIN ITD_CNT I ON C.BUS_ATTR = I.BUS_ATTR LEFT JOIN YTD_CNT Y ON C.BUS_ATTR = Y.BUS_ATTR LEFT JOIN FC_CNT F ON C.BUS_ATTR = F.BUS_ATTR LEFT JOIN FC_AP_CNT FCAP ON C.BUS_ATTR = FCAP.BUS_ATTR LEFT JOIN AP_PC_CNT APPC ON C.BUS_ATTR = APPC.BUS_ATTR LEFT JOIN CQ_AP_CNT CQAP ON C.BUS_ATTR = CQAP.BUS_ATTR LEFT JOIN CO_3MO_CNT CO3MO ON C.BUS_ATTR = CO3MO.BUS_ATTR ORDER BY c.bus_attr\",\"description\":\"Contract expansion count details \"}",
      "t2ExpTrend": "{\"name\":\"t2ExpTrend\",\"sqlTemplate\":\"SELECT F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, COALESCE(SUM(CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END),0.0) AS CQ_TO_AP, CASE WHEN COALESCE(SUM(F.CQ_ACTLS_REV_AC_PV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END),0.0) AS FLOAT) / CAST(SUM(F.CQ_ACTLS_REV_AC_PV_AMT) AS FLOAT) END AS CQ_TO_AP_PCT, COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS COST_OVERRUN, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(SUM(F.LST_3_MTH_COST_APRVD_AMT) AS FLOAT) END AS COST_OVERRUN_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END),0.0) AS FC_TO_AP, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ) AS FLOAT) END AS FC_TO_AP_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END),0.0) AS AP_TO_PC, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.PC_REV_AMT END ) AS FLOAT) END AS AP_TO_PC_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC, CASE WHEN COALESCE(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT) AS FLOAT) END AS ITD_TO_PC_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC, CASE WHEN COALESCE(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0 ELSE F.YTD_ACTLS_REV_CB_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0 ELSE F.YTD_ACTLS_REV_CB_AMT END ) AS FLOAT) END AS YTD_TO_PC_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_TO_PC, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM( CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0 ELSE F.PC_REV_AMT END ) AS FLOAT) END AS FC_TO_PC_PCT, COALESCE(SUM(CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END),0.0) AS CQ_TO_PC, CASE WHEN COALESCE(SUM(F.CQ_ACTLS_REV_AC_PV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contigency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.CQ_ACTLS_REV_AC_PV_AMT) AS FLOAT) END AS CQ_TO_PC_PCT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY {filter} GROUP BY F.CURR_ACCT_MO, F.CURR_ACCT_YR ORDER BY F.CURR_ACCT_YR DESC, F.CURR_ACCT_MO DESC FETCH FIRST 4 ROWS ONLY \",\"description\":\"Contract expansion trend \"}",
      "t2ExpDetailsContract": "{\"name\":\"t2ExpDetailsContract\",\"sqlTemplate\":\"WITH CNTRCT_METRICS AS( SELECT DISTINCT (CN.CNTRCT_NUM) AS DIS_CNTRCT_NUM FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND D.GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) AND CASE WHEN '{orderColumn}' = 'CQ_TO_AP' THEN CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END WHEN '{orderColumn}' = 'OVER_COST' THEN F.OVERRUN_COST_AMT WHEN '{orderColumn}' = 'FC_EAC_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END WHEN '{orderColumn}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END WHEN '{orderColumn}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END WHEN '{orderColumn}' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END WHEN '{orderColumn}' = 'FC_EAC_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END WHEN '{orderColumn}' = 'CQ' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END END< -10000  ) SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, RTRIM(CU.CUST_NM) AS CUSTOMER_NM, RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.CNTRCT_NUM AS DESCRIPTION, RTRIM(A.ACTIVE_TYP_CD) AS STATUS_ABBR, GEO2.GEO_LVL2_CD AS MKT_ABBR, S.SCTR_GB_NM AS SECTOR_ABBR, CN.SGND_DT AS CNTRCT_SGND_DT, CN.END_DT AS END_DATE, CASE WHEN (CN.PE_NOTES_ID = '--') THEN '--' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) <= 1) OR (CN.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ((LOCATE ('/',CN.PE_NOTES_ID)) > 1) AND NOT (CN.PE_NOTES_ID = 'N/A') THEN RTRIM (SUBSTR (CN.PE_NOTES_ID,1,1) || '. ' || SUBSTR (CN.PE_NOTES_ID,(LOCATE (' ',CN.PE_NOTES_ID) + 1),((LOCATE ('/',CN.PE_NOTES_ID) - 1) -(LOCATE (' ',CN.PE_NOTES_ID))))) END AS PE_NOTES_ID, '--' AS AP_DATE, COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END,0.0) AS CQ_TO_AP, CASE WHEN (COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0)) < 0 AND CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ,0.0) -COALESCE( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ,0.0) ELSE 0.0 END AS CQ_TO_AP_PCT, F.TIER_GP_LKG_NUM AS TIER_CQ_TO_AP_NUM, /* COALESCE(SUM(EAC_LKG), 0.0) AS FC_EAC_TO_AP, CASE WHEN COALESCE(SUM(TCV_PLAN_RT_USD),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(EAC_LKG), 0.0) AS FLOAT) / CAST(SUM(TCV_PLAN_RT_USD) AS FLOAT) END AS FC_EAC_TO_AP_PCT, TIER_EAC_LKG_NUM as TIER_FC_EAC_TO_AP_NUM, */ COALESCE(F.OVERRUN_COST_AMT,0.0) AS COST_OVER, CASE WHEN COALESCE(F.LST_3_MTH_COST_APRVD_AMT,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(F.OVERRUN_COST_AMT,0.0) AS FLOAT) / CAST(F.LST_3_MTH_COST_APRVD_AMT AS FLOAT) END AS COST_OVER_PCT, F.TIER_COST_OVERRUN_NUM, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0) AS FC_EAC_AP, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0) AS AP_TO_PC, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END,0.0) AS ITD_TO_PC, COALESCE(F.ITD_ACTLS_REV_CB_VLDPC_AMT,0.0) AS ITD_REV_CB_GOOD_PC, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END,0.0) AS YTD_TO_PC, COALESCE(CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0 ELSE F.YTD_ACTLS_REV_AMT END,0.0) AS YTD_ACT_REV_CB, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END,0.0) AS FC_EAC_TO_PC, COALESCE(CASE WHEN F.INVLD_PC_CB_FLG = 'Y' THEN 0 ELSE F.PC_ACTLS_REV_AC_AMT END,0.0) AS PC_PLAN_REV_A, COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_REV_AC_PV_AMT ELSE F.CQ_ACTLS_REV_PV_AMT END,0.0) AS CQ_PV_REV, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END,0.0) AS CQ_TO_PC, '{orderColumn}' AS SORT_KEY, '{orderDirection}' AS SORT_DIRECTION FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> D.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' /*AND CN.CNTRCT_NUM IN (SELECT DIS_CNTRCT_NUM FROM CNTRCT_METRICS)*/ AND ((A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ((A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) ORDER BY {orderColumn} {orderDirection} FETCH FIRST 500 ROWS ONLY \",\"description\":\"Contract Expansion Contract Details\"}",
      "t2ExpDetailsWorkNum": "{\"name\":\"t2ExpDetailsWorkNum\",\"sqlTemplate\":\"SELECT D.DATA_LOAD_DESC AS DATA_LOAD_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_YR, RTRIM(CNTRCT_NUM) AS CNTRCT_NUM, RTRIM(P.PROJ_NUM) AS WORK_NUM, P.POC_IND AS DESCRIPTION, RTRIM(A.ACTIVE_TYP_CD) AS STATUS_ABBR, GEO2.GEO_LVL2_CD AS MKT_ABBR, S.SCTR_GB_CD AS SECTOR_ABBR, CN.SGND_DT AS CNTRCT_SGND_DT, P.END_DT AS END_DATE, CASE WHEN( P.PE_NOTES_ID = '--') THEN '--' WHEN(( LOCATE('/', P.PE_NOTES_ID)) <= 1) OR ( P.PE_NOTES_ID = 'N/A') THEN 'N/A' WHEN ( ( LOCATE('/', P.PE_NOTES_ID)) > 1) AND NOT ( P.PE_NOTES_ID = 'N/A') THEN RTRIM(SUBSTR(P.PE_NOTES_ID, 1, 1) || '. ' || SUBSTR(P.PE_NOTES_ID, (LOCATE(' ', P.PE_NOTES_ID) + 1), ((LOCATE('/', P.PE_NOTES_ID) - 1) - (LOCATE(' ', P.PE_NOTES_ID))))) END AS PE_NOTES_ID, P.APRV_PLN_DT, COALESCE(SUM(F.CQ_GP_LKG_AC_AMT), 0.0) AS CQ_TO_AP, CASE WHEN ( COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_AMT ELSE F.CQ_ACTLS_GP_PV_AMT END, 0.0) - COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END, 0.0)) < 0 AND CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_AMT ELSE F.CQ_ACTLS_GP_PV_AMT END IS NOT NULL AND CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END IS NOT NULL THEN COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_AMT ELSE F.CQ_ACTLS_GP_PV_AMT END, 0.0) - COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END, 0.0) ELSE 0.0 END AS CQ_TO_AP_PCT, F.TIER_GP_LKG_NUM as TIER_CQ_TO_AP_NUM, COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT), 0.0) AS FC_EAC_TO_AP, CASE WHEN COALESCE(SUM(F.TCV_AMT), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT), 0.0) AS FLOAT) / CAST(SUM(F.TCV_AMT) AS FLOAT) END AS FC_EAC_TO_AP_PCT, F.TIER_EAC_LKG_NUM AS TIER_FC_EAC_TO_AP_NUM, COALESCE(SUM(F.OVERRUN_COST_AMT), 0.0) AS COST_OVER, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(F.OVERRUN_COST_AMT), 0.0) AS FLOAT) / CAST(SUM(F.LST_3_MTH_COST_APRVD_AMT) AS FLOAT) END AS COST_OVER_PCT, F.TIER_COST_OVERRUN_NUM, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END), 0.0) AS FC_EAC_AP, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END), 0.0) AS AP_TO_PC, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END, 0.0)) AS ITD_TO_PC, SUM(COALESCE(CASE WHEN F.INVLD_PC_FLG = 'Y' THEN 0.0 ELSE F.ITD_ACTLS_REV_AMT END, 0.0)) AS ITD_ACT_REV, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END, 0.0)) AS YTD_TO_PC, SUM(COALESCE(CASE WHEN F.INVLD_PC_FLG = 'Y' then 0 else F.YTD_ACTLS_REV_AMT end, 0.0)) AS YTD_ACT_REV, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END, 0.0)) AS FC_EAC_TO_PC, SUM(COALESCE(CASE WHEN F.INVLD_PC_FLG = 'Y' then 0 else F.PC_REV_AMT end, 0.0)) AS PC_PLAN_REV, SUM(COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_REV_AC_PV_AMT ELSE F.CQ_ACTLS_REV_PV_AMT END,0.0)) AS CQ_PV_REV, SUM(COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_N_AMT ELSE F.CQ_TO_PC_LKG_AMT END, 0.0)) AS CQ_TO_PC, '{orderColumn}' as SORT_KEY, '{orderDirection}' as SORT_DIRECTION FROM PHD.PROJECT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON F.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP D ON D.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> RTRIM(CN.CNTRCT_NUM) LIKE '{cntrctNum}' AND D.GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = '{yrMoKey}' /*AND ( (A.ACTIVE_TYP_CD IN ('A') AND (CASE WHEN '_AC' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END) LIKE ' ') OR (A.ACTIVE_TYP_CD IN ('A', 'C') AND (CASE WHEN '_AC' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END) LIKE '_AC') )*/ GROUP BY D.DATA_LOAD_DESC, F.CURR_ACCT_YR, F.CURR_ACCT_MO, CN.CNTRCT_NUM, P.PROJ_NUM, P.POC_IND, A.ACTIVE_TYP_CD, GEO2.GEO_LVL2_CD, S.SCTR_GB_CD, CN.SGND_DT, P.END_DT, P.PE_NOTES_ID, P.APRV_PLN_DT, F.TIER_GP_LKG_NUM, F.TIER_EAC_LKG_NUM, F.TIER_COST_OVERRUN_NUM, F.CQ_ACTLS_GP_PV_AMT, F.CQ_ACTLS_GP_AC_PV_AMT, F.CQ_APRVD_GP_AC_PCT, F.CQ_APRVD_GP_PCT, F.CQ_ACTLS_REV_AC_PV_AMT, F.CQ_ACTLS_REV_PV_AMT, F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT, F.APRVD_TO_PC_LKG_W_CNTGCY_AMT, F.ITD_TO_PC_LKG_W_CNTGCY_AMT, F.YTD_TO_PC_LKG_W_CNTGCY_AMT, F.FRCST_TO_PC_LKG_W_CNTGCY_AMT, F.FRCST_TO_APRVD_LKG_AMT, F.APRVD_TO_PC_LKG_AMT, F.ITD_TO_PC_LKG_AMT, F.YTD_TO_PC_LKG_AMT, F.FRCST_TO_PC_LKG_AMT ORDER BY {orderColumn} {orderDirection} \",\"description\":\"Contract Expansion Work Details\"}",
      "t2ExpExportContract": "{\"name\":\"t2ExpExportContract\",\"sqlTemplate\":\"SELECT rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.CNTRCT_DESC AS CNTRCT_DESC, rtrim(GEO1.GEO_LVL1_NM) AS GEO_DESC, rtrim(GEO2.GEO_LVL2_NM) AS MKT_DESC, rtrim(CTRY.CTRY_NM) AS COUNTRY, S.SCTR_GB_NM AS SECTOR_DESC, INDSTRY.INDSTRY_CMR_NM AS INDUSTRY_DESC, GP.GRTH_PLFM_DESC AS GROWTH_PLATFORM, SL.SVC_LINE_NM AS SERVICE_LINE, 'NOT AVAILAVBLE YET' AS CLUSTER_NAME, CU.CUST_NM AS CUSTOMER, CN.SGND_DT AS CNTRCT_SGND_DT, CN.END_DT AS END_DATE, F.CURR_ACCT_YR AS ACCT_YR, F.CURR_ACCT_MO AS ACCT_MO, rtrim(F.ACTIVE_TYP_PROJ_CD) AS STATUS, COALESCE(F.TCV_CB_AMT,0.0) AS TCV, COALESCE(SUM(F.PC_REV_AMT),0.0) AS pc_plan_rev, COALESCE(F.PC_COST_AMT,0.0) AS PC_PLAN_COST, COALESCE(F.PC_ACTLS_GP_AC_AMT,0.0) AS PC_GP, SUM(F.PC_GP_PCT) AS PC_GP_PCT, COALESCE(F.EAC_ACTLS_REV_AMT,0.0) AS EAC_REV, COALESCE(F.EAC_ACTLS_COST_AMT,0.0) AS EAC_COST, COALESCE(F.EAC_ACTLS_GP_AMT,0.0) AS EAC_GP, F.EAC_ACTLS_GP_PCT AS EAC_GP_PCT, COALESCE(F.APRVD_REV_AMT,0.0) AS AP_REV, COALESCE(F.APRVD_COST_AMT,0.0) AS AP_COST, COALESCE(F.APRVD_GP_AMT,0.0) AS AP_GP, F.APRVD_GP_PCT AS AP_GP_PCT, COALESCE(F.ITD_ACTLS_REV_CB_AMT,0.0) AS ITD_ACT_REV, COALESCE(F.ITD_ACTLS_COST_CB_AMT,0.0) AS ITD_ACT_COST, COALESCE(F.ITD_ACTLS_GP_CB_AMT,0.0) AS ITD_ACT_GP, F.ITD_ACTLS_GP_CB_PCT AS ITD_ACT_GP_PCT, COALESCE(CASE WHEN '{status}' = '_AC' THEN F.CQ_GP_LKG_AC_AMT ELSE F.CQ_GP_LKG_PV_AMT END,0.0) AS CQ_TO_AP, CASE WHEN(COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END),0.0) -COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ),0.0)) < 0 AND SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ) IS NOT NULL AND SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ) IS NOT NULL THEN COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_GP_AC_PV_PCT ELSE F.CQ_ACTLS_GP_PV_PCT END ),0.0) -COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_APRVD_GP_AC_PCT ELSE F.CQ_APRVD_GP_PCT END ),0.0) ELSE 0.0 END AS CQ_TO_AP_PCT, SUM(F.TIER_GP_LKG_NUM) AS TIER_CQ_TO_AP_NUM, COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FC_EAC_TO_AP, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_TO_AP_PCT, F.TIER_EAC_LKG_NUM AS TIER_FC_EAC_TO_AP_NUM, COALESCE(F.OVERRUN_COST_AMT,0.0) AS COST_OVER, CASE WHEN COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM(F.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(F.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT)) END AS COST_OVER_PCT, F.TIER_COST_OVERRUN_NUM AS TIER_COST_OVER_NUM, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END,0.0) AS ITD_TO_PC, CASE WHEN COALESCE(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.ITD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.ITD_ACTLS_REV_CB_VLDPC_AMT) AS FLOAT) END AS ITD_TO_PC_PCT, COALESCE(SUM(F.FRCST_TO_PC_LKG_AMT),0.0) AS FC_EAC_TO_PC, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END,0.0) AS YTD_TO_PC, CASE WHEN COALESCE(SUM(F.YTD_ACTLS_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.YTD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(SUM(F.YTD_ACTLS_REV_CB_AMT) AS FLOAT) END AS YTD_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END,0.0) AS FC_EAC_AP, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE F.FRCST_TO_APRVD_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_AP_pct, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END,0.0) AS AP_TO_PC, CASE WHEN COALESCE(SUM(F.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE F.APRVD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM(F.PC_REV_AMT),0.0) AS FLOAT)) END AS AP_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END,0.0) AS CQ_TO_PC, CASE WHEN COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_REV_AC_PV_AMT ELSE F.CQ_ACTLS_REV_PV_AMT END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(sign (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN F.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE F.CQ_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN F.CQ_ACTLS_REV_AC_PV_AMT ELSE F.CQ_ACTLS_REV_PV_AMT END ),0.0) AS FLOAT)) END AS CQ_TO_PC_PCT, '{orderColumn}' AS SORT_KEY, '{orderDirection}' AS SORT_DIRECTION FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_DIM GD ON F.GEO_LVL2_KEY = GD.GEO_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON F.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY /*INNER JOIN PHD.PROJECT_DIM P ON F.CNTRCT_KEY = CN.CNTRCT_KEY*/ INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON F.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON F.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON F.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP SNAP ON SNAP.CURR_ACCT_YR = F.CURR_ACCT_YR AND SNAP.CURR_ACCT_MO = F.CURR_ACCT_MO AND SNAP.YR_MO_KEY = '{yrMoKey}' AND GRAPH_NM = 'GP_L2_GR1' AND F.INVLD_PC_CB_FLG = 'N' AND ( (F.ACTIVE_TYP_PROJ_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ( (F.ACTIVE_TYP_PROJ_CD LIKE '%A%' OR F.ACTIVE_TYP_PROJ_CD = 'C') AND '{status}' LIKE '_AC')) {filter} GROUP BY CN.CNTRCT_NUM, CN.CNTRCT_DESC, GEO1.GEO_LVL1_NM, GEO2.GEO_LVL2_NM, CTRY.CTRY_NM, S.SCTR_GB_NM, INDSTRY.INDSTRY_CMR_NM, GP.GRTH_PLFM_DESC, SL.SVC_LINE_NM, /*P.CLUST_NM,*/ CU.CUST_NM, CN.SGND_DT, CN.END_DT, F.CURR_ACCT_YR, F.CURR_ACCT_MO, F.ACTIVE_TYP_PROJ_CD, F.PC_ACTLS_GP_AC_PCT, F.EAC_ACTLS_GP_PCT, F.APRVD_GP_PCT, F.ITD_ACTLS_GP_CB_PCT, F.CQ_APRVD_GP_AC_PCT, F.CQ_APRVD_GP_PCT, F.CQ_ACTLS_GP_PV_PCT, F.CQ_ACTLS_GP_AC_PV_PCT, F.TIER_GP_LKG_NUM, F.TIER_EAC_LKG_NUM, F.OVERRUN_COST_AMT, F.TIER_COST_OVERRUN_NUM, F.TIER_EAC_LKG_NUM, F.CQ_GP_LKG_AC_AMT, F.CQ_GP_LKG_PV_AMT, F.ITD_ACTLS_GP_CB_AMT, F.ITD_ACTLS_COST_CB_AMT, F.ITD_ACTLS_REV_CB_AMT, F.APRVD_GP_AMT, F.APRVD_COST_AMT, F.APRVD_REV_AMT, F.EAC_ACTLS_GP_AMT, F.EAC_ACTLS_COST_AMT, F.EAC_ACTLS_REV_AMT, F.PC_ACTLS_GP_AC_AMT, F.PC_COST_AMT, F.PC_ACTLS_REV_AC_AMT, F.TCV_CB_AMT, F.ITD_TO_PC_LKG_W_CNTGCY_AMT, F.FRCST_TO_PC_LKG_W_CNTGCY_AMT, F.YTD_TO_PC_LKG_W_CNTGCY_AMT, F.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT, F.APRVD_TO_PC_LKG_W_CNTGCY_AMT, F.CQ_TO_PC_LKG_W_CNTGCY_AMT, F.ITD_TO_PC_LKG_AMT, F.FRCST_TO_PC_LKG_AMT, F.YTD_TO_PC_LKG_AMT, F.FRCST_TO_APRVD_LKG_AMT, F.APRVD_TO_PC_LKG_AMT, F.CQ_TO_PC_LKG_AMT ORDER BY {orderColumn} {orderDirection} \",\"description\":\"Contract Expansion Export \"}",
      "t2ExpExportWorkNum": "{\"name\":\"t2ExpExportWorkNum\",\"sqlTemplate\":\"WITH WORST30 AS( SELECT CN.CNTRCT_NUM, CN.CNTRCT_DESC AS DESCRIPTION, FCTV.CURR_ACCT_YR AS ACCT_YR, FCTV.CURR_ACCT_MO AS ACCT_MO, CASE WHEN (COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN FCTV.CQ_ACTLS_GP_AC_PV_PCT ELSE FCTV.CQ_ACTLS_GP_PV_PCT END),0.0) -COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN FCTV.CQ_APRVD_GP_AC_PCT ELSE FCTV.CQ_APRVD_GP_PCT END ),0.0)) < 0.0 AND SUM( CASE WHEN '{status}' = '_AC' THEN FCTV.CQ_ACTLS_GP_AC_PV_PCT ELSE FCTV.CQ_ACTLS_GP_PV_PCT END ) IS NOT NULL AND SUM( CASE WHEN '{status}' = '_AC' THEN FCTV.CQ_APRVD_GP_AC_PCT ELSE FCTV.CQ_APRVD_GP_PCT END ) IS NOT NULL THEN (COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN FCTV.CQ_ACTLS_GP_AC_PV_PCT ELSE FCTV.CQ_ACTLS_GP_PV_PCT END ),0.0) -COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN FCTV.CQ_APRVD_GP_AC_PCT ELSE FCTV.CQ_APRVD_GP_PCT END ),0.0)) ELSE 0.0 END AS CQ_TO_AP_PCT, CASE WHEN COALESCE(SUM(FCTV.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(FCTV.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(FCTV.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(FCTV.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_TO_AP_PCT, CASE WHEN COALESCE(SUM(FCTV.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(FCTV.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(FCTV.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(FCTV.LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT)) END AS COST_OVER_PCT, COALESCE(SUM(FCTV.OVERRUN_COST_AMT),0.0) AS COST_OVER, COALESCE(SUM(FCTV.CQ_GP_LKG_PV_AMT),0.0) AS CQ_TO_AP, COALESCE(SUM(FCTV.EAC_ACTLS_GP_LKG_AMT),0.0) AS FC_EAC_TO_AP, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FCTV.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE FCTV.ITD_TO_PC_LKG_AMT END),0.0) AS ITD_TO_PC, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FCTV.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE FCTV.YTD_TO_PC_LKG_AMT END),0.0) AS YTD_TO_PC, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FCTV.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE FCTV.FRCST_TO_PC_LKG_AMT END),0.0) AS FC_EAC_TO_PC, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FCTV.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE FCTV.FRCST_TO_APRVD_LKG_AMT END),0.0) AS FC_EAC_AP, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FCTV.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE FCTV.APRVD_TO_PC_LKG_AMT END),0.0) AS AP_TO_PC, COALESCE(SUM(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN FCTV.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE FCTV.CQ_TO_PC_LKG_AMT END),0.0) AS CQ_TO_PC, '{orderColumn}' AS SORT_KEY, '{orderDirection}' AS SORT_DIRECTION FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V FCTV INNER JOIN PHD.CONTRACT_DIM CN ON FCTV.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON FCTV.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = FCTV.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = FCTV.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = FCTV.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = FCTV.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON FCTV.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON FCTV.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON FCTV.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.ACCT_DROP SNAP ON SNAP.CURR_ACCT_YR = FCTV.CURR_ACCT_YR AND snap.curr_acct_mo = fctv.CURR_ACCT_MO AND snap.yr_mo_key = '{yrMoKey}' AND ( (A.ACTIVE_TYP_CD LIKE '%A%' AND '{status}' LIKE ' ') OR ( (A.ACTIVE_TYP_CD LIKE '%A%' OR A.ACTIVE_TYP_CD = 'C') AND '{status}' LIKE '_AC')) {filter} GROUP BY CN.CNTRCT_NUM, CN.CNTRCT_DESC, FCTV.CURR_ACCT_YR, FCTV.CURR_ACCT_MO, FCTV.CQ_APRVD_GP_PCT, FCTV.CQ_APRVD_GP_AC_PCT, FCTV.CQ_ACTLS_GP_PV_PCT, FCTV.CQ_ACTLS_GP_AC_PV_PCT, FCTV.ITD_TO_PC_LKG_W_CNTGCY_AMT, FCTV.ITD_TO_PC_LKG_AMT, FCTV.YTD_TO_PC_LKG_W_CNTGCY_AMT, FCTV.YTD_TO_PC_LKG_AMT, FCTV.FRCST_TO_PC_LKG_W_CNTGCY_AMT, FCTV.FRCST_TO_PC_LKG_AMT, FCTV.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT, FCTV.FRCST_TO_APRVD_LKG_AMT, FCTV.APRVD_TO_PC_LKG_W_CNTGCY_AMT, FCTV.APRVD_TO_PC_LKG_AMT, FCTV.CQ_TO_PC_LKG_W_CNTGCY_AMT, FCTV.CQ_TO_PC_LKG_AMT ORDER BY {orderColumn} {orderDirection} /*FETCH FIRST 30 ROWS ONLY*/ ) SELECT RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, WORST.DESCRIPTION AS CNTRCT_DESC, rtrim(P.PROJ_NUM) AS WORK_NUM, CN.CNTRCT_DESC AS WKNUM_DESC, rtrim(GEO1.GEO_LVL1_NM) AS GEO_DESC, rtrim(GEO2.GEO_LVL2_NM) AS MKT_DESC, rtrim(CTRY.CTRY_NM) AS COUNTRY, S.SCTR_GB_NM AS SECTOR_DESC, INDSTRY.INDSTRY_CMR_NM AS INDUSTRY_DESC, GP.GRTH_PLFM_DESC AS GROWTH_PLATFORM, SL.SVC_LINE_NM AS SERVICE_LINE, P.CLUST_NM AS CLUSTER_NAME, RTRIM(CU.CUST_NM) AS CUSTOMER_NAME, CN.SGND_DT AS CNTRCT_SGND_DT, P.END_DT AS END_DATE, W.CURR_ACCT_YR, W.CURR_ACCT_MO, RTRIM(A.ACTIVE_TYP_CD) AS STATUS, COALESCE(W.TCV_AMT,0.0) AS TCV, COALESCE(W.PC_REV_AMT,0.0) AS REV_PC_PLN_AMT, COALESCE(W.PC_COST_AMT,0.0) AS PC_PLAN_COST, COALESCE(W.PC_GP_AMT,0.0) AS PC_GP, W.PC_GP_PCT AS PC_GP_PCT, COALESCE(W.EAC_ACTLS_REV_AMT,0.0) AS EAC_REV, COALESCE(W.EAC_ACTLS_COST_AMT,0.0) AS EAC_COST, COALESCE(W.EAC_ACTLS_GP_AMT,0.0) AS EAC_GP, W.EAC_ACTLS_GP_PCT AS EAC_GP_PCT, COALESCE(W.APRVD_REV_AMT,0.0) AS AP_REV, COALESCE(W.APRVD_COST_AMT,0.0) AS AP_COST, COALESCE(W.APRVD_GP_AMT,0.0) AS AP_GP, W.APRVD_GP_PCT AS AP_GP_PCT, COALESCE(W.ITD_ACTLS_REV_AMT,0.0) AS ITD_ACT_REV, COALESCE(W.ITD_ACTLS_COST_AMT,0.0) AS ITD_ACT_COST, COALESCE(W.ITD_ACTLS_GP_AMT,0.0) AS ITD_ACT_GP, W.ITD_ACTLS_GP_PCT AS ITD_ACT_GP_PCT, COALESCE(W.CQ_GP_LKG_PV_AMT,0.0) AS CQ_TO_AP, CASE WHEN (COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN W.CQ_ACTLS_GP_AC_PV_PCT ELSE W.CQ_ACTLS_GP_PV_PCT END ),0.0) -COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN W.CQ_APRVD_GP_AC_PCT ELSE W.CQ_APRVD_GP_PCT END ),0.0)) < 0.0 THEN (COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN W.CQ_ACTLS_GP_AC_PV_PCT ELSE W.CQ_ACTLS_GP_PV_PCT END ),0.0) -COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN W.CQ_APRVD_GP_AC_PCT ELSE W.CQ_APRVD_GP_PCT END ),0.0)) ELSE 0.0 END AS CQ_TO_AP_PCT, WORST.CQ_TO_AP_PCT AS CNTRCT_CQ_TO_AP_PCT, W.TIER_GP_LKG_NUM AS TIER_GP_LKG_NUM, COALESCE(W.EAC_ACTLS_GP_LKG_AMT,0.0) AS FC_EAC_TO_AP, CASE WHEN COALESCE(SUM(W.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(W.EAC_ACTLS_GP_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(W.EAC_ACTLS_GP_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_TO_AP_PCT, W.TIER_EAC_LKG_NUM AS TIER_FC_EAC_TO_AP_NUM, COALESCE(W.OVERRUN_COST_AMT,0.0) AS COST_OVER, CASE WHEN COALESCE(SUM(W.LST_3_MTH_COST_APRVD_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(W.OVERRUN_COST_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(W.OVERRUN_COST_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.LST_3_MTH_COST_APRVD_AMT),0.0) AS FLOAT)) END AS COST_OVER_PCT, W.TIER_COST_OVERRUN_NUM AS TIER_COST_OVER_NUM, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.ITD_TO_PC_LKG_AMT END,0.0) AS ITD_TO_PC, CASE WHEN COALESCE(SUM(W.ITD_ACTLS_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.ITD_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.ITD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.ITD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.ITD_ACTLS_REV_AMT),0.0) AS FLOAT)) END AS ITD_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE W.FRCST_TO_PC_LKG_AMT END,0.0) AS FC_EAC_TO_PC, CASE WHEN COALESCE(SUM(W.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE W.FRCST_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.FRCST_TO_PC_LKG_W_CNTGCY_AMT ELSE W.FRCST_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.YTD_TO_PC_LKG_AMT END,0.0) AS YTD_TO_PC, CASE WHEN COALESCE(SUM(W.YTD_ACTLS_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.YTD_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.YTD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.YTD_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.YTD_ACTLS_REV_AMT),0.0) AS FLOAT)) END AS YTD_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT ELSE W.FRCST_TO_APRVD_LKG_AMT END,0.0) AS FC_EAC_AP, CASE WHEN COALESCE(SUM(W.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(W.FRCST_TO_APRVD_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(W.FRCST_TO_APRVD_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.PC_REV_AMT),0.0) AS FLOAT)) END AS FC_EAC_AP_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.APRVD_TO_PC_LKG_W_CNTGCY_AMT ELSE W.APRVD_TO_PC_LKG_AMT END,0.0) AS AP_TO_PC, CASE WHEN COALESCE(SUM(W.PC_REV_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(W.APRVD_TO_PC_LKG_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM(W.APRVD_TO_PC_LKG_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(W.PC_REV_AMT),0.0) AS FLOAT)) END AS AP_TO_PC_PCT, COALESCE(CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE W.CQ_TO_PC_LKG_AMT END,0.0) AS CQ_TO_PC, CASE WHEN COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN W.CQ_PV_REV_AC_AMT ELSE W.CQ_PV_REV END ),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE W.CQ_TO_PC_LKG_AMT END )),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM( CASE WHEN '{contingency}' = '_W_CNTGCY' THEN W.CQ_TO_PC_LKG_W_CNTGCY_AMT ELSE W.CQ_TO_PC_LKG_AMT END ),0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN '{status}' = '_AC' THEN W.CQ_PV_REV_AC_AMT ELSE W.CQ_PV_REV END ),0.0) AS FLOAT)) END AS CQ_TO_PC_PCT, WORST.SORT_KEY AS SORT_KEY, WORST.SORT_DIRECTION AS SORT_DIRECTION FROM PHD.PROJECT_LEAKAGE_FACT_16W_V W INNER JOIN PHD.CONTRACT_DIM CN ON W.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = W.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = W.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = W.CTRY_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = W.INDSTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON W.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.CUSTOMER_DIM CU ON W.CUST_KEY = CU.CUST_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON W.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.ACTIVE_TYPE_DIM A ON W.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.PROJECT_DIM P ON W.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON W.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN WORST30 WORST ON WORST.CNTRCT_NUM = CN.CNTRCT_NUM WHERE WORST.ACCT_YR = W.CURR_ACCT_YR AND WORST.ACCT_MO = W.CURR_ACCT_MO AND ((A.ACTIVE_TYP_CD IN ('A') AND '{status}' LIKE ' ') OR (A.ACTIVE_TYP_CD IN ('A','C') AND '{status}' LIKE '_AC')) {filter} GROUP BY CN.CNTRCT_NUM, WORST.DESCRIPTION, CN.CNTRCT_DESC, P.PROJ_NUM, GEO1.GEO_LVL1_NM, GEO2.GEO_LVL2_NM, CTRY.CTRY_NM, S.SCTR_GB_NM, INDSTRY.INDSTRY_CMR_NM, GP.GRTH_PLFM_DESC, SL.SVC_LINE_NM, P.CLUST_NM, CU.CUST_NM, CN.SGND_DT, P.END_DT, W.CURR_ACCT_YR, W.CURR_ACCT_MO, A.ACTIVE_TYP_CD, W.PC_GP_PCT, W.EAC_ACTLS_GP_PCT, W.APRVD_GP_PCT, W.ITD_ACTLS_GP_PCT, WORST.CQ_TO_AP_PCT, W.TIER_GP_LKG_NUM, W.TIER_EAC_LKG_NUM, W.TIER_COST_OVERRUN_NUM, WORST.SORT_KEY, WORST.SORT_DIRECTION, W.TCV_AMT, W.PC_REV_AMT, W.PC_COST_AMT, W.PC_GP_AMT, W.EAC_ACTLS_COST_AMT, W.EAC_ACTLS_COST_AMT, W.EAC_ACTLS_GP_AMT, W.APRVD_REV_AMT, W.APRVD_COST_AMT, W.APRVD_GP_AMT, W.ITD_ACTLS_REV_AMT, W.ITD_ACTLS_COST_AMT, W.ITD_ACTLS_GP_AMT, W.CQ_GP_LKG_PV_AMT, W.EAC_ACTLS_GP_LKG_AMT, W.OVERRUN_COST_AMT, W.ITD_TO_PC_LKG_W_CNTGCY_AMT, W.FRCST_TO_PC_LKG_W_CNTGCY_AMT, W.YTD_TO_PC_LKG_W_CNTGCY_AMT, W.FRCST_TO_APRVD_LKG_W_CNTGCY_AMT, W.APRVD_TO_PC_LKG_W_CNTGCY_AMT, W.CQ_TO_PC_LKG_W_CNTGCY_AMT, W.ITD_TO_PC_LKG_AMT, W.FRCST_TO_PC_LKG_AMT, W.YTD_TO_PC_LKG_AMT, W.FRCST_TO_APRVD_LKG_AMT, W.APRVD_TO_PC_LKG_AMT, W.CQ_TO_PC_LKG_AMT, W.CQ_APRVD_GP_PCT, W.CQ_APRVD_GP_AC_PCT, W.CQ_ACTLS_GP_PV_PCT, W.CQ_ACTLS_GP_AC_PV_PCT, W.EAC_ACTLS_REV_AMT ORDER BY {orderColumn} {orderDirection} \",\"description\":\"Work Number Expansion Export \"}",

      "t1GPLeak": "{\"name\":\"t1GPLeak\",\"sqlTemplate\":\"WITH curr_leakage AS ( SELECT ad.data_load_desc AS data_load_date, SUM(COALESCE( CASE WHEN INVLD_PC_AC_FLG = 'N' THEN CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END ELSE 0 END, 0.0)) AS cq_to_pc_lkg, CASE WHEN COALESCE(SUM(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN INVLD_PC_AC_FLG = 'N' THEN CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_perc, SUM(COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0.0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0)) AS itd_to_pc_lkg, CASE WHEN COALESCE(SUM( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END) AS FLOAT) END AS itd_to_pc_perc, SUM(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0.0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0)) AS fc_to_pc_lkg, CASE WHEN COALESCE(SUM( CASE WHEN invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_perc, SUM(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0.0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0)) AS fc_to_ap_lkg, CASE WHEN COALESCE(SUM( CASE WHEN invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_perc FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND yr_mo_key = 'CURRENT' {filter} GROUP BY ad.data_load_desc ) , prev_leakage AS ( SELECT SUM(COALESCE( CASE WHEN INVLD_PC_AC_FLG = 'N' THEN CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END ELSE 0 END, 0.0)) AS cq_to_pc_lkg, CASE WHEN COALESCE(SUM(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN INVLD_PC_AC_FLG = 'N' THEN CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_perc, SUM(COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0.0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0)) AS itd_to_pc_lkg, CASE WHEN COALESCE(SUM( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END) AS FLOAT) END AS itd_to_pc_perc, SUM(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0.0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0)) AS fc_to_pc_lkg, CASE WHEN COALESCE(SUM( CASE WHEN invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_perc, SUM(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0.0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0)) AS fc_to_ap_lkg, CASE WHEN COALESCE(SUM( CASE WHEN invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_perc FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.acct_drop ad ON ad.graph_nm = 'GP_L2_FRC' AND yr_mo_key = 'CURRENT' INNER JOIN phd.date_dim dd ON dd.date_key = ad.mth_key AND f.mth_key = dd.mth_key-2 {filter} ) SELECT cl.data_load_date, cl.cq_to_pc_lkg, cl.cq_to_pc_perc, COALESCE(pl.cq_to_pc_lkg, 0.0) AS prev_cq_to_pc, pl.cq_to_pc_perc AS prev_cq_to_pc_perc, cl.itd_to_pc_lkg, cl.itd_to_pc_perc, COALESCE(pl.itd_to_pc_lkg, 0.0) AS prev_itd_to_pc, pl.itd_to_pc_perc AS prev_itd_to_pc_perc, cl.fc_to_pc_lkg, cl.fc_to_pc_perc, COALESCE(pl.fc_to_pc_lkg, 0.0) AS prev_fc_to_pc_lkg, pl.fc_to_pc_perc AS prev_fc_to_pc_perc, cl.fc_to_ap_lkg, cl.fc_to_ap_perc, COALESCE(pl.fc_to_ap_lkg, 0.0) AS prev_fc_to_ap_lkg, pl.fc_to_ap_perc AS prev_fc_to_ap_perc FROM curr_leakage cl, prev_leakage pl; \",\"description\":\"GP Leakage T1 data\"}",
      "t2GPLeakCountContract": "{\"name\":\"t2GPLeakCountContract\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, MIN(ad.data_load_date) AS data_load_date, MIN(ad.DATA_LOAD_DESC) AS DATA_LOAD_DESC, MIN(ad.desc_2) AS desc_2, COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS fc_to_pc_lkg, 0 AS cq_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ap_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END), 0.0) AS fc_to_ap_lkg, 0 AS cq_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END) AS FLOAT) END AS itd_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END) AS FLOAT) END AS ytd_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND (( f.aprvd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ap_cntrct_cnt, SUM( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND (( f.frcst_to_aprvd_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS fcap_cntrct_cnt, SUM( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND (( f.frcst_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.frcst_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS fc_cntrct_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ytd_cntrct_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS itd_cntrct_cnt, 0 AS cq_cntrct_cnt, 0 AS worldwide FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') GROUP BY RTRIM({busAttr}) UNION ALL SELECT 'World Wide' AS bus_attr, MIN(ad.data_load_date) AS data_load_date, MIN(ad.DATA_LOAD_DESC) AS DATA_LOAD_DESC, MIN(ad.desc_2) AS desc_2, COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS fc_to_pc_lkg, 0 AS cq_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ap_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END), 0.0) AS fc_to_ap_lkg, 0 AS cq_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END) AS FLOAT) END AS itd_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END) AS FLOAT) END AS ytd_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND (( f.aprvd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ap_cntrct_cnt, SUM( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND (( f.frcst_to_aprvd_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS fcap_cntrct_cnt, SUM( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND (( f.frcst_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.frcst_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS fc_cntrct_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ytd_cntrct_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS itd_cntrct_cnt, 0 AS cq_cntrct_cnt, 1 AS worldwide FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' WHERE cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') ORDER BY worldwide DESC, bus_attr ASC ; \",\"description\":\"Obtains GP leakage contract counts\"}",
      "t2GPLeakCountCQQContract": "{\"name\":\"t2GPLeakCountCQQContract\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, MIN(ad.data_load_date) AS data_load_date, MIN(ad.data_load_desc) AS qtr, SUM( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END) AS cq_cntrct_cnt, SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS cq_to_pc_lkg, COALESCE(CAST( SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 0 AS worldwide FROM phd.contract_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 GROUP BY RTRIM({busAttr}) UNION ALL SELECT 'World Wide' AS bus_attr, MIN(ad.data_load_date) AS data_load_date, MIN(ad.data_load_desc) AS qtr, SUM( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END) AS cq_cntrct_cnt, SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS cq_to_pc_lkg, COALESCE(CAST( SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 1 AS worldwide FROM phd.contract_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' WHERE cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 ORDER BY worldwide DESC, bus_attr ASC ;\",\"description\":\"Obtains GP leakage contract counts for CQ to PC, quarterly\"}",
      "t2GPLeakCountCQMContract": "{\"name\":\"t2GPLeakCountCQMContract\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, MIN(ad.data_load_desc) AS data_load_desc, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END ) AS cq_cntrct_cnt, SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS cq_to_pc_lkg, COALESCE(CAST( SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 0 AS worldwide FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q' , '') GROUP BY {busAttr} UNION ALL SELECT 'World Wide' AS bus_attr, MIN(ad.data_load_desc) AS data_load_desc, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END ) AS cq_cntrct_cnt, SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS cq_to_pc_lkg, COALESCE(CAST( SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 1 AS worldwide FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 WHERE cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q' , '') ORDER BY worldwide DESC, bus_attr ASC ;\",\"description\":\"Obtains GP leakage contract counts for CQ to PC, current quarter\"}",
      "t2GPLeakCountWorkNum": "{\"name\":\"t2GPLeakCountWorkNum\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, MIN(ad.data_load_date) AS data_load_date, ad.data_load_desc, MIN(ad.desc_2) AS desc_2, COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS itd_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS ytd_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS fc_to_pc_lkg, SUM( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0 ) ) AS cq_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS ap_to_pc_lkg, COALESCE( SUM ( COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) ), 0.0 ) AS fc_to_ap_lkg, CASE WHEN COALESCE(SUM(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST(SUM(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct, COALESCE(CAST(SUM(COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0)) AS FLOAT) / NULLIF(SUM(COALESCE(tcv_amt, 0)), 0), 0) AS fc_to_ap_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND (( f.aprvd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ap_worknum_cnt, SUM( CASE WHEN ( f.frcst_to_aprvd_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) THEN 1 ELSE 0 END) AS fcap_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' AND ( ( f.frcst_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.frcst_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS fc_worknum_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ytd_worknum_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS itd_worknum_cnt, 0 AS cq_worknum_cnt, 0 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') GROUP BY RTRIM({busAttr}), ad.data_load_desc UNION ALL SELECT 'World Wide' AS bus_attr, MIN(ad.data_load_date) AS data_load_date, ad.data_load_desc, MIN(ad.desc_2) AS desc_2, COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS itd_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS ytd_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS fc_to_pc_lkg, SUM( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0 ) ) AS cq_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS ap_to_pc_lkg, COALESCE( SUM ( COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) ), 0.0 ) AS fc_to_ap_lkg, CASE WHEN COALESCE(SUM(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST(SUM(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct, COALESCE(CAST(SUM(COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0)) AS FLOAT) / NULLIF(SUM(COALESCE(tcv_amt, 0)), 0), 0) AS fc_to_ap_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND (( f.aprvd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ap_worknum_cnt, SUM( CASE WHEN ( f.frcst_to_aprvd_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) THEN 1 ELSE 0 END) AS fcap_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' AND ( ( f.frcst_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.frcst_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS fc_worknum_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ytd_worknum_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS itd_worknum_cnt, 0 AS cq_worknum_cnt, 1 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' WHERE cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') GROUP BY ad.data_load_desc ORDER BY worldwide DESC, bus_attr ASC ; \",\"description\":\"Obtains GP leakage work number counts\"}",
      "t2GPLeakCORCountMthWorkNum": "{\"name\":\"t2GPLeakCORCountMthWorkNum\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, VARCHAR_FORMAT(MIN(ad.data_load_date), 'DD/MM/YYYY') AS DATA_LOAD_DATE, MIN(ad.desc_2) AS desc_2, SUM( f.cost_overrun_flg ) AS lkg_cnt, SUM(COALESCE( CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END, 0)) AS lkg_amt, COALESCE(DECIMAL(SUM( CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END), 19, 6) / NULLIF(SUM( COALESCE(f.lst_3_mth_cost_aprvd_amt, 0)), 0), 0) AS lkg_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND a.active_typ_cd in ('A', 'T') INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') GROUP BY RTRIM({busAttr});\",\"description\":\"Obtains GP leakage work number counts\"}",
      "t2GPLeakCountCQQWorkNum": "{\"name\":\"t2GPLeakCountCQQWorkNum\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, MIN(ad.data_load_date) AS data_load_date, MIN(ad.data_load_desc) AS qtr, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END ) AS cq_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END) AS cq_to_pc_lkg, COALESCE( CAST( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END )AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 0 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 GROUP BY RTRIM({busAttr}) UNION ALL SELECT 'World Wide' AS bus_attr, MIN(ad.data_load_date) AS data_load_date, MIN(ad.data_load_desc) AS qtr, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END ) AS cq_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END) AS cq_to_pc_lkg, COALESCE( CAST( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END )AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 1 AS worldwide FROM phd.PROJECT_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' WHERE cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 ORDER BY worldwide DESC, bus_attr ASC ;\",\"description\":\"Obtains GP leakage work number counts for CQ to PC, quarterly\"}",
      "t2GPLeakCountCQMWorkNum": "{\"name\":\"t2GPLeakCountCQMWorkNum\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, MIN(ad.data_load_desc) AS data_load_desc, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END ) AS cq_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END) AS cq_to_pc_lkg, COALESCE( CAST( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END )AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 0 AS worldwide FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q' , '') GROUP BY {busAttr} UNION ALL SELECT 'World Wide' AS bus_attr, MIN(ad.data_load_desc) AS data_load_desc, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END ) AS cq_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END) AS cq_to_pc_lkg, COALESCE( CAST( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END )AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct, 1 AS worldwide FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 WHERE cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q' , '') ORDER BY worldwide DESC, bus_attr ASC ;\",\"description\":\"Obtains GP leakage work number counts for CQ to PC, current quarter\"}",
      "t2GPLeakTrendMthContract": "{\"name\":\"t2GPLeakTrendMthContract\",\"sqlTemplate\":\"SELECT MIN(f.curr_acct_mo) AS acct_mo, MIN(f.curr_acct_yr) AS acct_yr, VARCHAR_FORMAT(MIN(ad.data_load_date), 'DD/MM/YYYY') AS DATA_LOAD_DATE, VARCHAR_FORMAT(MIN(ad.data_load_date), 'Mon YY') AS new_date, RTRIM(MIN(ad.yr_mo_key)) AS yr_mo_key, MIN(ad.desc_2) AS desc_2, COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END), 0.0) AS frcst_to_pc_lkg, 0 AS cq_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ap_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END), 0.0) AS fc_to_ap_lkg, 0 AS cq_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END) AS FLOAT) END AS itd_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS FLOAT) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END) AS FLOAT) END AS ytd_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_ap_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND (( f.aprvd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ap_cntrct_cnt, SUM( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND (( f.frcst_to_aprvd_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS fac_cntrct_cnt, SUM( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND (( f.frcst_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.frcst_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS fc_cntrct_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ytd_cntrct_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS itd_cntrct_cnt, 0 AS cq_cntrct_cnt FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') GROUP BY ad.DATA_LOAD_DATE ORDER BY ad.DATA_LOAD_DATE ASC FETCH FIRST 14 rows only ; \",\"description\":\"Contract GP Leakage Trend Monthly\"}",
      "t2GPLeakTrendQtrContract": "{\"name\":\"t2GPLeakTrendQtrContract\",\"sqlTemplate\":\"WITH cq_cnt AS( SELECT m.yr_num || 'Q' || m.qtr_num AS qtr_key_cd, count(DISTINCT(f.cntrct_key)) AS cq_cntrct_cnt FROM phd.contract_leakage_fact_6w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> ad.yr_mo_key <> 'CURRENT' AND invld_pq_pc_ac_flg = 'N' AND f.curr_acct_mo IN('03', '06', '09', '12') AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}', 'Q', '') AND( '{ngp}' = 'INGP' OR ( '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt >= 0)) AND ((( f.pq_to_pc_lkg_amt < 0) AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ( '{contingency}' = ' ' AND '{leak}' = 'NET' AND pq_to_pc_lkg_in_scope_flg = 1) OR (( f.pq_to_pc_lkg_w_cntgcy_amt < 0) AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS') OR ( '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'NET' AND pq_to_pc_lkg_in_scope_flg = 1)) GROUP BY m.yr_num || 'Q' || m.qtr_num ), itd_cnt AS ( SELECT m.yr_num || 'Q' || m.qtr_num AS qtr_key_cd, count(DISTINCT (f.cntrct_key)) AS itd_cntrct_cnt FROM phd.contract_leakage_fact_6w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> ad.yr_mo_key <> 'CURRENT' AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}', 'Q', '') AND invld_pc_cb_flg = 'N' AND f.curr_acct_mo IN ('03', '06', '09', '12') AND (( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) GROUP BY m.yr_num || 'Q' || m.qtr_num ), ytd_cnt AS ( SELECT m.yr_num || 'Q' || m.qtr_num AS qtr_key_cd, count(DISTINCT (f.cntrct_key)) AS ytd_cntrct_cnt FROM phd.contract_leakage_fact_6w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> ad.yr_mo_key <> 'CURRENT' AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}', 'Q', '') AND invld_pc_cb_flg = 'N' AND f.curr_acct_mo IN ('03', '06', '09', '12') AND (( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) GROUP BY m.yr_num || 'Q' || m.qtr_num ), contract_data AS ( SELECT m.yr_num || 'Q' || m.qtr_num AS qtr_key_cd, COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE( sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, sum( COALESCE( CASE WHEN invld_pq_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END , 0.0)) AS cq_to_pc_lkg, CASE WHEN COALESCE(sum(pq_actls_rev_ac_amt),0.0) = 0.0 THEN 0.0 ELSE cast( COALESCE( sum( CASE WHEN invld_pq_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END),0.0 ) AS float ) / cast(sum(pq_actls_rev_ac_amt) AS float) END AS cq_to_pc_pct, CASE WHEN COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE cast( COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS float ) / cast( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ) AS float ) END AS itd_to_pc_pct, CASE WHEN COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE cast( COALESCE( sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS float ) / cast( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ) AS float ) END AS ytd_to_pc_pct FROM phd.contract_leakage_fact_6w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key inner join phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> ad.yr_mo_key <> 'CURRENT' AND f.curr_acct_mo IN ('03', '06', '09', '12') AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}', 'Q', '') GROUP BY m.yr_num || 'Q' || m.qtr_num) SELECT cd.qtr_key_cd, cd.cq_to_pc_lkg, cd.cq_to_pc_pct, cd.itd_to_pc_lkg, cd.itd_to_pc_pct, cd.ytd_to_pc_lkg, cd.ytd_to_pc_pct, COALESCE(c.cq_cntrct_cnt, 0) AS cq_cntrct_cnt, COALESCE(i.itd_cntrct_cnt, 0) AS itd_cntrct_cnt, COALESCE(y.ytd_cntrct_cnt, 0) AS ytd_cntrct_cnt FROM contract_data cd LEFT JOIN cq_cnt c ON c.qtr_key_cd = cd.qtr_key_cd LEFT JOIN itd_cnt i ON i.qtr_key_cd = cd.qtr_key_cd LEFT JOIN ytd_cnt y ON y.qtr_key_cd = cd.qtr_key_cd ORDER BY qtr_key_cd ASC FETCH first 6 rows only ;\",\"description\":\"Contract GP Leakage Trend Quarterly\"}",
      "t2GPLeakTrendCQMContract": "{\"name\":\"t2GPLeakTrendCQMContract\",\"sqlTemplate\":\"SELECT MIN(ad.data_load_date) AS data_load_date, min(ad.desc_2) as desc_2, MIN(ad.yr_mo_key) AS yr_mo_key, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END ) AS cq_cntrct_cnt, SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS cq_to_pc_lkg, COALESCE(CAST( SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 AND ad.current != 1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') GROUP BY f.mth_key, f.CQ_IND ORDER BY f.mth_key, f.CQ_IND ASC FETCH FIRST 4 rows only ; \",\"description\":\"Contract GP Leakage Trend CQ to PC current quarter\"}",
      "t2GPLeakTrendCQQContract": "{\"name\":\"t2GPLeakTrendCQQContract\",\"sqlTemplate\":\"SELECT MIN(ad.DATA_LOAD_DESC) AS qtr, /*case when min(ad.desc_1) = 'CQ' then 'Daily Refresh' else min(ad.desc_2) end as desc_2,*/ min(ad.desc_2) as desc_2, rtrim(MIN(ad.yr_mo_key)) AS yr_mo_key, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END ) AS cq_cntrct_cnt, SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS cq_to_pc_lkg, COALESCE(CAST( SUM( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ) AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.current != 1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 GROUP BY ad.mth_key, ad.yr_mo_key ORDER BY ad.mth_key, ad.yr_mo_key FETCH FIRST 5 rows only ; \",\"description\":\"Contract GP Leakage Trend CQ to PC current quarter\"}",
      "t2GPLeakTrendCQQWorkNum": "{\"name\":\"t2GPLeakTrendCQQWorkNum\",\"sqlTemplate\":\"SELECT MIN(ad.DATA_LOAD_DESC) AS qtr, /*case when min(ad.desc_1) = 'CQ' then 'Daily Refresh' else min(ad.desc_2) end as desc_2,*/ min(ad.desc_2) as desc_2, rtrim(MIN(ad.yr_mo_key)) AS yr_mo_key, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END ) AS cq_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END) AS cq_to_pc_lkg, COALESCE( CAST( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END )AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.current != 1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 GROUP BY ad.mth_key, ad.yr_mo_key ORDER BY ad.mth_key, ad.yr_mo_key FETCH FIRST 5 rows only ; \",\"description\":\"Work Number GP Leakage Trend current quarter\"}",
      "t2GPLeakTrendMthWorkNum": "{\"name\":\"t2GPLeakTrendMthWorkNum\",\"sqlTemplate\":\"SELECT MIN(f.curr_acct_mo) AS acct_mo, MIN(f.curr_acct_yr) AS acct_yr, VARCHAR_FORMAT(MIN(ad.data_load_date), 'DD/MM/YYYY') AS DATA_LOAD_DATE, VARCHAR_FORMAT(MIN(ad.data_load_date), 'Mon YY') AS new_date, RTRIM(MIN(ad.yr_mo_key)) AS yr_mo_key, MIN(ad.desc_2) AS desc_2, COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS itd_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS ytd_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS frcst_to_pc_lkg, SUM( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0 ) ) AS cq_to_pc_lkg, COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS ap_to_pc_lkg, COALESCE( SUM ( COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) ), 0.0 ) AS fc_to_ap_lkg, CASE WHEN COALESCE(SUM(cq_actls_rev_ac_pv_amt), 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST(SUM(cq_actls_rev_ac_pv_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct, COALESCE(CAST(SUM(COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0)) AS FLOAT) / NULLIF(SUM(COALESCE(tcv_amt, 0)), 0), 0) AS fc_to_ap_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END)), 0.0) AS FLOAT) * ABS(CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) / CAST(COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END), 0.0) AS FLOAT)) END AS fc_to_pc_pct , SUM( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND (( f.aprvd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ap_worknum_cnt, SUM( CASE WHEN ( f.frcst_to_aprvd_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) THEN 1 ELSE 0 END) AS fac_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' AND ( ( f.frcst_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' ) OR ( f.frcst_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS fc_worknum_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' ) ) THEN 1 ELSE 0 END) AS ytd_worknum_cnt, SUM( CASE WHEN invld_pc_cb_flg = 'N' AND ( ( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END) AS itd_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' AND ( '{ngp}' = 'INGP' OR ( '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt >= 0)) AND ((( f.cq_to_pc_lkg_amt < 0) AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR (f.cq_to_pc_lkg_n_amt != 0 AND '{contingency}' = ' ' AND '{leak}' = 'NET') OR (( f.cq_to_pc_lkg_w_cntgcy_amt < 0) AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS') OR (f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'NET')) THEN 1 ELSE 0 END) AS cq_worknum_cnt FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN ( 0, 21 ) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') GROUP BY ad.DATA_LOAD_DATE ORDER BY ad.DATA_LOAD_DATE ASC FETCH FIRST 14 rows only ; \",\"description\":\"Work Number GP Leakage Trend Monthly\"}",
      "t2GPLeakCORTrendMthWorkNum": "{\"name\":\"t2GPLeakCORTrendMthWorkNum\",\"sqlTemplate\":\"SELECT MIN(f.curr_acct_mo) AS acct_mo, MIN(f.curr_acct_yr) AS acct_yr, VARCHAR_FORMAT(MIN(ad.data_load_date), 'Mon YY') AS new_date, VARCHAR_FORMAT(MIN(ad.data_load_date), 'DD/MM/YYYY') AS DATA_LOAD_DATE, RTRIM(MIN(ad.yr_mo_key)) AS yr_mo_key, MIN(ad.desc_2) AS desc_2, SUM(f.cost_overrun_flg) AS cost_lkg_cnt, SUM(COALESCE( CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END, 0)) AS cost_lkg_amt, COALESCE(DECIMAL(SUM( CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END), 19, 6) / NULLIF(SUM(COALESCE(f.lst_3_mth_cost_aprvd_amt, 0)), 0), 0) AS cost_lkg_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND a.active_typ_cd in ('A', 'T') INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN ( 0, 21 ) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') GROUP BY ad.mth_key ORDER BY ad.mth_key ASC FETCH FIRST 14 rows only ; \",\"description\":\"Work Number GP Leakage Trend Monthly\"}",
      "t2GPLeakTrendCQMWorkNum": "{\"name\":\"t2GPLeakTrendCQMWorkNum\",\"sqlTemplate\":\"SELECT MIN(ad.data_load_date) AS data_load_date, min(ad.desc_2) as desc_2, MIN(ad.yr_mo_key) AS yr_mo_key, SUM ( CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END ) AS cq_worknum_cnt, SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END) AS cq_to_pc_lkg, COALESCE( CAST( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END )AS FLOAT ) / NULLIF(SUM(cq_actls_rev_ac_pv_amt), 0) , 0) AS cq_to_pc_pct FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 AND ad.current != 1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') GROUP BY f.mth_key, f.CQ_IND ORDER BY f.mth_key, f.CQ_IND ASC FETCH FIRST 4 rows only ; \",\"description\":\"Work Number GP Leakage Trend current quarter\"}",
      "t2GPLeakTrendQtrWorkNum": "{\"name\":\"t2GPLeakTrendQtrWorkNum\",\"sqlTemplate\":\"WITH cq_cnt AS( SELECT m.yr_num ||'Q' ||m.qtr_num AS qtr_key_cd, count(DISTINCT(f.proj_key)) AS cq_worknum_cnt FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.curr_acct_yr >= ad.curr_acct_yr AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}','Q','') AND invld_pq_pc_ac_flg = 'N' AND f.curr_acct_mo IN('03', '06', '09', '12') AND( '{ngp}' = 'INGP' OR ( '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt >= 0)) AND ((( f.pq_to_pc_lkg_amt < 0) AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ( '{contingency}' = ' ' AND '{leak}' = 'NET' AND pq_to_pc_lkg_in_scope_flg = 1) OR (( f.pq_to_pc_lkg_w_cntgcy_amt < 0) AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS') OR ( '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'NET' AND pq_to_pc_lkg_in_scope_flg = 1)) GROUP BY m.yr_num ||'Q' ||m.qtr_num ), itd_cnt AS ( SELECT m.yr_num ||'Q' ||m.qtr_num AS qtr_key_cd, count(DISTINCT (f.proj_key)) AS itd_worknum_cnt FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.curr_acct_yr >= ad.curr_acct_yr AND invld_pc_cb_flg = 'N' AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}','Q','') AND f.curr_acct_mo IN ('03', '06', '09', '12') AND (( f.itd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.itd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) GROUP BY m.yr_num ||'Q' ||m.qtr_num ), ytd_cnt AS ( SELECT m.yr_num ||'Q' ||m.qtr_num AS qtr_key_cd, count(DISTINCT (f.proj_key)) AS ytd_worknum_cnt FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.curr_acct_yr >= ad.curr_acct_yr AND invld_pc_cb_flg = 'N' AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}','Q','') AND f.curr_acct_mo IN ('03', '06', '09', '12') AND (( f.ytd_to_pc_lkg_amt < 0 AND '{contingency}' = ' ') OR ( f.ytd_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) GROUP BY m.yr_num ||'Q' ||m.qtr_num ), worknum_data AS ( SELECT m.yr_num ||'Q' ||m.qtr_num AS qtr_key_cd, COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE( sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, sum( COALESCE( CASE WHEN invld_pq_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END, 0.0 ) ) AS cq_to_pc_lkg, CASE WHEN COALESCE(sum(pq_actls_rev_ac_amt), 0.0) = 0.0 THEN 0.0 ELSE cast( COALESCE( sum( CASE WHEN invld_pq_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END ELSE 0 END ), 0.0 ) AS float ) / cast(sum(pq_actls_rev_ac_amt) AS float) END AS cq_to_pc_pct, CASE WHEN COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE cast( COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS float ) / cast( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END ) AS float ) END AS itd_to_pc_pct, CASE WHEN COALESCE( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE cast( COALESCE( sum( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS float ) / cast( sum( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END ) AS float ) END AS ytd_to_pc_pct FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim m ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> f.curr_acct_yr >= ad.curr_acct_yr AND cn.sgnd_qtr_key {operator} replace('{yrQtrKey}','Q','') AND f.curr_acct_mo IN ('03', '06', '09', '12') GROUP BY m.yr_num ||'Q' ||m.qtr_num ) SELECT wd.qtr_key_cd, wd.cq_to_pc_lkg, wd.cq_to_pc_pct, wd.itd_to_pc_lkg, wd.itd_to_pc_pct, wd.ytd_to_pc_lkg, wd.ytd_to_pc_pct, COALESCE(c.cq_worknum_cnt,0) AS cq_worknum_cnt, COALESCE(i.itd_worknum_cnt,0) AS itd_worknum_cnt, COALESCE(y.ytd_worknum_cnt,0) AS ytd_worknum_cnt FROM worknum_data wd LEFT JOIN cq_cnt c ON c.qtr_key_cd = wd.qtr_key_cd LEFT JOIN itd_cnt i ON i.qtr_key_cd = wd.qtr_key_cd LEFT JOIN ytd_cnt y ON y.qtr_key_cd = wd.qtr_key_cd ORDER BY qtr_key_cd ASC FETCH first 6 rows only ;\",\"description\":\"GP Leakage Trend work number Quarterly\"}",
      "t2GPLeakDetailsContract": "{\"name\":\"t2GPLeakDetailsContract\",\"sqlTemplate\":\"SELECT '{metric}' AS metricval, '{contingency}' AS contval, RTRIM(cn.cntrct_num) AS cntrct_num, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(cn.cntrct_desc) AS prjct_nm, RTRIM(cd.cust_nm) AS clnt_nm, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN f.tcv_cb_amt WHEN '{metric}' = 'YTD_TO_PC' THEN f.tcv_cb_amt WHEN '{metric}' = 'FC_EAC_TO_PC' THEN f.tcv_cb_amt WHEN '{metric}' = 'CQ_TO_PC' THEN f.tcv_cb_amt WHEN '{metric}' = 'FC_EAC_AP' THEN f.tcv_cb_amt WHEN '{metric}' = 'AP_TO_PC' THEN f.tcv_cb_amt END AS tcv, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS FLOAT) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END AS FLOAT) END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN f.cq_actls_rev_ac_pv_amt = 0.0 THEN 0.0 ELSE CAST(COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / CAST(cq_actls_rev_ac_pv_amt AS FLOAT) END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS FLOAT) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END AS FLOAT) END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN ( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END WHEN '{metric}' = 'FC_EAC_AP' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN ( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN ( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END END AS gp_pct, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_AP' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END END AS gp_val, 0 AS prev_gp_val FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop d ON f.date_key = d.mth_key AND d.graph_nm = 'GP_L2_FRC' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') AND ( ( '{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR '{leak}' = 'GRS') AND ( CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_AP' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END END) < 0 ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 rows only ; \",\"description\":\"GP Leakage Top Contrib Contract Details\"}",
      "t2GPLeakDetailsCQQContract": "{\"name\":\"t2GPLeakDetailsCQQContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc AS qtr, RTRIM(cd.cntrct_num) AS cntrct_num, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(cd.cntrct_desc) AS cntrct_nm, COALESCE(RTRIM(cu.cust_nm), 'N/A') AS clnt_nm, f.tcv_amt AS tcv, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END , 0.0 ) AS gp_val, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END , 0.0 ) AS prev_gp_val FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sect ON f.sctr_key = sect.sctr_gb_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' {filter}<filter?AND:WHERE> cd.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 AND invld_pc_ac_flg = 'N' AND ( '{ngp}' != 'ENGP' OR cq_actls_gp_ac_pv_amt >= 0) AND CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE cq_to_pc_lkg_w_cntgcy_amt END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE cq_to_pc_lkg_amt END END < 0 ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 rows only ; \",\"description\":\"GP Leakage Top Contrib Contract Details\"}",
      "t2GPLeakDetailsCQMContract": "{\"name\":\"t2GPLeakDetailsCQMContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc, RTRIM(cd.cntrct_num) AS cntrct_num, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(cd.cntrct_desc) AS cntrct_nm, COALESCE(RTRIM(cu.cust_nm), 'N/A') AS clnt_nm, f.tcv_amt AS tcv, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END , 0.0 ) AS gp_val, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END , 0.0 ) AS prev_gp_val FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sect ON f.sctr_key = sect.sctr_gb_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 {filter} <filter?AND:WHERE> cd.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND invld_pc_ac_flg = 'N' AND ( '{ngp}' != 'ENGP' OR cq_actls_gp_ac_pv_amt >= 0) AND CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE cq_to_pc_lkg_w_cntgcy_amt END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE cq_to_pc_lkg_amt END END < 0 ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 rows only ;\",\"description\":\"GP Leakage Top Contrib Contract Details\"}", 
      "t2GPLeakDetailsWorkNum": "{\"name\":\"t2GPLeakDetailsWorkNum\",\"sqlTemplate\":\"SELECT '{metric}' AS metricval, RTRIM(p.proj_num) AS work_num, rtrim(cn.cntrct_num) as cntrct_num, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(p.proj_desc) AS prjct_nm, RTRIM(cu.cust_nm) AS clnt_nm, f.tcv_amt AS tcv, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS FLOAT) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END AS FLOAT) END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN f.cq_actls_rev_ac_pv_amt = 0.0 THEN 0.0 ELSE CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / CAST(cq_actls_rev_ac_pv_amt AS FLOAT) END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS FLOAT) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END AS FLOAT) END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN ( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END WHEN '{metric}' = 'FC_EAC_AP' THEN COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN ( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END END AS gp_pct, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_AP' THEN COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) END AS gp_val, 0 AS prev_gp_val FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop d ON f.date_key = d.mth_key AND d.graph_nm = 'GP_L2_FRC' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key > REPLACE('{yrQtrKey}', 'Q', '') AND (( CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END WHEN '{metric}' = 'FC_EAC_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END END) < 0) ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 rows only ; \",\"description\":\"GP Leakage Top Contrib Work No. Details\"}",
      "t2GPLeakCORDetailsMthWorkNum": "{\"name\":\"t2GPLeakCORDetailsMthWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, RTRIM(cn.CNTRCT_NUM) AS CNTRCT_NUM, RTRIM(p.proj_desc) AS prjct_nm, RTRIM(cu.cust_nm) AS clnt_nm, f.tcv_amt AS tcv, COALESCE(f.lst_3_mth_cost_aprvd_amt, 0) AS PLAN_amt, COALESCE(f.lst_3_mth_actls_cost_amt, 0) AS act_amt, COALESCE( CASE WHEN f.cost_overrun_flg = 1 THEN ABS(f.overrun_cost_amt) ELSE 0 END, 0) AS variance_amt, COALESCE(DECIMAL( CASE WHEN f.cost_overrun_flg = 1 THEN ABS(f.overrun_cost_amt) ELSE 0 END, 19, 6) / NULLIF(f.lst_3_mth_cost_aprvd_amt, 0), 0) AS variance_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND a.active_typ_cd in ('A', 'T') INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key LEFT JOIN phd.contract_dim cn ON cn.cntrct_key = f.cntrct_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop d ON f.date_key = d.mth_key AND d.graph_nm = 'GP_L2_FRC' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key > REPLACE('{yrQtrKey}', 'Q','') AND f.COST_OVERRUN_FLG = 1 ORDER BY variance_amt DESC FETCH FIRST 100 rows only ;\",\"description\":\"GP Leakage Top Contrib Work No. Details\"}",
      "t2GPLeakDetailsCQQWorkNum": "{\"name\":\"t2GPLeakDetailsCQQWorkNum\",\"sqlTemplate\":\"SELECT ad.data_load_desc AS qtr, RTRIM(p.proj_num) AS work_num, rtrim(cn.cntrct_num) as cntrct_num, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(p.proj_desc) AS prjct_nm, COALESCE(RTRIM(cu.cust_nm), 'N/A') AS clnt_nm, f.tcv_amt AS tcv, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END , 0.0 ) AS gp_val, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END , 0.0 ) AS prev_gp_val FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sect ON f.sctr_key = sect.sctr_gb_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.qtr_flg = 1 AND invld_pc_flg = 'N' AND ( '{ngp}' != 'ENGP' OR cq_actls_gp_ac_pv_amt >= 0) AND CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE cq_to_pc_lkg_w_cntgcy_amt END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE cq_to_pc_lkg_amt END END < 0 ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 rows only ; \",\"description\":\"GP Leakage Top Contrib Work No. Details\"}",
      "t2GPLeakDetailsCQMWorkNum": "{\"name\":\"t2GPLeakDetailsCQMWorkNum\",\"sqlTemplate\":\"SELECT ad.data_load_desc, RTRIM(p.proj_num) AS work_num, rtrim(cn.cntrct_num) as cntrct_num, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(p.proj_desc) AS prjct_nm, COALESCE(RTRIM(cu.cust_nm), 'N/A') AS clnt_nm, f.tcv_amt AS tcv, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END , 0.0 ) AS gp_val, COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END , 0.0 ) AS prev_gp_val FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sect ON f.sctr_key = sect.sctr_gb_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 {filter}<filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND invld_pc_flg = 'N' AND ( '{ngp}' != 'ENGP' OR cq_actls_gp_ac_pv_amt >= 0) AND CASE WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE cq_to_pc_lkg_w_cntgcy_amt END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE cq_to_pc_lkg_amt END END < 0 ORDER BY {orderColumn} {orderDirection} FETCH FIRST 100 rows only ; \",\"description\":\"GP Leakage Top Contrib Work No. Details\"}",
      "t2GPLeakPopupContract": "{\"name\":\"t2GPLeakPopupContract\",\"sqlTemplate\":\"select rtrim(cntrct_num) as cntrct_num, ad.data_load_desc as data_load_desc, 'contract' as type, rtrim(cn.cntrct_desc) as contract_name, rtrim(geo2.geo_lvl2_nm) as market, rtrim(geo1.geo_lvl1_nm) as geo, indstry.indstry_cmr_nm, rtrim(prac.practice_nm) as practice_nm, rtrim(cd.cust_nm) as customer, cn.cntrct_key, case when cn.prtnr_nm != '' THEN SUBSTR(cn.prtnr_nm, 1, locate('/', cn.prtnr_nm)-1) ELSE 'N/A' END AS brand_pe, case when cn.pm_notes_id != '' THEN SUBSTR(cn.pm_notes_id, 1, locate('/', cn.pm_notes_id)-1) ELSE 'N/A' END AS brand_pm, RTRIM(ctry.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, RTRIM(s.sctr_gb_nm) AS sector, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(gp.grth_plfm_desc) AS growth_platform, f.tcv_cb_amt AS tcv, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.pc_gp_cb_amt - f.pc_unappr_cntgcy_cb_amt ELSE f.pc_gp_cb_amt END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END END AS pc_gp, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.pc_gp_cb_amt - f.pc_unappr_cntgcy_cb_amt, 22, 9) / NULLIF (f.pc_rev_cb_amt, 0) ELSE f.pc_gp_cb_pct END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT), 22, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 22, 9) / NULLIF(f.PC_REV_AMT, 0) END END AS pc_gp_pct, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_cb_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_cb_amt AS FLOAT), 0.0) ELSE f.aprvd_gp_cb_amt END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0) ELSE f.aprvd_gp_amt END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0) ELSE f.aprvd_gp_amt END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0) ELSE f.aprvd_gp_amt END WHEN '{metric}' = 'FC_EAC_AP' OR '{metric}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0) ELSE f.aprvd_gp_amt END END AS ap_gp, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_cb_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_cb_amt AS FLOAT) - CAST ( f.aprvd_unappr_cntgcy_cb_amt AS FLOAT), 0.0) / CAST(f.aprvd_rev_cb_amt AS FLOAT) WHEN f.aprvd_rev_cb_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_cb_pct END WHEN '{metric}' = 'CQ_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT) , 0.0) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_rev_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0 ) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_rev_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0 ) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_rev_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END WHEN '{metric}' = 'FC_EAC_AP' OR '{metric}' = 'AP_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_rev_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END END AS ap_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE NULL END END AS ytd_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE NULL END END AS itd_to_pc_gp_pct, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_pc_gp_pct, CASE WHEN 'ITD_TO_PC' = 'ITD_TO_PC' THEN f.pc_gp_cb_pct ELSE pc_gp_pct END AS pc_gp_pct_cb, CASE WHEN 'ITD_TO_PC' = 'ITD_TO_PC' THEN f.pc_gp_cb_amt ELSE pc_gp_amt END AS pc_gp_cb, CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.frcst_to_pc_lkg_w_cntgcy_amt ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END AS fc_to_pc_lkg, CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.ytd_to_pc_lkg_w_cntgcy_amt ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END AS ytd_to_pc_lkg, CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.itd_to_pc_lkg_w_cntgcy_amt ELSE f.itd_to_pc_lkg_amt END ELSE 0 END AS itd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS cq_to_pc_lkg, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE( CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0)) END , 0.0) AS fc_to_ap_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fc_to_ap_lkg, COALESCE(f.etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(f.etc_actls_gp_amt, 0) AS fc_gp_amt, cn.phd_url AS ippf_url from phd.contract_leakage_fact_frcst_v f inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on f.cust_key = cd.cust_key LEFT join phd.practice_dim prac on prac.practice_key = f.practice_key inner join phd.geo_lvl1_dim geo1 on f.geo_lvl1_key = geo1.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on f.geo_lvl2_key = geo2.geo_lvl2_key inner join phd.industry_dim indstry on f.indstry_key = indstry.indstry_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 inner join phd.sector_gb_dim s on s.sctr_gb_key = f.sctr_key inner join phd.acct_drop ad on f.date_key = ad.mth_key and ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_FRC' where cntrct_num = '{cntrctNum}' ; \",\"description\":\"GP Leakage Contract Detail popup\"}",
      "t2GPLeakMetPopupContract": "{\"name\":\"t2GPLeakMetPopupContract\",\"sqlTemplate\":\"SELECT RTRIM(cn.cntrct_num) AS cntrct_num, cn.cntrct_key, ad.data_load_desc, cn.phd_url AS ippf_url, COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS cqpc, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_eac_to_pc_pct, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE NULL END END AS itd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE NULL END END AS ytd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fcap, COALESCE( CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0)) END , 0.0) AS fc_eac_ap_pct, tier_eac_lkg_num AS fc_eac_ap_tier_num, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE(f.cq_gp_lkg_pv_amt, 0.0) AS cqap, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(cq_gp_lkg_pv_amt, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_ap_pct, tier_gp_lkg_num AS cq_to_ap_tier_num FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' WHERE cn.cntrct_num = '{cntrctNum}' FETCH FIRST row only ; \",\"description\":\"GP Leakage Metic tab Contract Detail popup\"}",
      "t2GPLeakPopupCQQContract": "{\"name\":\"t2GPLeakPopupCQQContract\",\"sqlTemplate\":\"SELECT RTRIM(cntrct_num) AS cntrct_num, ad.data_load_desc AS data_load_desc, 'contract' as type, rtrim(cn.cntrct_desc) as contract_name, rtrim(geo2.geo_lvl2_nm) as market, rtrim(geo1.geo_lvl1_nm) as geo, rtrim(prac.practice_nm) as practice_nm, rtrim(cd.cust_nm) as customer, cn.cntrct_key, case when cn.prtnr_nm != '' then substr(cn.prtnr_nm, 1, locate('/', cn.prtnr_nm)-1) else 'N/A' end as brand_pe, case when cn.pm_notes_id != '' then substr(cn.pm_notes_id, 1, locate('/', cn.pm_notes_id)-1) else 'N/A' end as brand_pm, RTRIM(ctry.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, indstry.indstry_cmr_nm, RTRIM(s.sctr_gb_nm) AS sector, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(gp.grth_plfm_desc) AS growth_platform, f.tcv_cb_amt AS tcv, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS pc_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS pc_gp_pct, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0 ) ELSE f.aprvd_gp_amt END AS ap_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT) , 0.0) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_rev_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END AS ap_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE NULL END END AS ytd_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE NULL END END AS itd_to_pc_gp_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_gp_pct, CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.frcst_to_pc_lkg_w_cntgcy_amt ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END AS fc_to_pc_lkg, CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.ytd_to_pc_lkg_w_cntgcy_amt ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END AS ytd_to_pc_lkg, CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.itd_to_pc_lkg_w_cntgcy_amt ELSE f.itd_to_pc_lkg_amt END ELSE 0 END AS itd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS cq_to_pc_lkg, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE( CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0)) END , 0.0) AS fc_to_ap_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fc_to_ap_lkg, COALESCE(f.etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(f.etc_actls_gp_amt, 0) AS fc_gp_amt, cn.phd_url AS ippf_url FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key inner join phd.geo_lvl1_dim geo1 on f.geo_lvl1_key = geo1.geo_lvl1_key INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key LEFT join phd.practice_dim prac on prac.practice_key = f.practice_key INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 inner join phd.industry_dim indstry on f.indstry_key = indstry.indstry_key INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.qtr_flg = 1 AND ad.yr_mo_key = '{cqQtrKey}' AND f.cq_ind = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' WHERE cntrct_num = '{cntrctNum}' ;\",\"description\":\"GP Leakage Contract CQQ Detail popup\"}",
      "t2GPLeakPopupCQMContract": "{\"name\":\"t2GPLeakPopupCQMContract\",\"sqlTemplate\":\"SELECT RTRIM(cntrct_num) AS cntrct_num, ad.data_load_desc AS data_load_desc, 'contract' as type, rtrim(cn.cntrct_desc) as contract_name, rtrim(geo2.geo_lvl2_nm) as market, rtrim(geo1.geo_lvl1_nm) as geo, rtrim(prac.practice_nm) as practice_nm, rtrim(cd.cust_nm) as customer, cn.cntrct_key, case when cn.prtnr_nm != '' then substr(cn.prtnr_nm, 1, locate('/', cn.prtnr_nm)-1) else 'N/A' end as brand_pe, case when cn.pm_notes_id != '' then substr(cn.pm_notes_id, 1, locate('/', cn.pm_notes_id)-1) else 'N/A' end as brand_pm, RTRIM(ctry.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, indstry.indstry_cmr_nm, RTRIM(s.sctr_gb_nm) AS sector, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(gp.grth_plfm_desc) AS growth_platform, f.tcv_cb_amt AS tcv, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS pc_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS pc_gp_pct, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE(CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT), 0.0 ) ELSE f.aprvd_gp_amt END AS ap_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt > 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.aprvd_unappr_cntgcy_amt AS FLOAT) , 0.0) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_rev_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END AS ap_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE NULL END END AS ytd_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE NULL END END AS itd_to_pc_gp_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_gp_pct, CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.frcst_to_pc_lkg_w_cntgcy_amt ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END AS fc_to_pc_lkg, CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.ytd_to_pc_lkg_w_cntgcy_amt ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END AS ytd_to_pc_lkg, CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.itd_to_pc_lkg_w_cntgcy_amt ELSE f.itd_to_pc_lkg_amt END ELSE 0 END AS itd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS cq_to_pc_lkg, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE( CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0)) END , 0.0) AS fc_to_ap_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fc_to_ap_lkg, COALESCE(f.etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(f.etc_actls_gp_amt, 0) AS fc_gp_amt, cn.phd_url AS ippf_url FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on f.geo_lvl1_key = geo1.geo_lvl1_key LEFT join phd.practice_dim prac on prac.practice_key = f.practice_key INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 inner join phd.industry_dim indstry on f.indstry_key = indstry.indstry_key INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.yr_mo_key = '{cqMthKey}' AND f.cq_flg = 1 AND f.cq_ind = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_M' WHERE cntrct_num = '{cntrctNum}' ;\",\"description\":\"GP Leakage Contract CQM Detail popup\"}",
      "t2GPLeakPopupWorkNum": "{\"name\":\"t2GPLeakPopupWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, d.data_load_desc AS data_load_desc, 'work number' AS type, RTRIM(p.proj_desc) AS proj_name, RTRIM(cn.cntrct_num) AS cntrct_num, RTRIM(cn.cntrct_desc) AS contract_name, CASE WHEN p.prtnr_nm != '' THEN SUBSTR(p.prtnr_nm, 1, locate('/', p.prtnr_nm)-1) ELSE 'N/A' END AS brand_pe, RTRIM(cu.cust_nm) AS customer, cn.cntrct_key, p.proj_key, RTRIM(g4.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, DATE(p.aprv_pln_dt) AS appr_plan_date, RTRIM(svc_line.svc_line_nm) AS service_line, indstry.indstry_cmr_nm, RTRIM(s.sctr_gb_nm) AS sector, DATE(f.frcst_sbmt_tms) AS fcst_appr_date, RTRIM(gp.grth_plfm_desc) AS growth_platform, f.tcv_amt AS tcv, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS pc_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.pc_unappr_ctngcy_amt AS FLOAT ),0.0) ELSE f.aprvd_gp_amt END AS ap_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT), 22, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 22, 9) / NULLIF(f.PC_REV_AMT, 0) END AS pc_gp_pct, CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt <> 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.pc_unappr_ctngcy_amt AS FLOAT ), 0.0 ) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_gp_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END AS ap_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_gp_pct, CASE WHEN COALESCE(f.cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / f.cq_actls_rev_ac_pv_amt END AS cq_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(f.tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) AS fc_to_ap_pct, f.pc_gp_pct AS pc_gp_pct_cb, f.pc_gp_amt AS pc_gp_cb, COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fc_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytd_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itd_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cq_to_pc_lkg, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) AS fc_to_ap_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE(f.etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(f.etc_actls_gp_amt, 0) AS fc_gp_amt, p.phd_url AS ippf_url FROM phd.project_leakage_fact_frcst_v f LEFT JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key LEFT JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 LEFT JOIN phd.industry_dim indstry ON f.indstry_key = indstry.indstry_key LEFT JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key LEFT JOIN phd.country_dim g4 ON f.ctry_key = g4.ctry_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key LEFT JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key LEFT JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop d ON d.mth_key = f.date_key AND d.graph_nm = 'GP_L2_FRC' AND d.yr_mo_key = '{yrMoKey}' WHERE p.proj_num = '{workNum}' ;\",\"description\":\"GP Leakage Work Number Detail popup\"}",
      "t2GPLeakMetPopupWorkNum": "{\"name\":\"t2GPLeakMetPopupWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, p.proj_key, p.cntrct_key, p.phd_url AS ippf_url, ad.data_load_desc, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cqpc, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_eac_to_pc_pct, CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END AS cstovrn, CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(CAST(ABS(f.overrun_cost_amt) AS FLOAT) / NULLIF(f.lst_3_mth_cost_aprvd_amt, 0), 0) ELSE 0 END AS cost_over_pct, tier_cost_overrun_num AS cost_over_tier_num, CASE WHEN f.cq_to_ap_flg = 1 THEN COALESCE(f.cq_gp_lkg_ac_amt, 0) ELSE 0 END AS cqap, CASE WHEN f.cq_to_ap_flg = 1 THEN COALESCE(f.cq_gp_ac_pv_pct, 0) - COALESCE(f.cq_aprvd_gp_ac_pct, 0) ELSE 0 END AS cq_to_ap_pct, tier_gp_lkg_num AS cq_to_ap_tier_num, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) AS fcap, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) AS fc_eac_ap_pct, tier_eac_lkg_num AS fc_eac_ap_tier_num FROM phd.project_leakage_fact_frcst_v f INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' WHERE p.PROJ_NUM = '{workNum}' FETCH FIRST row only ; \",\"description\":\"GP Leakage Metric tab Work Number Detail popup\"}",
      "t2GPLeakPopupCQQWorkNum": "{\"name\":\"t2GPLeakPopupCQQWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, d.data_load_desc AS data_load_desc, 'work number' AS type, RTRIM(p.proj_desc) AS proj_name, RTRIM(cn.cntrct_num) AS cntrct_num, RTRIM(cn.cntrct_desc) AS contract_name, CASE WHEN p.prtnr_nm != '' THEN SUBSTR(p.prtnr_nm, 1, locate('/', p.prtnr_nm)-1) ELSE 'N/A' END AS brand_pe, RTRIM(cu.cust_nm) AS customer, cn.cntrct_key, p.proj_key, RTRIM(g4.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, DATE(p.aprv_pln_dt) AS appr_plan_date, RTRIM(svc_line.svc_line_nm) AS service_line, indstry.indstry_cmr_nm, RTRIM(s.sctr_gb_nm) AS sector, DATE(f.frcst_sbmt_tms) AS fcst_appr_date, RTRIM(gp.grth_plfm_desc) AS growth_platform, f.tcv_amt AS tcv, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS pc_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS pc_gp_pct, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.pc_unappr_ctngcy_amt AS FLOAT ),0.0) ELSE f.aprvd_gp_amt END AS ap_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt <> 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.pc_unappr_ctngcy_amt AS FLOAT ), 0.0 ) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_gp_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END AS ap_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_gp_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(f.tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) AS fc_to_ap_pct, COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fc_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytd_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itd_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cq_to_pc_lkg, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) AS fc_to_ap_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE(f.etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(f.etc_actls_gp_amt, 0) AS fc_gp_amt, p.phd_url AS ippf_url FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 inner join phd.industry_dim indstry on f.indstry_key = indstry.indstry_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.country_dim g4 ON f.ctry_key = g4.ctry_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop d ON d.mth_key = f.mth_key AND f.qtr_flg = 1 AND d.yr_mo_key = '{cqQtrKey}' AND f.cq_ind = d.desc_1 AND d.graph_nm = 'GP_L2_CQ_Q' WHERE p.proj_num = '{workNum}';\",\"description\":\"GP Leakage Work Number CQQ Detail popup\"}",
      "t2GPLeakPopupCQMWorkNum": "{\"name\":\"t2GPLeakPopupCQMWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, d.data_load_desc AS data_load_desc, 'work number' AS type, RTRIM(p.proj_desc) AS proj_name, RTRIM(cn.cntrct_num) AS cntrct_num, RTRIM(cn.cntrct_desc) AS contract_name, CASE WHEN p.prtnr_nm != '' THEN SUBSTR(p.prtnr_nm, 1, locate('/', p.prtnr_nm)-1) ELSE 'N/A' END AS brand_pe, RTRIM(cu.cust_nm) AS customer, cn.cntrct_key, p.proj_key, RTRIM(g4.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, DATE(p.aprv_pln_dt) AS appr_plan_date, RTRIM(svc_line.svc_line_nm) AS service_line, indstry.indstry_cmr_nm, RTRIM(s.sctr_gb_nm) AS sector, DATE(f.frcst_sbmt_tms) AS fcst_appr_date, RTRIM(gp.grth_plfm_desc) AS growth_platform, f.tcv_amt AS tcv, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS pc_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS pc_gp_pct, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.pc_unappr_ctngcy_amt AS FLOAT ),0.0) ELSE f.aprvd_gp_amt END AS ap_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_rev_amt <> 0 THEN COALESCE( CAST(f.aprvd_gp_amt AS FLOAT) - CAST(f.pc_unappr_ctngcy_amt AS FLOAT ), 0.0 ) / CAST(f.aprvd_rev_amt AS FLOAT) WHEN f.aprvd_gp_amt <= 0 THEN 0.0 ELSE f.aprvd_gp_pct END AS ap_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN f.invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_gp_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_gp_pct, CASE WHEN COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN f.invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(f.tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) AS fc_to_ap_pct, COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fc_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytd_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itd_to_pc_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cq_to_pc_lkg, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.invld_pc_flg = 'N' AND f.invld_aprvd_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) AS fc_to_ap_lkg, COALESCE( CASE WHEN f.invld_pc_flg = 'N' AND f.invld_frcst_flg = 'N' AND f.invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE(f.etc_actls_gp_pct, 0) AS fc_gp_pct, COALESCE(f.etc_actls_gp_amt, 0) AS fc_gp_amt, p.phd_url AS ippf_url FROM phd.project_leakage_fact_cq_to_pc_v f INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 inner join phd.industry_dim indstry on f.indstry_key = indstry.indstry_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.country_dim g4 ON f.ctry_key = g4.ctry_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop d ON d.mth_key = f.mth_key AND d.yr_mo_key = '{cqMthKey}' AND f.cq_flg = 1 AND f.cq_ind = d.desc_1 AND d.graph_nm = 'GP_L2_CQ_M' WHERE p.proj_num = '{workNum}' ;\",\"description\":\"GP Leakage Work Number CQM Detail popup\"}",
      "t2GPLeakTrendMthMetContract": "{\"name\":\"t2GPLeakTrendMthMetContract\",\"sqlTemplate\":\"SELECT RTRIM(cntrct_num) AS cntrct_num, VARCHAR_FORMAT(ad.data_load_date, 'DD/MM/YYYY') AS data_load_date, VARCHAR_FORMAT((ad.data_load_date), 'Mon YY') AS new_date, ad.desc_2, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS frcst_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS cq_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS ap_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END , 0.0 ) AS fc_to_ap_lkg, COALESCE(ABS(f.overrun_cost_amt),0.0) AS cost_over, COALESCE(f.cq_gp_lkg_pv_amt, 0.0) AS cq_to_ap_lkg, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END , 0.0 ) AS FLOAT ) / CAST(cq_actls_rev_ac_pv_amt AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END AS FLOAT ) END AS ytd_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS fc_to_ap_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS ap_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS fc_to_pc_pct, CASE WHEN COALESCE(f.cq_actls_rev_ac_pv_amt,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(f.cq_gp_lkg_pv_amt, 0.0) AS FLOAT) / CAST(f.cq_actls_rev_ac_pv_amt AS FLOAT) END AS cq_to_ap_pct, CASE WHEN COALESCE(f.lst_3_mth_cost_aprvd_amt,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN(ABS(f.overrun_cost_amt)),0.0) AS FLOAT)*ABS(CAST(COALESCE (ABS(f.overrun_cost_amt),0.0) AS FLOAT) / CAST(COALESCE(f.lst_3_mth_cost_aprvd_amt,0.0 ) AS FLOAT)) END AS cost_over_pct FROM phd.contract_leakage_fact_frcst_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key <> 'CURRENT' WHERE cn.cntrct_num = '{cntrctNum}' ORDER BY ad.data_load_date ASC FETCH FIRST 14 rows only ; \",\"description\":\"Contract GP Leakage Trend Metric Monthly\"}",
      "t2GPLeakTrendQtrMetContract": "{\"name\":\"t2GPLeakTrendQtrMetContract\",\"sqlTemplate\":\"SELECT m.yr_num || 'Q' || m.qtr_num AS qtr_key_cd, COALESCE(SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS itd_to_pc_lkg, COALESCE(SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END), 0.0) AS ytd_to_pc_lkg, SUM( COALESCE( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END , 0.0)) AS cq_to_pc_lkg, CASE WHEN COALESCE(SUM(pq_actls_rev_ac_amt),0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN '{ngp}' = 'ENGP' AND pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN pq_to_pc_lkg_n_amt ELSE CASE WHEN pq_to_pc_lkg_amt > 0 THEN 0 ELSE pq_to_pc_lkg_amt END END END),0.0) AS FLOAT ) / CAST(SUM(pq_actls_rev_ac_amt) AS FLOAT) END AS cq_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END ) AS FLOAT ) END AS itd_to_pc_pct, CASE WHEN COALESCE( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ), 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( SUM( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END ), 0.0 ) AS FLOAT ) / CAST( SUM( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END ) AS FLOAT ) END AS ytd_to_pc_pct FROM phd.contract_leakage_fact_6w_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim M ON f.mth_key = m.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> f.key_day_ind = '6W' AND( f.curr_acct_yr >= ad.curr_acct_yr AND f.curr_acct_mo IN('03', '06', '09', '12') AND cn.cntrct_num = '{cntrctNum}') GROUP BY m.yr_num || 'Q' || m.qtr_num ORDER BY qtr_key_cd ASC FETCH FIRST 6 rows only ; \",\"description\":\"Contract GP Leakage Trend Metric Quarterly\"}",
      "t2GPLeakTrendMthMetWorkNum": "{\"name\":\"t2GPLeakTrendMthMetWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, VARCHAR_FORMAT(ad.data_load_date, 'DD/MM/YYYY') AS data_load_date, VARCHAR_FORMAT((ad.data_load_date), 'Mon YY') AS new_date, ad.desc_2, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS frcst_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cq_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ap_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fc_to_ap_lkg, CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END AS cost_over, COALESCE(cq_gp_lkg_ac_amt, 0) AS cq_to_ap, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END) END AS fc_to_ap_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_to_pc_pct, COALESCE(cq_gp_ac_pv_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) AS cq_to_ap_pct, COALESCE(DECIMAL( CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END, 19, 6) / NULLIF(f.lst_3_mth_cost_aprvd_amt, 0), 0) AS cost_over_pct FROM phd.project_leakage_fact_frcst_v f INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key <> 'CURRENT' WHERE p.proj_num = '{workNum}' ORDER BY ad.data_load_date ASC FETCH FIRST 14 rows only ;\",\"description\":\"Work Nbr GP Leakage Trend Metric Monthly\"}",
      "t2GPLeakTrendQtrMetWorkNum": "{\"name\":\"t2GPLeakTrendQtrMetWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, m.yr_num ||'Q' ||m.qtr_num AS qtr_key_cd, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytd_to_pc_lkg, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cq_to_pc_lkg, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_pct, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_pct, COALESCE(overrun_cost_amt, 0) AS cost_over, COALESCE(cq_gp_lkg_ac_amt, 0) AS cq_to_ap, COALESCE(cq_gp_ac_pv_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) AS cq_to_ap_pct, COALESCE(CAST(overrun_cost_amt AS FLOAT) / NULLIF(lst_3_mth_cost_aprvd_amt, 0), 0) AS cost_over_pct FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.month_dim M ON f.mth_key = m.mth_key INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' and f.curr_acct_yr >= ad.curr_acct_yr AND ad.yr_mo_key <> 'CURRENT' where f.curr_acct_mo IN('03', '06', '09', '12') and p.proj_num = '{workNum}' ORDER BY qtr_key_cd ASC FETCH FIRST 13 rows only ; \",\"description\":\"Work Nbr GP Leakage Trend Metric Quarterly\"}",
      "t2GPLeakExportContract": "{\"name\":\"t2GPLeakExportContract\",\"sqlTemplate\":\"SELECT RTRIM(cn.cntrct_num) AS cntrct_num, CASE WHEN cn.poc_ind = 'Y' THEN 'Yes' ELSE 'No' END AS ap51, cn.cntrct_desc AS cntrct_desc, RTRIM(geo1.geo_lvl1_nm) AS geo_desc, RTRIM(geo2.geo_lvl2_nm) AS mkt_desc, cu.cust_nm AS customer, RTRIM(ctry.ctry_nm) AS country, s.sctr_gb_nm AS sector_desc, indstry.indstry_cmr_nm AS industry_desc, gp.grth_plfm_desc AS growth_platform, RTRIM(sl.svc_line_nm) AS service_line, 'Not Available' AS cluster_name, DATE(cn.sgnd_dt) AS cntrct_sgnd_dt, DATE(cn.end_dt) AS end_date, DATE(cn.strtd_dt) AS start_date, CASE WHEN cn.prtnr_nm != '' THEN SUBSTR(cn.prtnr_nm, 1, locate('/',cn.prtnr_nm)-1) ELSE 'N/A' END AS partner_nm, f.curr_acct_yr AS acct_yr, VARCHAR_FORMAT((snap.data_load_date), 'YYYY') AS acct_yr, VARCHAR_FORMAT((snap.data_load_date), 'MM') AS acct_mo, RTRIM(a.active_typ_cd) AS status, COALESCE(f.tcv_cb_amt, 0.0) AS tcv, COALESCE(f.pc_rev_amt, 0.0) AS revenue, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_CB_AMT + f.PC_UNAPPR_CNTGCY_CB_AMT ELSE f.PC_COST_CB_AMT END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT ELSE f.PC_COST_AMT END END AS pc_plan_cost, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.pc_gp_cb_amt - f.pc_unappr_cntgcy_cb_amt ELSE f.pc_gp_cb_amt END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END END AS pc_gp, CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.pc_gp_cb_amt - f.pc_unappr_cntgcy_cb_amt, 22, 9) / NULLIF (f.pc_rev_cb_amt, 0) ELSE f.pc_gp_cb_pct END ELSE CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT), 22, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 22, 9) / NULLIF(f.PC_REV_AMT, 0) END END AS pc_gp_pct, COALESCE(f.aprvd_rev_amt, 0.0) AS ap_rev, COALESCE(f.aprvd_cost_amt, 0.0) AS ap_cost, COALESCE(f.aprvd_gp_amt, 0.0) AS ap_gp, f.aprvd_gp_pct AS ap_gp_pct, COALESCE(f.eac_actls_rev_amt, 0.0) AS fc_rev, COALESCE(f.eac_actls_cost_amt, 0.0) AS fc_cost, COALESCE(f.eac_actls_gp_amt, 0.0) AS fc_gp, f.eac_actls_gp_pct AS fc_gp_pct, COALESCE(f.itd_actls_rev_cb_amt, 0.0) AS itd_act_rev, COALESCE(f.itd_actls_cost_cb_amt, 0.0) AS itd_act_cost, COALESCE(f.itd_actls_gp_cb_amt, 0.0) AS itd_act_gp, f.itd_actls_gp_cb_pct AS itd_act_gp_pct, COALESCE(f.cq_actls_gp_ac_pv_amt, 0.0) AS cq_gp, CASE WHEN COALESCE(f.cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(f.cq_actls_gp_ac_pv_amt, 0.0) AS FLOAT) / CAST (f.cq_actls_rev_ac_pv_amt AS FLOAT) END AS cq_gp_pct, f.tier_gp_lkg_num AS tier_gp_lkg_num, COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt < 0 THEN cq_to_pc_lkg_amt ELSE 0 END END END ELSE 0 END, 0.0) AS cqpc, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE NULL END END AS itd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_eac_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE NULL END END AS ytd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fcap, COALESCE( CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0)) END , 0.0) AS fc_eac_ap_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0)) END AS ap_to_pc_pct, COALESCE(f.cq_gp_lkg_pv_amt, 0.0) AS cqap, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(cq_gp_lkg_pv_amt, 0.0) AS FLOAT) / cq_actls_rev_ac_pv_amt END AS cq_to_ap_pct, COALESCE(ABS(f.overrun_cost_amt), 0.0) AS cstovrn, CASE WHEN COALESCE(f.lst_3_mth_cost_aprvd_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN(ABS(f.overrun_cost_amt)), 0.0) AS FLOAT)* ABS(CAST(COALESCE (ABS(f.overrun_cost_amt), 0.0) AS FLOAT) / f.lst_3_mth_cost_aprvd_amt ) END AS cost_over_pct, f.tier_cost_overrun_num AS tier_cost_over_num, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak,  COALESCE(YEAR(cn.sgnd_dt) || 'Q' || QUARTER(cn.sgnd_dt), '0000Q1') AS qtr_value FROM phd.CONTRACT_LEAKAGE_FACT_FRCST_V f INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop snap ON snap.mth_key = f.date_key AND snap.graph_nm = 'GP_L2_FRC' AND snap.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q', '') AND ( CASE WHEN '{metric}' = 'ITD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' THEN f.itd_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric}' = 'YTD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' THEN f.ytd_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric}' = 'FC_EAC_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' THEN f.frcst_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric}' = 'AP_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' THEN f.aprvd_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric}' = 'FC_EAC_AP' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END ELSE 0 END END) < 0 ORDER BY {orderColumn} {orderDirection} ; \",\"description\":\"Contract GP Leakage Export\"}",
      "t2GPLeakExportCQQContract": "{\"name\":\"t2GPLeakExportCQQContract\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cntr.CNTRCT_NUM AS contract_number, cntr.CNTRCT_DESC AS contract_name, cd.cust_nm AS client_name, CASE WHEN cntr.prtnr_nm != '' THEN SUBSTR(cntr.prtnr_nm, 1, locate('/',cntr.prtnr_nm)-1) ELSE 'N/A' END AS partner_name, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, sgd.sctr_gb_nm AS sector, idm.INDSTRY_CMR_NM AS industry, gp.grth_plfm_desc AS growth_platform, RTRIM(sl.svc_line_nm) AS service_line, DATE(cntr.sgnd_dt) AS contract_sign_date, DATE(cntr.STRTD_DT) AS start_date, DATE(cntr.END_DT) AS end_date, a.active_typ_desc AS status, f.TCV_AMT AS total_cntrct_tcv_amt, CASE WHEN cntr.POC_IND = 'Y' THEN 'Yes' ELSE 'No' END AS ap51, f.PC_REV_AMT AS pc_rev_amt, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT ELSE f.PC_COST_AMT END AS PC_COST_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS PC_GP_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS PC_GP_PCT, f.QTD_ACTLS_rev_AMT AS cq_rev_act_amt, f.QTD_ACTLS_COST_AMT AS cq_cost_act_amt, f.QTD_ACTLS_GP_AMT AS cq_gp_act_amt, f.QTD_ACTLS_GP_PCT AS cq_gp_act_pct, f.CQ_REV_PV_AMT AS cq_rev_act_fc_amt, f.CQ_COST_PV_AMT AS cq_cost_act_fc_amt, f.CQ_GP_PV_AMT AS cq_gp_act_fc_amt, f.CQ_GP_PV_PCT AS cq_gp_act_fc_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS CQ_TO_PC_LKG_AMT, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_lkg_pct, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_amt END END END ELSE 0 END , 0.0 ) AS pq_to_pc_lkg_amt, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.pq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.pq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pq_pc_actls_cost_ac_amt ,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22,9)) * ABS( (DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL (f.pq_pc_actls_cost_ac_amt,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22 ,9)) / DECIMAL (f.pq_pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.pq_to_pc_lkg_n_amt != 0 THEN f.pq_actls_gp_ac_pv_pct - f.pq_pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS pq_to_pc_lkg_pct, f.cq_ind, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.CQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.CQ_TO_AP_LKG_AMT < 0 THEN f.CQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS CQ_TO_AP_LKG_AMT, CASE WHEN f.CQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.CQ_GP_PV_PCT - f.CQ_APRVD_GP_AC_PCT ELSE 0 END AS CQ_TO_AP_LKG_PCT, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.PQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.PQ_TO_AP_LKG_AMT < 0 THEN f.PQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS PQ_TO_AP_LKG_AMT, CASE WHEN f.PQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.PQ_ACTLS_GP_AC_PV_PCT - f.PQ_APRVD_GP_AC_PCT ELSE 0 END AS PQ_TO_AP_LKG_PCT, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak FROM phd.contract_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.INDUSTRY_DIM idm ON f.INDSTRY_KEY = idm.INDSTRY_KEY INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.qtr_flg = 1 AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' {filter} <filter?AND:WHERE> cntr.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.invld_pc_ac_flg = 'N' AND CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END = 1 ORDER BY CQ_TO_PC_LKG_AMT {orderDirection} ;\",\"description\":\"Contract GP Leakage CQQ Export\"}",
      "t2GPLeakExportCQMContract": "{\"name\":\"t2GPLeakExportCQMContract\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cntr.CNTRCT_NUM AS contract_number, cntr.CNTRCT_DESC AS contract_name, cd.cust_nm AS client_name, CASE WHEN cntr.prtnr_nm != '' THEN SUBSTR(cntr.prtnr_nm, 1, locate('/',cntr.prtnr_nm)-1) ELSE 'N/A' END AS partner_name, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, sgd.sctr_gb_nm AS sector, idm.INDSTRY_CMR_NM AS industry, gp.grth_plfm_desc AS growth_platform, RTRIM(sl.svc_line_nm) AS service_line, DATE(cntr.sgnd_dt) AS contract_sign_date, DATE(cntr.STRTD_DT) AS start_date, DATE(cntr.END_DT) AS end_date, a.active_typ_desc AS status, f.TCV_AMT AS total_cntrct_tcv_amt, CASE WHEN cntr.POC_IND = 'Y' THEN 'Yes' ELSE 'No' END AS ap51, f.PC_REV_AMT AS pc_rev_amt, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT ELSE f.PC_COST_AMT END AS PC_COST_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS PC_GP_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS PC_GP_PCT, f.QTD_ACTLS_rev_AMT AS cq_rev_act_amt, f.QTD_ACTLS_COST_AMT AS cq_cost_act_amt, f.QTD_ACTLS_GP_AMT AS cq_gp_act_amt, f.QTD_ACTLS_GP_PCT AS cq_gp_act_pct, f.CQ_REV_PV_AMT AS cq_rev_act_fc_amt, f.CQ_COST_PV_AMT AS cq_cost_act_fc_amt, f.CQ_GP_PV_AMT AS cq_gp_act_fc_amt, f.CQ_GP_PV_PCT AS cq_gp_act_fc_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS CQ_TO_PC_LKG_AMT, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_lkg_pct, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_amt END END END ELSE 0 END , 0.0 ) AS pq_to_pc_lkg_amt, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.pq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.pq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pq_pc_actls_cost_ac_amt ,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22,9)) * ABS( (DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL (f.pq_pc_actls_cost_ac_amt,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22 ,9)) / DECIMAL (f.pq_pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.pq_to_pc_lkg_n_amt != 0 THEN f.pq_actls_gp_ac_pv_pct - f.pq_pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS pq_to_pc_lkg_pct, f.cq_ind, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.CQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.CQ_TO_AP_LKG_AMT < 0 THEN f.CQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS CQ_TO_AP_LKG_AMT, CASE WHEN f.CQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.CQ_GP_PV_PCT - f.CQ_APRVD_GP_AC_PCT ELSE 0 END AS CQ_TO_AP_LKG_PCT, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.PQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.PQ_TO_AP_LKG_AMT < 0 THEN f.PQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS PQ_TO_AP_LKG_AMT, CASE WHEN f.PQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.PQ_ACTLS_GP_AC_PV_PCT - f.PQ_APRVD_GP_AC_PCT ELSE 0 END AS PQ_TO_AP_LKG_PCT, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak FROM phd.contract_leakage_fact_cq_to_pc_v f INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.INDUSTRY_DIM idm ON f.INDSTRY_KEY = idm.INDSTRY_KEY INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' {filter} <filter?AND:WHERE> cntr.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.invld_pc_ac_flg = 'N' AND CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND ((f.cq_to_pc_lkg_amt < 0 AND '{contingency}' = ' ' AND '{leak}' = 'GRS') OR ('{leak}' = 'NET' AND cq_to_pc_lkg_in_scope_flg = 1) OR ( f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY' AND '{leak}' = 'GRS')) THEN 1 ELSE 0 END = 1 ORDER BY CQ_TO_PC_LKG_AMT {orderDirection} ;\",\"description\":\"Contract GP Leakage CQM Export\"}",
      "t2GPLeakExportWorkNum": "{\"name\":\"t2GPLeakExportWorkNum\",\"sqlTemplate\":\"SELECT snap.data_load_desc, RTRIM(cn.cntrct_num) AS cntrct_num, cn.cntrct_desc AS cntrct_desc, RTRIM(p.proj_num) AS work_num, RTRIM(p.proj_desc) AS proj_nm, cu.cust_nm AS customer, CASE WHEN p.prtnr_nm != '' THEN SUBSTR(p.prtnr_nm, 1, locate('/',p.prtnr_nm)-1) ELSE 'N/A' END AS partner_nm, RTRIM(geo1.geo_lvl1_nm) AS geo_desc, RTRIM(geo2.geo_lvl2_nm) AS mkt_desc, RTRIM(ctry.ctry_nm) AS country, grth_plfm.grth_plfm_desc AS growth_platform, RTRIM(svc_line.svc_line_nm) AS service_line, RTRIM(prac.practice_nm) AS practice_nm, indstry.indstry_cmr_nm AS industry_desc, s.sctr_gb_nm AS sector_desc, RTRIM(a.active_typ_cd) AS status, COALESCE(YEAR(cn.sgnd_dt) || 'Q' || QUARTER(cn.sgnd_dt), '') AS qtr_value, DATE(cn.sgnd_dt) AS cntrct_sgnd_dt, DATE(p.strt_dt) AS start_date, DATE(p.end_dt) AS end_date, CASE WHEN p.flg_ap51_ppf = 'Y' THEN 'Yes' ELSE 'No' END AS ap51, p.clust_nm AS cluster_name, COALESCE(f.pc_rev_amt, 0.0) AS pc_rev_amt, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT ELSE f.PC_COST_AMT END AS pc_plan_cost, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS pc_gp, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CTNGCY_AMT), 22, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 22, 9) / NULLIF(f.PC_REV_AMT, 0) END AS pc_gp_pct, COALESCE(f.aprvd_rev_amt, 0.0) AS ap_rev, COALESCE(f.aprvd_cost_amt, 0.0) AS ap_cost, COALESCE(f.aprvd_gp_amt, 0.0) AS ap_gp, f.aprvd_gp_pct AS ap_gp_pct, DATE(p.aprv_pln_dt) AS aprvd_pln_dt, COALESCE(f.eac_actls_rev_amt, 0.0) AS eac_rev, COALESCE(f.eac_actls_cost_amt, 0.0) AS eac_cost, COALESCE(f.eac_actls_gp_amt, 0.0) AS eac_gp, f.eac_actls_gp_pct AS eac_gp_pct, DATE(p.frcst_sbmt_tms) AS frcst_sbmt_dt, COALESCE(f.QTD_ACTLS_rev_AMT , 0.0) AS cq_rev_act_amt, COALESCE(f.QTD_ACTLS_COST_AMT, 0.0) AS cq_cost_act_amt, COALESCE(f.QTD_ACTLS_GP_AMT , 0.0) AS cq_gp_act_amt, COALESCE(f.QTD_ACTLS_GP_PCT , 0.0) AS cq_gp_act_pct, COALESCE(f.CQ_REV_PV_AMT , 0.0) AS cq_rev_act_fc_amt, COALESCE(f.CQ_COST_PV_AMT , 0.0) AS cq_cost_act_fc_amt, COALESCE(f.CQ_GP_PV_AMT , 0.0) AS cq_gp_act_fc_amt, COALESCE(f.CQ_GP_PV_PCT , 0.0) AS cq_gp_act_fc_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cqpc, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS ap_to_pc_pct, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) AS fcap, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_amt < 0 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) AS fc_eac_ap_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE NULL END ) END AS fc_eac_to_pc_pct, COALESCE(f.itd_actls_rev_amt, 0.0) AS itd_actls_rev_amt, COALESCE(f.itd_actls_cost_amt, 0.0) AS itd_actls_cost_amt, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE NULL END END AS itd_to_pc_pct, f.YTD_ACTLS_REV_AMT, f.YTD_ACTLS_COST_AMT, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE NULL END END AS ytd_to_pc_pct, CASE WHEN f.cq_to_ap_flg = 1 THEN COALESCE(f.cq_gp_lkg_ac_amt, 0) ELSE 0 END AS cqap, CASE WHEN f.cq_to_ap_flg = 1 THEN COALESCE(f.cq_gp_ac_pv_pct, 0) - COALESCE(f.cq_aprvd_gp_ac_pct, 0) ELSE 0 END AS cq_to_ap_pct, COALESCE( CASE WHEN f.cost_overrun_flg = 1 THEN ABS(f.overrun_cost_amt) ELSE 0 END, 0) AS cstovrn, COALESCE(DECIMAL( CASE WHEN f.cost_overrun_flg = 1 THEN ABS(f.overrun_cost_amt) ELSE 0 END, 19, 6) / NULLIF(f.lst_3_mth_cost_aprvd_amt, 0), 0) AS cost_lkg_pct, f.LST_3_MTH_COST_APRVD_AMT AS cor_plan_amt, f.lst_3_mth_actls_cost_amt AS cor_actuals_amt, VARCHAR_FORMAT((snap.data_load_date), 'YYYY') AS acct_yr, VARCHAR_FORMAT((snap.data_load_date), 'MM') AS acct_mo, '{orderColumn}' AS sort_key, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak FROM phd.project_leakage_fact_frcst_v f LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key LEFT JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop snap ON snap.mth_key = f.date_key AND snap.graph_nm = 'GP_L2_FRC' AND snap.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND ( CASE WHEN '{metric} ' = 'ITD_TO_PC' THEN CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = ' ' THEN f.itd_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric} ' = 'YTD_TO_PC' THEN CASE WHEN f.invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = ' ' THEN f.ytd_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric} ' = 'FC_EAC_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = ' ' THEN f.frcst_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric} ' = 'AP_TO_PC' THEN CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = ' ' THEN f.aprvd_to_pc_lkg_amt ELSE 0 END ELSE 0 END WHEN '{metric} ' = 'FC_EAC_AP' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = ' ' THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END WHEN '{metric}' = 'COR' THEN CASE WHEN f.COST_OVERRUN_FLG = 1 AND a.active_typ_cd IN ('A', 'T') THEN f.overrun_cost_amt ELSE 0 END END) < 0 ORDER BY {orderColumn} {orderDirection} FETCH FIRST 5000 ROWS ONLY ;\",\"description\":\"Work Number GP Leakage Export\"}",
      "t2GPLeakExportCQQWorkNum": "{\"name\":\"t2GPLeakExportCQQWorkNum\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, proj.proj_num AS work_number, proj.proj_desc AS work_name, cd.cust_nm AS client_name, CASE WHEN proj.prtnr_nm != '' THEN SUBSTR(proj.prtnr_nm, 1, locate('/',proj.prtnr_nm)-1) ELSE 'N/A' END AS partner_name, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, sgd.sctr_gb_nm AS sector, idm.INDSTRY_CMR_NM AS industry, gp.grth_plfm_desc AS growth_platform, RTRIM(sl.svc_line_nm) AS service_line, DATE(cntr.sgnd_dt) AS contract_sign_date, DATE(proj.STRT_DT) AS start_date, DATE(proj.END_DT) AS end_date, a.active_typ_desc AS status, f.TCV_AMT AS total_cntrct_tcv_amt, CASE WHEN proj.FLG_AP51_PPF = 'Y' THEN 'Yes' ELSE 'No' END AS ap51, f.PC_REV_AMT AS pc_rev_amt, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT ELSE f.PC_COST_AMT END AS PC_COST_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS PC_GP_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS PC_GP_PCT, f.QTD_ACTLS_rev_AMT AS cq_rev_act_amt, f.QTD_ACTLS_COST_AMT AS cq_cost_act_amt, f.QTD_ACTLS_GP_AMT AS cq_gp_act_amt, f.QTD_ACTLS_GP_PCT AS cq_gp_act_pct, f.CQ_REV_PV_AMT AS cq_rev_act_fc_amt, f.CQ_COST_PV_AMT AS cq_cost_act_fc_amt, f.CQ_GP_PV_AMT AS cq_gp_act_fc_amt, f.CQ_GP_PV_PCT AS cq_gp_act_fc_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS CQ_TO_PC_LKG_AMT, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_lkg_pct, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_amt END END END ELSE 0 END , 0.0 ) AS pq_to_pc_lkg_amt, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.pq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.pq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pq_pc_actls_cost_ac_amt ,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22,9)) * ABS( (DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL (f.pq_pc_actls_cost_ac_amt,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22 ,9)) / DECIMAL (f.pq_pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.pq_to_pc_lkg_n_amt != 0 THEN f.pq_actls_gp_ac_pv_pct - f.pq_pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS pq_to_pc_lkg_pct, f.cq_ind, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.CQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.CQ_TO_AP_LKG_AMT < 0 THEN f.CQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS CQ_TO_AP_LKG_AMT, CASE WHEN f.CQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.CQ_GP_PV_PCT - f.CQ_APRVD_GP_AC_PCT ELSE 0 END AS CQ_TO_AP_LKG_PCT, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.PQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.PQ_TO_AP_LKG_AMT < 0 THEN f.PQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS PQ_TO_AP_LKG_AMT, CASE WHEN f.PQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.PQ_ACTLS_GP_AC_PV_PCT - f.PQ_APRVD_GP_AC_PCT ELSE 0 END AS PQ_TO_AP_LKG_PCT, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak FROM phd.PROJECT_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.project_dim proj ON f.proj_key = proj.proj_key INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.INDUSTRY_DIM idm ON f.INDSTRY_KEY = idm.INDSTRY_KEY INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.qtr_flg = 1 AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_Q' AND ad.yr_mo_key = '{cqQtrKey}' {filter} <filter?AND:WHERE> cntr.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.invld_pc_ac_flg = 'N' AND CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END = 1 ORDER BY CQ_TO_PC_LKG_AMT {orderDirection} ;\",\"description\":\"Work Number GP Leakage Export\"}",
      "t2GPLeakExportCQMWorkNum": "{\"name\":\"t2GPLeakExportCQMWorkNum\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, proj.proj_num AS work_number, proj.proj_desc AS work_name, cd.cust_nm AS client_name, CASE WHEN proj.prtnr_nm != '' THEN SUBSTR(proj.prtnr_nm, 1, locate('/',proj.prtnr_nm)-1) ELSE 'N/A' END AS partner_name, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, sgd.sctr_gb_nm AS sector, idm.INDSTRY_CMR_NM AS industry, gp.grth_plfm_desc AS growth_platform, RTRIM(sl.svc_line_nm) AS service_line, DATE(cntr.sgnd_dt) AS contract_sign_date, DATE(proj.STRT_DT) AS start_date, DATE(proj.END_DT) AS end_date, a.active_typ_desc AS status, f.TCV_AMT AS total_cntrct_tcv_amt, CASE WHEN proj.FLG_AP51_PPF = 'Y' THEN 'Yes' ELSE 'No' END AS ap51, f.PC_REV_AMT AS pc_rev_amt, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT ELSE f.PC_COST_AMT END AS PC_COST_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT) ELSE f.PC_REV_AMT - f.PC_COST_AMT END AS PC_GP_AMT, CASE WHEN '{contingency}' = '_W_CNTGCY' THEN DECIMAL(f.PC_REV_AMT - (f.PC_COST_AMT + f.PC_UNAPPR_CNTGCY_AC_AMT), 31, 9) / NULLIF (f.PC_REV_AMT, 0) ELSE DECIMAL(f.PC_REV_AMT - f.PC_COST_AMT, 31, 9) / NULLIF(f.PC_REV_AMT, 0) END AS PC_GP_PCT, f.QTD_ACTLS_rev_AMT AS cq_rev_act_amt, f.QTD_ACTLS_COST_AMT AS cq_cost_act_amt, f.QTD_ACTLS_GP_AMT AS cq_gp_act_amt, f.QTD_ACTLS_GP_PCT AS cq_gp_act_pct, f.CQ_REV_PV_AMT AS cq_rev_act_fc_amt, f.CQ_COST_PV_AMT AS cq_cost_act_fc_amt, f.CQ_GP_PV_AMT AS cq_gp_act_fc_amt, f.CQ_GP_PV_PCT AS cq_gp_act_fc_pct, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.cq_to_pc_lkg_n_amt ELSE CASE WHEN f.cq_to_pc_lkg_amt > 0 THEN 0 ELSE f.cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS CQ_TO_PC_LKG_AMT, COALESCE( CASE WHEN f.invld_pc_ac_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.cq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) * ABS((DECIMAL (f.pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pc_actls_cost_ac_amt,22,9) - DECIMAL(f.pc_unappr_cntgcy_ac_amt,22,9)) / DECIMAL(f.pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.cq_to_pc_lkg_n_amt != 0 THEN f.cq_actls_gp_ac_pv_pct - f.pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS cq_to_pc_lkg_pct, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND f.pq_actls_gp_ac_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN f.pq_to_pc_lkg_n_amt ELSE CASE WHEN f.pq_to_pc_lkg_amt > 0 THEN 0 ELSE f.pq_to_pc_lkg_amt END END END ELSE 0 END , 0.0 ) AS pq_to_pc_lkg_amt, COALESCE( CASE WHEN f.INVLD_PQ_PC_AC_FLG = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.pq_to_pc_lkg_w_cntgcy_n_amt != 0 THEN DECIMAL(f.pq_actls_gp_ac_pv_pct,22,9) - DECIMAL(SIGN(DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL(f.pq_pc_actls_cost_ac_amt ,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22,9)) * ABS( (DECIMAL (f.pq_pc_actls_rev_ac_amt,22,9) - DECIMAL (f.pq_pc_actls_cost_ac_amt,22,9) - DECIMAL (f.pq_pc_unappr_cntgcy_ac_amt,22 ,9)) / DECIMAL (f.pq_pc_actls_rev_ac_amt,22 ,9)),22,9) WHEN '{contingency}' != '_W_CNTGCY' AND f.pq_to_pc_lkg_n_amt != 0 THEN f.pq_actls_gp_ac_pv_pct - f.pq_pc_actls_gp_ac_pct END ELSE 0 END, 0.0) AS pq_to_pc_lkg_pct, f.cq_ind, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.CQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.CQ_TO_AP_LKG_AMT < 0 THEN f.CQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS CQ_TO_AP_LKG_AMT, CASE WHEN f.CQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.CQ_GP_PV_PCT - f.CQ_APRVD_GP_AC_PCT ELSE 0 END AS CQ_TO_AP_LKG_PCT, COALESCE( CASE WHEN '{leak}' = 'NET' THEN f.PQ_TO_AP_LKG_N_AMT ELSE CASE WHEN f.PQ_TO_AP_LKG_AMT < 0 THEN f.PQ_TO_AP_LKG_AMT ELSE 0 END END ,0.0) AS PQ_TO_AP_LKG_AMT, CASE WHEN f.PQ_TO_AP_LKG_IN_SCOPE_FLG = 1 THEN f.PQ_ACTLS_GP_AC_PV_PCT - f.PQ_APRVD_GP_AC_PCT ELSE 0 END AS PQ_TO_AP_LKG_PCT, '{orderDirection}' AS sort_direction, '{yrQtrKey}' AS yrqtrkey, '{contingency}' AS contingency, '{ngp}' AS ngp, '{leak}' AS leak FROM phd.PROJECT_LEAKAGE_FACT_CQ_TO_PC_V f INNER JOIN phd.project_dim proj ON f.proj_key = proj.proj_key INNER JOIN phd.contract_dim cntr ON f.cntrct_key = cntr.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.INDUSTRY_DIM idm ON f.INDSTRY_KEY = idm.INDSTRY_KEY INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.sector_gb_dim sgd ON f.sctr_key = sgd.sctr_gb_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND f.CQ_FLG = 1 AND f.CQ_IND = ad.desc_1 AND ad.graph_nm = 'GP_L2_CQ_M' AND ad.yr_mo_key = '{cqMthKey}' {filter} <filter?AND:WHERE> cntr.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND f.invld_pc_ac_flg = 'N' AND CASE WHEN ( '{ngp}' != 'ENGP' OR f.cq_actls_gp_ac_pv_amt >= 0) AND (('{leak}' = 'GRS' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_amt < 0) OR ('{leak}' = 'NET' AND '{contingency}' = '_W_CNTGCY' AND f.cq_to_pc_lkg_w_cntgcy_n_amt <> 0) OR ('{leak}' = 'NET' AND '{contingency}' = ' ' AND f.cq_to_pc_lkg_n_amt <> 0) OR ('{leak}' = 'GRS' AND f.cq_to_pc_lkg_w_cntgcy_amt < 0 AND '{contingency}' = '_W_CNTGCY')) THEN 1 ELSE 0 END = 1 ORDER BY CQ_TO_PC_LKG_AMT {orderDirection} ; \",\"description\":\"Work Number GP Leakage Export\"}",
      "t2GPLeakExpanContract": "{\"name\":\"t2GPLeakExpanContract\",\"sqlTemplate\":\"SELECT RTRIM(cn.cntrct_num) AS cntrct_num, cn.phd_url AS ippf_url, RTRIM({busAttr}) AS bus_attr, ad.data_load_desc, RTRIM(a.active_typ_cd) AS status, COALESCE(f.pc_rev_cb_amt, 0.0) AS rev, COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS cqpc, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_ac_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / CAST(cq_actls_rev_ac_pv_amt AS FLOAT) END AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS fc_eac_to_pc_pct, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_cb_vldpc_amt ELSE 0 END AS FLOAT ) END AS itd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_cb_amt ELSE 0 END AS FLOAT ) END AS ytd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0 END, 0.0) AS fcap, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_aprvd_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_aprvd_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS fc_eac_ap_pct, tier_eac_lkg_num AS fc_eac_ap_tier_num, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS ap_to_pc_pct, COALESCE(cq_gp_lkg_ac_amt, 0) AS cqap, COALESCE(cq_pv_gp_ac_pct, 0) - COALESCE(cq_aprvd_gp_ac_pct, 0) AS cq_to_ap_pct, tier_gp_lkg_num AS cq_to_ap_tier_num FROM phd.contract_leakage_fact_frcst_v f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.cntrct_num = '{cntrctNum}' AND cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') ORDER BY {orderColumn} {orderDirection} FETCH FIRST row only ; \",\"description\":\"Contract GP Leakage Expansion\"}", 
      "t2GPLeakExpanWorkNum": "{\"name\":\"t2GPLeakExpanWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(p.proj_num) AS work_num, p.phd_url AS ippf_url, RTRIM({busAttr}) AS bus_attr, ad.data_load_desc, RTRIM(a.active_typ_cd) AS status, COALESCE(f.pc_rev_amt,0.0) AS rev, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END,0.0) AS cqpc, CASE WHEN COALESCE(cq_actls_rev_ac_pv_amt, 0.0) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{ngp}' = 'ENGP' AND cq_actls_gp_ac_pv_amt < 0 THEN 0.0 WHEN '{contingency}' = '_W_CNTGCY' THEN CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_w_cntgcy_n_amt ELSE CASE WHEN cq_to_pc_lkg_w_cntgcy_amt > 0 THEN 0 ELSE cq_to_pc_lkg_w_cntgcy_amt END END ELSE CASE WHEN '{leak}' = 'NET' THEN cq_to_pc_lkg_n_amt ELSE CASE WHEN cq_to_pc_lkg_amt > 0 THEN 0 ELSE cq_to_pc_lkg_amt END END END ELSE 0 END, 0.0) AS FLOAT) / CAST(cq_actls_rev_ac_pv_amt AS FLOAT) END AS cq_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0 END, 0.0) AS fcpc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.frcst_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.frcst_to_pc_lkg_amt >= 0 THEN 0 ELSE f.frcst_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS fc_eac_to_pc_pct, COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS itdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END, 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.itd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.itd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.itd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.itd_to_pc_lkg_amt END ELSE 0 END , 0.0 ) AS FLOAT ) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.itd_actls_rev_amt ELSE 0 END AS FLOAT ) END AS itd_to_pc_pct, COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS ytdpc, CASE WHEN COALESCE( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END , 0.0 ) = 0.0 THEN 0.0 ELSE CAST( COALESCE( CASE WHEN invld_pc_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.ytd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.ytd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.ytd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.ytd_to_pc_lkg_amt END ELSE 0 END, 0.0 ) AS FLOAT ) / CAST( CASE WHEN invld_pc_cb_flg = 'N' THEN f.ytd_actls_rev_amt ELSE 0 END AS FLOAT ) END AS ytd_to_pc_pct, tier_eac_lkg_num AS fc_eac_ap_tier_num, COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_frcst_flg = 'N' AND invld_aprvd_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0 END, 0.0) AS appc, CASE WHEN COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END,0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END), 0.0) AS FLOAT) * ABS(CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' THEN CASE WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt < 0 THEN f.aprvd_to_pc_lkg_w_cntgcy_amt WHEN '{contingency}' = '_W_CNTGCY' AND f.aprvd_to_pc_lkg_w_cntgcy_amt >= 0 THEN 0 WHEN f.aprvd_to_pc_lkg_amt >= 0 THEN 0 ELSE f.aprvd_to_pc_lkg_amt END ELSE 0.0 END, 0.0) AS FLOAT) / CAST(COALESCE( CASE WHEN invld_pc_flg = 'N' THEN f.pc_rev_amt ELSE 0 END, 0.0) AS FLOAT)) END AS ap_to_pc_pct, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN f.frcst_to_aprvd_lkg_w_cntgcy_amt WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN f.frcst_to_aprvd_lkg_amt ELSE 0 END, 0.0) AS fcap, COALESCE( CASE WHEN '{contingency}' = '_W_CNTGCY' AND invld_pc_flg = 'N' AND invld_aprvd_flg = 'N' AND invld_frcst_flg = 'N' AND f.frcst_to_aprvd_lkg_w_cntgcy_amt < 0 THEN CAST(f.frcst_to_aprvd_lkg_w_cntgcy_amt AS FLOAT) / NULLIF(tcv_amt, 0) WHEN '{contingency}' != '_W_CNTGCY' AND f.eac_to_ap_flg = 1 THEN COALESCE(f.eac_actls_gp_pct, 0) - COALESCE(f.aprvd_gp_pct, 0) ELSE 0 END , 0.0) AS fc_eac_ap_pct, CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END AS cstovrn, CASE WHEN f.cost_overrun_flg = 1 THEN COALESCE(DECIMAL(ABS(f.overrun_cost_amt), 19, 6) / NULLIF(f.lst_3_mth_cost_aprvd_amt, 0), 0) ELSE 0 END AS cost_over_pct, CASE WHEN f.cq_to_ap_flg = 1 THEN COALESCE(f.cq_gp_lkg_ac_amt, 0) ELSE 0 END AS cqap, CASE WHEN f.cq_to_ap_flg = 1 THEN COALESCE(f.cq_gp_ac_pv_pct, 0) - COALESCE(f.cq_aprvd_gp_ac_pct, 0) ELSE 0 END AS cq_to_ap_pct, f.tier_gp_lkg_num AS cq_to_ap_tier_num FROM phd.project_leakage_fact_frcst_v f INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.date_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', '') AND cn.cntrct_num = '{cntrctNum}' /*ORDER BY {orderColumn} {orderDirection}*/ FETCH FIRST 200 rows only ;\",\"description\":\"Work Nbr GP Leakage Expansion\"}",
      "t2GPLeakCORWWWorkNum": "{\"name\":\"t2GPLeakCORWWWorkNum\",\"sqlTemplate\":\"SELECT CASE WHEN '{metric}' = 'COR' THEN SUM( CASE WHEN a.active_typ_cd in ('A', 'T') THEN f.cost_overrun_flg ELSE 0 END) ELSE 0 END AS ww_lkg_cnt, CASE WHEN '{metric}' = 'COR' THEN SUM(COALESCE( CASE WHEN a.active_typ_cd in ('A', 'T') AND f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END, 0)) ELSE 0 END AS ww_lkg_amt, CASE WHEN '{metric}' = 'COR' THEN COALESCE(DECIMAL(SUM( CASE WHEN a.active_typ_cd in ('A', 'T') AND f.cost_overrun_flg = 1 THEN COALESCE(ABS(f.overrun_cost_amt), 0) ELSE 0 END), 19, 6) / NULLIF(SUM( CASE WHEN a.active_typ_cd in ('A', 'T') THEN COALESCE(f.lst_3_mth_cost_aprvd_amt, 0) ELSE 0 END), 0), 0) ELSE 0 END AS ww_lkg_pct FROM phd.PROJECT_LEAKAGE_FACT_FRCST_V f LEFT JOIN phd.active_type_dim a ON f.active_typ_key = a.active_typ_key AND a.active_typ_cd in ('A', 'T') INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON f.date_key = ad.mth_key AND ad.graph_nm = 'GP_L2_FRC' AND ad.yr_mo_key = '{yrMoKey}' WHERE cn.sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q', ''); \",\"description\":\"Obtains GP leakage work number counts\"}",     

      "t1CompScorecard": "{\"name\":\"t1CompScorecard\",\"sqlTemplate\":\"select a.data_load_desc as data_load_date, m.msurmt_cd, m.msurmt_full_desc, f.mtm_pt_change, case when m.msurmt_type = 'PERCENTAGE' then f.actual else null end as curr_compliance_pct /*, case when m.msurmt_type = 'COUNT' then f.actual else null end as curr_comp_cnt */ from phd.compliance_summary_fact_new f inner join phd.geo_lvl1_dim g on f.geo_lvl1_key = g.geo_lvl1_key inner join phd.directive_dim d on f.directive_key = d.directive_key inner join phd.measurement_dim m on f.msurmt_key = m.msurmt_key and f.msurmt_key <> 16 inner join phd.acct_drop a on a.mth_key = f.mth_key and a.graph_nm = 'CPL_L2_GR2' and A.yr_mo_key = 'CURRENT' inner join phd.month_dim mo on mo.mth_key = f.mth_key where g.geo_lvl1_cd = 'WW' and m.msurmt_cd in('5.1', '5.2', '5.3', '5.5') order by m.msurmt_cd ; \",\"description\":\"Service to pull compliance data for the current accounting month and year\"}",
      "t2CompSummaryGeo": "{\"name\":\"t2CompSummaryGeo\",\"sqlTemplate\":\"select mo.mth_num as acct_mth_num, mo.yr_num as acct_yr_num, a.data_load_desc, d.directive_cd, d.directive_full_desc, m.msurmt_cd, m.msurmt_full_desc, f.mtm_pt_change, case when g.geo_lvl1_cd = 'AM' then 'NA' when g.geo_lvl1_cd = 'EA' then 'MEA' when g.geo_lvl1_cd = 'EP' then 'EU' when g.geo_lvl1_cd = 'CG' then 'GCG' when g.geo_lvl1_cd = 'AS' then 'AP' else g.geo_lvl1_cd end as lvl1_cd, m.msurmt_type, case when m.msurmt_cd in ('2.1','2.2','5.1','5.2','5.3','5.4','5.5','5.6','6.1', '8.1', '8.2', '8.3','9.1','9.2','9.3') then 'Yes' else 'No' end as link_active, case when m.msurmt_type = 'PERCENTAGE' then f.actual else null end as compliance_pct, case when m.msurmt_type = 'COUNT' then f.actual else null end as compliance_cnt, case when m.msurmt_type = 'STAT' and f.STAT = 'S' then 'sat' when m.msurmt_type = 'STAT' and f.STAT = 'U' then 'unsat' when m.msurmt_type = 'STAT' and f.STAT = 'M' then 'marg' else null end as status, coalesce(f.min, 0.0) as min, coalesce(f.max, 0.0) as max, coalesce(f.target, 0.0) as target, m.msurmt_direction from phd.compliance_summary_fact_new f inner join phd.geo_lvl1_dim g on f.geo_lvl1_key = g.geo_lvl1_key inner join phd.directive_dim d on f.directive_key = d.directive_key inner join phd.measurement_dim m on f.msurmt_key = m.msurmt_key and f.msurmt_key <> 16 inner join phd.acct_drop a on a.mth_key = f.mth_key and a.graph_nm = '{graph}' and a.yr_mo_key = '{yrMoKey}' inner join phd.month_dim mo on mo.mth_key = f.mth_key order by directive_cd, msurmt_cd, lvl1_cd desc ; \",\"description\":\"Compliance Summary by Geography\"}",
      "t2CompSummaryGrowthPltfrm": "{\"name\":\"t2CompSummaryGrowthPltfrm\",\"sqlTemplate\":\"with geo as (select f.msurmt_key, case when m.msurmt_type = 'PERCENTAGE' then f.actual * 100 else null end as worldwide_pct, case when m.msurmt_type = 'COUNT' then f.actual else null end as worldwide_cnt from phd.compliance_summary_fact_new f inner join phd.measurement_dim m on m.msurmt_key = f.msurmt_key inner join phd.geo_lvl1_dim g on f.geo_lvl1_key = g.geo_lvl1_key inner join phd.acct_drop a on a.mth_key = f.mth_key and a.graph_nm = '{graph}' and a.yr_mo_key = '{yrMoKey}' where g.geo_lvl1_cd = 'WW' ) select mo.mth_num as acct_mth_num, mo.yr_num as acct_yr_num, a.data_load_desc, d.directive_cd, d.directive_full_desc, m.msurmt_cd, m.msurmt_full_desc, f.mtm_pt_change, case when m.msurmt_cd in ('2.1','2.2','5.1','5.2','5.3','5.4','5.5','5.6','6.1', '8.1', '8.2', '8.3','9.1','9.2','9.3') then 'Yes' else 'No' end as link_active, case when gp.grth_plfm_cd = 'DI' then 'DSI' when gp.grth_plfm_cd = 'CP' then 'CPT' when gp.grth_plfm_cd = 'CA' then 'CAI' else gp.grth_plfm_cd end as grth_plfm_cd, m.msurmt_type, case when m.msurmt_type = 'PERCENTAGE' then f.actual * 100 else null end as compliance_pct, case when m.msurmt_type = 'COUNT' then f.actual else null end as compliance_cnt, case when m.msurmt_type = 'STAT' and f.STAT = 'S' then 'sat' when m.msurmt_type = 'STAT' and f.STAT = 'U' then 'unsat' when m.msurmt_type = 'STAT' and f.STAT = 'M' then 'marg' else null end as status, geo.worldwide_pct, geo.worldwide_cnt, coalesce(f.min, 0.0) as min, coalesce(f.max, 0.0) as max, coalesce(f.target, 0.0) as target, m.msurmt_direction from phd.compliance_summary_fact_new f inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key inner join phd.directive_dim d on f.directive_key = d.directive_key inner join phd.measurement_dim m on f.msurmt_key = m.msurmt_key and f.msurmt_key <> 16 inner join phd.acct_drop a on a.mth_key = f.mth_key and a.graph_nm = '{graph}' and a.yr_mo_key = '{yrMoKey}' inner join phd.month_dim mo on mo.mth_key = f.mth_key left join geo on geo.msurmt_key = f.msurmt_key order by directive_cd, msurmt_cd, grth_plfm_cd desc ; \",\"description\":\"Compliance Summary by Growth Platform\"}",

      "t2CompCPMCount": "{\"name\":\"t2CompCPMCount\",\"sqlTemplate\":\"WITH data AS (SELECT COALESCE(SUM(f.cpm_rqrd_cnt), 0) AS total_cnt , SUM( CASE WHEN f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END) AS cpm_comp_cnt , COALESCE(SUM( CASE WHEN f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END), 0) AS cpm_noncomp_cnt , SUM( CASE WHEN f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END) AS cpm_asnd_cnt , COALESCE(SUM( CASE WHEN f.cpm_assgnd_cnt = 0 THEN 1 ELSE 0 END), 0) AS cpm_nasnd_cnt , SUM( CASE WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 WHEN '{metric}' = 'APREX' AND f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END) AS cnt , COALESCE(DECIMAL(SUM( CASE WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 WHEN '{metric}' = 'APREX' AND f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS pct , SUM( CASE WHEN '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END) AS cpma , COALESCE(DECIMAL(SUM( CASE WHEN '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS cpma_pct , SUM( CASE WHEN '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END) AS cpme , COALESCE(DECIMAL(SUM( CASE WHEN '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS cpme_pct , SUM(f.cpm_excp_cnt) AS aprex , COALESCE(DECIMAL(SUM(f.cpm_excp_cnt), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS aprex_pct , {busAttr} AS bus_attr FROM phd.compl_cpm_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key LEFT JOIN phd.CONTRACT_DIM cd ON f.CNTRCT_KEY = cd.CNTRCT_KEY INNER JOIN phd.acct_drop ad ON ad.mth_key = f.RPTG_MTH_KEY AND ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.cntrct_sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q') AND f.cpm_rqrd_cnt = 1 AND f.cntrct_stat_in_scope_flg = 1 GROUP BY {busAttr} UNION ALL SELECT COALESCE(SUM(f.cpm_rqrd_cnt), 0) AS total_cnt , SUM( CASE WHEN f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END) AS cpm_comp_cnt , COALESCE(SUM( CASE WHEN f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END), 0) AS cpm_noncomp_cnt , SUM( CASE WHEN f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END) AS cpm_asnd_cnt , COALESCE(SUM( CASE WHEN f.cpm_assgnd_cnt = 0 THEN 1 ELSE 0 END), 0) AS cpm_nasnd_cnt , SUM( CASE WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 WHEN '{metric}' = 'APREX' AND f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END) AS cnt , COALESCE(DECIMAL(SUM( CASE WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{metric}' = 'CPMA' AND '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{metric}' = 'CPME' AND '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 WHEN '{metric}' = 'APREX' AND f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS pct , SUM( CASE WHEN '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END) AS cpma , COALESCE(DECIMAL(SUM( CASE WHEN '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS cpma_pct , SUM( CASE WHEN '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END) AS cpme , COALESCE(DECIMAL(SUM( CASE WHEN '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS cpme_pct , SUM(f.cpm_excp_cnt) AS aprex , COALESCE(DECIMAL(SUM(f.cpm_excp_cnt), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS aprex_pct , 'Worldwide' AS bus_attr FROM phd.compl_cpm_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key LEFT JOIN phd.CONTRACT_DIM cd ON f.CNTRCT_KEY = cd.CNTRCT_KEY INNER JOIN phd.acct_drop ad ON ad.mth_key = f.RPTG_MTH_KEY AND ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' WHERE f.cntrct_sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q') AND f.cpm_rqrd_cnt = 1 AND f.cntrct_stat_in_scope_flg = 1 ) , act_cpm AS (SELECT {busAttr} AS bus_attr , COUNT( CASE WHEN f.SME_CIC = 'Yes' THEN f.cnum END) AS cic_cpm_cnt , COUNT(f.cnum) AS act_cpm_cnt FROM sme.SME_DIM f INNER JOIN SME.PROFILE p ON f.SME_KEY = p.SME_KEY AND p.CAT_KEY = 1 AND p.STATUS_KEY = 1 AND p.LIST_IND_KEY = 1 LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 LEFT JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.SVC_LINE_1_KEY AND svc_line.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim indstry ON indstry.indstry_key = f.INDUSTRY_KEY LEFT JOIN phd.acct_drop ad ON ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.acct_drop ad_curr ON ad_curr.graph_nm = 'CPM_L2_GR1' AND ad_curr.current = 1 AND ad_curr.mth_key = ad.mth_key {filter} GROUP BY {busAttr} UNION ALL SELECT 'Worldwide' AS bus_attr , COUNT( CASE WHEN f.SME_CIC = 'Yes' THEN f.cnum END) AS cic_cpm_cnt , COUNT(f.cnum) AS act_cpm_cnt FROM sme.SME_DIM f INNER JOIN SME.PROFILE p ON f.SME_KEY = p.SME_KEY AND p.CAT_KEY = 1 AND p.STATUS_KEY = 1 AND p.LIST_IND_KEY = 1 LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 LEFT JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.SVC_LINE_1_KEY AND svc_line.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim indstry ON indstry.indstry_key = f.INDUSTRY_KEY LEFT JOIN phd.acct_drop ad ON ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.acct_drop ad_curr ON ad_curr.graph_nm = 'CPM_L2_GR1' AND ad_curr.current = 1 AND ad_curr.mth_key = ad.mth_key ) SELECT ad.data_load_desc , f.total_cnt , f.cpm_comp_cnt , f.cpm_noncomp_cnt , f.cpm_asnd_cnt , f.cpm_nasnd_cnt , f.cnt , f.pct , ac.act_cpm_cnt AS active_cpm_cnt , ac.cic_cpm_cnt AS cic_cpm_cnt , f.cpma , f.cpma_pct , f.cpme , f.cpme_pct , f.aprex , f.aprex_pct , f.bus_attr FROM data f LEFT JOIN act_cpm ac ON ac.bus_attr = f.bus_attr LEFT JOIN phd.acct_drop ad ON ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' ORDER BY f.bus_attr ASC ;\",\"description\":\"Compliance CPM (back to basics) contract count and percent\"}",
      "t2CompCPMDetails": "{\"name\":\"t2CompCPMDetails\",\"sqlTemplate\":\"select ' ' AS label, RTRIM(cd.CNTRCT_num) AS cntr_num, cd.CNTRCT_DESC AS wbs_sort_desc, cu.CUST_nm AS client, RTRIM(cu.LGCY_CUST_NUM) AS client_num, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS mkt, ctry.CTRY_NM AS ctry, gpd.GRTH_PLFM_DESC AS gbs_grwth_pltm, RTRIM(sld.SVC_LINE_NM) AS svc_ln, id.INDSTRY_CMR_NM AS indust, RTRIM(pd.PRACTICE_NM) AS pract, RTRIM(cd.OPPTNTY_NUM) AS opp_num, atd.ACTIVE_TYP_DESC AS cntr_stat, f.TOT_TCV AS tcv_amt, f.cq_gp_amt AS cq_to_pc_lkg_amt, DATE(cd.STRTD_DT) AS wbs_start_dt, DATE(cd.END_DT) AS wbs_end_dt, DATE(f.DLVRY_STRT_DT) AS delivery_strt_dt, DATE(f.RCNT_CLM_DT) AS most_rec_claim_dt, DATE(dd.DAY_DT) AS EXPIRY_DATE, date(excDD.day_dt) as cpm_excptn_dt, cd.PE_NOTES_ID AS brand_pe, cd.PM_NOTES_ID AS brand_pm, f.CPM_NOTES_ID AS cmplex_program_mngr, f.BRAND_DE_NM AS brand_de, CASE WHEN cd.DMS_STAT_IN_SCOPE_FLG = 1 THEN 'Yes' ELSE 'No' END AS dms_scope, CASE WHEN f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1 THEN 'Yes' ELSE 'No' END AS cpm_comp, CASE WHEN f.cpm_assgnd_cnt = 1 THEN 'Yes' ELSE 'No' END AS cpm_assgnd, COALESCE(f.CPM_EXCP_REAS_DESC, '') AS cpm_excptn_rsn FROM phd.COMPL_CPM_FACT f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.RPTG_MTH_KEY AND ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.CONTRACT_DIM_1x_v cd ON f.CNTRCT_KEY = cd.CNTRCT_KEY AND ad.mth_key = cd.MTH_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0, 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key LEFT JOIN phd.ACTIVE_TYPE_DIM atd ON cd.ACTIVE_TYP_KEY = atd.ACTIVE_TYP_KEY LEFT JOIN phd.date_dim dd ON f.CPM_EXCP_DT_KEY = dd.DATE_KEY left join phd.date_dim excDD on f.cpm_excp_dt_key = excDD.date_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key {filter} <filter?AND:WHERE> f.cntrct_sgnd_qtr_key {operator} REPLACE ('{yrQtrKey}', 'Q') AND f.cpm_rqrd_cnt = 1 AND f.cntrct_stat_in_scope_flg = 1 AND ( ( '{metric}' = 'CPMA' AND ( ( '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 ) OR ( '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 ) ) ) OR ( '{metric}' = 'CPME' AND ( ( '{compl}' = 'COMP' AND ( f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1 ) ) OR ( '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 ) ) ) OR ( '{metric}' = 'APREX' AND f.cpm_excp_cnt = 1 ) ) ORDER BY f.TOT_TCV DESC FETCH FIRST 500 ROWS ONLY ;\",\"description\":\"Compliance CPM (back to basics) contract details\"}",
      "t2CompCPMTrend": "{\"name\":\"t2CompCPMTrend\",\"sqlTemplate\":\"WITH data AS (SELECT f.RPTG_MTH_KEY AS mth_key , COALESCE(SUM(f.cpm_rqrd_cnt), 0) AS total_cnt , SUM( CASE WHEN f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1 THEN 1 ELSE 0 END) AS cpm_comp_cnt , COALESCE(SUM( CASE WHEN f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END), 0) AS cpm_noncomp_cnt , SUM( CASE WHEN f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END) AS cpm_asnd_cnt , COALESCE(SUM( CASE WHEN f.cpm_assgnd_cnt = 0 THEN 1 ELSE 0 END), 0) AS cpm_nasnd_cnt , SUM( CASE WHEN '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END) AS cpma , COALESCE(DECIMAL(SUM( CASE WHEN '{assgn}' = 'NASND' AND f.cpm_assgnd_cnt = 0 THEN 1 WHEN '{assgn}' = 'ASND' AND f.cpm_assgnd_cnt = 1 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS cpma_pct , SUM( CASE WHEN '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END) AS cpme , COALESCE(DECIMAL(SUM( CASE WHEN '{compl}' = 'COMP' AND(f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1) THEN 1 WHEN '{compl}' = 'NONCOMP' AND f.cpm_assgnd_cnt = 0 AND f.cpm_excp_cnt = 0 THEN 1 ELSE 0 END), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS cpme_pct , SUM(f.cpm_excp_cnt) AS aprex , COALESCE(DECIMAL(SUM(f.cpm_excp_cnt), 19, 4) / NULLIF(SUM(f.cpm_rqrd_cnt), 0), 0) AS aprex_pct FROM phd.compl_cpm_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key LEFT JOIN phd.CONTRACT_DIM cd ON f.CNTRCT_KEY = cd.CNTRCT_KEY INNER JOIN phd.acct_drop ad ON ad.mth_key = f.RPTG_MTH_KEY AND ad.graph_nm = 'CPM_L2_GR1' AND ad.current != 1 {filter} <filter?AND:WHERE> f.cntrct_sgnd_qtr_key {operator} REPLACE('{yrQtrKey}', 'Q') AND f.cpm_rqrd_cnt = 1 AND f.cntrct_stat_in_scope_flg = 1 GROUP BY f.RPTG_MTH_KEY FETCH FIRST 13 rows only ) , act_cpm AS (SELECT ad.mth_key , COUNT( CASE WHEN f.SME_CIC = 'Yes' THEN f.cnum END) AS cic_cpm_cnt , COUNT(f.cnum) AS act_cpm_cnt FROM sme.SME_DIM f INNER JOIN SME.PROFILE p ON f.SME_KEY = p.SME_KEY AND p.CAT_KEY = 1 AND p.STATUS_KEY = 1 AND p.LIST_IND_KEY = 1 LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 LEFT JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.SVC_LINE_1_KEY AND svc_line.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim indstry ON indstry.indstry_key = f.INDUSTRY_KEY LEFT JOIN phd.acct_drop ad ON ad.graph_nm = 'CPM_L2_GR1' AND ad.current = 1 {filter} GROUP BY ad.mth_key ) SELECT ad.data_load_desc , ad.curr_acct_mo AS mth_num , ad.curr_acct_yr AS yr_num , ad.YR_MO_KEY , f.total_cnt , f.cpm_comp_cnt , f.cpm_noncomp_cnt , f.cpm_asnd_cnt , f.cpm_nasnd_cnt , ac.act_cpm_cnt AS active_cpm_cnt , ac.cic_cpm_cnt AS cic_cpm_cnt , f.cpma , f.cpma_pct , f.cpme , f.cpme_pct , f.aprex , f.aprex_pct FROM data f LEFT JOIN act_cpm ac ON f.mth_key = ac.mth_key LEFT JOIN phd.acct_drop ad ON ad.graph_nm = 'CPM_L2_GR1' AND ad.mth_key = f.mth_key AND ad.current != 1 ORDER BY ad.curr_acct_yr , ad.curr_acct_mo FETCH FIRST 13 ROWS ONLY ; \",\"description\":\"Compliance CPM (back to basics) contract trend\"}",
      "t2CompCPMExport": "{\"name\":\"t2CompCPMExport\",\"sqlTemplate\":\"select rtrim(con.cntrct_num) as cntrct_num, rtrim(con.cntrct_desc) as prjct_nm, cust.cust_nm as clnt_nm, fact.tot_tcv as tcv, fact.cq_gp_amt as leak, rtrim(ctry.ctry_nm) as country, rtrim(geo1.geo_lvl1_nm) as geography, rtrim(geo2.geo_lvl2_nm) as imt, rtrim(svc.svc_line_nm) as service_line, rtrim(gp.grth_plfm_desc) as growth_platform, rtrim(sctr.sctr_gb_nm) as sector, rtrim(indstry.indstry_cmr_nm) as industry, rtrim(prac.practice_nm) as practice_nm, con.phd_url AS ippf_url, case when fact.cpm_assgnd_cnt = 1 then 'Y' else 'N' end as cpm_assigned, case when fact.cpm_assgnd_cnt = 1 OR fact.cpm_excp_cnt = 1 then 'Yes' else 'No' end as cpm_comp, date(d.day_dt) as expiry_date, atd.active_typ_desc as cntr_stat, rtrim(con.opptnty_num) as opp_num, coalesce(fact.brand_de_nm, 'N/A') as brand_de, date(fact.rcnt_clm_dt) as most_rec_claim_dt, rtrim(cust.lgcy_cust_num) as client_num, coalesce(rtrim(fact.cpm_excp_reas_desc),' ') as cpm_reason, coalesce(con.pe_notes_id, 'N/A') as pe_notes_id, coalesce(con.pm_notes_id, 'N/A') as pm_notes_id, date(strtd_dt) as wbs_start_dt, date(end_dt) as wbs_end_dt, coalesce(fact.cpm_notes_id, 'N/A') as cmplex_program_mngr, case when con.dms_stat_in_scope_flg = 1 then 'Yes' else 'No' end as dms_scope, date(fact.dlvry_strt_dt) as del_start_dt from phd.compl_cpm_fact fact inner join phd.acct_drop s on fact.rptg_mth_key = s.mth_key and s.graph_nm = 'CPM_L2_GR1' and s.yr_mo_key = '{yrMoKey}' inner join phd.contract_dim_1x_v con on fact.cntrct_key = con.cntrct_key and s.mth_key = con.mth_key left join phd.customer_dim cust on fact.cust_key = cust.cust_key inner join phd.geo_dim geo on fact.geo_key = geo.geo_key inner join phd.geo_lvl1_dim geo1 on fact.geo_lvl1_key = geo1.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on fact.geo_lvl2_key = geo2.geo_lvl2_key inner join phd.country_dim ctry on fact.ctry_key = ctry.ctry_key inner join phd.growth_platform_dim gp on fact.grth_plfm_key = gp.grth_plfm_key inner join phd.svc_line_dim svc on fact.svc_line_key = svc.svc_line_key inner join phd.sector_gb_dim sctr on fact.sctr_key = sctr.sctr_gb_key inner join phd.industry_dim indstry on fact.indstry_key = indstry.indstry_key inner join phd.practice_dim prac on prac.practice_key = fact.practice_key and prac.include = 1 left join phd.active_type_dim atd on con.active_typ_key = atd.active_typ_key inner join phd.month_dim m on fact.rptg_mth_key = m.mth_key left join phd.quarter_dim qtr on fact.cntrct_sgnd_qtr_key = qtr.qtr_key left join phd.date_dim d on fact.cpm_excp_dt_key = d.date_key {filter} <filter?AND:WHERE> (('0000Q1' = '{yrQtrKey}') OR ( qtr.year || qtr.qtr {operator} '{yrQtrKey}')) AND fact.cpm_rqrd_cnt = 1 AND fact.cntrct_stat_in_scope_flg = 1 order by tcv desc fetch first 7000 rows only ;\",\"description\":\"Compliance CPM (back to basics) export All\"}",
      "t2CompCPMExportMetric": "{\"name\":\"t2CompCPMExportMetric\",\"sqlTemplate\":\"select rtrim(con.cntrct_num) as cntrct_num, rtrim(con.cntrct_desc) as prjct_nm, cust.cust_nm as clnt_nm, fact.tot_tcv as tcv, fact.cq_gp_amt as leak, rtrim(ctry.ctry_nm) as country, rtrim(geo1.geo_lvl1_nm) as geography, rtrim(geo2.geo_lvl2_nm) as imt, rtrim(svc.svc_line_nm) as service_line, rtrim(gp.grth_plfm_desc) as growth_platform, rtrim(sctr.sctr_gb_nm) as sector, rtrim(indstry.indstry_cmr_nm) as industry, rtrim(prac.practice_nm) as practice_nm, con.phd_url AS ippf_url, case when fact.cpm_assgnd_cnt = 1 then 'Y' else 'N' end as cpm_assigned, case when fact.cpm_assgnd_cnt = 1 OR fact.cpm_excp_cnt = 1 then 'Yes' else 'No' end as cpm_comp, date(d.day_dt) as expiry_date, atd.active_typ_desc as cntr_stat, rtrim(con.opptnty_num) as opp_num, coalesce(fact.brand_de_nm, 'N/A') as brand_de, date(fact.rcnt_clm_dt) as most_rec_claim_dt, rtrim(cust.lgcy_cust_num) as client_num, coalesce(rtrim(fact.cpm_excp_reas_desc),' ') as cpm_reason, coalesce(con.pe_notes_id, 'N/A') as pe_notes_id, coalesce(con.pm_notes_id, 'N/A') as pm_notes_id, date(strtd_dt) as wbs_start_dt, date(end_dt) as wbs_end_dt, coalesce(fact.cpm_notes_id, 'N/A') as cmplex_program_mngr, case when con.dms_stat_in_scope_flg = 1 then 'Yes' else 'No' end as dms_scope, date(fact.dlvry_strt_dt) as del_start_dt from phd.compl_cpm_fact fact  inner join phd.acct_drop s on fact.rptg_mth_key = s.mth_key and s.graph_nm = 'CPM_L2_GR1' and s.yr_mo_key = '{yrMoKey}' inner join phd.contract_dim_1x_v con on fact.cntrct_key = con.cntrct_key and s.mth_key = con.mth_key left join phd.customer_dim cust on fact.cust_key = cust.cust_key inner join phd.geo_dim geo on fact.geo_key = geo.geo_key inner join phd.geo_lvl1_dim geo1 on fact.geo_lvl1_key = geo1.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on fact.geo_lvl2_key = geo2.geo_lvl2_key inner join phd.country_dim ctry on fact.ctry_key = ctry.ctry_key inner join phd.growth_platform_dim gp on fact.grth_plfm_key = gp.grth_plfm_key inner join phd.svc_line_dim svc on fact.svc_line_key = svc.svc_line_key inner join phd.sector_gb_dim sctr on fact.sctr_key = sctr.sctr_gb_key inner join phd.industry_dim indstry on fact.indstry_key = indstry.indstry_key inner join phd.practice_dim prac on prac.practice_key = fact.practice_key and prac.include = 1 left join phd.active_type_dim atd on con.active_typ_key = atd.active_typ_key inner join phd.month_dim m on fact.rptg_mth_key = m.mth_key left join phd.quarter_dim qtr on fact.cntrct_sgnd_qtr_key = qtr.qtr_key left join phd.date_dim d on fact.cpm_excp_dt_key = d.date_key {filter} <filter?AND:WHERE> ( ('0000Q1' = '{yrQtrKey}') OR ( qtr.year || qtr.qtr {operator} '{yrQtrKey}') ) AND ( fact.cpm_rqrd_cnt = 1 ) AND ( fact.cntrct_stat_in_scope_flg = 1 ) AND ( ( '{metric}' = 'CPMA' AND fact.cpm_assgnd_cnt = 0 AND '{assgn}' = 'NASND') OR ( '{metric}' = 'CPMA' AND fact.cpm_assgnd_cnt = 1 AND '{assgn}' = 'ASND') OR ( '{metric}' = 'CPME' AND ( ( '{compl}' = 'COMP' AND ( cpm_assgnd_cnt = 1 OR cpm_excp_cnt = 1) ) OR '{compl}' = 'NONCOMP' AND cpm_assgnd_cnt = 0 AND cpm_excp_cnt = 0) ) OR ( '{metric}' = 'NONC' AND ( fact.cpm_rqrd_cnt = 1 AND fact.cpm_assgnd_cnt = 0 AND fact.cpm_excp_cnt = 0) ) OR ( '{metric}' = 'APREX' AND fact.cpm_excp_cnt = 1 ) ) order by tcv desc fetch first 7000 rows only ;\",\"description\":\"Compliance CPM (back to basics) export by Metric\"}",
      "t2CompCPMPopInfo": "{\"name\":\"t2CompCPMPopInfo\",\"sqlTemplate\":\"SELECT RTRIM(cd.CNTRCT_num) AS cntr_num, cd.CNTRCT_KEY AS cntr_key, 'https://sme-app.w3ibm.mybluemix.net/' AS sme_lnk, cd.IPPF_ASSESS_URL AS ippf_url, cd.CNTRCT_DESC AS wbs_sort_desc, cu.CUST_nm AS ippf_cust, RTRIM(cu.LGCY_CUST_NUM) AS client_num, RTRIM(geo1.GEO_LVL1_NM) AS geo, RTRIM(geo2.GEO_LVL2_NM) AS mkt, RTRIM(ctry.CTRY_NM) AS ctry, RTRIM(gp.GRTH_PLFM_DESC) AS gbs_grwth_pltm, RTRIM(sld.SVC_LINE_NM) AS svc_ln, RTRIM(id.INDSTRY_CMR_NM) AS indust, RTRIM(pd.PRACTICE_NM) AS pract, RTRIM(cd.OPPTNTY_NUM) AS opp_num, atd.ACTIVE_TYP_DESC AS cntr_stat, f.TOT_TCV AS tcv_amt, f.cq_gp_amt AS cq_to_pc_lkg_amt, DATE(cd.STRTD_DT) AS wbs_start_dt, DATE(cd.END_DT) AS wbs_end_dt, DATE(f.DLVRY_STRT_DT) AS delivery_strt_dt, DATE(f.RCNT_CLM_DT) AS most_rec_claim_dt, cd.PE_NOTES_ID AS brand_pe, cd.PM_NOTES_ID AS brand_pm, f.CPM_NOTES_ID AS cmplex_program_mngr, f.BRAND_DE_NM AS brand_de, CASE WHEN cd.DMS_STAT_IN_SCOPE_FLG = 1 THEN 'Yes' ELSE 'No' END AS dms_scope, CASE WHEN f.cpm_assgnd_cnt = 1 OR f.cpm_excp_cnt = 1 THEN 'Yes' ELSE 'No' END AS cpm_comp, CASE WHEN f.cpm_assgnd_cnt = 1 THEN 'Yes' ELSE 'No' END AS cpm_assgnd, dd.DAY_DT AS cpm_excptn_dt, COALESCE(f.CPM_EXCP_REAS_DESC, '') AS cpm_excptn_rsn FROM phd.compl_cpm_fact f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.RPTG_MTH_KEY AND ad.graph_nm = 'CPM_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.CONTRACT_DIM_1x_v cd ON f.CNTRCT_KEY = cd.CNTRCT_KEY AND ad.mth_key = cd.MTH_KEY LEFT JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key LEFT JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key LEFT JOIN phd.SVC_LINE_DIM sld ON sld.SVC_LINE_KEY = f.SVC_LINE_KEY LEFT JOIN phd.country_dim ctry ON f.ctry_key = ctry.ctry_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key LEFT JOIN phd.INDUSTRY_DIM id ON f.INDSTRY_KEY = id.INDSTRY_KEY LEFT JOIN phd.PRACTICE_DIM pd ON f.PRACTICE_KEY = pd.PRACTICE_KEY LEFT JOIN phd.ACTIVE_TYPE_DIM atd ON cd.ACTIVE_TYP_KEY = atd.ACTIVE_TYP_KEY LEFT JOIN phd.date_dim dd ON f.CPM_EXCP_DT_KEY = dd.DATE_KEY WHERE cd.CNTRCT_NUM = '{cntrctNum}' FETCH FIRST ROW ONLY ;\",\"description\":\"CPM compliance information popup\"}",
      "t2CompCPMPopView": "{\"name\":\"t2CompCPMPopView\",\"sqlTemplate\":\"select cd.cntrct_num as cntr_num, cd.cntrct_key as cntr_key, 'https://sme-app.w3ibm.mybluemix.net/' as sme_lnk, cd.IPPF_ASSESS_URL AS ippf_url, case when f.sevenkey_cmplt_cnt = 1 then 'Compliant' when f.sevenkey_cmplt_cnt = 0 then 'Non Compliant' else '-' end as sev_keys, case when f.pg_o_cmplnce = 1 then 'Compliant' when f.pg_o_cmplnce = 0 then 'Non Compliant' else '-' end as pg_0_comp, case when f.pg_1_4_cmplnce = 1 then 'Compliant' when f.pg_1_4_cmplnce = 0 then 'Non Compliant' else '-' end as pg_1_4_comp, case when f.cos_cmplt_cnt = 1 then 'Compliant' when f.cos_cmplt_cnt = 0 then 'Non Compliant' else '-' end as cos_comp, case when f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'Compliant' when NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'Non Compliant' else '-' end as cpm_comp, case when f.ds_cmplnt_cnt = 1 then 'Compliant' when f.ds_cmplnt_cnt = 0 then 'Non Compliant' else '-' end as delivery_start_comp, case when f.ovrl_sevenkeys = 'R' then 'Red' when f.ovrl_sevenkeys = 'G' then 'Green' when f.ovrl_sevenkeys = 'A' then 'Orange' else '-' end as sev_keys_result, case when f.ovrl_sevenkeys = 'R' then '#FFA4A9' when f.ovrl_sevenkeys = 'G' then '#9DEEB2' when f.ovrl_sevenkeys = 'A' then '#FFA573' else '#fff0' end as sev_keys_result_color, case when f.pg_0_stat_flg = 'R' then 'Red' when f.pg_0_stat_flg = 'G' then 'Green' when f.pg_0_stat_flg = 'Y' then 'Yellow' when f.pg_0_stat_flg = 'O' then 'Orange' else '-' end as pg_0_result, case when f.pg_0_stat_flg = 'R' then '#FFA4A9' when f.pg_0_stat_flg = 'G' then '#9DEEB2' when f.pg_0_stat_flg = 'Y' then '#FCCF0A' when f.pg_0_stat_flg = 'O' then '#FFA573' else '#fff0' end as pg_0_result_color, case when f.pg_1_stat_flg = 'R' then 'Red' when f.pg_1_stat_flg = 'G' then 'Green' when f.pg_1_stat_flg = 'Y' then 'Yellow' when f.pg_1_stat_flg = 'O' then 'Orange' else '-' end as pg_1_result, case when f.pg_1_stat_flg = 'R' then '#FFA4A9' when f.pg_1_stat_flg = 'G' then '#9DEEB2' when f.pg_1_stat_flg = 'Y' then '#FCCF0A' when f.pg_1_stat_flg = 'O' then '#FFA573' else '#fff0' end as pg_1_result_color, case when f.pg_2_stat_flg = 'R' then 'Red' when f.pg_2_stat_flg = 'G' then 'Green' when f.pg_2_stat_flg = 'Y' then 'Yellow' when f.pg_2_stat_flg = 'O' then 'Orange' else '-' end as pg_2_result, case when f.pg_2_stat_flg = 'R' then '#FFA4A9' when f.pg_2_stat_flg = 'G' then '#9DEEB2' when f.pg_2_stat_flg = 'Y' then '#FCCF0A' when f.pg_2_stat_flg = 'O' then '#FFA573' else '#fff0' end as pg_2_result_color, case when f.pg_3_stat_flg = 'R' then 'Red' when f.pg_3_stat_flg = 'G' then 'Green' when f.pg_3_stat_flg = 'Y' then 'Yellow' when f.pg_3_stat_flg = 'O' then 'Orange' else '-' end as pg_3_result, case when f.pg_3_stat_flg = 'R' then '#FFA4A9' when f.pg_3_stat_flg = 'G' then '#9DEEB2' when f.pg_3_stat_flg = 'Y' then '#FCCF0A' when f.pg_3_stat_flg = 'O' then '#FFA573' else '#fff0' end as pg_3_result_color, case when f.pg_4_stat_flg = 'R' then 'Red' when f.pg_4_stat_flg = 'G' then 'Green' when f.pg_4_stat_flg = 'Y' then 'Yellow' when f.pg_4_stat_flg = 'O' then 'Orange' else '-' end as pg_4_result, case when f.pg_4_stat_flg = 'R' then '#FFA4A9' when f.pg_4_stat_flg = 'G' then '#9DEEB2' when f.pg_4_stat_flg = 'Y' then '#FCCF0A' when f.pg_4_stat_flg = 'O' then '#FFA573' else '#fff0' end as pg_4_result_color, case when f.ovrl_cos = 'R' then 'Red' when f.ovrl_cos = 'G' then 'Green' when f.ovrl_cos = 'Y' then 'Yellow' when f.ovrl_cos = 'O' then 'Orange' else '-' end as cos_result, case when f.ovrl_cos = 'R' then '#FFA4A9' when f.ovrl_cos = 'G' then '#9DEEB2' when f.ovrl_cos = 'Y' then '#FCCF0A' when f.ovrl_cos = 'O' then '#FFA573' else '#fff0' end as cos_result_color from phd.dm_contract_portfolio_fact_all f inner join phd.contract_dim cd on f.cntrct_key = cd.cntrct_key inner join phd.acct_drop ad on ad.mth_key = f.mth_key and ad.graph_nm = 'CPM_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' where cd.cntrct_num = '{cntrctNum}' fetch first row only ; \",\"description\":\"CPM compliance view popup\"}",

      "t2CompPGCountComp": "{\"name\":\"t2CompPGCountComp\",\"sqlTemplate\":\"with compl_phasegate_raw as ( select d.data_load_desc, phase.target, phase.status_flg, phase.pg1_4_flg, phase.pg_0_ro_res, phase.pg_1_4_ro_res, phase.pg_o_cmplnce, phase.pg_1_4_cmplnce, phase.pg_roat, phase.pg_roato,phase.geo_lvl1_key, phase.geo_lvl2_key, phase.ctry_key, phase.grth_plfm_key, phase.svc_line_key, phase.sctr_key, phase.indstry_key, phase.practice_key from phd.phase_gate_compliance_fact phase inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = phase.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.graph_nm = 'PG_CB_GR1' and d.yr_mo_key = '{yrMoKey}' {filter}   ), compl_phasegate_dim as ( select data_load_desc, target, status_flg, pg1_4_flg, pg_0_ro_res, pg_1_4_ro_res, case when (pg_o_cmplnce = 1 and status_flg = 1) then pg_o_cmplnce end as pg_o_cmplnce, case when (pg_1_4_cmplnce = 1 and status_flg = 1) then pg_1_4_cmplnce end as pg_1_4_cmplnce, case when (pg_roat = 1 and status_flg = 1) then pg_roat end as pg_roat, case when (pg_roato = 1 and status_flg = 1) then pg_roato end as pg_roato, trim({busAttr}) as bus_attr from compl_phasegate_raw cpgr full outer join ( select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21) ) geo1 on geo1.geo_lvl1_key = cpgr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cpgr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = cpgr.ctry_key full outer join ( select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = cpgr.grth_plfm_key full outer join ( select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = cpgr.svc_line_key full outer join ( select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = cpgr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = cpgr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cpgr.practice_key {filter} ) select bus_attr, data_load_desc, target as target_pct, coalesce(sum(pg_o_cmplnce), 0) as total_pg_o_cmpl_count, coalesce(sum(pg_1_4_cmplnce), 0) as total_pg_1_4_cmpl_count, coalesce(sum(pg_roat), 0) as pg_ro_at_cnt, coalesce(sum(pg_roato), 0) as pg_ro_ato_cnt, case when coalesce(sum(case when status_flg = 1 then 1 else 0 end), 0) = 0 then cast(0 as decimal(19, 4)) else cast(sum(pg_o_cmplnce) as decimal(19, 4)) / cast(sum(case when status_flg = 1 then 1 else 0 end) as decimal(19, 4)) end as pg_o_compl_perc, case when coalesce(sum(case when status_flg = 1 and pg1_4_flg = 1 then 1 else 0 end), 0) = 0 then cast(0 as decimal(19, 4)) else cast(sum(pg_1_4_cmplnce) as decimal(19, 4)) / cast(sum( case when status_flg = 1 and pg1_4_flg = 1 then 1 else 0 end ) as decimal(19, 4)) end as pg_1_4_compl_perc, case when coalesce(sum(case when (pg_0_ro_res = 1 or pg_1_4_ro_res = 1) and status_flg = 1 then 1 else 0 end), 0) = 0 then cast(0 as decimal(19, 4)) else cast(sum(pg_roat) as decimal(19, 4)) / cast(sum(case when (pg_0_ro_res = 1 or pg_1_4_ro_res = 1) and status_flg = 1 then 1 else 0 end) as decimal(19, 4)) end as pg_ro_at_perc, case when coalesce(sum(case when (pg_0_ro_res = 1 or pg_1_4_ro_res = 1) and status_flg = 1 then 1 else 0 end), 0) = 0 then cast(0 as decimal(19, 4)) else cast(sum(pg_roato) as decimal(19, 4)) / cast(sum(case when (pg_0_ro_res = 1 or pg_1_4_ro_res = 1) and status_flg = 1 then 1 else 0 end) as decimal(19, 4)) end as pg_ro_ato_perc from compl_phasegate_dim where bus_attr is not null group by bus_attr, data_load_desc, target order by bus_attr \",\"description\":\"Phase Gate CPM, compliance contract count and percent\"}",
      "t2CompPGTrendComp": "{\"name\":\"t2CompPGTrendComp\",\"sqlTemplate\":\"SELECT accsn.CURR_ACCT_MO AS mth_num, accsn.CURR_ACCT_YR AS yr_num, COALESCE(SUM( CASE WHEN (phase.pg_o_cmplnce = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END),0) AS pgocompliance, COALESCE(SUM( CASE WHEN (phase.pg_1_4_cmplnce = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END),0) AS pg_1_4_cmplnce, COALESCE(SUM( CASE WHEN (phase.pg_roat = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END),0) AS pg_roat, COALESCE(SUM( CASE WHEN (phase.pg_roato = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END),0) AS pg_roato, COALESCE(SUM( CASE WHEN phase.status_flg = 1 THEN 1 ELSE 0 END), 0) AS pg_o_total, COALESCE(SUM( CASE WHEN (phase.status_flg = 1 AND phase.pg1_4_flg = 1) THEN 1 ELSE 0 END), 0) AS pg_1_4_total, COALESCE(SUM( CASE WHEN (phase.pg_0_ro_res = 1 OR phase.pg_1_4_ro_res = 1) AND phase.status_flg = 1 THEN 1 ELSE 0 END), 0) AS pg_roat_total, COALESCE(SUM( CASE WHEN (phase.pg_0_ro_res = 1 OR phase.pg_1_4_ro_res = 1) AND phase.status_flg = 1 THEN 1 ELSE 0 END), 0) AS pg_roato_total , COALESCE(FLOAT(SUM( CASE WHEN (phase.pg_o_cmplnce = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END)) / NULLIF(SUM( CASE WHEN phase.status_flg = 1 THEN 1 ELSE 0 END), 0), 0) AS pgocompliance_pct, COALESCE(FLOAT(SUM( CASE WHEN (phase.pg_1_4_cmplnce = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END)) / NULLIF(SUM( CASE WHEN (phase.status_flg = 1 AND phase.pg1_4_flg = 1) THEN 1 ELSE 0 END), 0), 0)AS pg_1_4_cmplnce_pct, COALESCE(FLOAT(SUM( CASE WHEN (phase.pg_roat = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END)) / NULLIF(SUM( CASE WHEN (phase.pg_0_ro_res = 1 OR phase.pg_1_4_ro_res = 1) AND phase.status_flg = 1 THEN 1 ELSE 0 END), 0), 0)AS pg_roat_pct, COALESCE(FLOAT(SUM( CASE WHEN (phase.pg_roato = 1 AND phase.status_flg = 1) THEN 1 ELSE 0 END)) / NULLIF(SUM( CASE WHEN (phase.pg_0_ro_res = 1 OR phase.pg_1_4_ro_res = 1) AND phase.status_flg = 1 THEN 1 ELSE 0 END), 0), 0)AS pg_roato_pct FROM phd.phase_gate_compliance_fact phase FULL OUTER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = phase.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,6,21) FULL OUTER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = phase.geo_lvl2_key FULL OUTER JOIN phd.country_dim ctry ON ctry.ctry_key = phase.ctry_key FULL OUTER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = phase.grth_plfm_key AND grth_plfm.in_scope = 1 FULL OUTER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = phase.svc_line_key AND svc_line.in_scope = 1 FULL OUTER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = phase.sctr_key AND sctr.in_scope = 1 FULL OUTER JOIN phd.industry_dim indstry ON indstry.indstry_key = phase.indstry_key FULL OUTER JOIN phd.practice_dim prac ON prac.practice_key = phase.practice_key AND prac.include = 1 INNER JOIN phd.acct_drop accsn ON phase.rptg_mth_key = accsn.mth_key AND accsn.graph_nm = 'PG_CB_GR1' AND accsn.CURRENT != 1 {filter} GROUP BY accsn.CURR_ACCT_YR, accsn.CURR_ACCT_MO ORDER BY accsn.CURR_ACCT_YR, accsn.CURR_ACCT_MO ASC FETCH FIRST 13 rows only ;\",\"description\":\"Phase Gate CPM compliance contract trend\"}",
      "t2CompPGDetailsComp": "{\"name\":\"t2CompPGDetailsComp\",\"sqlTemplate\":\"SELECT '{label}' AS LABEL, con.cntrct_num, RTRIM(con.cntrct_desc) AS cntrct_desc, cust.cust_nm AS clnt_nm, phase.tot_tcv, active.active_typ_desc AS status, COALESCE(VARCHAR(DATE(dc.day_dt)), '') AS pg_date, COALESCE(VARCHAR(DATE(dt.day_dt)), '') AS wbs_start_dt FROM phd.phase_gate_compliance_fact phase INNER JOIN phd.contract_dim con ON phase.cntrct_key = con.cntrct_key INNER JOIN phd.customer_dim cust ON phase.cust_key = cust.cust_key INNER JOIN phd.date_dim dt ON phase.cb_strt_dt_key = dt.date_key INNER JOIN phd.date_dim dc ON phase.pg_compl_date_key = dc.date_key LEFT JOIN phd.active_type_dim active ON active.active_typ_key = con.active_typ_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = phase.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = phase.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = phase.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = phase.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = phase.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = phase.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON phase.rptg_mth_key = d.mth_key AND d.graph_nm = 'PG_CB_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> phase.status_flg = 1 AND( ( '{metric}' = 'PG0' AND phase.pg_o_cmplnce = '{compl}') OR ( '{metric}' = 'PG1_4' AND phase.pg_1_4_cmplnce = '{compl}' ) OR ( '{metric}' = 'RO_ACT' AND phase.pg_roat = 0 AND (phase.pg_0_ro_res = 1 OR phase.pg_1_4_ro_res = 1 ) ) OR ( '{metric}' = 'RO_OVD' AND phase.pg_roato = 0 AND (phase.pg_0_ro_res = 1 OR phase.pg_1_4_ro_res = 1) ) ) ORDER BY cntrct_num FETCH FIRST 200 ROWS ONLY ;\",\"description\":\"Phase Gate CPM compliance contract details\"}",
      "t2CompPGPopupSum": "{\"name\":\"t2CompPGPopupSum\",\"sqlTemplate\":\"select rtrim(ctd.cntrct_num) as cntrct_num, ctd.cntrct_key, rtrim(ctd.cntrct_desc) as cntrct_desc, rtrim(csd.cust_nm) as customer, pgc.tot_tcv as tcv, case when ctd.pe_notes_id != '' then substr(ctd.pe_notes_id, 1, locate('/', ctd.pe_notes_id)-1) else 'N/A' end as brand_pe, coalesce(varchar(date(dt.day_dt)),'') as wbs_start_dt, coalesce(varchar(date(dd.day_dt)),'') as deli_start_date, case when ctd.pm_notes_id != '' then substr(ctd.pm_notes_id, 1, locate('/', ctd.pm_notes_id)-1) else 'N/A' end as brand_pm, rtrim(coalesce(prac.practice_nm, 'N/A')) as practice, coalesce(varchar(date(ctd.sgnd_dt)),'') as contract_sign_date, rtrim(std.sctr_gb_nm) as sector, case when pgc.pg_req = 1 then 'Yes' else 'No' end as pg_req, case when pgc.pg0_req = 1 then 'Yes' else 'No' end as pg0_req, case when pgc.pg1_req = 1 then 'Yes' else 'No' end as pg1_req, case when pgc.pg2_req = 1 then 'Yes' else 'No' end as pg2_req, case when pgc.pg3_req = 1 then 'Yes' else 'No' end as pg3_req, case when pgc.pg4_req = 1 then 'Yes' else 'No' end as pg4_req, case when pgc.pg_o_assessed = 1 then 'Yes' else 'No' end as pg_o_assessed, case when pgc.pg_1_4_assessed = 1 then 'Yes' else 'No' end as pg_1_4_assessed, case when pgc.pg_o_cmplnce = 1 then 'Compliant' when pgc.pg_o_cmplnce = 0 then 'Non Compliant' when pgc.pg_o_cmplnce = 2 then 'Not Assessed' else 'N/A' end as pg_o_cmplnce, case when pgc.pg_o_cmplnce = 1 then '#5AA700' when pgc.pg_o_cmplnce = 0 then '#E71D32' when pgc.pg_o_cmplnce = 2 then '#D4D4D4' end as pg_o_cmplnce_col, case when pgc.pg_1_4_cmplnce = 1 then 'Compliant' when pgc.pg_1_4_cmplnce = 0 then 'Non Compliant' when pgc.pg_1_4_cmplnce = 2 then 'Not Assessed' else 'N/A' end as pg_1_4_cmplnce, case when pgc.pg_1_4_cmplnce = 1 then '#5AA700' when pgc.pg_1_4_cmplnce = 0 then '#E71D32' when pgc.pg_1_4_cmplnce = 2 then '#D4D4D4' end as pg_1_4_cmplnce_col, case when pgc.pg_0_ro_res = 1 then 'Yes' else 'No' end as pg_0_ro_res, case when pgc.pg_1_4_ro_res = 1 then 'Yes' else 'No' end as pg_1_4_ro_res, case when pgc.pg_0_ro_at = 1 then 'Yes' else 'No' end as pg_0_ro_at, case when pgc.pg_0_ro_at = 1 then '#5AA700' when pgc.pg_0_ro_at = 0 then '#E71D32' end as pg_0_ro_at_col, case when pgc.pg_1_4_ro_at = 1 then 'Yes' else 'No' end as pg_1_4_ro_at, case when pgc.pg_1_4_ro_at = 1 then '#5AA700' when pgc.pg_1_4_ro_at = 0 then '#E71D32' end as pg_1_4_ro_at_col, case when pgc.pg_0_ro_ato = 1 then 'Yes' else 'No' end as pg_0_ro_ato, case when pgc.pg_0_ro_ato = 1 then '#E71D32' when pgc.pg_0_ro_ato = 0 then '#5AA700' end as pg_0_ro_ato_col, case when pgc.pg_1_4_ro_ato = 1 then 'Yes' else 'No' end as pg_1_4_ro_ato, case when pgc.pg_1_4_ro_ato = 1 then '#E71D32' when pgc.pg_1_4_ro_ato = 0 then '#5AA700' end as pg_1_4_ro_ato_col, pgc.exempt_days as exempt_days, case when date(current date) < date(dd.day_dt + pgc.exempt_days days) or date(current date) < date(dt.day_dt + pgc.exempt_days days) then 'is' else 'is not' end as exempt_flag, case when pgc.pure_pre = 1 then 'Yes' else 'No' end as pure_pre, ctd.ippf_assess_url as ippf_url from phd.phase_gate_compliance_fact pgc inner join phd.customer_dim csd on pgc.cust_key = csd.cust_key inner join phd.contract_dim ctd on pgc.cntrct_key = ctd.cntrct_key inner join phd.sector_gb_dim std on pgc.sctr_key = std.sctr_gb_key inner join phd.acct_drop ad on pgc.rptg_mth_key = ad.mth_key and ad.graph_nm = 'PG_CB_GR1' and ad.yr_mo_key = '{yrMoKey}' left join phd.date_dim dt on pgc.cb_strt_dt_key = dt.date_key left join phd.date_dim dd on pgc.ds_date_key = dd.date_key inner join phd.practice_dim prac on ctd.practice_key = prac.practice_key and prac.include = 1 where rtrim(ctd.cntrct_num) = '{cntrctNum}' ; \",\"description\":\"Phase Gate CPM Summary tab popup\"}",
      "t2CompPGPopupDet": "{\"name\":\"t2CompPGPopupDet\",\"sqlTemplate\":\"select rtrim(ctd.cntrct_num) as cntrct_num, ctd.cntrct_key, case when pgc.pg_0_excptn = 1 then 'Yes' else 'No' end as pg_0_excptn, case when pgc.pg_1_excptn = 1 then 'Yes' else 'No' end as pg_1_excptn, case when pgc.pg_2_excptn = 1 then 'Yes' else 'No' end as pg_2_excptn, case when pgc.pg_3_excptn = 1 then 'Yes' else 'No' end as pg_3_excptn, case when pgc.pg_4_excptn = 1 then 'Yes' else 'No' end as pg_4_excptn, pgc.pg_0_ske as pg_0_ske, pgc.pg_1_ske as pg_1_ske, pgc.pg_2_ske as pg_2_ske, pgc.pg_3_ske as pg_3_ske, pgc.pg_4_ske as pg_4_ske, pgc.pg_0_skeo as pg_0_skeo, pgc.pg_1_skeo as pg_1_skeo, pgc.pg_2_skeo as pg_2_skeo, pgc.pg_3_skeo as pg_3_skeo, pgc.pg_4_skeo as pg_4_skeo, pgc.pg_0_ipr as pg_0_ipr, pgc.pg_1_ipr as pg_1_ipr, pgc.pg_2_ipr as pg_2_ipr, pgc.pg_3_ipr as pg_3_ipr, pgc.pg_4_ipr as pg_4_ipr, pgc.pg_0_ipro as pg_0_ipro, pgc.pg_1_ipro as pg_1_ipro, pgc.pg_2_ipro as pg_2_ipro, pgc.pg_3_ipro as pg_3_ipro, pgc.pg_4_ipro as pg_4_ipro, pgc.pg_0_cippf as pg_0_cippf, pgc.pg_1_cippf as pg_1_cippf, pgc.pg_2_cippf as pg_2_cippf, pgc.pg_3_cippf as pg_3_cippf, pgc.pg_4_cippf as pg_4_cippf, pgc.pg_0_clgcy as pg_0_clgcy, pgc.pg_1_clgcy as pg_1_clgcy, pgc.pg_2_clgcy as pg_2_clgcy, pgc.pg_3_clgcy as pg_3_clgcy, pgc.pg_4_clgcy as pg_4_clgcy, pgc.pg_0_green as pg_0_green, pgc.pg_1_green as pg_1_green, pgc.pg_2_green as pg_2_green, pgc.pg_3_green as pg_3_green, pgc.pg_4_green as pg_4_green, pgc.pg_0_yellow as pg_0_yellow, pgc.pg_1_yellow as pg_1_yellow, pgc.pg_2_yellow as pg_2_yellow, pgc.pg_3_yellow as pg_3_yellow, pgc.pg_4_yellow as pg_4_yellow, pgc.pg_0_orange as pg_0_orange, pgc.pg_1_orange as pg_1_orange, pgc.pg_2_orange as pg_2_orange, pgc.pg_3_orange as pg_3_orange, pgc.pg_4_orange as pg_4_orange, pgc.pg_0_red as pg_0_red, pgc.pg_1_red as pg_1_red, pgc.pg_2_red as pg_2_red, pgc.pg_3_red as pg_3_red, pgc.pg_4_red as pg_4_red, pgc.pg_0_roat as pg_0_roat, pgc.pg_1_roat as pg_1_roat, pgc.pg_2_roat as pg_2_roat, pgc.pg_3_roat as pg_3_roat, pgc.pg_4_roat as pg_4_roat, pgc.pg_0_roato as pg_0_roato, pgc.pg_1_roato as pg_1_roato, pgc.pg_2_roato as pg_2_roato, pgc.pg_3_roato as pg_3_roato, pgc.pg_4_roato as pg_4_roato, ctd.ippf_assess_url AS ippf_url from phd.phase_gate_compliance_fact pgc inner join phd.contract_dim ctd on pgc.cntrct_key = ctd.cntrct_key inner join phd.acct_drop ad on pgc.rptg_mth_key = ad.mth_key and ad.graph_nm = 'PG_CB_GR1' and ad.yr_mo_key = '{yrMoKey}' where rtrim(ctd.cntrct_num) = '{cntrctNum}' ; \",\"description\":\"Phase Gate CPM Detail tab popup\"}",
      "t2CompPGExport": "{\"name\":\"t2CompPGExport\",\"sqlTemplate\":\"select con.cntrct_num, con.PHD_URL, brd.brand_nm as brand, Rtrim(ctry.ctry_nm) as country, Rtrim(svc_line.svc_line_nm) as service_line, Rtrim(geo1.geo_lvl1_cd) as geography, Rtrim(grth_plfm.grth_plfm_desc) as growth_platform, cust.cust_nm as clnt_nm, Rtrim(geo2.geo_lvl2_nm) as mkt_desc, rtrim(prac.practice_nm) as practice, Rtrim(con.cntrct_desc) as prjct_nm, phase.tot_tcv as tcv, active.active_typ_desc as status, date( con.sgnd_dt) as contract_sign_date, date ( dd.day_dt ) as wbs_start_dt, date ( dd.day_dt ) as deli_start_date, sctr.sctr_gb_nm as sector, case when phase.pg_o_assessed = 1 then 'Yes' else 'No' end as pg_o_assessed, case when phase.pg_1_4_assessed = 1 then 'Yes' else 'No' end as pg_1_4_assessed, case when phase.pg_o_cmplnce = 1 then 'Compliant' when phase.pg_o_cmplnce = 0 then 'Non Compliant' when phase.pg_o_cmplnce = 2 then 'Not Assessed' end as pg_o_cmplnce, case when phase.pg_1_4_cmplnce = 1 then 'Compliant' when phase.pg_1_4_cmplnce = 0 then 'Non Compliant' when phase.pg_1_4_cmplnce = 2 then 'Not Assessed' end as pg_1_4_cmplnce, case when phase.pg_0_ro_res = 1 then 'Yes' else 'No' end as pg_0_ro_res, case when phase.pg_1_4_ro_res = 1 then 'Yes' else 'No' end as pg_1_4_ro_res, case when phase.pg_roat = 1 then 'Yes' else 'No' end as pg_0_ro_at, case when phase.pg_1_4_ro_at = 1 then 'Yes' else 'No' end as pg_1_4_ro_at, case when phase.pg_0_ro_ato = 1 then 'Yes' else 'No' end as pg_0_ro_ato, case when phase.pg_1_4_ro_ato = 1 then 'Yes' else 'No' end as pg_1_4_ro_ato, case when con.pm_notes_id != '' then substr(con.pm_notes_id, 1, locate('/', con.pm_notes_id)-1) else 'N/A' end as brand_pm, case when con.pe_notes_id != '' then substr(con.pe_notes_id, 1, locate('/', con.pe_notes_id)-1) else 'N/A' end as brand_pe from phd.phase_gate_compliance_fact phase inner join phd.contract_dim con on phase.cntrct_key = con.cntrct_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.customer_dim cust on phase.cust_key = cust.cust_key left join phd.date_dim dt on phase.cb_strt_dt_key = dt.date_key left join phd.date_dim dd on phase.ds_date_key = dd.date_key full outer join (select * from phd.geo_lvl1_dim where geo_lvl1_key not in ( 0, 21 )) geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = phase.svc_line_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key full outer join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key left join phd.active_type_dim active on active.active_typ_key = con.active_typ_key left join phd.dw_brand_dim brd on con.dw_brand_key = brd.dw_brand_key inner join phd.practice_dim prac on con.practice_key = prac.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.yr_mo_key = '{yrMoKey}' and d.graph_nm = 'PG_CB_GR1' {filter} <filter?AND:WHERE> phase.status_flg = 1 order by cntrct_num fetch first 7000 ROWS only ; \",\"description\":\"Phase Gate CPM export\"}",
      "t2CompPGCountPerf": "{\"name\":\"t2CompPGCountPerf\",\"sqlTemplate\":\"with Performance_phasegate_raw as ( select d.data_load_desc, phase.pg_0_Green, phase.pg_0_Yellow, phase.pg_0_Red, phase.pg_0_Orange, phase.pg_1_4_Green, phase.pg_1_4_Red, phase.pg_1_4_Yellow, phase.pg_1_4_Orange, phase.pg_1_Green, phase.pg_1_Yellow, phase.pg_1_Red, phase.pg_1_Orange, phase.pg_2_Green, phase.pg_2_Yellow, phase.pg_2_Red, phase.pg_2_Orange, phase.pg_3_Green, phase.pg_3_Red, phase.pg_3_Yellow, phase.pg_3_Orange, phase.pg_4_Green, phase.pg_4_Yellow, phase.pg_4_Red, phase.pg_4_Orange, phase.geo_lvl1_key, phase.geo_lvl2_key, phase.ctry_key, phase.grth_plfm_key, phase.svc_line_key, phase.sctr_key, phase.indstry_key, phase.practice_key from phd.phase_gate_compliance_fact phase inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = phase.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.graph_nm = 'PG_CB_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter}   ), Performance_phasegate_dim AS ( select data_load_desc, pg_0_Green as pg_0_Green, pg_0_Yellow as pg_0_Yellow, pg_0_Red as pg_0_Red , pg_0_Orange as pg_0_Orange, pg_1_4_Green as pg_1_4_Green, pg_1_4_Red as pg_1_4_Red, pg_1_4_Yellow as pg_1_4_Yellow, pg_1_4_Orange as pg_1_4_Orange, pg_1_Green as pg_1_Green, pg_1_Yellow as pg_1_Yellow, pg_1_Red as pg_1_Red, pg_1_Orange as pg_1_Orange, pg_2_Green as pg_2_Green, pg_2_Yellow as pg_2_Yellow, pg_2_Red as pg_2_Red, pg_2_Orange as pg_2_Orange, pg_3_Green as pg_3_Green, pg_3_Red as pg_3_Red, pg_3_Yellow as pg_3_Yellow, pg_3_Orange as pg_3_Orange, pg_4_Green as pg_4_Green, pg_4_Yellow as pg_4_Yellow, pg_4_Red as pg_4_Red, pg_4_Orange as pg_4_Orange, trim({busAttr}) as bus_attr FROM Performance_phasegate_raw Ppgr full outer join ( select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21) ) geo1 on geo1.geo_lvl1_key = Ppgr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = Ppgr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = Ppgr.ctry_key full outer join ( select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = Ppgr.grth_plfm_key full outer join ( select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = Ppgr.svc_line_key full outer join ( select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = Ppgr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = Ppgr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = Ppgr.practice_key {filter} ) select data_load_desc, bus_attr, coalesce(sum(pg_0_Green),0) as pg_0_Green_cnt, coalesce(sum(pg_0_Red),0) as pg_0_Red_cnt, coalesce(sum(pg_0_Yellow),0) as pg_0_Yellow_cnt, coalesce(sum(pg_0_Orange),0) as pg_0_Orange_cnt, coalesce(sum(pg_1_4_Green),0) as pg_1_4_Green_cnt, coalesce(sum(pg_1_4_Red),0) as pg_1_4_Red_cnt, coalesce(sum(pg_1_4_Yellow),0) as pg_1_4_Yellow_cnt, coalesce(sum(pg_1_4_Orange),0) as pg_1_4_Orange_cnt, coalesce(sum(pg_1_Green),0) as pg_1_Green_cnt, coalesce(sum(pg_1_Red),0) as pg_1_Red_cnt, coalesce(sum(pg_1_Yellow),0) as pg_1_Yellow_cnt, coalesce(sum(pg_1_Orange),0) as pg_1_Orange_cnt, coalesce(sum(pg_2_Green),0) as pg_2_Green_cnt, coalesce(sum(pg_2_Red),0) as pg_2_Red_cnt, coalesce(sum(pg_2_Yellow),0) as pg_2_Yellow_cnt, coalesce(sum(pg_2_Orange),0) as pg_2_Orange_cnt, coalesce(sum(pg_3_Green),0) as pg_3_Green_cnt, coalesce(sum(pg_3_Red),0) as pg_3_Red_cnt, coalesce(sum(pg_3_Yellow),0) as pg_3_Yellow_cnt, coalesce(sum(pg_3_Orange),0) as pg_3_Orange_cnt, coalesce(sum(pg_4_Green),0) as pg_4_Green_cnt, coalesce(sum(pg_4_Red),0) as pg_4_Red_cnt, coalesce(sum(pg_4_Yellow),0) as pg_4_Yellow_cnt, coalesce(sum(pg_4_Orange),0) as pg_4_Orange_cnt, case  when coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_0_green),0)as decimal(19, 4))/cast(coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0)as decimal(19, 4)) end as pg_0_green_perc, case  when coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_0_red),0)as decimal(19, 4))/cast(coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0)as decimal(19, 4)) end as pg_0_red_perc, case  when coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_0_yellow),0)as decimal(19, 4))/cast(coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0)as decimal(19, 4)) end as pg_0_yellow_perc, case  when coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_0_orange),0)as decimal(19, 4))/cast(coalesce((sum(pg_0_green)+sum(pg_0_red)+sum(pg_0_yellow)+sum(pg_0_orange)),0)as decimal(19, 4)) end as pg_0_orange_perc, case  when coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_4_green),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0)as decimal(19, 4)) end as pg_1_4_green_perc, case  when coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_4_red),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0)as decimal(19, 4)) end as pg_1_4_red_perc, case  when coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_4_yellow),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0)as decimal(19, 4)) end as pg_1_4_yellow_perc, case  when coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_4_orange),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_4_green)+sum(pg_1_4_red)+sum(pg_1_4_yellow)+sum(pg_1_4_orange)),0)as decimal(19, 4)) end as pg_1_4_orange_perc, case  when coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_green),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0)as decimal(19, 4)) end as pg_1_green_perc, case  when coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_red),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0)as decimal(19, 4)) end as pg_1_red_perc, case  when coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_yellow),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0)as decimal(19, 4)) end as pg_1_yellow_perc, case  when coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_1_orange),0)as decimal(19, 4))/cast(coalesce((sum(pg_1_green)+sum(pg_1_red)+sum(pg_1_yellow)+sum(pg_1_orange)),0)as decimal(19, 4)) end as pg_1_orange_perc, case  when coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_2_green),0)as decimal(19, 4))/cast(coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0)as decimal(19, 4)) end as pg_2_green_perc, case  when coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_2_red),0)as decimal(19, 4))/cast(coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0)as decimal(19, 4)) end as pg_2_red_perc, case  when coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_2_yellow),0)as decimal(19, 4))/cast(coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0)as decimal(19, 4)) end as pg_2_yellow_perc, case  when coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_2_orange),0)as decimal(19, 4))/cast(coalesce((sum(pg_2_green)+sum(pg_2_red)+sum(pg_2_yellow)+sum(pg_2_orange)),0)as decimal(19, 4)) end as pg_2_orange_perc, case  when coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_3_green),0)as decimal(19, 4))/cast(coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0)as decimal(19, 4)) end as pg_3_green_perc, case  when coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_3_red),0)as decimal(19, 4))/cast(coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0)as decimal(19, 4)) end as pg_3_red_perc, case  when coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_3_yellow),0)as decimal(19, 4))/cast(coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0)as decimal(19, 4)) end as pg_3_yellow_perc, case  when coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_3_orange),0)as decimal(19, 4))/cast(coalesce((sum(pg_3_green)+sum(pg_3_red)+sum(pg_3_yellow)+sum(pg_3_orange)),0)as decimal(19, 4)) end as pg_3_orange_perc, case  when coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_4_green),0)as decimal(19, 4))/cast(coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0)as decimal(19, 4)) end as pg_4_green_perc, case  when coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_4_red),0)as decimal(19, 4))/cast(coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0)as decimal(19, 4)) end as pg_4_red_perc, case  when coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_4_yellow),0)as decimal(19, 4))/cast(coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0)as decimal(19, 4)) end as pg_4_yellow_perc, case  when coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0) = 0 then cast(0.0 as float)  else cast(coalesce(sum(pg_4_orange),0)as decimal(19, 4))/cast(coalesce((sum(pg_4_green)+sum(pg_4_red)+sum(pg_4_yellow)+sum(pg_4_orange)),0)as decimal(19, 4)) end as pg_4_orange_perc from Performance_phasegate_dim where bus_attr is not null group by bus_attr, data_load_desc order by bus_attr \",\"description\":\"Phase Gate CPM, performance contract count and percent\"}",
      "t2CompPGTrendPerf": "{\"name\":\"t2CompPGTrendPerf\",\"sqlTemplate\":\"SELECT accsn.CURR_ACCT_MO AS mth_num, accsn.CURR_ACCT_YR AS yr_num, COALESCE(SUM(pg_0_green), 0) AS pg_0_green_cnt, COALESCE(SUM(pg_0_red), 0) AS pg_0_red_cnt, COALESCE(SUM(pg_0_yellow), 0) AS pg_0_yellow_cnt, COALESCE(SUM(pg_0_orange), 0) AS pg_0_orange_cnt, COALESCE(SUM(pg_1_4_green), 0) AS pg_1_4_green_cnt, COALESCE(SUM(pg_1_4_red), 0) AS pg_1_4_red_cnt, COALESCE(SUM(pg_1_4_yellow), 0) AS pg_1_4_yellow_cnt, COALESCE(SUM(pg_1_4_orange), 0) AS pg_1_4_orange_cnt, COALESCE(SUM(pg_1_green), 0) AS pg_1_green_cnt, COALESCE(SUM(pg_1_red), 0) AS pg_1_red_cnt, COALESCE(SUM(pg_1_yellow), 0) AS pg_1_yellow_cnt, COALESCE(SUM(pg_1_orange), 0) AS pg_1_orange_cnt, COALESCE(SUM(pg_2_green), 0) AS pg_2_green_cnt, COALESCE(SUM(pg_2_red), 0) AS pg_2_red_cnt, COALESCE(SUM(pg_2_yellow), 0) AS pg_2_yellow_cnt, COALESCE(SUM(pg_2_orange), 0) AS pg_2_orange_cnt, COALESCE(SUM(pg_3_green), 0) AS pg_3_green_cnt, COALESCE(SUM(pg_3_red), 0) AS pg_3_red_cnt, COALESCE(SUM(pg_3_yellow), 0) AS pg_3_yellow_cnt, COALESCE(SUM(pg_3_orange), 0) AS pg_3_orange_cnt, COALESCE(SUM(pg_4_green), 0) AS pg_4_green_cnt, COALESCE(SUM(pg_4_red), 0) AS pg_4_red_cnt, COALESCE(SUM(pg_4_yellow), 0) AS pg_4_yellow_cnt, COALESCE(SUM(pg_4_orange), 0) AS pg_4_orange_cnt, CAST(COALESCE(SUM(pg_0_green),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_0_green)+SUM (pg_0_red)+SUM (pg_0_yellow)+SUM(pg_0_orange)),0) AS pg_0_green_perc, CAST(COALESCE(SUM(pg_0_red),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_0_green)+SUM (pg_0_red)+SUM (pg_0_yellow)+SUM(pg_0_orange)),0) AS pg_0_red_perc, CAST(COALESCE(SUM(pg_0_yellow),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_0_green)+SUM(pg_0_red)+SUM (pg_0_yellow)+SUM(pg_0_orange)),0) AS pg_0_yellow_perc, CAST(COALESCE(SUM(pg_0_orange),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_0_green)+SUM(pg_0_red)+SUM (pg_0_yellow)+SUM(pg_0_orange)),0) AS pg_0_orange_perc, CAST(COALESCE(SUM(pg_1_4_green),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_4_green)+ SUM(pg_1_4_red )+SUM(pg_1_4_yellow)+SUM(pg_1_4_orange)),0) AS pg_1_4_green_perc, CAST(COALESCE(SUM(pg_1_4_red),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_4_green)+ SUM(pg_1_4_red)+ SUM(pg_1_4_yellow)+SUM(pg_1_4_orange)),0) AS pg_1_4_red_perc, CAST(COALESCE(SUM(pg_1_4_yellow),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_4_green) +SUM (pg_1_4_red)+SUM(pg_1_4_yellow)+SUM(pg_1_4_orange)),0) AS pg_1_4_yellow_perc, CAST(COALESCE(SUM(pg_1_4_orange),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_4_green) +SUM (pg_1_4_red)+SUM(pg_1_4_yellow)+SUM(pg_1_4_orange)),0) AS pg_1_4_orange_perc, CAST(COALESCE(SUM(pg_1_green),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_green)+SUM (pg_1_red)+SUM (pg_1_yellow)+SUM(pg_1_orange)),0) AS pg_1_green_perc, CAST(COALESCE(SUM(pg_1_red),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_green)+SUM (pg_1_red)+SUM (pg_1_yellow)+SUM(pg_1_orange)),0) AS pg_1_red_perc, CAST(COALESCE(SUM(pg_1_yellow),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_green)+SUM(pg_1_red)+SUM (pg_1_yellow)+SUM(pg_1_orange)),0) AS pg_1_yellow_perc, CAST(COALESCE(SUM(pg_1_orange),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_1_green)+SUM(pg_1_red)+SUM (pg_1_yellow)+SUM(pg_1_orange)),0) AS pg_1_orange_perc, CAST(COALESCE(SUM(pg_2_green),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_2_green)+SUM (pg_2_red)+SUM (pg_2_yellow)+SUM(pg_2_orange)),0) AS pg_2_green_perc, CAST(COALESCE(SUM(pg_2_red),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_2_green)+SUM (pg_2_red)+SUM (pg_2_yellow)+SUM(pg_2_orange)),0) AS pg_2_red_perc, CAST(COALESCE(SUM(pg_2_yellow),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_2_green)+SUM(pg_2_red)+SUM (pg_2_yellow)+SUM(pg_2_orange)),0) AS pg_2_yellow_perc, CAST(COALESCE(SUM(pg_2_orange),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_2_green)+SUM(pg_2_red)+SUM (pg_2_yellow)+SUM(pg_2_orange)),0) AS pg_2_orange_perc, CAST(COALESCE(SUM(pg_3_green),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_3_green)+SUM (pg_3_red)+SUM (pg_3_yellow)+SUM(pg_3_orange)),0) AS pg_3_green_perc, CAST(COALESCE(SUM(pg_3_red),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_3_green)+SUM (pg_3_red)+SUM (pg_3_yellow)+SUM(pg_3_orange)),0) AS pg_3_red_perc, CAST(COALESCE(SUM(pg_3_yellow),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_3_green)+SUM(pg_3_red)+SUM (pg_3_yellow)+SUM(pg_3_orange)),0) AS pg_3_yellow_perc, CAST(COALESCE(SUM(pg_3_orange),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_3_green)+SUM(pg_3_red)+SUM (pg_3_yellow)+SUM(pg_3_orange)),0) AS pg_3_orange_perc, CAST(COALESCE(SUM(pg_4_green),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_4_green)+SUM (pg_4_red)+SUM (pg_4_yellow)+SUM(pg_4_orange)),0) AS pg_4_green_perc, CAST(COALESCE(SUM(pg_4_red),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_4_green)+SUM (pg_4_red)+SUM (pg_4_yellow)+SUM(pg_4_orange)),0) AS pg_4_red_perc, CAST(COALESCE(SUM(pg_4_yellow),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_4_green)+SUM(pg_4_red)+SUM (pg_4_yellow)+SUM(pg_4_orange)),0) AS pg_4_yellow_perc, CAST(COALESCE(SUM(pg_4_orange),0)AS DECIMAL(19, 4))/ NULLIF((SUM(pg_4_green)+SUM(pg_4_red)+SUM (pg_4_yellow)+SUM(pg_4_orange)),0) AS pg_4_orange_perc FROM phd.phase_gate_compliance_fact phase FULL OUTER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = phase.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,6,21) FULL OUTER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = phase.geo_lvl2_key FULL OUTER JOIN phd.country_dim ctry ON ctry.ctry_key = phase.ctry_key FULL OUTER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = phase.grth_plfm_key AND grth_plfm.in_scope = 1 FULL OUTER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = phase.svc_line_key AND svc_line.in_scope = 1 FULL OUTER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = phase.sctr_key AND sctr.in_scope = 1 FULL OUTER JOIN phd.industry_dim indstry ON indstry.indstry_key = phase.indstry_key FULL OUTER JOIN phd.practice_dim prac ON prac.practice_key = phase.practice_key AND prac.include = 1 INNER JOIN phd.acct_drop accsn ON phase.rptg_mth_key = accsn.mth_key AND accsn.graph_nm = 'PG_CB_GR1' AND accsn.CURRENT != 1 {filter} GROUP BY accsn.CURR_ACCT_YR, accsn.CURR_ACCT_MO ORDER BY accsn.CURR_ACCT_YR, accsn.CURR_ACCT_MO ASC FETCH FIRST 13 rows only ;\",\"description\":\"Phase Gate CPM, performance contract trend\"}",
      "t2CompPGDetailsPerf": "{\"name\":\"t2CompPGDetailsPerf\",\"sqlTemplate\":\"with greenList as (select 'Green' as status, '#8CD211' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(phase.tot_tcv, 0) as tcv, 1 as sortOrder, coalesce(varchar(date(dt.day_dt)),'') as pg_date from phd.phase_gate_compliance_fact phase inner join phd.contract_dim con on phase.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on phase.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = phase.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.graph_nm = 'PG_CB_GR1' and d.yr_mo_key = '{yrMoKey}' left join phd.date_dim dt on phase.cb_strt_dt_key = dt.date_key {filter} <filter?AND:WHERE> {metric}_Green >=1 order by {orderColumn} {orderDirection} fetch first 100 rows only  ), yellowList as (select 'Yellow' as status, '#FDD600' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(phase.tot_tcv, 0) as tcv, 2 as sortOrder, coalesce(varchar(date(dt.day_dt)),'') as pg_date from phd.phase_gate_compliance_fact phase inner join phd.contract_dim con on phase.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on phase.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = phase.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.graph_nm = 'PG_CB_GR1' and d.yr_mo_key = '{yrMoKey}' left join phd.date_dim dt on phase.cb_strt_dt_key = dt.date_key {filter} <filter?AND:WHERE> {metric}_Yellow >=1 order by {orderColumn} {orderDirection} fetch first 100 rows only  ), orangeList as (select 'Orange' as status, '#FF7832' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(phase.tot_tcv, 0) as tcv, 3 as sortOrder, coalesce(varchar(date(dt.day_dt)),'') as pg_date from phd.phase_gate_compliance_fact phase inner join phd.contract_dim con on phase.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on phase.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = phase.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.graph_nm = 'PG_CB_GR1' and d.yr_mo_key = '{yrMoKey}' left join phd.date_dim dt on phase.cb_strt_dt_key = dt.date_key {filter} <filter?AND:WHERE> {metric}_Orange >=1 order by {orderColumn} {orderDirection} fetch first 100 rows only  ), redList as (select 'Red' as status, '#E71D32' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(phase.tot_tcv, 0) as tcv, 4 as sortOrder, coalesce(varchar(date(dt.day_dt)),'') as pg_date from phd.phase_gate_compliance_fact phase inner join phd.contract_dim con on phase.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on phase.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = phase.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = phase.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = phase.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = phase.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = phase.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = phase.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = phase.indstry_key inner join phd.practice_dim prac on prac.practice_key = phase.practice_key and prac.include = 1 inner join phd.acct_drop d on phase.rptg_mth_key = d.mth_key and d.graph_nm = 'PG_CB_GR1' and d.yr_mo_key = '{yrMoKey}' left join phd.date_dim dt on phase.cb_strt_dt_key = dt.date_key {filter} <filter?AND:WHERE> {metric}_Red >=1 order by {orderColumn} {orderDirection} fetch first 100 rows only ) select * from greenList union all select * from yellowList union all select * from orangeList union all select * from redList order by sortOrder \",\"description\":\"Phase Gate CPM, performance contract details\"}",

      "t2Comp7KCountComp": "{\"name\":\"t2Comp7KCountComp\",\"sqlTemplate\":\"with compl_7k_raw as ( select d.data_load_desc, sk.target, sk.cmplnt_cnt, sk.geo_lvl1_key, sk.geo_lvl2_key, sk.ctry_key, sk.grth_plfm_key, sk.svc_line_key, sk.sctr_key, sk.indstry_key, sk.practice_key from phd.sevenkeys_fact sk inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = sk.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = sk.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key inner join phd.practice_dim prac on prac.practice_key = sk.practice_key and prac.include = 1 inner join phd.acct_drop d on sk.mth_key = d.mth_key and d.graph_nm = 'SK_L2_GR1' and d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> sk.svnkey_in_scope_flg = 1   ), compl_7k_dim as ( select data_load_desc, target, cmplnt_cnt as seven_keys, rtrim({busAttr}) as bus_attr from compl_7k_raw skr full outer join ( select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21) ) geo1 on geo1.geo_lvl1_key = skr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = skr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = skr.ctry_key full outer join ( select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = skr.grth_plfm_key full outer join ( select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = skr.svc_line_key full outer join ( select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = skr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = skr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = skr.practice_key {filter} ) select bus_attr, data_load_desc, target as target_pct, coalesce(sum(seven_keys), 0) as total_seven_keys, case when coalesce(sum(case when seven_keys = 1 or seven_keys = 0 then 1 else 0 end), 0) = 0 then cast(0 as decimal(19, 4)) else cast(sum(seven_keys) as decimal(19, 4))/cast(sum(case when seven_keys = 1 or seven_keys = 0 then 1 else 0 end) as decimal(19, 4)) end as seven_keys_perc from compl_7k_dim where bus_attr is not null group by bus_attr, data_load_desc, target order by bus_attr \",\"description\":\"7 Keys CPM, compliance contract count and percent\"}",
      "t2Comp7KTrendComp": "{\"name\":\"t2Comp7KTrendComp\",\"sqlTemplate\":\"with sksevenkeys_table as ( select md.mth_num, md.yr_num, sk.target, sum(case when (cmplnt_cnt = 1) then 1 else 0 end) as seven_keys from phd.sevenkeys_fact sk inner join phd.month_dim md on sk.mth_key = md.mth_key full outer join (select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21)) geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = sk.svc_line_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = sk.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = sk.practice_key {filter} <filter?AND:WHERE> md.mth_num is not null and md.yr_num is not null and cntrct_key <> -1 group by md.yr_num, md.mth_num, sk.target ) select unique md.mth_num, md.yr_num, sk.target, sum(case when (cmplnt_cnt = 1) then 1 else 0 end) as seven_keys, case when (coalesce(sum(case when (cmplnt_cnt = 1 or cmplnt_cnt = 0) then 1 else 0 end),0) = 0) then cast (0.0 as float) else cast(coalesce(sum(case when (cmplnt_cnt = 1) then 1 else 0 end), 0.0) as float) / cast(sum(case when (cmplnt_cnt = 1 or cmplnt_cnt = 0) then 1 else 0 end) as float) end as sevenkeyspct from phd.sevenkeys_fact skr inner join phd.month_dim md on skr.mth_key = md.mth_key full outer join (select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21)) geo1 on geo1.geo_lvl1_key = skr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = skr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = skr.ctry_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = skr.grth_plfm_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = skr.svc_line_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = skr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = skr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = skr.practice_key inner join phd.acct_drop accsn on skr.mth_key = accsn.mth_key and accsn.graph_nm = 'SK_L2_GR1' and accsn.yr_mo_key <> 'CURRENT' left join sksevenkeys_table sk on md.mth_num = sk.mth_num {filter} <filter?AND:WHERE> skr.svnkey_in_scope_flg = 1 and md.mth_num IS NOT NULL and md.yr_num IS NOT NULL and cntrct_key <> -1 group by md.mth_num, md.yr_num, sk.target, seven_keys order by md.yr_num desc, md.mth_num desc fetch first 13 rows only ; \",\"description\":\"7 Keys CPM compliance contract trend\"}",
      "t2Comp7KDetailsComp": "{\"name\":\"t2Comp7KDetailsComp\",\"sqlTemplate\":\"select '{label}' as label, con.cntrct_num, cust.cust_nm as clnt_nm, sk.tot_tcv_amt as tot_tcv, case when sk.ovrl_rag = 'G' then 'Green' when sk.ovrl_rag = 'Y' or sk.ovrl_rag = 'A' then 'Orange' when sk.ovrl_rag = 'R' then 'Red' else '-' end as overall_7k, apss.aprv_stat_nm as pm_sub, aps.aprv_stat_nm as pe_approval from phd.sevenkeys_fact sk inner join phd.contract_dim con on sk.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on sk.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = sk.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = sk.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key inner join phd.practice_dim prac on prac.practice_key = sk.practice_key and prac.include = 1 inner join phd.approval_status_dim aps on sk.app_key = aps.id inner join phd.approval_status_dim apss on sk.sub_key = apss.id inner join phd.acct_drop d on sk.mth_key = d.mth_key and d.graph_nm = 'SK_L2_GR1' and d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> sk.svnkey_in_scope_flg = 1 and sk.cmplnt_cnt = {compl} order by cntrct_num {orderDirection} fetch first 200 rows only ; \",\"description\":\"7 Keys CPM compliance contract details\"}",
      "t2Comp7KPopup": "{\"name\":\"t2Comp7KPopup\",\"sqlTemplate\":\"select ctd.cntrct_num, ctd.cntrct_key, ctd.lgl_cntrct_num as legal_cntrct_num, skf.tot_tcv_amt as tcv, rtrim(csd.cust_nm) as ippf_customer, coalesce(varchar(date(ctd.strtd_dt)),'') as wbs_start_dt, coalesce(varchar(date(ctd.sgnd_dt)),'') as contract_sign_date, actv.active_typ_desc as contract_status, CASE WHEN SKF.OVRL_RAG = 'G' THEN '#5AA700' WHEN SKF.OVRL_RAG = 'Y' THEN '#FF7832' WHEN SKF.OVRL_RAG = 'R' THEN '#E71D32' WHEN SKF.OVRL_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Overal7Keys, COALESCE(SKF.SVNKEY_TYP, 'N/A') as Seven_Keys, case when ctd.pm_notes_id != '' then substr(ctd.pm_notes_id, 1, locate('/', ctd.pm_notes_id)-1) else 'N/A' end as Brand_pm_name, case when ctd.pe_notes_id != '' then substr(ctd.pe_notes_id, 1, locate('/', ctd.pe_notes_id)-1) else 'N/A' end as Brand_pe_name, coalesce(aps.aprv_stat_nm, 'N/A') as brand_pe_approval, coalesce(skf.app_comnt, 'N/A') as brand_pe_comments, coalesce(skf.sub_comnt, 'N/A') as brand_pm, rtrim(ct.ctry_nm) as country, std.sctr_gb_nm as sector, rtrim(ctd.cntrct_desc) as wbs_shr_desc, coalesce(skf.pm_comnt, 'N/A') as brand_pm_gen_rem, coalesce(apss.aprv_stat_nm, 'N/A') as brand_pm_submission, CASE WHEN SKF.STAK_RAG = 'G' THEN '#5AA700' WHEN SKF.STAK_RAG = 'Y' THEN '#FF7832' WHEN SKF.STAK_RAG = 'R' THEN '#E71D32' WHEN SKF.STAK_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Stake_Holder_7key, CASE WHEN SKF.BUS_RAG = 'G' THEN '#5AA700' WHEN SKF.BUS_RAG = 'Y' THEN '#FF7832' WHEN SKF.BUS_RAG = 'R' THEN '#E71D32' WHEN SKF.BUS_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Business_Benefits_7key, CASE WHEN SKF.SCOP_RAG = 'G' THEN '#5AA700' WHEN SKF.SCOP_RAG = 'Y' THEN '#FF7832' WHEN SKF.SCOP_RAG = 'R' THEN '#E71D32' WHEN SKF.SCOP_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Scope_7key, CASE WHEN SKF.RISK_RAG = 'G' THEN '#5AA700' WHEN SKF.RISK_RAG = 'Y' THEN '#FF7832' WHEN SKF.RISK_RAG = 'R' THEN '#E71D32' WHEN SKF.RISK_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Risk_7key, CASE WHEN SKF.WORK_RAG = 'G' THEN '#5AA700' WHEN SKF.WORK_RAG = 'Y' THEN '#FF7832' WHEN SKF.WORK_RAG = 'R' THEN '#E71D32' WHEN SKF.WORK_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Work_Schedule_7key, CASE WHEN SKF.TEAM_RAG = 'G' THEN '#5AA700' WHEN SKF.TEAM_RAG = 'Y' THEN '#FF7832' WHEN SKF.TEAM_RAG = 'R' THEN '#E71D32' WHEN SKF.TEAM_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Team7key, CASE WHEN SKF.DEL_RAG = 'G' THEN '#5AA700' WHEN SKF.DEL_RAG = 'Y' THEN '#FF7832' WHEN SKF.DEL_RAG = 'R' THEN '#E71D32' WHEN SKF.DEL_RAG = 'A' THEN '#FF7832' ELSE '-' END AS Deli_Orga_7key, ctd.phd_url as ippf_url from phd.sevenkeys_fact skf inner join phd.customer_dim csd on skf.cust_key = csd.cust_key inner join phd.contract_dim ctd on skf.cntrct_key = ctd.cntrct_key inner join phd.sector_gb_dim std on skf.sctr_key = std.sctr_gb_key left join phd.active_type_dim actv on ctd.active_typ_key = actv.active_typ_key inner join phd.acct_drop ad on skf.mth_key = ad.mth_key and ad.graph_nm = 'SK_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' inner join phd.country_dim ct on skf.ctry_key = ct.ctry_key left join phd.approval_status_dim aps on skf.app_key = aps.id left join phd.approval_status_dim apss on skf.sub_key = apss.id where rtrim(ctd.cntrct_num) = '{cntrctNum}' ; \",\"description\":\"7 Keys CPM popup\"}",
      "t2Comp7KExport": "{\"name\":\"t2Comp7KExport\",\"sqlTemplate\":\"select con.cntrct_num as wbs_id, con.PHD_URL, brd.brand_nm as brand, rtrim(ctry.ctry_nm) || ' (' || ctry.ctry_cd || ')' as country, geo1.geo_lvl1_nm as geo, geo2.geo_lvl2_nm as market, coalesce( ctry.iso_ctry_cd || ' ' || rtrim(ctry.ctry_nm), 'N/A') as branch, svc.svc_line_nm as service_line, coalesce(pra.practice_nm, 'N/A') as practice, sctr.sctr_gb_nm as ippf_sector, indstry.indstry_cmr_nm as ippf_industry, cust.cust_nm as ippf_customer, con.cntrct_desc as wbs_short_desc, skf.pm_comnt as brand_pm_general_remark, actv.active_typ_desc as wbs_ippf_status, actv.active_typ_desc as contract_status_code, coalesce(varchar(date(con.strtd_dt)),'') as deli_start_date, coalesce(varchar(date(con.strtd_dt)),'') as wbs_start_dt, coalesce(varchar(date(con.end_dt)),'') as wbs_end_dt, coalesce(varchar(date(con.sgnd_dt)),'') as contract_sign_date, coalesce(varchar(date(con.closed_dt)),'') as contract_end_date, svc.svc_line_nm as complex_progrm, gp.grth_plfm_desc as growth_platform, 'N/A' as gbs_dms_scope, skf.tot_tcv_amt as tcv, case when skf.ovrl_rag = 'G' then 'Green' when skf.ovrl_rag = 'Y' then 'Orange' when skf.ovrl_rag = 'R' then 'Red' when skf.ovrl_rag = 'A' then 'Orange' else '-' end as overal_7keys, d.curr_acct_yr || '.' || d.curr_acct_mo as month_7keys, skf.svnkey_typ as set_name_7keys, case when skf.stak_rag = 'G' then 'Green' when skf.stak_rag = 'Y' then 'Orange' when skf.stak_rag = 'R' then 'Red' when skf.stak_rag = 'A' then 'Orange' else '-' end as stake_holder_7key, case when skf.bus_rag = 'G' then 'Green' when skf.bus_rag = 'Y' then 'Orange' when skf.bus_rag = 'R' then 'Red' when skf.bus_rag = 'A' then 'Orange' else '-' end as business_benefets_7key, case when skf.scop_rag = 'G' then 'Green' when skf.scop_rag = 'Y' then 'Orange' when skf.scop_rag = 'R' then 'Red' when skf.scop_rag = 'A' then 'Orange' else '-' end as scope_7key, case when skf.risk_rag = 'G' then 'Green' when skf.risk_rag = 'Y' then 'Orange' when skf.risk_rag = 'R' then 'Red' when skf.risk_rag = 'A' then 'Orange' else '-' end as risk_7key, case when skf.work_rag = 'G' then 'Green' when skf.work_rag = 'Y' then 'Orange' when skf.work_rag = 'R' then 'Red' when skf.work_rag = 'A' then 'Orange' else '-' end as work_schedule_7key, case when skf.team_rag = 'G' then 'Green' when skf.team_rag = 'Y' then 'Orange' when skf.team_rag = 'R' then 'Red' when skf.team_rag = 'A' then 'Orange' else '-' end as team7key, case when skf.del_rag = 'G' then 'Green' when skf.del_rag = 'Y' then 'Orange' when skf.del_rag = 'R' then 'Red' when skf.del_rag = 'A' then 'Orange' else '-' end as deli_orga_7key, coalesce(apss.aprv_stat_nm, 'N/A') as brand_pm_submssion, coalesce(aps.aprv_stat_nm, 'N/A') as brand_pe_approval, coalesce(skf.sub_comnt, 'N/A') as brand_pm_comment, coalesce(skf.app_comnt, 'N/A') as brand_pe_comment, coalesce(skf.aprvr_notes_id, 'N/A') as deli_excellence from phd.sevenkeys_fact skf inner join phd.contract_dim con on con.cntrct_key = skf.cntrct_key left join phd.dw_brand_dim brd on brd.dw_brand_key = con.dw_brand_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = skf.sctr_key inner join phd.customer_dim cust on cust.cust_key = skf.cust_key inner join phd.active_type_dim actv on actv.active_typ_key = con.active_typ_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = skf.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = skf.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = skf.ctry_key inner join phd.svc_line_dim svc on svc.svc_line_key = skf.svc_line_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = skf.grth_plfm_key inner join phd.industry_dim indstry on indstry.indstry_key = skf.indstry_key inner join phd.practice_dim pra on pra.practice_key = con.practice_key and pra.include = 1 left join phd.approval_status_dim aps on aps.id = skf.app_key left join phd.approval_status_dim apss on apss.id = skf.sub_key inner join phd.acct_drop d on d.mth_key = skf.mth_key and d.yr_mo_key = '{yrMoKey}' and d.graph_nm = 'SK_L2_GR1' {filter} <filter?AND:WHERE> skf.svnkey_in_scope_flg = 1 order by cntrct_num fetch first 7000 rows only ; \",\"description\":\"7 Keys CPM export\"}",
      "t2Comp7KCountPerf": "{\"name\":\"t2Comp7KCountPerf\",\"sqlTemplate\":\"with compl_7k_raw as ( select d.data_load_desc, sk.ovrl_rag, sk.geo_lvl1_key, sk.geo_lvl2_key, sk.ctry_key, sk.grth_plfm_key, sk.svc_line_key, sk.sctr_key, sk.indstry_key, sk.practice_key from phd.sevenkeys_fact sk  inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = sk.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = sk.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key inner join phd.practice_dim prac on prac.practice_key = sk.practice_key and prac.include = 1 inner join phd.acct_drop d on sk.mth_key = d.mth_key and d.graph_nm = 'SK_L2_GR1' and d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> sk.svnkey_in_scope_flg = 1 and sk.cmplnt_cnt = 1   ) , compl_7k_dim as ( select data_load_desc, skr.ovrl_rag as ovrl_rag, trim({busAttr}) as bus_attr from compl_7k_raw skr full outer join ( select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21) ) geo1 on geo1.geo_lvl1_key = skr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = skr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = skr.ctry_key full outer join ( select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = skr.grth_plfm_key full outer join ( select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = skr.svc_line_key full outer join ( select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = skr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = skr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = skr.practice_key {filter} ) select bus_attr, data_load_desc, sum(case when ovrl_rag = 'G' then 1 else 0 end )as green_cnt, sum(case when ovrl_rag = 'R' then 1 else 0 end) as red_cnt, sum(case when ovrl_rag = 'A' then 1 else 0 end) as orange_cnt, case when coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as Green_perc, case when coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_rag = 'R' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as Red_perc, case when coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_rag = 'A' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as orange_perc from compl_7k_dim where bus_attr is not null group by bus_attr, data_load_desc order by bus_attr \",\"description\":\"7 Keys CPM, performance contract count and percent\"}",
      "t2Comp7KTrendPerf": "{\"name\":\"t2Comp7KTrendPerf\",\"sqlTemplate\":\"select md.mth_num, md.yr_num, sum(case when ovrl_rag = 'G' then 1 else 0 end ) as green_count, sum(case when ovrl_rag = 'R' then 1 else 0 end) as red_count, sum(case when ovrl_rag = 'A' then 1 else 0 end) as orange_count, sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end) as total_cnt, case when coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as green_perc, case when coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_rag = 'R' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as red_perc, case when coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_rag = 'A' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_rag = 'G' then 1 else 0 end )+ sum(case when ovrl_rag = 'R' then 1 else 0 end) + sum(case when ovrl_rag = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as orange_perc from phd.sevenkeys_fact skr inner join phd.month_dim md on skr.mth_key = md.mth_key full outer join (select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21)) geo1 on geo1.geo_lvl1_key = skr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = skr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = skr.ctry_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = skr.grth_plfm_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = skr.svc_line_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = skr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = skr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = skr.practice_key inner join phd.acct_drop accsn on skr.mth_key = accsn.mth_key and accsn.graph_nm = 'SK_L2_GR1' and accsn.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> skr.svnkey_in_scope_flg = 1 and skr.cmplnt_cnt = 1 and md.mth_num IS NOT NULL and md.yr_num IS NOT NULL group by md.mth_num, md.yr_num order by md.yr_num, md.mth_num asc fetch first 13 rows only ; \",\"description\":\"7 Keys CPM, performance contract trend\"}",
      "t2Comp7KDetailsPerf": "{\"name\":\"t2Comp7KDetailsPerf\",\"sqlTemplate\":\"with greenList as (select 'Green' as status, '#8CD211' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(sk.tot_tcv_amt, 0) as tot_tcv, 1 as sortOrder from phd.sevenkeys_fact sk inner join phd.contract_dim con on sk.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on sk.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = sk.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = sk.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key inner join phd.practice_dim prac on prac.practice_key = sk.practice_key and prac.include = 1 inner join phd.acct_drop d on sk.mth_key = d.mth_key and d.graph_nm = 'SK_L2_GR1' and d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> sk.svnkey_in_scope_flg = 1 and sk.cmplnt_cnt = 1 and sk.ovrl_rag = 'G' order by con.cntrct_num {orderDirection} fetch first 100 rows only ), orangeList as (select 'Orange' as status, '#FF7832' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(sk.tot_tcv_amt, 0) as tot_tcv, 2 as sortOrder from phd.sevenkeys_fact sk inner join phd.contract_dim con on sk.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on sk.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = sk.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = sk.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key inner join phd.practice_dim prac on prac.practice_key = sk.practice_key and prac.include = 1 inner join phd.acct_drop d on sk.mth_key = d.mth_key and d.graph_nm = 'SK_L2_GR1' and d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> sk.svnkey_in_scope_flg = 1 and sk.cmplnt_cnt = 1 and (sk.ovrl_rag = 'Y' or sk.ovrl_rag = 'A') order by con.cntrct_num {orderDirection} fetch first 100 rows only  ), redList as (select 'Red' as status, '#E71D32' as color, con.cntrct_num, con.cntrct_desc, cust.cust_nm as clnt_nm, coalesce(sk.tot_tcv_amt, 0) as tot_tcv, 4 as sortOrder from phd.sevenkeys_fact sk inner join phd.contract_dim con on sk.cntrct_key = con.cntrct_key inner join phd.customer_dim cust on sk.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = sk.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = sk.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = sk.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = sk.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = sk.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = sk.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = sk.indstry_key inner join phd.practice_dim prac on prac.practice_key = sk.practice_key and prac.include = 1 inner join phd.acct_drop d on sk.mth_key = d.mth_key and d.graph_nm = 'SK_L2_GR1' and d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> sk.svnkey_in_scope_flg = 1 and sk.cmplnt_cnt = 1 and sk.ovrl_rag = 'R' order by con.cntrct_num {orderDirection} fetch first 100 rows only ) select * from greenList union all select * from orangeList union all select * from redList order by sortOrder \",\"description\":\"7 Keys CPM, performance contract details\"}",

      "t2CompIPPFCount": "{\"name\":\"t2CompIPPFCount\",\"sqlTemplate\":\"with compl_forecast_raw AS( SELECT d.data_load_desc, forecast.POC_Flg, forecast.actv_portf_flg, forecast.reqrd_flg, forecast.forcstd_flg, forecast.submtd_flg, forecast.apprvd_flg, forecast.rem_tcv, forecast.geo_lvl1_key, forecast.geo_lvl2_key, forecast.ctry_key, forecast.grth_plfm_key, forecast.svc_line_key, forecast.sctr_key, forecast.indstry_key, forecast.practice_key FROM phd.forecast_compliance_fact forecast INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = forecast.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = forecast.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = forecast.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = forecast.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = forecast.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = forecast.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = forecast.indstry_key inner join phd.practice_dim prac on prac.practice_key = forecast.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON forecast.rptg_mth_key = d.mth_key AND d.graph_nm = 'FC_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> forecast.poc_flg {operator}= {poc}  ), compl_Forecast_dim as( select data_load_desc, ACTV_PORTF_FLG as ACTV_PORTF_FLG, REQRD_FLG as REQRD_FLG, FORCSTD_FLG as FORCSTD_FLG, SUBMTD_FLG as SUBMTD_FLG, APPRVD_FLG as APPRVD_FLG, REM_TCV AS REM_TCV, poc_flg as Poc_flg, trim({busAttr}) as bus_attr from compl_Forecast_raw cfr full outer join ( select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21)) geo1 on geo1.geo_lvl1_key = cfr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cfr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = cfr.ctry_key full outer join ( select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = cfr.grth_plfm_key full outer join ( select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = cfr.svc_line_key full outer join ( select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = cfr.sctr_key FULL outer JOIN phd.industry_dim indstry ON indstry.indstry_key = cfr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cfr.practice_key {filter} ) SELECT bus_attr, data_load_desc, SUM( CASE WHEN actv_portf_flg = 1 THEN 1 ELSE 0 END ) AS active_count, SUM( CASE WHEN actv_portf_flg = 1 THEN rem_tcv ELSE 0 END ) AS active_value, SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ) AS req_count, SUM( CASE WHEN reqrd_flg = 1 THEN rem_tcv ELSE 0 END ) AS req_value, SUM( CASE WHEN forcstd_flg = 1 THEN 1 ELSE 0 END ) AS fcst_count, SUM( CASE WHEN forcstd_flg = 1 THEN rem_tcv ELSE 0 END ) AS frsct_value, SUM( CASE WHEN submtd_flg = 1 THEN 1 ELSE 0 END ) AS pm_count, SUM( CASE WHEN submtd_flg = 1 THEN rem_tcv ELSE 0 END ) AS pm_value, SUM( CASE WHEN apprvd_flg = 1 THEN 1 ELSE 0 END ) AS pe_count, SUM( CASE WHEN apprvd_flg = 1 THEN rem_tcv ELSE 0 END ) AS pe_value, CASE WHEN coalesce(SUM( CASE WHEN reqrd_flg = 1 OR reqrd_flg = 0 THEN 1 ELSE 0 END ), 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) / CAST(SUM( CASE WHEN reqrd_flg = 1 OR reqrd_flg = 0 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) END AS req_perc, CASE WHEN coalesce(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ), 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(SUM( CASE WHEN forcstd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) / CAST(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) END AS fcst_perc, CASE WHEN coalesce(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ), 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(SUM( CASE WHEN submtd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) / CAST(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) END AS pm_perc, CASE WHEN coalesce(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ), 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(SUM( CASE WHEN apprvd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) / CAST(SUM( CASE WHEN reqrd_flg = 1 THEN 1 ELSE 0 END ) AS DECIMAL(19, 4)) END AS pe_perc FROM compl_forecast_dim WHERE bus_attr IS NOT NULL GROUP BY bus_attr, data_load_desc order by bus_attr \",\"description\":\"IPPF metrics CPM, count and percent\"}",
      "t2CompIPPFTrend": "{\"name\":\"t2CompIPPFTrend\",\"sqlTemplate\":\"with IPPF_table as(SELECT md.mth_num, md.yr_num, sum(case WHEN ACTV_PORTF_FLG =1 THEN 1 ELSE 0 end) AS Active_count, sum(case WHEN ACTV_PORTF_FLG =1 THEN REM_TCV ELSE 0 end) AS Active_value, sum(case WHEN REQRD_FLG = 1 THEN 1 ELSE 0 end) AS req_count, sum(case WHEN REQRD_FLG = 1 THEN REM_TCV ELSE 0 end) AS req_value, sum(case WHEN FORCSTD_FLG = 1 THEN 1 ELSE 0 end) AS fcst_count, sum(case WHEN FORCSTD_FLG = 1 THEN REM_TCV ELSE 0 end) AS Fcst_value, sum(case WHEN SUBMTD_FLG = 1 THEN 1 ELSE 0 end) AS pm_count, sum(case WHEN SUBMTD_FLG = 1 THEN REM_TCV ELSE 0 end) AS pm_value, sum(case WHEN APPRVD_FLG = 1 THEN 1 ELSE 0 end) AS pe_count, sum(case WHEN APPRVD_FLG = 1 THEN REM_TCV ELSE 0 end) AS pe_value FROM phd.Forecast_compliance_fact Forecast INNER JOIN phd.month_dim md ON Forecast.rptg_mth_key = md.mth_key full outer JOIN (SELECT * FROM phd.geo_lvl1_dim WHERE geo_lvl1_key NOT IN (0,6,21)) geo1 ON geo1.geo_lvl1_key = Forecast.geo_lvl1_key full outer JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = Forecast.geo_lvl2_key full outer JOIN phd.country_dim ctry ON ctry.ctry_key = Forecast.ctry_key full outer JOIN (SELECT * FROM phd.growth_platform_dim WHERE in_scope = 1) grth_plfm ON grth_plfm.grth_plfm_key = Forecast.grth_plfm_key full outer JOIN (SELECT * FROM phd.svc_line_dim svc_line WHERE in_scope = 1) svc_line ON svc_line.svc_line_key = Forecast.svc_line_key full outer JOIN (SELECT * FROM phd.sector_gb_dim sctr WHERE in_scope = 1) sctr ON sctr.sctr_gb_key = Forecast.sctr_key full outer JOIN phd.industry_dim indstry ON indstry.indstry_key = Forecast.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = Forecast.practice_key {filter} <filter?AND:WHERE> Forecast.poc_flg {operator}= {poc} AND md.mth_num is NOT null AND md.yr_num is NOT null GROUP BY md.yr_num, md.mth_num) SELECT unique md.mth_num, md.yr_num, sum(case WHEN ACTV_PORTF_FLG =1 THEN 1 ELSE 0 end) AS Active_count, sum(case WHEN ACTV_PORTF_FLG =1 THEN REM_TCV ELSE 0 end) AS Active_value, sum(case WHEN REQRD_FLG = 1 THEN 1 ELSE 0 end) AS req_count, sum(case WHEN REQRD_FLG = 1 THEN REM_TCV ELSE 0 end) AS req_value, sum(case WHEN FORCSTD_FLG = 1 THEN 1 ELSE 0 end) AS fcst_count, sum(case WHEN FORCSTD_FLG = 1 THEN REM_TCV ELSE 0 end) AS fcst_value, sum(case WHEN SUBMTD_FLG = 1 THEN 1 ELSE 0 end) AS pm_count, sum(case WHEN SUBMTD_FLG = 1 THEN REM_TCV ELSE 0 end) AS pm_value, sum(case WHEN APPRVD_FLG = 1 THEN 1 ELSE 0 end) AS pe_count, sum(case WHEN APPRVD_FLG = 1 THEN REM_TCV ELSE 0 end) AS pe_value, CASE WHEN coalesce(sum( CASE WHEN REQRD_FLG = 1 OR REQRD_FLG = 0 THEN 1 ELSE 0 END ), 0) = 0 THEN cast(0.0 AS float) ELSE cast(sum(case WHEN REQRD_FLG = 1 THEN 1 ELSE 0 end) AS decimal(19, 4)) / cast(sum( CASE WHEN REQRD_FLG = 1 OR REQRD_FLG = 0 THEN 1 ELSE 0 END ) AS decimal(19, 4)) END AS req_perc, CASE WHEN coalesce(sum(case WHEN REQRD_FLG = 1 THEN 1 ELSE 0 end), 0) = 0 THEN cast(0.0 AS float) ELSE cast(sum(case WHEN FORCSTD_FLG = 1 THEN 1 ELSE 0 end) AS decimal(19, 4))/cast(sum( CASE WHEN REQRD_FLG = 1 THEN 1 ELSE 0 END ) AS decimal(19, 4)) END AS fcst_perc, CASE WHEN coalesce(sum(case WHEN REQRD_FLG = 1 THEN 1 ELSE 0 end), 0) = 0 THEN cast(0.0 AS float) ELSE cast(sum(case WHEN SUBMTD_FLG = 1 THEN 1 ELSE 0 end) AS decimal(19, 4))/cast(sum( CASE WHEN REQRD_FLG = 1 THEN 1 ELSE 0 END ) AS decimal(19, 4)) END AS pm_perc, CASE WHEN coalesce(sum(case WHEN REQRD_FLG = 1 THEN 1 ELSE 0 end), 0) = 0 THEN cast(0.0 AS float) ELSE cast(sum(case WHEN APPRVD_FLG = 1 THEN 1 ELSE 0 end) AS decimal(19, 4))/cast(sum( CASE WHEN REQRD_FLG = 1 THEN 1 ELSE 0 END ) AS decimal(19, 4)) END AS pe_perc FROM phd.Forecast_compliance_fact FC INNER JOIN phd.month_dim md ON FC.rptg_mth_key = md.mth_key full outer JOIN (SELECT * FROM phd.geo_lvl1_dim WHERE geo_lvl1_key NOT IN (0,6,21)) geo1 ON geo1.geo_lvl1_key = FC.geo_lvl1_key full outer JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = FC.geo_lvl2_key full outer JOIN phd.country_dim ctry ON ctry.ctry_key = FC.ctry_key full outer JOIN (SELECT * FROM phd.growth_platform_dim WHERE in_scope = 1) grth_plfm ON grth_plfm.grth_plfm_key = FC.grth_plfm_key full outer JOIN (SELECT * FROM phd.svc_line_dim svc_line WHERE in_scope = 1) svc_line ON svc_line.svc_line_key = FC.svc_line_key full outer JOIN (SELECT * FROM phd.sector_gb_dim sctr WHERE in_scope = 1) sctr ON sctr.sctr_gb_key = FC.sctr_key full outer JOIN phd.industry_dim indstry ON indstry.indstry_key = FC.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = FC.practice_key INNER JOIN phd.acct_drop accsn ON FC.rptg_mth_key = accsn.mth_key AND accsn.graph_nm = 'FC_L2_GR1' and accsn.yr_mo_key <> 'CURRENT' LEFT JOIN IPPF_table IPPF ON md.mth_num = IPPF.mth_num {filter} <filter?AND:WHERE> FC.poc_flg {operator}= {poc} AND md.mth_num IS NOT NULL AND md.yr_num IS NOT NULL GROUP BY md.mth_num, md.yr_num,Active_count,Active_value,req_value,req_count,fcst_count,pm_count,pe_count ORDER BY md.yr_num, md.mth_num asc ;\",\"description\":\"IPPF metrics CPM trend\"}",
      "t2CompIPPFDetails": "{\"name\":\"t2CompIPPFDetails\",\"sqlTemplate\":\"select rtrim(pd.proj_num) as wrk, rtrim(pd.proj_desc) as description, cust.cust_nm as clt, fcf.pm_nm as pm, fcf.pe_nm as pe, coalesce(fcf.rem_tcv, 0.0) as rmrev, coalesce(rtrim(od.ovrd_stat_nm), 'N/A') as rsncd, coalesce(rtrim(fcf.frcst_ovride_comnt), 'N/A') as reason, coalesce(varchar(date(sbd.day_dt)),'') as subdt, coalesce(varchar(date(apd.day_dt)),'') as last_approved from phd.forecast_compliance_fact fcf inner join phd.project_dim pd on fcf.proj_key = pd.proj_key inner join phd.customer_dim cust on fcf.cust_key = cust.cust_key left join phd.date_dim sbd on fcf.submtd_dt_key = sbd.date_key left join phd.date_dim apd on fcf.apprvd_dt_key = apd.date_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = fcf.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = fcf.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = fcf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = fcf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = fcf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = fcf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = fcf.indstry_key inner join phd.practice_dim prac on prac.practice_key = fcf.practice_key and prac.include = 1 left join phd.override_status_dim od on fcf.ovrd_stat_key = od.ovrd_stat_key inner join phd.acct_drop ad on fcf.rptg_mth_key = ad.mth_key and ad.graph_nm = 'FC_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> fcf.poc_flg {operator}= {poc} and ( ( '{metric}' = 'ACT' and fcf.actv_portf_flg = 1 ) or ( '{metric}' = 'REQ' and fcf.reqrd_flg = {tgl} ) or ( '{metric}' = 'FCST' and fcf.forcstd_flg = {tgl} and fcf.reqrd_flg = 1 ) or ( '{metric}' = 'PM' and fcf.submtd_flg = {tgl} and fcf.reqrd_flg = 1 ) or ( '{metric}' = 'PE' and fcf.apprvd_flg = {tgl} and fcf.reqrd_flg = 1 ) ) order by {orderColumn} {orderDirection} fetch first 100 rows only ; \",\"description\":\"IPPF metrics details\"}", 
      "t2CompIPPFPopup": "{\"name\":\"t2CompIPPFPopup\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, pj.proj_key, ctd.cntrct_key, rtrim(pj.proj_desc) as work_desc, rtrim(ctd.cntrct_num) as cntrct_num, brand_pm_nm as pm, rtrim(gp.grth_plfm_desc) as growth_platform, coalesce(rtrim(ipf.frcst_ovride_comnt), 'N/A') as excl_reason, coalesce(nr_ovrd_stat_by, 'N/A') as excl_apr_by, coalesce(od.ovrd_stat_nm, 'N/A') as excl_rsc_code, coalesce(varchar(date(exdt.day_dt)),'') as excl_apr_on, coalesce(ipf.rem_tcv, 0.0) as remain_rev, rtrim(act.active_typ_desc) as wbs_status, rtrim(csd.cust_nm) as client, rtrim(svc.svc_line_nm) as service_line, rtrim(geo2.geo_lvl2_nm) as mkt_desc, brand_pe_nm as brand_pe, coalesce(varchar(date(ctd.sgnd_dt)),'') as cntrct_sign_dt, coalesce(varchar(date(PJ.crtn_dt)),'') AS WBS_CREATE_DT, std.sctr_gb_nm as sector, coalesce(varchar(date(sbd.day_dt)),'') as last_sub_date, coalesce(varchar(date(apd.day_dt)),'') as last_apr_date, coalesce(ipf.submtr_cmnt, 'N/A') as brand_pm_comments, coalesce(aprvd_rev_amt, 0) as ap_rev, coalesce(aprvd_gp_amt, 0) as ap_gp, aprvd_gp_pct as ap_gp_pct, coalesce(eac_actls_rev_amt, 0) as fc_rev, coalesce(eac_actls_gp_amt, 0) as fc_gp, eac_actls_gp_pct as fc_gp_pct, coalesce(pc_rev_amt, 0) as pc_rev, coalesce(pc_gp_amt, 0) as pc_gp, pc_gp_pct as pc_gp_pct, coalesce(itd_actls_rev_amt, 0) as itd_rev, coalesce(itd_actls_gp_amt, 0) as itd_gp, itd_actls_gp_pct as itd_gp_pct, coalesce(ytd_actls_rev_amt, 0) as ytd_rev, coalesce(ytd_actls_gp_amt, 0) as ytd_gp, ytd_actls_gp_pct as ytd_gp_pct, rtrim(pj.phd_url) as ippf_url from phd.forecast_compliance_fact ipf inner join phd.project_dim pj on ipf.proj_key = pj.proj_key inner join phd.customer_dim csd on ipf.cust_key = csd.cust_key inner join phd.contract_dim ctd on ipf.cntrct_key = ctd.cntrct_key inner join phd.sector_gb_dim std on ipf.sctr_key = std.sctr_gb_key inner join phd.growth_platform_dim gp on ipf.grth_plfm_key = gp.grth_plfm_key inner join phd.svc_line_dim svc on ipf.svc_line_key = svc.svc_line_key inner join phd.geo_lvl2_dim geo2 on ipf.geo_lvl2_key = geo2.geo_lvl2_key inner join phd.acct_drop ad on ipf.rptg_mth_key = ad.mth_key and ad.graph_nm = 'FC_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' inner join phd.country_dim ct on ipf.ctry_key = ct.ctry_key inner join phd.active_type_dim act on pj.active_typ_key = act.active_typ_key left join phd.date_dim sbd on ipf.submtd_dt_key = sbd.date_key left join phd.date_dim apd on ipf.apprvd_dt_key = apd.date_key left join phd.override_status_dim od on ipf.ovrd_stat_key = od.ovrd_stat_key left join phd.date_dim exdt on ipf.nr_ovrd_stat_dt_key = exdt.date_key where ipf.poc_flg {operator}= {poc} and rtrim(pj.proj_num) = '{workNum}' ; \",\"description\":\"IPPF metrics CPM popup\"}",
      "t2CompIPPFExport": "{\"name\":\"t2CompIPPFExport\",\"sqlTemplate\":\"SELECT PD.proj_num AS WBS_ID, pd.PHD_URL, Rtrim(CTRY.ctry_nm) || '(' || CTRY.ctry_cd || ')' AS COUNTRY, BRA.brand_short_nm AS BRAND, SCTR.sctr_gb_nm AS IPPF_SECTORSnD, SCTR.sctr_gb_nm AS IPPF_SECTOR_GBOVERLAY, INDSTRY.indstry_cmr_nm AS IPPF_INDUSTRY, Rtrim(SVC.svc_line_nm) AS SERVICE_LINE, Rtrim(PRA.practice_nm) AS PRACTICE, Rtrim(GP.grth_plfm_desc) AS GROWTH_PLATFORM, Rtrim(GEO1.geo_lvl1_cd) AS GEO, Rtrim(GEO2.geo_lvl2_nm) AS MARKET, pd.proj_desc AS WBS_SHORT_DESC, coalesce(varchar(date(pd.strt_dt)),'') AS WBS_START_DT, coalesce(varchar(date(pd.end_dt)),'') AS WBS_END_DT, coalesce(varchar(date(pd.crtn_dt)),'') AS WBS_CREATED_DATE, WSD.workfl_stat_nm AS FORCAST_WORKFLOW_STATUS , OVR.ovrd_stat_nm AS FORCAST_OVERRIDE_STATUS, FCF.submtr_notes_id AS FORCAST_SUBMITER_NOTESID, coalesce(varchar(date(sbd.day_dt)),'') AS FORCAST_SUBMISSION_TIMESTAMP, coalesce(varchar(date(apd.day_dt)),'') AS FORCAST_LAST_APPROVED_TIMESTAMP, PID.proc_stat_nm AS PROCESS_INDICATOR, CUST.cust_nm AS IPPF_CUSTOMER, con.cntrct_num AS SYSTEM_CONTRACT_NUMBER, ACT.active_typ_desc AS WBS_IPPF_STATUS, Coalesce(FCF.aprvr_notes_id, 'N/A') AS PE_NOTESID, Coalesce(FCF.brand_pe_nm, 'N/A') AS BRAND_PE_NOTESID, Coalesce(FCF.pm_nm, 'N/A') AS PM_NOTESID, Rtrim(Coalesce(FCF.frcst_ovride_comnt, 'N/A')) AS OVERRIDE_JUSTIFICATION, Coalesce(ESD.elgbl_stat_nm, 'N/A') AS FORCAST_ELEGIBILITY_STATUS, FCF.submtr_cmnt AS PM_FORCAST_COMMENTS, CASE WHEN FCF.poc_flg = 1 THEN 'Y' WHEN FCF.poc_flg = 0 THEN 'N' END AS IPPF_AP51_INDICATOR FROM phd.forecast_compliance_fact fcf INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = fcf.sctr_key INNER JOIN phd.customer_dim cust ON fcf.cust_key = cust.cust_key INNER JOIN phd.project_dim pd ON fcf.proj_key = pd.proj_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = fcf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = fcf.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = fcf.ctry_key INNER JOIN phd.svc_line_dim svc ON svc.svc_line_key = fcf.svc_line_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = fcf.grth_plfm_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = fcf.indstry_key inner join phd.practice_dim pra on pra.practice_key = pd.practice_key and pra.include = 1 INNER JOIN phd.contract_dim con ON con.cntrct_key = fcf.cntrct_key INNER JOIN phd.dw_brand_dim bra ON pd.dw_brand_key = bra.dw_brand_key INNER JOIN phd.override_status_dim ovr ON fcf.ovrd_stat_key = ovr.ovrd_stat_key INNER JOIN phd.active_type_dim act ON pd.active_typ_key = act.active_typ_key INNER JOIN phd.workflow_status_dim WSD ON fcf.workfl_stat_key = WSD.workfl_stat_key INNER JOIN phd.process_indicator_dim PID ON fcf.proc_stat_key = PID.proc_stat_key INNER JOIN phd.elegibility_status_dim ESD ON fcf.elgbl_stat_key = ESD.elgbl_stat_key left join phd.date_dim sbd on fcf.submtd_dt_key = sbd.date_key left join phd.date_dim apd on fcf.apprvd_dt_key = apd.date_key INNER JOIN phd.acct_drop D ON FCF.rptg_mth_key = D.mth_key AND D.yr_mo_key = '{yrMoKey}' AND d.graph_nm = 'FC_L2_GR1' {filter} ORDER BY pd.proj_num FETCH first 7000 ROWS only ;\",\"description\":\"IPPF CPM export All\"}",
      "t2CompIPPFExportMetric": "{\"name\":\"t2CompIPPFExportMetric\",\"sqlTemplate\":\"SELECT pd.proj_num AS WBS_ID, pd.PHD_URL, Rtrim(ctry.ctry_nm) ||'(' || ctry.ctry_cd ||')' AS country, bra.brand_short_nm AS brand, sctr.sctr_gb_nm AS ippf_sectorsnd, sctr.sctr_gb_nm AS ippf_sector_gboverlay, indstry.indstry_cmr_nm AS ippf_industry, Rtrim(svc.svc_line_nm) AS service_line, Rtrim(pra.practice_nm) AS practice, Rtrim(gp.grth_plfm_desc) AS growth_platform, Rtrim(geo1.geo_lvl1_cd) AS geo, Rtrim(geo2.geo_lvl2_nm) AS market, pd.proj_desc AS wbs_short_desc, coalesce(varchar(date(pd.strt_dt)),'') AS wbs_start_dt, coalesce(varchar(date(pd.end_dt)),'') AS wbs_end_dt, coalesce(varchar(date(pd.crtn_dt)),'') AS wbs_created_date, WSD.WORKFL_STAT_NM AS FORCAST_WORKFLOW_STATUS, fcf.submtr_notes_id AS forcast_submiter_notesid, coalesce(varchar(date(sbd.day_dt)),'') AS subdt, coalesce(varchar(date(apd.day_dt)),'') AS forcast_last_approved_timestamp, PID.PROC_STAT_NM AS PROCESS_INDICATOR, cust.cust_nm AS clt, con.cntrct_num AS system_contract_number, act.active_typ_desc AS wbs_ippf_status, Coalesce(fcf.aprvr_notes_id, 'N/A') AS pe_notesid, Coalesce(fcf.brand_pe_nm, 'N/A') AS brand_pe_notesid, Coalesce(fcf.pm_nm, 'N/A') AS pm, Coalesce(Rtrim(fcf.frcst_ovride_comnt), 'N/A') AS override_justification, Coalesce(ESD.ELGBL_STAT_NM, 'N/A') AS FORCAST_ELEGIBILITY_STATUS, fcf.submtr_cmnt AS pm_forcast_comments, CASE WHEN FCF.POC_FLG = 1 THEN 'Y' WHEN FCF.POC_FLG = 0 THEN 'N' END AS IPPF_AP51_INDICATOR, coalesce(fcf.rem_tcv, 0.0) AS rmrev, Coalesce(Rtrim(ovr.ovrd_stat_nm), 'N/A') AS rsncd FROM phd.forecast_compliance_fact fcf INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = fcf.sctr_key INNER JOIN phd.customer_dim cust ON fcf.cust_key = cust.cust_key INNER JOIN phd.project_dim pd ON fcf.proj_key = pd.proj_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = fcf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = fcf.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = fcf.ctry_key INNER JOIN phd.svc_line_dim svc ON svc.svc_line_key = fcf.svc_line_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = fcf.grth_plfm_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = fcf.indstry_key inner join phd.practice_dim pra on pra.practice_key = pd.practice_key and pra.include = 1 INNER JOIN phd.contract_dim con ON con.cntrct_key = fcf.cntrct_key INNER JOIN phd.dw_brand_dim bra ON pd.dw_brand_key = bra.dw_brand_key INNER JOIN phd.override_status_dim ovr ON fcf.ovrd_stat_key = ovr.ovrd_stat_key INNER JOIN phd.active_type_dim act ON pd.active_typ_key = act.active_typ_key INNER JOIN phd.workflow_status_dim WSD ON fcf.workfl_stat_key = WSD.workfl_stat_key INNER JOIN phd.process_indicator_dim PID ON fcf.proc_stat_key = PID.proc_stat_key INNER JOIN phd.elegibility_status_dim ESD ON fcf.elgbl_stat_key = ESD.elgbl_stat_key left join phd.date_dim sbd on fcf.submtd_dt_key = sbd.date_key left join phd.date_dim apd on fcf.apprvd_dt_key = apd.date_key INNER JOIN phd.acct_drop D ON FCF.rptg_mth_key = D.mth_key AND D.yr_mo_key = 'CURRENT' AND d.graph_nm = 'FC_L2_GR1' {filter} <filter?AND:WHERE> fcf.poc_flg {operator}= {poc} and ( ( '{metric}' = 'ACT' and fcf.actv_portf_flg = 1 ) or ( '{metric}' = 'REQ' and fcf.reqrd_flg = {tgl} ) or ( '{metric}' = 'FCST' and fcf.forcstd_flg = {tgl} and fcf.reqrd_flg = 1 ) or ( '{metric}' = 'PM' and fcf.submtd_flg = {tgl} and fcf.reqrd_flg = 1 ) or ( '{metric}' = 'PE' and fcf.apprvd_flg = {tgl} and fcf.reqrd_flg = 1 ) ) ORDER BY {orderColumn} {orderDirection} FETCH first 7000 ROWS only ;\",\"description\":\"IPPF CPM export by metric\"}",

      "t2CompCOSCountComp": "{\"name\":\"t2CompCOSCountComp\",\"sqlTemplate\":\"with compl_cos_raw as ( select d.data_load_desc, cos.in_12_mth, cos.cos_in_scope_flg , cos.greater_12_mth, cos.target, cos.cmplnt_cnt, cos.geo_lvl1_key, cos.geo_lvl2_key, cos.ctry_key, cos.grth_plfm_key, cos.svc_line_key, cos.sctr_key, cos.indstry_key, cos.practice_key,  cos.non_cmplnt_flg from phd.cos_fact cos inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = cos.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cos.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = cos.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = cos.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = cos.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = cos.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = cos.indstry_key inner join phd.practice_dim prac on prac.practice_key = cos.practice_key and prac.include = 1 inner join phd.acct_drop d on cos.mth_key = d.mth_key and d.graph_nm ='COS_L2_GR1' AND d.yr_mo_key ='{yrMoKey}' {filter} <filter?AND:WHERE> cos.cos_in_scope_flg = 1  ), compl_cos_dim as ( select data_load_desc, in_12_mth, greater_12_mth, target, cmplnt_cnt as cos_cnt, cos_in_scope_flg, non_cmplnt_flg, rtrim({busAttr}) as bus_attr from compl_cos_raw cr full outer join ( select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21) ) geo1 on geo1.geo_lvl1_key = cr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = cr.ctry_key full outer join ( select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = cr.grth_plfm_key full outer join ( select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key =cr.svc_line_key full outer join ( select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = cr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = cr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cr.practice_key {filter} ) select bus_attr, data_load_desc, target as target_pct, coalesce(sum(cos_cnt), 0) as total_cos_cnt, coalesce(sum(non_cmplnt_flg),0) as non_cmpl_cnt, coalesce(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ), 0) as total_cnt, sum(case when in_12_mth = 1 then cos_cnt else 0 end) as cmpl_in_12_mth, sum(case when greater_12_mth = 1 then cos_cnt else 0 end) as cmpl_greater_12_mth, case when coalesce(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ), 0) = 0 then cast (0.0 as float) else cast(sum(case when in_12_mth =1 then 1 else 0 end) as decimal(19, 4)) / cast(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ) as decimal(19, 4)) end as cos_in_12_perc, case when coalesce(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ), 0) = 0 then cast(0.0 as float) else cast(sum(case when greater_12_mth =1 then 1 else 0 end) as decimal(19, 4)) / cast(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ) as decimal(19, 4)) end cos_greater_than_12_perc from compl_cos_dim where bus_attr is not null group by bus_attr, data_load_desc, target order by bus_attr \",\"description\":\"CoS CPM, compliance contract count and percent\"}",
      "t2CompCOSTrendComp": "{\"name\":\"t2CompCOSTrendComp\",\"sqlTemplate\":\"with cos_table as (select md.mth_num, md.yr_num, cos.target, sum(case when cos_in_scope_flg = 1 then cmplnt_cnt else 0 end) as total_cmplnt, sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) as cmpl_in_12_mth, sum(case when greater_12_mth = 1 then cmplnt_cnt else 0 end) as cmpl_greater_12_mth from phd.cos_fact cos inner join phd.month_dim md on cos.mth_key = md.mth_key full outer join(select * from phd.geo_lvl1_dim where geo_lvl1_key not in(0,6,21)) geo1 on geo1.geo_lvl1_key = cos.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cos.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = cos.ctry_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = cos.grth_plfm_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = cos.svc_line_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = cos.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = cos.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cos.practice_key {filter} <filter?AND:WHERE> md.mth_num is not null and md.yr_num is not null and cntrct_key <> -1 group by md.yr_num, md.mth_num, cos.target) select unique md.mth_num, md.yr_num, cr.target, sum(cmplnt_cnt) as total_cmplnt, sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) as cmpl_in_12_mth, sum(case when greater_12_mth = 1 then cmplnt_cnt else 0 end) as cmpl_greater_12_mth, case when coalesce(sum(cos_in_scope_flg), 0) = 0 then cast(0.0 as float) else cast(sum(cmplnt_cnt) as decimal(19,4))/cast(sum(cos_in_scope_flg) as decimal(19, 4)) end as total_compliance_perc, /*case when coalesce((sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) + sum(case when greater_12_mth = 1 then cmplnt_cnt else 0 end)), 0) = 0 then cast(0.0 as float) else cast(sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) as decimal(19, 4))/cast((sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) + sum(case when greater_12_mth = 1 then cmplnt_cnt else 0 end)) as decimal(19, 4)) end as cos_in_12_perc, case when coalesce((sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) + sum(case when greater_12_mth = 1 then cmplnt_cnt else 0 end)), 0) = 0 then cast(0.0 as float) else cast(sum(case when greater_12_mth = 1 then cmplnt_cnt else 0 end) as decimal(19, 4))/cast((sum(case when in_12_mth = 1 then cmplnt_cnt else 0 end) + sum(case when greater_12_mth =1 then cmplnt_cnt else 0 end)) as decimal(19, 4)) end as cos_greater_than_12_perc */ case when coalesce(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ), 0) = 0 then cast (0.0 as float) else cast(sum(case when in_12_mth =1 then 1 else 0 end) as decimal(19, 4)) / cast(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ) as decimal(19, 4)) end as cos_in_12_perc, case when coalesce(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ), 0) = 0 then cast(0.0 as float) else cast(sum(case when greater_12_mth =1 then 1 else 0 end) as decimal(19, 4)) / cast(sum(case when cos_in_scope_flg = 1 then 1 else 0 end ) as decimal(19, 4)) end as cos_greater_than_12_perc from phd.cos_fact cr inner join phd.month_dim md on cr.mth_key = md.mth_key full outer join (select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21)) geo1 on geo1.geo_lvl1_key = cr.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cr.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = cr.ctry_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = cr.grth_plfm_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = cr.svc_line_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = cr.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = cr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cr.practice_key inner join phd.acct_drop accsn on cr.mth_key = accsn.mth_key and accsn.graph_nm = 'COS_L2_GR1' and accsn.yr_mo_key <> 'CURRENT' left join cos_table cos on md.mth_num = cos.mth_num {filter} <filter?AND:WHERE> cr.cos_in_scope_flg = 1 and md.mth_num is not null and md.yr_num is not null and cntrct_key <> -1 group by md.mth_num, md.yr_num, cr.target, total_cmplnt,cmpl_in_12_mth,cmpl_greater_12_mth order by md.yr_num desc, md.mth_num desc fetch first 13 rows only ; \",\"description\":\"CoS CPM compliance contract trend\"}",
      "t2CompCOSDetailsComp": "{\"name\":\"t2CompCOSDetailsComp\",\"sqlTemplate\":\"select rtrim(ctd.cntrct_num) as con, cos.tot_tcv_amt as tcv, rtrim(csd.cust_nm) as customer, ctd.pm_notes_id as brand_pm, coalesce(varchar(date(ctd.sgnd_dt)),'') as cntrct_sign_date, case when '{tgl}' = 'CMPW' then '#3D70B2' when '{tgl}' = 'CMPG' then '#7CC7FF' else '#E7E6E6' end as color, coalesce(varchar(date(cos.cmpltd_dt)),'') as assmt_dt from phd.cos_fact cos inner join phd.customer_dim csd on cos.cust_key = csd.cust_key inner join phd.contract_dim ctd on cos.cntrct_key = ctd.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = cos.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cos.geo_lvl2_key inner join phd.svc_line_dim svc on svc.svc_line_key = cos.svc_line_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = cos.grth_plfm_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = cos.sctr_key inner join phd.practice_dim prac on prac.practice_key = cos.practice_key and prac.include = 1 inner join phd.acct_drop ad on cos.mth_key = ad.mth_key and ad.graph_nm = 'COS_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' inner join phd.country_dim ctry on ctry.ctry_key = cos.ctry_key {filter} <filter?AND:WHERE> cos.cos_in_scope_flg = 1 and ( ( '{tgl}' = 'NC' and cos.non_cmplnt_flg = 1 ) or ( '{tgl}' = 'CMPW' and cos.in_12_mth = 1 ) or ( '{tgl}' = 'CMPG' and cos.greater_12_mth = 1 ) ) order by {orderColumn} {orderDirection} fetch first 100 rows only ; \",\"description\":\"CoS CPM compliance contract details\"}",
      "t2CompCOSPopup": "{\"name\":\"t2CompCOSPopup\",\"sqlTemplate\":\"select rtrim(ctd.cntrct_num) as cntrct_num, ctd.cntrct_key, cos.tot_tcv_amt as tcv, rtrim(csd.cust_nm) as customer, indstry.indstry_cmr_nm as ippf_industry, coalesce(varchar(date(ctd.strtd_dt)),'') as wbs_start_dt, coalesce(cos.cmpltd_by, 'N/A') as completed_by, coalesce(varchar(date(cos.cmpltd_dt)),'') as completed_dt, coalesce(varchar(date(cos.dlvry_strt_dt)),'') as deli_start_dt, case when cos.ovrl_cos = 'R' then '#E71D32' when cos.ovrl_cos = 'G' then '#8CD211' when cos.ovrl_cos = 'Y' then '#FDD600' when cos.ovrl_cos = 'A' then '#FF7832' else '#D4D4D4' end as overall_cos_color, sctr.sctr_gb_nm as ippf_sector, rtrim(ctry.ctry_nm) as country, coalesce(varchar(date(ctd.sgnd_dt)),'') as cntrct_sign_date, ctd.pm_notes_id as brand_pm, aps.aprv_stat_nm as brand_pe_apr, rtrim(pm_comnt) as pm_comnt, rtrim(app_comnt) as pe_comnt, apss.active_typ_cd as cntrct_status_cd, rtrim(ctd.cntrct_desc) as cntrct_desc, rtrim(cos.comnt) as gen_comnt, ctd.ippf_ds_url as ippf_url from phd.cos_fact cos inner join phd.customer_dim csd on cos.cust_key = csd.cust_key inner join phd.contract_dim ctd on cos.cntrct_key = ctd.cntrct_key inner join phd.sector_gb_dim std on cos.sctr_key = std.sctr_gb_key inner join phd.acct_drop ad on cos.mth_key = ad.mth_key and ad.graph_nm = 'COS_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' inner join phd.industry_dim indstry on indstry.indstry_key = cos.indstry_key inner join phd.practice_dim prac on prac.practice_key = cos.practice_key and prac.include = 1 inner join phd.country_dim ctry on ctry.ctry_key = cos.ctry_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = cos.sctr_key inner join phd.approval_status_dim aps on cos.app_key = aps.id inner join phd.active_type_dim apss on apss.active_typ_key = ctd.active_typ_key where cos.cos_in_scope_flg = 1 and rtrim(ctd.cntrct_num) = '{cntrctNum}' ; \",\"description\":\"CoS CPM popup\"}",
      "t2CompCOSExport": "{\"name\":\"t2CompCOSExport\",\"sqlTemplate\":\"select rtrim(ctd.cntrct_num) as con, ctd.PHD_URL, rtrim(ctry.ctry_nm) || '(' || ctry.ctry_cd || ')' as country, rtrim(geo1.geo_lvl1_cd) as geo, rtrim(geo2.geo_lvl2_nm) as market, rtrim(csd.cust_nm) as customer, rtrim(ctd.cntrct_desc) as cntrct_desc, coalesce(varchar(date(cos.dlvry_strt_dt)),'') as deli_start_dt, coalesce(varchar(date(ctd.strtd_dt)),'') as wbs_start_dt, coalesce(varchar(date(ctd.end_dt)),'') as wbs_end_dt, coalesce(varchar(date(ctd.sgnd_dt)),'') as cntrct_sign_date, apss.active_typ_desc as cntrct_status, rtrim(svc.svc_line_nm) as service_line, rtrim(pra.practice_nm) as practice, sctr.sctr_gb_nm as ippf_sector, ctd.pm_notes_id as brand_pm, ctd.pe_notes_id as brand_pe, rtrim(gp.grth_plfm_desc) as growth_platform, cos.tot_tcv_amt as tcv, case when cos.cos_in_scope_flg = 1 then 'In scope for CoS compliance' else 'N/A' end as in_scope, coalesce(cos.compl_stat, 'N/A') as compliant, case when cos.ovrl_cos = 'R' then 'Red' when cos.ovrl_cos = 'G' then 'Green' when cos.ovrl_cos = 'Y' then 'Yellow' when cos.ovrl_cos = 'A' then 'Orange' else 'N/A' end as overall_cos, coalesce(cos.cmpltd_by, 'N/A') as completed_by, coalesce(varchar(date(cos.cmpltd_dt)),'') as completed_dt from phd.cos_fact cos inner join phd.customer_dim csd on cos.cust_key = csd.cust_key inner join phd.contract_dim ctd on cos.cntrct_key = ctd.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = cos.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cos.geo_lvl2_key inner join phd.svc_line_dim svc on svc.svc_line_key = cos.svc_line_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = cos.grth_plfm_key inner join phd.practice_dim pra on pra.practice_key = ctd.practice_key and pra.include = 1 inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = cos.sctr_key inner join phd.acct_drop ad on cos.mth_key = ad.mth_key and ad.graph_nm = 'COS_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' inner join phd.country_dim ctry on ctry.ctry_key = cos.ctry_key inner join phd.active_type_dim apss on apss.active_typ_key = ctd.active_typ_key {filter} <filter?AND:WHERE> cos.cos_in_scope_flg = 1 order by con desc fetch first 7000 rows only ; \",\"description\":\"CoS CPM export ALL\"}",
      "t2CompCOSExportMetric": "{\"name\":\"t2CompCOSExportMetric\",\"sqlTemplate\":\"select rtrim(ctd.cntrct_num) as con, ctd.PHD_URL, rtrim(ctry.ctry_nm) || '(' || ctry.ctry_cd || ')' as country, rtrim(geo1.geo_lvl1_cd) as geo, rtrim(geo2.geo_lvl2_nm) as market, rtrim(csd.cust_nm) as customer, rtrim(ctd.cntrct_desc) as cntrct_desc, coalesce(varchar(date(cos.dlvry_strt_dt)),'') as deli_start_dt, coalesce(varchar(date(ctd.strtd_dt)),'') as wbs_start_dt, coalesce(varchar(date(ctd.end_dt)),'') as wbs_end_dt, coalesce(varchar(date(ctd.sgnd_dt)),'') as cntrct_sign_date, apss.active_typ_desc as cntrct_status, rtrim(svc.svc_line_nm) as service_line, rtrim(pra.practice_nm) as practice, sctr.sctr_gb_nm as ippf_sector, ctd.pm_notes_id as brand_pm, ctd.pe_notes_id as brand_pe, rtrim(gp.grth_plfm_desc) as growth_platform, cos.tot_tcv_amt as tcv, case when cos.cos_in_scope_flg = 1 then 'In scope for CoS compliance' else 'N/A' end as in_scope, coalesce(cos.compl_stat, 'N/A') as compliant, case when cos.ovrl_cos = 'R' then 'Red' when cos.ovrl_cos = 'G' then 'Green' when cos.ovrl_cos = 'Y' then 'Yellow' when cos.ovrl_cos = 'A' then 'Orange' else 'N/A' end as overall_cos, coalesce(cos.cmpltd_by, 'N/A') as completed_by, coalesce(varchar(date(cos.cmpltd_dt)),'') as completed_dt from phd.cos_fact cos inner join phd.customer_dim csd on cos.cust_key = csd.cust_key inner join phd.contract_dim ctd on cos.cntrct_key = ctd.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = cos.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = cos.geo_lvl2_key inner join phd.svc_line_dim svc on svc.svc_line_key = cos.svc_line_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = cos.grth_plfm_key inner join phd.practice_dim pra on pra.practice_key = ctd.practice_key and pra.include = 1 inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = cos.sctr_key inner join phd.acct_drop ad on cos.mth_key = ad.mth_key and ad.graph_nm = 'COS_L2_GR1' and ad.yr_mo_key = '{yrMoKey}' inner join phd.country_dim ctry on ctry.ctry_key = cos.ctry_key inner join phd.active_type_dim apss ON apss.active_typ_key = ctd.active_typ_key {filter} <filter?AND:WHERE> cos.cos_in_scope_flg = 1 and ( ( '{tgl}' = 'NC' and cos.non_cmplnt_flg = 1 ) or ( '{tgl}' = 'CMPW' and cos.in_12_mth = 1 ) or ( '{tgl}' = 'CMPG' and cos.greater_12_mth = 1 ) ) order by {orderColumn} {orderDirection} fetch first 7000 rows only ; \",\"description\":\"CoS CPM export by metric\"}",
      "t2CompCOSCountPerf": "{\"name\":\"t2CompCOSCountPerf\",\"sqlTemplate\":\"WITH compl_cos_raw AS( SELECT d.data_load_desc, cos.ovrl_cos, cos.geo_lvl1_key, cos.geo_lvl2_key, cos.ctry_key, cos.grth_plfm_key, cos.svc_line_key, cos.sctr_key, cos.indstry_key, cos.practice_key FROM phd.cos_fact cos INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = cos.geo_lvl1_key  and geo1.geo_lvl1_key not in (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = cos.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = cos.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = cos.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = cos.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = cos.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = cos.indstry_key inner join phd.practice_dim prac on prac.practice_key = cos.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON cos.mth_key = d.mth_key AND d.graph_nm = 'COS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> cos.cos_in_scope_flg = 1 AND cos.cmplnt_cnt = 1  ) , compl_cos_dim AS ( SELECT data_load_desc, ovrl_cos AS ovrl_cos, TRIM({busAttr}) AS bus_attr FROM compl_cos_raw cr FULL OUTER JOIN ( SELECT * FROM phd.geo_lvl1_dim WHERE geo_lvl1_key NOT IN (0,6,21)) geo1 ON geo1.geo_lvl1_key = cr.geo_lvl1_key FULL OUTER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = cr.geo_lvl2_key FULL OUTER JOIN phd.country_dim ctry ON ctry.ctry_key = cr.ctry_key FULL OUTER JOIN ( SELECT * FROM phd.growth_platform_dim WHERE in_scope = 1) grth_plfm ON grth_plfm.grth_plfm_key = cr.grth_plfm_key FULL OUTER JOIN ( SELECT * FROM phd.svc_line_dim svc_line WHERE in_scope = 1) svc_line ON svc_line.svc_line_key = cr.svc_line_key FULL OUTER JOIN ( SELECT * FROM phd.sector_gb_dim sctr WHERE in_scope = 1) sctr ON sctr.sctr_gb_key = cr.sctr_key FULL OUTER JOIN phd.industry_dim indstry ON indstry.indstry_key = cr.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cr.practice_key {filter} ) SELECT bus_attr, data_load_desc, sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )AS yellow_cnt, sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )AS green_cnt, sum( CASE WHEN ovrl_cos= 'R' THEN 1 ELSE 0 END) AS red_cnt, sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END) AS orange_cnt, CASE WHEN coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END ) + sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END ) + sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) = 0 THEN CAST (0.0 AS float) ELSE CAST(coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END ),0) AS decimal(19, 4))/CAST(coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) AS decimal(19, 4)) END AS green_perc, CASE WHEN coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END ) + sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END ) + sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) = 0 THEN CAST (0.0 AS float) ELSE CAST(coalesce(sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END ),0) AS decimal(19, 4))/CAST(coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) AS decimal(19, 4)) END AS yellow_perc, CASE WHEN coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) = 0 THEN CAST (0.0 AS float) ELSE CAST(coalesce(sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END ),0) AS decimal(19, 4))/CAST(coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) AS decimal(19, 4)) END AS red_perc, CASE WHEN coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END),0) = 0 THEN CAST (0.0 AS float) ELSE CAST(coalesce(sum( CASE WHEN ovrl_cos = 'A' THEN 1 ELSE 0 END ),0) AS decimal(19, 4))/CAST(coalesce(sum( CASE WHEN ovrl_cos = 'G' THEN 1 ELSE 0 END )+ sum( CASE WHEN ovrl_cos = 'Y' THEN 1 ELSE 0 END )+sum( CASE WHEN ovrl_cos = 'R' THEN 1 ELSE 0 END) + sum( CASE WHEN ovrl_cos= 'A' THEN 1 ELSE 0 END),0) AS decimal(19, 4)) END AS orange_perc FROM compl_cos_dim WHERE bus_attr IS NOT NULL GROUP BY bus_attr, data_load_desc order by bus_attr \",\"description\":\"CoS CPM, performance contract count and percent\"}",
      "t2CompCOSTrendPerf": "{\"name\":\"t2CompCOSTrendPerf\",\"sqlTemplate\":\"select md.mth_num, md.yr_num, sum(case when ovrl_cos = 'G' then 1 else 0 end) as green_count, sum(case when ovrl_cos = 'Y' then 1 else 0 end ) as Yellow_count, sum(case when ovrl_cos = 'R' then 1 else 0 end) as red_count, sum(case when ovrl_cos = 'A' then 1 else 0 end) as orange_count, sum(case when ovrl_cos = 'G' then 1 else 0 end )+ sum(case when ovrl_cos = 'R' then 1 else 0 end) + sum(case when ovrl_cos = 'Y' then 1 else 0 end)+ sum(case when ovrl_cos = 'A' then 1 else 0 end) as total_cnt, case when coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end ) + sum(case when ovrl_Cos = 'Y' then 1 else 0 end ) + sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end )+ sum(case when ovrl_Cos = 'Y' then 1 else 0 end )+ sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as Green_perc, case when coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end ) + sum(case when ovrl_Cos = 'Y' then 1 else 0 end ) + sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_Cos = 'Y' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end )+ sum(case when ovrl_Cos = 'Y' then 1 else 0 end )+ sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as Yellow_perc, case when coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end )+ sum(case when ovrl_Cos = 'Y' then 1 else 0 end )+ sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_Cos = 'R' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end )+ sum(case when ovrl_Cos = 'Y' then 1 else 0 end )+ sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) as decimal(19, 4)) end as Red_perc, case when coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end )+ sum(case when ovrl_Cos = 'Y' then 1 else 0 end )+ sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos = 'A' then 1 else 0 end),0) = 0 then cast (0.0 as float) else cast(coalesce(sum(case when ovrl_Cos = 'A' then 1 else 0 end ),0) as decimal(19, 4))/cast(coalesce(sum(case when ovrl_Cos = 'G' then 1 else 0 end )+ sum(case when ovrl_Cos = 'Y' then 1 else 0 end ) + sum(case when ovrl_Cos = 'R' then 1 else 0 end) + sum(case when ovrl_Cos= 'A' then 1 else 0 end),0) as decimal(19, 4)) end as orange_perc from phd.cos_fact COS inner join phd.month_dim md on COS.mth_key = md.mth_key full outer join (select * from phd.geo_lvl1_dim where geo_lvl1_key not in (0,6,21)) geo1 on geo1.geo_lvl1_key = COS.geo_lvl1_key full outer join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = COS.geo_lvl2_key full outer join phd.country_dim ctry on ctry.ctry_key = COS.ctry_key full outer join (select * from phd.growth_platform_dim where in_scope = 1) grth_plfm on grth_plfm.grth_plfm_key = COS.grth_plfm_key full outer join (select * from phd.svc_line_dim svc_line where in_scope = 1) svc_line on svc_line.svc_line_key = COS.svc_line_key full outer join (select * from phd.sector_gb_dim sctr where in_scope = 1) sctr on sctr.sctr_gb_key = COS.sctr_key full outer join phd.industry_dim indstry on indstry.indstry_key = COS.indstry_key full outer join ( select * from phd.practice_dim prac where prac.include = 1 ) prac on prac.practice_key = cos.practice_key inner join phd.acct_drop accsn on COS.mth_key = accsn.mth_key and accsn.graph_nm = 'COS_L2_GR1' and accsn.yr_mo_key <> 'CURRENT' {filter} <filter?AND:WHERE> cos.cos_in_scope_flg = 1 and cos.cmplnt_cnt = 1 and md.mth_num IS NOT NULL and md.yr_num IS NOT NULL group by md.mth_num, md.yr_num order by md.yr_num, md.mth_num asc fetch first 13 rows only ; \",\"description\":\"Compcos, performance contract trend\"}",
      "t2CompCOSDetailsPerf": "{\"name\":\"t2CompCOSDetailsPerf\",\"sqlTemplate\":\"WITH greenlist AS( SELECT 'Green' AS status, '#8CD211' AS color, 1 AS sortorder, con.cntrct_num AS con, Coalesce(cosf.TOT_TCV_AMT, 0) AS tcv, RTRIM(cust.cust_nm) AS clnt_nm, con.PM_NOTES_ID AS pm_id, coalesce(varchar(date(con.sgnd_dt)),'') AS signed_dt, coalesce(varchar(date(cosf.cmpltd_dt)),'') AS assessment_dt FROM phd.COS_FACT cosf INNER JOIN phd.contract_dim con ON cosf.cntrct_key = con.cntrct_key INNER JOIN phd.customer_dim cust ON cosf.CUST_KEY = cust.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = cosf.GEO_LVL1_KEY INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = cosf.GEO_LVL2_KEY INNER JOIN phd.country_dim ctry ON ctry.ctry_key = cosf.CTRY_KEY INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = cosf.GRTH_PLFM_KEY INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = cosf.SVC_LINE_KEY INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = cosf.SCTR_KEY INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = cosf.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = cosf.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON cosf.MTH_KEY = d.mth_key AND d.graph_nm = 'COS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> COSF.OVRL_COS = 'G' AND COSF.COS_IN_SCOPE_FLG = 1 ORDER BY {orderColumn} {orderDirection} FETCH first 100 ROWS only  ), yellowlist AS ( SELECT 'Yellow' AS status, '#FDD600' AS color, 2 AS sortorder, con.cntrct_num AS con, Coalesce(cosf.TOT_TCV_AMT, 0) AS tcv, RTRIM(cust.cust_nm) AS clnt_nm, con.PM_NOTES_ID AS pm_id, coalesce(varchar(date(con.sgnd_dt)),'') AS signed_dt, coalesce(varchar(date(cosf.cmpltd_dt)),'') AS assessment_dt FROM phd.COS_FACT cosf INNER JOIN phd.contract_dim con ON cosf.cntrct_key = con.cntrct_key INNER JOIN phd.customer_dim cust ON cosf.CUST_KEY = cust.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = cosf.GEO_LVL1_KEY INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = cosf.GEO_LVL2_KEY INNER JOIN phd.country_dim ctry ON ctry.ctry_key = cosf.CTRY_KEY INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = cosf.GRTH_PLFM_KEY INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = cosf.SVC_LINE_KEY INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = cosf.SCTR_KEY INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = cosf.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = cosf.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON cosf.MTH_KEY = d.mth_key AND d.graph_nm = 'COS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> COSF.OVRL_COS = 'Y' AND COSF.COS_IN_SCOPE_FLG = 1 ORDER BY {orderColumn} {orderDirection} FETCH first 100 ROWS only  ), orangelist AS ( SELECT 'Orange' AS status, '#FF7832' AS color, 3 AS sortorder, con.cntrct_num AS con, Coalesce(cosf.TOT_TCV_AMT, 0) AS tcv, RTRIM(cust.cust_nm) AS clnt_nm, con.PM_NOTES_ID AS pm_id, coalesce(varchar(date(con.sgnd_dt)),'') AS signed_dt, coalesce(varchar(date(cosf.cmpltd_dt)),'') AS assessment_dt FROM phd.COS_FACT cosf INNER JOIN phd.contract_dim con ON cosf.cntrct_key = con.cntrct_key INNER JOIN phd.customer_dim cust ON cosf.CUST_KEY = cust.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = cosf.GEO_LVL1_KEY INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = cosf.GEO_LVL2_KEY INNER JOIN phd.country_dim ctry ON ctry.ctry_key = cosf.CTRY_KEY INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = cosf.GRTH_PLFM_KEY INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = cosf.SVC_LINE_KEY INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = cosf.SCTR_KEY INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = cosf.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = cosf.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON cosf.MTH_KEY = d.mth_key AND d.graph_nm = 'COS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> COSF.OVRL_COS = 'A' AND COSF.COS_IN_SCOPE_FLG = 1 ORDER BY {orderColumn} {orderDirection} FETCH first 100 ROWS only  ), redlist AS ( SELECT 'Red' AS status, '#E71D32' AS color, 4 AS sortorder, con.cntrct_num AS con, Coalesce(cosf.TOT_TCV_AMT, 0) AS tcv, RTRIM(cust.cust_nm) AS clnt_nm, con.PM_NOTES_ID AS pm_id, coalesce(varchar(date(con.sgnd_dt)),'') AS signed_dt, coalesce(varchar(date(cosf.cmpltd_dt)),'') AS assessment_dt FROM phd.COS_FACT cosf INNER JOIN phd.contract_dim con ON cosf.cntrct_key = con.cntrct_key INNER JOIN phd.customer_dim cust ON cosf.CUST_KEY = cust.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = cosf.GEO_LVL1_KEY INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = cosf.GEO_LVL2_KEY INNER JOIN phd.country_dim ctry ON ctry.ctry_key = cosf.CTRY_KEY INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = cosf.GRTH_PLFM_KEY INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = cosf.SVC_LINE_KEY INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = cosf.SCTR_KEY INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = cosf.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = cosf.practice_key and prac.include = 1 INNER JOIN phd.acct_drop d ON cosf.MTH_KEY = d.mth_key AND d.graph_nm = 'COS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> COSF.OVRL_COS = 'R' AND COSF.COS_IN_SCOPE_FLG = 1 ORDER BY {orderColumn} {orderDirection} FETCH first 100 ROWS only  ) SELECT * FROM greenlist UNION ALL SELECT * FROM yellowlist UNION ALL SELECT * FROM orangelist UNION ALL SELECT * FROM redlist ORDER BY sortorder;\",\"description\":\"CoS CPM, performance contract details\"}",

      "t2CompGDPRPopupContract": "{\"name\":\"t2CompGDPRPopupContract\",\"sqlTemplate\":\"SELECT RTRIM(cd.cntrct_desc) AS cntrct_name , RTRIM(cntrct_num) AS cntrct_num , RTRIM(cu.cust_nm) AS client_nm , CASE WHEN cd.prtnr_nm != '' THEN SUBSTR(cd.prtnr_nm, 1, locate('/', cd.prtnr_nm) - 1) ELSE 'N/A' END AS partner_nm , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(ctry.ctry_nm) AS country , RTRIM(gp.grth_plfm_desc) AS growth_platform , RTRIM(svc_line.svc_line_nm) AS service_line , RTRIM(pd.PRACTICE_NM) AS practise , RTRIM(indstry.INDSTRY_CMR_NM) AS industry , RTRIM(s.sctr_gb_nm) AS sector , DATE(cd.sgnd_dt) AS contract_sign_date , DATE(cd.end_dt) AS contract_end_dt , CASE WHEN cd.pe_notes_id != '' THEN SUBSTR(cd.pe_notes_id, 1, locate('/', cd.pe_notes_id) - 1) ELSE 'N/A' END AS brand_pe_nm , CASE WHEN cd.PRTNR_NM != '' THEN SUBSTR(cd.PRTNR_NM, 1, locate('/', cd.pe_notes_id) - 1) ELSE 'N/A' END AS partner_name , COALESCE(f.tcv, 0.0) AS tcv , COALESCE(f.pc_gp_amt, 0.0) AS pc_gp , f.pc_gp_pct AS pc_gp_pct , COALESCE(f.aprvd_gp_amt, 0.0) AS aprvd_gp_amt , f.aprvd_gp_pct AS aprvd_gp_pct , INITCAP(f.gdpr_ovrl) AS gdpr_ovrl , INITCAP( CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END) AS gdpr_clsfc , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.dpa_stat) END AS dpa_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.ex_stat) END AS exhib_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.tom_impl) END AS toms_impl , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sl_stat) END AS sl_revw_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.eumc_stat) END AS eumc_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sub_stat) END AS subprcs_stat , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cls_in_cnrct) END AS clause_in_cntr , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.lgl_lttr_sgnd) END AS lgl_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cnfrm_lttr_sgnd) END AS conf_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.one_way_lttr_sgnd) END AS one_way_letter_snt , cd.cntrct_key , cd.phd_url AS ippf_url FROM phd.gdpr_fact f LEFT JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key LEFT JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key LEFT JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key LEFT JOIN phd.CONTRACT_DIM cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.country_dim ctry ON f.ctry_key = ctry.ctry_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key LEFT JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key LEFT JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' WHERE cd.cntrct_num = '{cntrctNum}' FETCH FIRST ROW ONLY ; \",\"description\":\"CoS CPM compliance contract trend\"}",
      "t2CompNonGDPRCountContract": "{\"name\":\"t2CompNonGDPRCountContract\",\"sqlTemplate\":\"WITH gdpr_data AS (SELECT {busAttr} AS category , COALESCE(SUM( CASE '{metric}' WHEN 'NON_GDPR_IMPCT' THEN f.not_impct_by_gdpr WHEN 'STAND_LANG' THEN CASE '{type}' WHEN 'POSITIVE' THEN f.lang WHEN 'NEGATIVE' THEN f.no_lang END END), 0) AS cnt , COALESCE(CAST(SUM( CASE '{metric}' WHEN 'NON_GDPR_IMPCT' THEN f.not_impct_by_gdpr WHEN 'STAND_LANG' THEN CASE '{type}' WHEN 'POSITIVE' THEN f.lang WHEN 'NEGATIVE' THEN f.no_lang END END) AS FLOAT) / NULLIF(SUM( CASE '{metric}' WHEN 'STAND_LANG' THEN f.not_impct_by_gdpr END), 0), 0) AS pct , COALESCE(DECIMAL(SUM(f.LANG), 31, 9) / NULLIF(SUM(f.NOT_IMPCT_BY_GDPR), 0), 0) AS LANG FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' {filter} GROUP BY {busAttr} ) , gdpr_msac AS (SELECT category , cnt , pct , CASE WHEN LANG < 0.90 THEN 'unsat' WHEN 0.90 <= LANG AND LANG < 0.95 THEN 'marg' WHEN LANG >= 0.95 THEN 'sat' END AS NOT_IMPACTED_STAT FROM gdpr_data ) SELECT f.category , ad.data_load_desc , ad.curr_acct_mo , ad.curr_acct_yr , f.cnt , f.pct , f.NOT_IMPACTED_STAT AS MSAC_RATING , CASE WHEN ad1.current IS NOT NULL THEN 0 ELSE 1 END AS is_MSAC_visible FROM gdpr_msac f INNER JOIN phd.acct_drop ad ON ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' LEFT JOIN phd.acct_drop ad1 ON ad1.mth_key = ad.mth_key AND ad1.graph_nm = 'GDP_L2_GR1' AND ad1.current = 1 UNION ALL SELECT 'Worldwide' AS category , MIN(ad.data_load_desc) AS data_load_desc , MIN(ad.curr_acct_mo) AS curr_acct_mo , MIN(ad.curr_acct_yr) AS curr_acct_yr , COALESCE(SUM( CASE '{metric}' WHEN 'NON_GDPR_IMPCT' THEN f.not_impct_by_gdpr WHEN 'STAND_LANG' THEN CASE '{type}' WHEN 'POSITIVE' THEN f.lang WHEN 'NEGATIVE' THEN f.no_lang END END), 0) AS cnt , COALESCE(CAST(SUM( CASE '{metric}' WHEN 'NON_GDPR_IMPCT' THEN f.not_impct_by_gdpr WHEN 'STAND_LANG' THEN CASE '{type}' WHEN 'POSITIVE' THEN f.lang WHEN 'NEGATIVE' THEN f.no_lang END END) AS FLOAT) / NULLIF(SUM( CASE '{metric}' WHEN 'STAND_LANG' THEN f.not_impct_by_gdpr END), 0), 0) AS pct , '-' AS MSAC_RATING , 0 AS is_MSAC_visible FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' ORDER BY category ;\",\"description\":\"Non GDPR Impacted contracts count and percent\"}",
      "t2CompNonGDPRDetailsContract": "{\"name\":\"t2CompNonGDPRDetailsContract\",\"sqlTemplate\":\"SELECT RTRIM(cd.cntrct_num) AS cntrct_num , COALESCE(RTRIM(cust.cust_nm), 'N/A') AS clnt_nm , DATE(cd.strtd_dt) AS strt_dt , DATE(cd.wbs_end_dt) AS end_dt , cd.pe_notes_id AS brand_pe , f.gdpr_ovrl AS gdpr_actn_ovrl , CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS most_rcnt_gdpr_clsfc , CASE f.cm_gdpr_clr WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.cm_gdpr_clr END AS curr_mth_CLSFC , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(ctry.ctry_nm) AS country , RTRIM(grth_plfm.grth_plfm_desc) AS growth_platform , RTRIM(svc_line.svc_line_nm) AS service_line , RTRIM(pd.practice_nm) AS practice , indstry.INDSTRY_CMR_NM AS indsr_snd , sctr.sctr_gb_nm AS sector_over , cd.CNTRCT_DESC AS cntrct_name , DATE(cd.sgnd_dt) AS cntrct_sign_date , DATE(cd.END_DT) AS cntrct_end_dt , CASE WHEN cd.PRTNR_NM != '' THEN SUBSTR(cd.PRTNR_NM, 1, locate('/', cd.pe_notes_id) - 1) ELSE 'N/A' END AS partner_name , f.TCV AS tcv , f.PC_GP_PCT AS pc_gp_pct , f.PC_GP_AMT AS PC_GP_AMT , f.APRVD_GP_AMT AS AP_GP_AMT , f.APRVD_GP_PCT AS AP_GP_PCT , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.dpa_stat) END AS dpa_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.ex_stat) END AS exhib_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.tom_impl) END AS toms_impl , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sl_stat) END AS sl_revw_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.eumc_stat) END AS eumc_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sub_stat) END AS subprcs_stat , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cls_in_cnrct) END AS clause_in_cntr , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.lgl_lttr_sgnd) END AS lgl_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cnfrm_lttr_sgnd) END AS conf_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.one_way_lttr_sgnd) END AS one_way_letter_snt FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key != 0 INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.customer_dim cust ON f.cust_key = cust.cust_key {filter} <filter?AND:WHERE> CASE '{metric}' WHEN 'NON_GDPR_IMPCT' THEN f.not_impct_by_gdpr WHEN 'STAND_LANG' THEN CASE '{type}' WHEN 'POSITIVE' THEN f.lang WHEN 'NEGATIVE' THEN f.no_lang END END = 1 FETCH FIRST 10000000 ROWS ONLY;\",\"description\":\"Non GDPR Impacted contracts detail\"}",
      "t2CompNonGDPRExportContract": "{\"name\":\"t2CompNonGDPRExportContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc , RTRIM(cd.cntrct_num) AS wbs_id , cd.phd_url AS ippf_url , bd.BRAND_SHORT_NM AS brand , RTRIM(ctry.ctry_nm) AS country , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(svc_line.svc_line_nm) AS service_line , sgd.sctr_gb_cd AS sector_over_cd , sgd.sctr_gb_nm AS sector_over , indstry.indstry_cmr_nm AS indsr_snd , cu.lgcy_cust_num AS cust_numb , RTRIM(cu.cust_nm) AS cust_nm , RTRIM(pd.practice_nm) AS practice , RTRIM(cd.cntrct_desc) AS wbs_desc , gbgd.glbl_buy_grp_nm AS glb_buying_grp , cd.sys_cntrct_num AS sys_cntrct_num , cd.lgl_cntrct_num AS leg_cntrct_num , atd.active_typ_desc AS ippf_status , 'Active' AS cntrct_stat_cd , DATE(cd.strtd_dt) AS wbs_strt_date , DATE(cd.end_dt) AS wbs_end_dt , DATE(cd.sgnd_dt) AS cntrct_sign_date , DATE(cd.end_dt) AS cntrct_end_dt , RTRIM(grth_plfm.grth_plfm_desc) AS growth_platform , f.tcv AS tcv , f.aprvd_gp_amt AS pln_gp_pct , f.aprvd_gp_pct AS pln_gp_amt , RTRIM(cd.opptnty_num) AS opp_num , pid.proc_stat_cd AS proc_ind , 'N/A' AS extmp_gdpr , 'In scope for GDPR' AS in_scp_gdpr , CASE f.cm_gdpr_clr WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.cm_gdpr_clr END AS gdpr_clsf_cm , CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS mst_rec_gdpr_clsf , f.cls_in_cnrct AS a_clas_in_cntrct , f.lgl_lttr_sgnd AS a_lgl_letter_sgn , f.cnfrm_lttr_sgnd AS a_conf_letter_sgn , f.one_way_lttr_sgnd AS a_one_way_letter_snt , NULL AS a_no_pi_acs_stat , INITCAP(f.sl_stat) AS a_sl_revw_stat , INITCAP(f.gdpr_ovrl) AS gdpr_act_over_rslt , cd.pm_notes_id AS pm_notes_id , cd.pe_notes_id AS pe_notes_id FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key != 0 INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key /*LEFT JOIN phd.sector_lcl_dim sld ON cu.sctr_lcl_key = sld.sctr_lcl_key*/ LEFT JOIN phd.global_buying_group_dim gbgd ON cu.glbl_buy_grp_key = gbgd.glbl_buy_grp_key LEFT JOIN phd.active_type_dim atd ON cd.active_typ_key = atd.active_typ_key LEFT JOIN phd.dw_brand_dim bd ON cd.dw_brand_key = bd.dw_brand_key LEFT JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> WHERE CASE '{metric}' WHEN 'NON_GDPR_IMPCT' THEN f.not_impct_by_gdpr WHEN 'STAND_LANG' THEN CASE '{type}' WHEN 'POSITIVE' THEN f.lang WHEN 'NEGATIVE' THEN f.no_lang END END = 1 ORDER BY cd.cntrct_num ASC ;\",\"description\":\"Non GDPR Impacted contracts export\"}",
      "t2CompNonGDPRTrendContract": "{\"name\":\"t2CompNonGDPRTrendContract\",\"sqlTemplate\":\"WITH gdpr_positive AS ( SELECT f.mth_key, SUM(f.not_impct_by_gdpr ) AS not_impct_by_gdpr, SUM(f.no_lang ) AS no_stnd_lang , COALESCE(CAST(SUM(f.no_lang ) AS FLOAT) / NULLIF(SUM(f.not_impct_by_gdpr), 0), 0) AS no_stnd_lang_pct, COALESCE(1-(DECIMAL(SUM(f.NO_LANG), 31, 9) / NULLIF(SUM(f.NOT_IMPCT_BY_GDPR), 0)), 0) AS LANG FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.current != 1 {filter} GROUP BY f.mth_key FETCH FIRST 13 rows only ) , gdpr_msac AS ( SELECT mth_key, not_impct_by_gdpr, no_stnd_lang , no_stnd_lang_pct, CASE WHEN LANG < 0.90 THEN 'unsat' WHEN 0.90 <= LANG AND LANG < 0.95 THEN 'marg' WHEN LANG >= 0.95 THEN 'sat' END AS NOT_IMPACTED_STAT FROM gdpr_positive ) SELECT ad.curr_acct_mo, ad.curr_acct_yr, ad.DATA_LOAD_DATE, ad.yr_mo_key, not_impct_by_gdpr, no_stnd_lang , no_stnd_lang_pct, NOT_IMPACTED_STAT AS MSAC_RATING , CASE WHEN ad1.current IS NOT NULL THEN 0 ELSE 1 END as is_MSAC_visible FROM gdpr_msac f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.current != 1 LEFT JOIN phd.acct_drop ad1 ON ad1.mth_key =ad.mth_key AND ad1.graph_nm = 'GDP_L2_GR1' AND ad1.current = 1 ORDER BY f.mth_key ASC; \",\"description\":\"Non GDPR Impacted contracts trend\"}",

      "t2CompGDPRImpCountContract": "{\"name\":\"t2CompGDPRImpCountContract\",\"sqlTemplate\":\"WITH GDPR_data AS (SELECT {busAttr} AS category , COALESCE(SUM( CASE '{type}' WHEN 'NEGATIVE' THEN CASE '{metric}' WHEN 'DPA' THEN f.dpa_not_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_not_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_not_sgnd WHEN 'TOMS' THEN f.tom_not_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.full_gdpr WHEN 'EUMC' THEN f.eumc_not_compl WHEN 'SUBPROC' THEN f.sub_not_compl ELSE NULL END WHEN 'POSITIVE' THEN CASE '{metric}' WHEN 'IMPCT_BY_GDPR' THEN f.impct_by_gdpr WHEN 'DPA' THEN f.dpa_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_sgnd WHEN 'TOMS' THEN f.tom_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.FULL_GDPR_COMPL WHEN 'EUMC' THEN f.eumc_compl WHEN 'SUBPROC' THEN f.sub_compl ELSE NULL END ELSE NULL END), 0) AS cnt , COALESCE(CAST(SUM( CASE '{type}' WHEN 'NEGATIVE' THEN CASE '{metric}' WHEN 'DPA' THEN f.dpa_not_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_not_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_not_sgnd WHEN 'TOMS' THEN f.tom_not_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.full_gdpr WHEN 'EUMC' THEN f.eumc_not_compl WHEN 'SUBPROC' THEN f.sub_not_compl ELSE NULL END WHEN 'POSITIVE' THEN CASE '{metric}' WHEN 'IMPCT_BY_GDPR' THEN f.impct_by_gdpr WHEN 'DPA' THEN f.dpa_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_sgnd WHEN 'TOMS' THEN f.tom_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.FULL_GDPR_COMPL WHEN 'EUMC' THEN f.eumc_compl WHEN 'SUBPROC' THEN f.sub_compl ELSE NULL END ELSE NULL END) AS FLOAT) / NULLIF(SUM( CASE '{metric}' WHEN 'EUMC' THEN f.eumc_appl WHEN 'SUBPROC' THEN f.sub_appl ELSE f.impct_by_gdpr END), 0), 0) AS pct , COALESCE(DECIMAL(SUM(f.DPA_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0), 0) AS DPA_SGND , COALESCE(DECIMAL(SUM(f.EXHBT_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0), 0) AS EXHBT_SGND , COALESCE(DECIMAL(SUM(f.SL_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0), 0) AS SL_SGND , COALESCE(DECIMAL(SUM(f.TOM_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0), 0) AS TOM_SGND , COALESCE(DECIMAL(SUM(f.FULL_GDPR_COMPL), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0), 0) AS FULL_GDPR , COALESCE(DECIMAL(SUM(f.EUMC_COMPL), 31, 9) / NULLIF(SUM(f.EUMC_APPL), 0), 0) AS EUMC_COMPL , COALESCE(DECIMAL(SUM(f.SUB_COMPL), 31, 9) / NULLIF(SUM(f.SUB_APPL), 0), 0) AS SUB_COMPL , SUM(f.IMPCT_BY_GDPR) AS IMPCT_BY_GDPR FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' {filter} GROUP BY {busAttr} ) , gdpr_msac AS (SELECT category , cnt , pct , CASE WHEN DPA_SGND < 0.95 THEN 'U' WHEN 0.95 <= DPA_SGND AND DPA_SGND < 0.98 THEN 'M' WHEN DPA_SGND >= 0.98 THEN 'S' END AS DPA_SGND_STAT , CASE WHEN EXHBT_SGND < 0.95 THEN 'U' WHEN 0.95 <= EXHBT_SGND AND EXHBT_SGND < 0.98 THEN 'M' WHEN EXHBT_SGND >= 0.98 THEN 'S' END AS EXHBT_SGND_STAT , CASE WHEN TOM_SGND < 0.90 THEN 'U' WHEN 0.90 <= TOM_SGND AND TOM_SGND < 0.95 THEN 'M' WHEN TOM_SGND >= 0.95 THEN 'S' END AS TOM_SGND_STAT , CASE WHEN SL_SGND < 0.90 THEN 'U' WHEN 0.90 <= SL_SGND AND SL_SGND < 0.95 THEN 'M' WHEN SL_SGND >= 0.95 THEN 'S' END AS SL_SGND_STAT , CASE WHEN EUMC_COMPL < 0.95 THEN 'U' WHEN 0.95 <= EUMC_COMPL AND EUMC_COMPL < 0.98 THEN 'M' WHEN EUMC_COMPL >= 0.98 THEN 'S' END AS EUMC_COMPL_STAT , CASE WHEN SUB_COMPL < 0.90 THEN 'U' WHEN 0.90 <= SUB_COMPL AND SUB_COMPL < 0.95 THEN 'M' WHEN SUB_COMPL >= 0.95 THEN 'S' END AS SUB_COMPL_STAT , CASE WHEN FULL_GDPR < 0.85 THEN 'U' WHEN 0.85 <= FULL_GDPR AND FULL_GDPR < 0.95 THEN 'M' WHEN FULL_GDPR >= 0.95 THEN 'S' END AS FULL_GDPR_STAT , IMPCT_BY_GDPR FROM GDPR_data ) , final_msac AS (SELECT category , cnt , pct , CASE WHEN IMPCT_BY_GDPR = 0 THEN '-' WHEN DPA_SGND_STAT = 'S' AND EXHBT_SGND_STAT = 'S' AND TOM_SGND_STAT = 'S' AND SL_SGND_STAT = 'S' AND EUMC_COMPL_STAT = 'S' AND SUB_COMPL_STAT = 'S' AND FULL_GDPR_STAT = 'S' THEN 'sat' WHEN DPA_SGND_STAT = 'U' OR EXHBT_SGND_STAT = 'U' OR EUMC_COMPL_STAT = 'U' THEN 'unsat' WHEN(DPA_SGND_STAT = 'M' OR EXHBT_SGND_STAT = 'M' OR EUMC_COMPL_STAT = 'M') AND TOM_SGND_STAT = 'U' AND SUB_COMPL_STAT = 'U' THEN 'unsat' ELSE 'marg' END AS GDPR_IMP_STAT FROM gdpr_msac ) SELECT f.category , ad.data_load_desc , ad.curr_acct_mo , ad.curr_acct_yr , f.cnt , f.pct , f.GDPR_IMP_STAT AS MSAC_RATING , CASE WHEN ad1.current IS NOT NULL THEN 0 ELSE 1 END AS is_MSAC_visible FROM final_msac f INNER JOIN phd.acct_drop ad ON ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' LEFT JOIN phd.acct_drop ad1 ON ad1.mth_key = ad.mth_key AND ad1.graph_nm = 'GDP_L2_GR1' AND ad1.current = 1 UNION ALL SELECT 'Worldwide' AS category , MIN(ad.data_load_desc) AS data_load_desc , MIN(ad.curr_acct_mo) AS curr_acct_mo , MIN(ad.curr_acct_yr) AS curr_acct_yr , COALESCE(SUM( CASE '{type}' WHEN 'NEGATIVE' THEN CASE '{metric}' WHEN 'DPA' THEN f.dpa_not_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_not_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_not_sgnd WHEN 'TOMS' THEN f.tom_not_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.full_gdpr WHEN 'EUMC' THEN f.eumc_not_compl WHEN 'SUBPROC' THEN f.sub_not_compl ELSE NULL END WHEN 'POSITIVE' THEN CASE '{metric}' WHEN 'IMPCT_BY_GDPR' THEN f.impct_by_gdpr WHEN 'DPA' THEN f.dpa_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_sgnd WHEN 'TOMS' THEN f.tom_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.FULL_GDPR_COMPL WHEN 'EUMC' THEN f.eumc_compl WHEN 'SUBPROC' THEN f.sub_compl ELSE NULL END ELSE NULL END), 0) AS cnt , COALESCE(CAST(SUM( CASE '{type}' WHEN 'NEGATIVE' THEN CASE '{metric}' WHEN 'DPA' THEN f.dpa_not_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_not_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_not_sgnd WHEN 'TOMS' THEN f.tom_not_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.full_gdpr WHEN 'EUMC' THEN f.eumc_not_compl WHEN 'SUBPROC' THEN f.sub_not_compl ELSE NULL END WHEN 'POSITIVE' THEN CASE '{metric}' WHEN 'IMPCT_BY_GDPR' THEN f.impct_by_gdpr WHEN 'DPA' THEN f.dpa_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_sgnd WHEN 'TOMS' THEN f.tom_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.FULL_GDPR_COMPL WHEN 'EUMC' THEN f.eumc_compl WHEN 'SUBPROC' THEN f.sub_compl ELSE NULL END ELSE NULL END) AS FLOAT) / NULLIF(SUM( CASE '{metric}' WHEN 'EUMC' THEN f.eumc_appl WHEN 'SUBPROC' THEN f.sub_appl ELSE f.impct_by_gdpr END), 0), 0) AS pct , '-' AS MSAC_RATING , 0 AS is_MSAC_visible FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' ORDER BY category ;\",\"description\":\"GDPR Impacted contracts count and percent\"}",
      "t2CompGDPRImpDetailsContract": "{\"name\":\"t2CompGDPRImpDetailsContract\",\"sqlTemplate\":\"SELECT RTRIM(cd.cntrct_num) AS cntrct_num , COALESCE(RTRIM(cust.cust_nm), 'N/A') AS clnt_nm , DATE(cd.strtd_dt) AS strt_dt , DATE(cd.WBS_END_DT) AS end_dt , cd.pe_notes_id AS brand_pe , f.gdpr_ovrl AS gdpr_actn_ovrl , CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS most_rcnt_gdpr_clsfc , CASE f.cm_gdpr_clr WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.cm_gdpr_clr END AS curr_mth_CLSFC , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(ctry.ctry_nm) AS country , RTRIM(grth_plfm.grth_plfm_desc) AS growth_platform , RTRIM(svc_line.svc_line_nm) AS service_line , RTRIM(pd.practice_nm) AS practice , indstry.INDSTRY_CMR_NM AS indsr_snd , sctr.sctr_gb_nm AS sector_over , cd.CNTRCT_DESC AS cntrct_name , DATE(cd.sgnd_dt) AS cntrct_sign_date , DATE(cd.END_DT) AS cntrct_end_dt , CASE WHEN cd.PRTNR_NM != '' THEN SUBSTR(cd.PRTNR_NM, 1, locate('/', cd.pe_notes_id) - 1) ELSE 'N/A' END AS partner_name , f.TCV AS tcv , f.PC_GP_PCT AS pc_gp_pct , f.PC_GP_AMT AS PC_GP_AMT , f.APRVD_GP_AMT AS AP_GP_AMT , f.APRVD_GP_PCT AS AP_GP_PCT , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.dpa_stat) END AS dpa_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.ex_stat) END AS exhib_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.tom_impl) END AS toms_impl , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sl_stat) END AS sl_revw_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.eumc_stat) END AS eumc_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sub_stat) END AS subprcs_stat , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cls_in_cnrct) END AS clause_in_cntr , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.lgl_lttr_sgnd) END AS lgl_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cnfrm_lttr_sgnd) END AS conf_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.one_way_lttr_sgnd) END AS one_way_letter_snt FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.customer_dim cust ON f.cust_key = cust.cust_key {filter} <filter?AND:WHERE> CASE '{type}' WHEN 'NEGATIVE' THEN CASE '{metric}' WHEN 'DPA' THEN f.dpa_not_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_not_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_not_sgnd WHEN 'TOMS' THEN f.tom_not_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.full_gdpr WHEN 'EUMC' THEN f.eumc_not_compl WHEN 'SUBPROC' THEN f.sub_not_compl ELSE NULL END WHEN 'POSITIVE' THEN CASE '{metric}' WHEN 'IMPCT_BY_GDPR' THEN f.impct_by_gdpr WHEN 'DPA' THEN f.dpa_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_sgnd WHEN 'TOMS' THEN f.tom_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.FULL_GDPR_COMPL WHEN 'EUMC' THEN f.eumc_compl WHEN 'SUBPROC' THEN f.sub_compl ELSE NULL END ELSE NULL END = 1;\",\"description\":\"GDPR Impacted contracts detail\"}",
      "t2CompGDPRImpExportContract": "{\"name\":\"t2CompGDPRImpExportContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc , RTRIM(cd.cntrct_num) AS wbs_id , cd.phd_url AS ippf_url , bd.BRAND_SHORT_NM AS brand , RTRIM(ctry.ctry_nm) AS country , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(svc_line.svc_line_nm) AS service_line , sgd.sctr_gb_cd AS sector_over_cd , sgd.sctr_gb_nm AS sector_over , indstry.indstry_cmr_nm AS indsr_snd , cu.lgcy_cust_num AS cust_numb , RTRIM(cu.cust_nm) AS cust_nm , RTRIM(pd.practice_nm) AS practice , RTRIM(cd.cntrct_desc) AS wbs_desc , gbgd.glbl_buy_grp_nm AS glb_buying_grp , cd.sys_cntrct_num AS sys_cntrct_num , cd.lgl_cntrct_num AS leg_cntrct_num , atd.active_typ_desc AS ippf_status , 'Active' AS cntrct_stat_cd , DATE(cd.strtd_dt) AS wbs_strt_date , DATE(cd.wbs_end_dt) AS wbs_end_dt , DATE(cd.sgnd_dt) AS cntrct_sign_date , DATE(cd.end_dt) AS cntrct_end_dt , RTRIM(grth_plfm.grth_plfm_desc) AS growth_platform , f.tcv AS tcv , f.aprvd_gp_amt AS pln_gp_pct , f.aprvd_gp_pct AS pln_gp_amt , RTRIM(cd.opptnty_num) AS opp_num , pid.proc_stat_cd AS proc_ind , 'N/A' AS extmp_gdpr , 'In scope for GDPR' AS in_scp_gdpr , CASE f.cm_gdpr_clr WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.cm_gdpr_clr END AS gdpr_clsf_cm , CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS mst_rec_gdpr_clsf , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sl_stat) END AS b_sl_revw_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.dpa_stat) END AS b_dpa_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.ex_stat) END AS b_exhib_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.tom_impl) END AS b_toms_impl_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sub_stat) END AS b_subproc_agrmt_stat , CASE f.eumc_appl WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' ELSE 'N/A' END AS b_eumc_applicbl , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.eumc_stat) END AS b_eumc_stat , INITCAP(f.gdpr_ovrl) AS gdpr_act_over_rslt , cd.pm_notes_id AS pm_notes_id , cd.pe_notes_id AS pe_notes_id FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key LEFT JOIN phd.global_buying_group_dim gbgd ON cu.glbl_buy_grp_key = gbgd.glbl_buy_grp_key LEFT JOIN phd.active_type_dim atd ON cd.active_typ_key = atd.active_typ_key LEFT JOIN phd.dw_brand_dim bd ON cd.dw_brand_key = bd.dw_brand_key LEFT JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> CASE '{type}' WHEN 'NEGATIVE' THEN CASE '{metric}' WHEN 'DPA' THEN f.dpa_not_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_not_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_not_sgnd WHEN 'TOMS' THEN f.tom_not_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.full_gdpr WHEN 'EUMC' THEN f.eumc_not_compl WHEN 'SUBPROC' THEN f.sub_not_compl ELSE NULL END WHEN 'POSITIVE' THEN CASE '{metric}' WHEN 'IMPCT_BY_GDPR' THEN f.impct_by_gdpr WHEN 'DPA' THEN f.dpa_sgnd WHEN 'DPA_EXHBT' THEN f.exhbt_sgnd WHEN 'TOMS_SL_REVW' THEN f.sl_sgnd WHEN 'TOMS' THEN f.tom_sgnd WHEN 'FULL_GDPR_RDNS' THEN f.FULL_GDPR_COMPL WHEN 'EUMC' THEN f.eumc_compl WHEN 'SUBPROC' THEN f.sub_compl ELSE NULL END ELSE NULL END = 1 ORDER BY cd.cntrct_num ASC ;\",\"description\":\"GDPR Impacted contracts export\"}",
      "t2CompGDPRImpTrendContract": "{\"name\":\"t2CompGDPRImpTrendContract\",\"sqlTemplate\":\"WITH GDPR_POSITIVE AS ( SELECT f.mth_key, COALESCE(SUM(f.impct_by_gdpr ) , 0) AS gdpr_impct , COALESCE(SUM(f.dpa_not_sgnd ) , 0) AS dpa_not_sgnd , COALESCE(SUM(f.exhbt_not_sgnd) , 0) AS dpa_exhbt_not_sgnd , COALESCE(SUM(f.sl_not_sgnd ) , 0) AS tom_sl_review_not_cmp , COALESCE(SUM(f.tom_not_sgnd ) , 0) AS tom_not_implm , COALESCE(SUM(f.full_gdpr ) , 0) AS full_gdpr_readiness_not_achv , COALESCE(SUM(f.eumc_not_compl) , 0) AS eumc, COALESCE(SUM(f.sub_not_compl ) , 0) AS subproc, COALESCE(CAST(SUM(f.dpa_not_sgnd ) AS FLOAT) / NULLIF( SUM(f.impct_by_gdpr ), 0), 0) AS dpa_not_sgnd_pct , COALESCE(CAST(SUM(f.exhbt_not_sgnd)AS FLOAT) / NULLIF( SUM(f.impct_by_gdpr ), 0), 0) AS dpa_exhbt_not_sgnd_pct , COALESCE(CAST(SUM(f.sl_not_sgnd ) AS FLOAT) / NULLIF( SUM(f.impct_by_gdpr ) , 0), 0) AS tom_sl_review_not_cmp_pct , COALESCE(CAST(SUM(f.tom_not_sgnd ) AS FLOAT) / NULLIF( SUM(f.impct_by_gdpr ), 0), 0) AS tom_not_implm_pct , COALESCE(CAST(SUM(f.full_gdpr ) AS FLOAT) / NULLIF(SUM(f.impct_by_gdpr ) , 0), 0) AS full_gdpr_readiness_not_achv_pct , COALESCE(CAST(SUM(f.eumc_not_compl ) AS FLOAT) / NULLIF( SUM(f.eumc_appl ) , 0), 0) AS eumc_pct , COALESCE(CAST(SUM(f.sub_not_compl ) AS FLOAT) / NULLIF( SUM(f.sub_appl ) , 0), 0) AS subproc_pct, COALESCE(1-(DECIMAL(SUM(f.DPA_NOT_SGND), 31, 9)/ NULLIF(SUM(f.IMPCT_BY_GDPR), 0)), 0) AS DPA_SGND, COALESCE(1-(DECIMAL(SUM(f.EXHBT_NOT_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0)), 0 ) AS EXHBT_SGND, COALESCE(1-(DECIMAL(SUM(f.SL_NOT_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0)), 0) AS SL_SGND, COALESCE(1-(DECIMAL(SUM(f.TOM_NOT_SGND), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0)), 0) AS TOM_SGND, COALESCE(1-(DECIMAL(SUM(f.FULL_GDPR), 31, 9) / NULLIF(SUM(f.IMPCT_BY_GDPR), 0)), 0) AS FULL_GDPR , COALESCE(1-(DECIMAL(SUM(f.EUMC_NOT_COMPL), 31, 9) / NULLIF(SUM(f.EUMC_APPL), 0)), 0) AS EUMC_COMPL, COALESCE(1-(DECIMAL(SUM(f.SUB_NOT_COMPL), 31, 9) / NULLIF(SUM(f.SUB_APPL), 0)), 0) AS SUB_COMPL, SUM(f.IMPCT_BY_GDPR) AS IMPCT_BY_GDPR FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.current != 1 {filter} GROUP BY f.mth_key FETCH FIRST 13 rows only ) , gdpr_msac AS ( SELECT mth_key, gdpr_impct , dpa_not_sgnd , dpa_exhbt_not_sgnd , tom_sl_review_not_cmp , tom_not_implm , full_gdpr_readiness_not_achv , eumc, subproc, dpa_not_sgnd_pct , dpa_exhbt_not_sgnd_pct , tom_sl_review_not_cmp_pct , tom_not_implm_pct , full_gdpr_readiness_not_achv_pct , eumc_pct , subproc_pct, CASE WHEN DPA_SGND < 0.95 THEN 'U' WHEN 0.95 <= DPA_SGND AND DPA_SGND < 0.98 THEN 'M' WHEN DPA_SGND >= 0.98 THEN 'S' END AS DPA_SGND_STAT, CASE WHEN EXHBT_SGND < 0.95 THEN 'U' WHEN 0.95 <= EXHBT_SGND AND EXHBT_SGND < 0.98 THEN 'M' WHEN EXHBT_SGND >= 0.98 THEN 'S' END AS EXHBT_SGND_STAT, CASE WHEN TOM_SGND < 0.90 THEN 'U' WHEN 0.90 <= TOM_SGND AND TOM_SGND < 0.95 THEN 'M' WHEN TOM_SGND >= 0.95 THEN 'S' END AS TOM_SGND_STAT, CASE WHEN SL_SGND < 0.90 THEN 'U' WHEN 0.90 <= SL_SGND AND SL_SGND < 0.95 THEN 'M' WHEN SL_SGND >= 0.95 THEN 'S' END AS SL_SGND_STAT, CASE WHEN EUMC_COMPL < 0.95 THEN 'U' WHEN 0.95 <= EUMC_COMPL AND EUMC_COMPL < 0.98 THEN 'M' WHEN EUMC_COMPL >= 0.98 THEN 'S' END AS EUMC_COMPL_STAT, CASE WHEN SUB_COMPL < 0.90 THEN 'U' WHEN 0.90 <= SUB_COMPL AND SUB_COMPL < 0.95 THEN 'M' WHEN SUB_COMPL >= 0.95 THEN 'S' END AS SUB_COMPL_STAT, CASE WHEN FULL_GDPR < 0.85 THEN 'U' WHEN 0.85 <= FULL_GDPR AND FULL_GDPR < 0.95 THEN 'M' WHEN FULL_GDPR >= 0.95 THEN 'S' END AS FULL_GDPR_STAT, IMPCT_BY_GDPR FROM gdpr_positive ) , final_msac AS ( SELECT mth_key, gdpr_impct , dpa_not_sgnd , dpa_exhbt_not_sgnd , tom_sl_review_not_cmp , tom_not_implm , full_gdpr_readiness_not_achv , eumc, subproc, dpa_not_sgnd_pct , dpa_exhbt_not_sgnd_pct , tom_sl_review_not_cmp_pct , tom_not_implm_pct , full_gdpr_readiness_not_achv_pct , eumc_pct , subproc_pct, CASE WHEN IMPCT_BY_GDPR = 0 THEN '-' WHEN DPA_SGND_STAT = 'S' AND EXHBT_SGND_STAT = 'S' AND TOM_SGND_STAT = 'S' AND SL_SGND_STAT = 'S' AND EUMC_COMPL_STAT = 'S' AND SUB_COMPL_STAT = 'S' AND FULL_GDPR_STAT = 'S' THEN 'sat' WHEN DPA_SGND_STAT = 'U' OR EXHBT_SGND_STAT = 'U' OR EUMC_COMPL_STAT = 'U' THEN 'unsat' WHEN (DPA_SGND_STAT = 'M' OR EXHBT_SGND_STAT = 'M' OR EUMC_COMPL_STAT = 'M' ) AND TOM_SGND_STAT = 'U' AND SUB_COMPL_STAT = 'U' THEN 'unsat' ELSE 'marg' END AS GDPR_IMP_STAT FROM gdpr_msac ) SELECT ad.curr_acct_mo, ad.curr_acct_yr, ad.yr_mo_key, ad.DATA_LOAD_DATE, gdpr_impct , dpa_not_sgnd , dpa_exhbt_not_sgnd , tom_sl_review_not_cmp , tom_not_implm , full_gdpr_readiness_not_achv , eumc, subproc, dpa_not_sgnd_pct , dpa_exhbt_not_sgnd_pct , tom_sl_review_not_cmp_pct , tom_not_implm_pct , full_gdpr_readiness_not_achv_pct , eumc_pct , subproc_pct, GDPR_IMP_STAT AS MSAC_RATING , CASE WHEN ad1.current IS NOT NULL THEN 0 ELSE 1 END as is_MSAC_visible FROM final_msac f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.current != 1 LEFT JOIN phd.acct_drop ad1 ON ad1.mth_key =ad.mth_key AND ad1.graph_nm = 'GDP_L2_GR1' AND ad1.current = 1 ORDER BY f.mth_key ASC; \",\"description\":\"CoS CPM compliance contract trend\"}",

      "t2CompNotAsdGDPRCountContract": "{\"name\":\"t2CompNotAsdGDPRCountContract\",\"sqlTemplate\":\"WITH gdpr_positive AS (SELECT {busAttr} AS category , SUM( CASE '{type}' WHEN 'POSITIVE' THEN f.ASSESSED WHEN 'NEGATIVE' THEN f.not_assessed END) AS cnt , CAST(SUM( CASE '{type}' WHEN 'POSITIVE' THEN f.ASSESSED WHEN 'NEGATIVE' THEN f.not_assessed END) AS FLOAT) / NULLIF(SUM( CASE WHEN pid.proc_stat_cd != 'D' THEN 1 ELSE 0 END), 0) AS pct , COALESCE(DECIMAL(SUM(f.ASSESSED), 31, 9) / NULLIF(SUM(f.IN_SCOPE), 0), 0) AS ASSESSED FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' LEFT JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key {filter} GROUP BY {busAttr} ) , gdpr_msac AS (SELECT category , cnt , pct , CASE WHEN ASSESSED < 0.95 THEN 'unsat' WHEN 0.95 <= ASSESSED AND ASSESSED < 0.98 THEN 'marg' WHEN ASSESSED >= 0.98 THEN 'sat' END AS ASSESSED_STAT FROM gdpr_positive ) SELECT category , ad.data_load_desc , ad.curr_acct_mo , ad.curr_acct_yr , cnt , pct , ASSESSED_STAT AS msac_rating , CASE WHEN ad1.current IS NOT NULL THEN 0 ELSE 1 END AS is_MSAC_visible FROM gdpr_msac f INNER JOIN phd.acct_drop ad ON ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' LEFT JOIN phd.acct_drop ad1 ON ad1.mth_key = ad.mth_key AND ad1.graph_nm = 'GDP_L2_GR1' AND ad1.current = 1 UNION ALL SELECT 'Worldwide' AS category , MIN(ad.data_load_desc) AS data_load_desc , MIN(ad.curr_acct_mo) AS curr_acct_mo , MIN(ad.curr_acct_yr) AS curr_acct_yr , SUM( CASE '{type}' WHEN 'POSITIVE' THEN f.ASSESSED WHEN 'NEGATIVE' THEN f.not_assessed END) AS cnt , CAST(SUM( CASE '{type}' WHEN 'POSITIVE' THEN f.ASSESSED WHEN 'NEGATIVE' THEN f.not_assessed END) AS FLOAT) / NULLIF(SUM( CASE WHEN pid.proc_stat_cd != 'D' THEN 1 ELSE 0 END), 0) AS pct , '-' AS msac_rating , 0 AS is_MSAC_visible FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' LEFT JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key ORDER BY category ;\",\"description\":\"GDPR Impacted contracts count and percent\"}",
      "t2CompNotAsdGDPRDetailsContract": "{\"name\":\"t2CompNotAsdGDPRDetailsContract\",\"sqlTemplate\":\"SELECT RTRIM(cd.cntrct_num) AS cntrct_num , COALESCE(RTRIM(cust.cust_nm), 'N/A') AS clnt_nm , DATE(cd.strtd_dt) AS strt_dt , DATE(cd.end_dt) AS end_dt , cd.pe_notes_id AS brand_pe , f.gdpr_ovrl AS gdpr_actn_ovrl , CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS most_rcnt_gdpr_clsfc , CASE f.cm_gdpr_clr WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.cm_gdpr_clr END AS curr_mth_CLSFC , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(ctry.ctry_nm) AS country , RTRIM(grth_plfm.grth_plfm_desc) AS growth_platform , RTRIM(svc_line.svc_line_nm) AS service_line , RTRIM(pd.practice_nm) AS practice , indstry.INDSTRY_CMR_NM AS indsr_snd , sctr.sctr_gb_nm AS sector_over , cd.CNTRCT_DESC AS cntrct_name , DATE(cd.sgnd_dt) AS cntrct_sign_date , DATE(cd.END_DT) AS cntrct_end_dt , CASE WHEN cd.PRTNR_NM != '' THEN SUBSTR(cd.PRTNR_NM, 1, locate('/', cd.pe_notes_id) - 1) ELSE 'N/A' END AS partner_name , f.TCV AS tcv , f.PC_GP_PCT AS pc_gp_pct , f.PC_GP_AMT AS PC_GP_AMT , f.APRVD_GP_AMT AS AP_GP_AMT , f.APRVD_GP_PCT AS AP_GP_PCT , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.dpa_stat) END AS dpa_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.ex_stat) END AS exhib_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.tom_impl) END AS toms_impl , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sl_stat) END AS sl_revw_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.eumc_stat) END AS eumc_stat , CASE WHEN f.gdpr_clsfc = 'G' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.sub_stat) END AS subprcs_stat , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cls_in_cnrct) END AS clause_in_cntr , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.lgl_lttr_sgnd) END AS lgl_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.cnfrm_lttr_sgnd) END AS conf_letter_sgn , CASE WHEN f.gdpr_clsfc = 'R' OR f.gdpr_ovrl = 'N/A' THEN 'N/A' ELSE INITCAP(f.one_way_lttr_sgnd) END AS one_way_letter_snt FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.customer_dim cust ON f.cust_key = cust.cust_key {filter} <filter?AND:WHERE> CASE '{type}' WHEN 'POSITIVE' THEN f.ASSESSED WHEN 'NEGATIVE' THEN f.not_assessed END = 1 FETCH FIRST 100000000 rows only ;\",\"description\":\"GDPR Impacted contracts detail\"}",
      "t2CompNotAsdGDPRExportContract": "{\"name\":\"t2CompNotAsdGDPRExportContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc , RTRIM(cd.cntrct_num) AS wbs_id , cd.phd_url AS ippf_url , bd.BRAND_SHORT_NM AS brand , RTRIM(ctry.ctry_nm) AS country , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , RTRIM(svc_line.svc_line_nm) AS service_line , sgd.sctr_gb_cd AS sector_over_cd , sgd.sctr_gb_nm AS sector_over , indstry.indstry_cmr_nm AS indsr_snd , cu.lgcy_cust_num AS cust_numb , RTRIM(cu.cust_nm) AS cust_nm , RTRIM(pd.practice_nm) AS practice , RTRIM(cd.cntrct_desc) AS wbs_desc , gbgd.glbl_buy_grp_nm AS glb_buying_grp , cd.sys_cntrct_num AS sys_cntrct_num , cd.lgl_cntrct_num AS leg_cntrct_num , atd.active_typ_desc AS ippf_status , 'Active' AS cntrct_stat_cd , DATE(cd.strtd_dt) AS wbs_strt_date , DATE(cd.wbs_end_dt) AS wbs_end_dt , DATE(cd.sgnd_dt) AS cntrct_sign_date , DATE(cd.end_dt) AS cntrct_end_dt , RTRIM(grth_plfm.grth_plfm_desc) AS growth_platform , f.tcv AS tcv , f.aprvd_gp_amt AS pln_gp_pct , f.aprvd_gp_pct AS pln_gp_amt , RTRIM(cd.opptnty_num) AS opp_num , pid.proc_stat_cd AS proc_ind , 'N/A' AS extmp_gdpr , 'In scope for GDPR' AS in_scp_gdpr , CASE f.cm_gdpr_clr WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.cm_gdpr_clr END AS gdpr_clsf_cm , CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS mst_rec_gdpr_clsf , INITCAP(f.gdpr_ovrl) AS gdpr_act_over_rslt , cd.pm_notes_id AS pm_notes_id , cd.pe_notes_id AS pe_notes_id FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0 , 6 , 21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.contract_dim cd ON f.cntrct_key = cd.cntrct_key LEFT JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key /*LEFT JOIN phd.sector_lcl_dim sld ON cu.sctr_lcl_key = sld.sctr_lcl_key*/ LEFT JOIN phd.global_buying_group_dim gbgd ON cu.glbl_buy_grp_key = gbgd.glbl_buy_grp_key LEFT JOIN phd.active_type_dim atd ON cd.active_typ_key = atd.active_typ_key LEFT JOIN phd.dw_brand_dim bd ON cd.dw_brand_key = bd.dw_brand_key LEFT JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> CASE '{type}' WHEN 'POSITIVE' THEN f.ASSESSED WHEN 'NEGATIVE' THEN f.not_assessed END = 1 ORDER BY cd.cntrct_num ASC ;\",\"description\":\"GDPR Impacted contracts export\"}",
      "t2CompNotAsdGDPRTrendContract": "{\"name\":\"t2CompNotAsdGDPRTrendContract\",\"sqlTemplate\":\"WITH gdpr_positive AS ( SELECT f.mth_key, SUM(f.not_assessed ) AS not_assessed , COALESCE(CAST(SUM(f.not_assessed ) AS FLOAT) / NULLIF(SUM( CASE WHEN pid.proc_stat_cd != 'D' THEN 1 ELSE 0 END), 0), 0) AS not_assessed_pct, COALESCE(1-(DECIMAL(SUM(f.NOT_ASSESSED), 31, 9) / NULLIF(SUM(f.IN_SCOPE), 0)), 0) AS ASSESSED FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key LEFT JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.current != 1 {filter} GROUP BY f.mth_key ) , gdpr_msac AS ( SELECT mth_key, not_assessed , not_assessed_pct, CASE WHEN ASSESSED < 0.95 THEN 'unsat' WHEN 0.95 <= ASSESSED AND ASSESSED < 0.98 THEN 'marg' WHEN ASSESSED >= 0.98 THEN 'sat' END AS ASSESSED_STAT FROM gdpr_positive ) SELECT ad.curr_acct_mo, ad.curr_acct_yr, ad.DATA_LOAD_DATE, ad.yr_mo_key, not_assessed , not_assessed_pct, ASSESSED_STAT AS msac_rating , CASE WHEN ad1.current IS NOT NULL THEN 0 ELSE 1 END as is_MSAC_visible FROM gdpr_msac f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.current != 1 LEFT JOIN phd.acct_drop ad1 ON ad1.mth_key =ad.mth_key AND ad1.graph_nm = 'GDP_L2_GR1' AND ad1.current = 1 ORDER BY f.mth_key ASC; \",\"description\":\"GDPR Impacted contracts trend\"}",

      "t2CompDSCount": "{\"name\":\"t2CompDSCount\",\"sqlTemplate\":\"select rtrim({busAttr}) AS bus_attr, MIN(d.data_load_desc) AS data_load_desc, MIN(ds.target) AS target_pct, {compl} AS compl, SUM(ds.cmplnt_cnt) AS compliant_cnt, SUM(ds.NON_CMPLNT_FLG) AS noncompliant_cnt, COUNT AS combined_cnt, COALESCE(CAST(SUM(ds.cmplnt_cnt) AS FLOAT)/ NULLIF(COUNT, 0), 0) AS comp_delivery_start_perc, COALESCE(CAST(SUM(ds.NON_CMPLNT_FLG) AS FLOAT)/ NULLIF(COUNT, 0), 0) AS noncomp_delivery_start_perc FROM PHD.DELIVERY_START_FACT ds INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = ds.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = ds.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = ds.ctry_key INNER JOIN phd.growth_platform_dim gp ON ds.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON ds.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON ds.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON ds.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON ds.indstry_key = id.indstry_key INNER JOIN phd.acct_drop d ON ds.mth_key = d.mth_key AND d.graph_nm = 'DS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> ds.IN_SCOPE_FLG = {scp} and ds.PERIOD_14D_FLG = {metric} GROUP BY RTRIM({busAttr}) union all select 'Worldwide' as bus_attr, MIN(d.data_load_desc) AS data_load_desc, MIN(ds.target) AS target_pct, {compl} AS compl, SUM(ds.cmplnt_cnt) AS compliant_cnt, SUM(ds.NON_CMPLNT_FLG) AS noncompliant_cnt, COUNT AS combined_cnt, COALESCE(CAST(SUM(ds.cmplnt_cnt) AS FLOAT)/ NULLIF(COUNT, 0), 0) AS comp_delivery_start_perc, COALESCE(CAST(SUM(ds.NON_CMPLNT_FLG) AS FLOAT)/ NULLIF(COUNT, 0), 0) AS noncomp_delivery_start_perc FROM PHD.DELIVERY_START_FACT ds INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = ds.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = ds.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = ds.ctry_key INNER JOIN phd.growth_platform_dim gp ON ds.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON ds.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON ds.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON ds.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON ds.indstry_key = id.indstry_key INNER JOIN phd.acct_drop d ON ds.mth_key = d.mth_key AND d.graph_nm = 'DS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' where ds.IN_SCOPE_FLG = {scp} and ds.PERIOD_14D_FLG = {metric} group by d.data_load_desc order by bus_attr; \",\"description\":\"Delivery Start CPM, compliance contract count and percent\"}",
      "t2CompDSTrend": "{\"name\":\"t2CompDSTrend\",\"sqlTemplate\":\"select MIN(d.yr_mo_key) AS yearmonth, MIN(ds.target) AS target, {compl} AS compl, SUM(ds.cmplnt_cnt) AS compliant_cnt, SUM(ds.NON_CMPLNT_FLG) AS noncompliant_cnt, COUNT AS combined_cnt, COALESCE(CAST(SUM(ds.cmplnt_cnt) AS FLOAT)/ NULLIF(COUNT, 0), 0) AS comp_delivery_start_perc, COALESCE(CAST(SUM(ds.NON_CMPLNT_FLG) AS FLOAT)/ NULLIF(COUNT, 0), 0) AS noncomp_delivery_start_perc FROM PHD.DELIVERY_START_FACT ds INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = ds.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = ds.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = ds.ctry_key INNER JOIN phd.growth_platform_dim gp ON ds.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON ds.svc_line_key = sl.svc_line_key AND sl.in_scope = 1 INNER JOIN phd.practice_dim pd ON ds.practice_key = pd.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim s ON ds.sctr_key = s.sctr_gb_key INNER JOIN phd.industry_dim id ON ds.indstry_key = id.indstry_key INNER JOIN phd.acct_drop d ON ds.mth_key = d.mth_key AND d.graph_nm = 'DS_L2_GR1' AND d.current != 1 {filter} <filter?AND:WHERE> ds.IN_SCOPE_FLG = {scp} GROUP BY ds.mth_key ORDER BY ds.mth_key; \",\"description\":\"Delivery Start CPM compliance contract trend\"}",
      "t2CompDSDetails": "{\"name\":\"t2CompDSDetails\",\"sqlTemplate\":\"select ctd.cntrct_num AS Contract, '{compl}' AS compl, '{metric}' as metric, RTRIM(csd.cust_nm) AS Client_Name, ds.tot_tcv_amt AS TCV, case when ctd.pm_notes_id != '' then substr(ctd.pm_notes_id, 1, locate('/', ctd.pm_notes_id)-1) else 'N/A' end as PM_Name, apss.APRV_STAT_NM AS PM_Submission_Status, aps.APRV_STAT_NM AS PM_Approved_Status, ds.DLVRY_STRT_DT AS Delivery_StartDate, DATE(ctd.strtd_dt) AS WBS_Start_Date, DATE(ctd.end_dt) AS WBS_End_Date, ds.DS_OVERDUE_DAYS AS Overdue_Days, ds.NON_CMPLNT_FLG AS NonComplBool, ds.cmplnt_cnt, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, grth_plfm.grth_plfm_desc AS Growth_Platform, TRIM(svc_line.svc_line_nm) AS service_line, TRIM(prac.practice_nm) AS Practice, ds.INDSTRY_SD_NM AS IPPF_Industry_SD, ds.LCL_INDSTRY_NM as IPPF_Industry_Local, ds.SCTR_BRAND_NM  as ippf_sector_brand, ds.SCTR_SD_NM as ippf_sector_sd, sctr.sctr_gb_nm AS IPPF_SECTOR_GB, sld.SCTR_LCL_NM AS ippf_sector_local, ACTI.active_typ_desc AS CNTRCT_STATUS, DATE(ctd.sgnd_dt) AS CNTRCT_SIGN_DT, DATE(ctd.END_DT ) AS CNTRCT_END_DT, ds.PRCSS_IND as PROCESS_IND, case when ctd.pm_notes_id != '' then substr(ctd.pm_notes_id, 1, locate('/', ctd.pm_notes_id)-1) else 'N/A' end as brand_pm, case when ctd.PE_NOTES_ID != '' then substr(ctd.PE_NOTES_ID, 1, locate('/', ctd.PE_NOTES_ID)-1) else 'N/A' end as brand_pe, case when ctd.DE_NOTES_ID != '' then substr(ctd.DE_NOTES_ID, 1, locate('/', ctd.DE_NOTES_ID)-1) else 'N/A' end as brand_de, CASE ctd.DMS_STAT_IN_SCOPE_FLG WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' ELSE '-' END AS DMS_SCOPE, ctd.CNTRCT_DESC AS WBS_SHORT_DESC, TRIM(ACTI.active_typ_cd) AS CNTRCT_STATUS_CD, ds.DEL_START_PROC_COMPL as DEL_START_PROC_COMPL, ApprovalStatusS.APRV_STAT_NM AS DEL_START_STATUS, DS.SUBMTR_NOTES_ID AS DEL_START_SUB, DS.APRVR_NOTES_ID AS DEL_START_APPR, DS.PM_COMNT AS PM_COMMENTS, DS.APP_COMNT AS PE_COMMENTS, case when ctd.DE_NOTES_ID != '' then substr(ctd.DE_NOTES_ID, 1, locate('/', ctd.DE_NOTES_ID)-1) else 'N/A' end as DEL_EXC, ctd.SYS_CNTRCT_NUM AS SYS_CNTRCT_NBR, ds.DEL_START_OVER_CAT as DEL_START_OVER_CAT, TRIM(csd.LGCY_CUST_NUM) AS IPPF_CUST_NBR, CASE ctd.CPM_RQRD_FLG WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' ELSE '-' END AS CPM_REQ, ds.APRVD_GP_PCT AS PLAN_GP_PCT, date(ds.RCNT_CLM_DT) as RECENT_CLAIM_DT, date(ds.DEL_START_TGT_COMPL_DT) as DEL_START_TGT_COMPL_DT FROM PHD.DELIVERY_START_FACT ds INNER JOIN phd.customer_dim csd ON ds.cust_key = csd.cust_key INNER JOIN phd.contract_dim ctd ON ds.cntrct_key = ctd.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = ds.geo_lvl1_key and geo1.geo_lvl1_key not in (0,6,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = ds.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = ds.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = ds.grth_plfm_key AND grth_plfm.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = ds.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = ds.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = ds.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = ds.practice_key AND prac.include = 1 LEFT JOIN phd.sector_lcl_dim sld ON csd.sctr_lcl_key = sld.sctr_lcl_key INNER JOIN PHD.active_type_dim ACTI ON ctd.ACTIVE_TYP_KEY = ACTI.ACTIVE_TYP_KEY INNER JOIN phd.approval_status_dim aps ON ds.app_key = aps.id INNER JOIN phd.approval_status_dim apss ON ds.sub_key = apss.id INNER JOIN PHD.approval_status_dim ApprovalStatusS ON DS.SUB_KEY = ApprovalStatusS.ID INNER JOIN phd.acct_drop d ON ds.mth_key = d.mth_key AND d.graph_nm = 'DS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> ds.IN_SCOPE_FLG = {scp} and ds.NON_CMPLNT_FLG {operator} {compl} and ds.PERIOD_14D_FLG = {metric} ORDER BY ctd.CNTRCT_NUM FETCH FIRST 200 ROWS ONLY ;\",\"description\":\"Delivery Start CPM compliance contract details\"}",
      "t2CompDSPopup": "{\"name\":\"t2CompDSPopup\",\"sqlTemplate\":\"select ctd.cntrct_num AS Contract, ctd.CNTRCT_KEY, RTRIM(csd.cust_nm) AS Client_Name, ds.tot_tcv_amt AS TCV, DATE(ctd.SGND_DT) AS Contract_Date, DATE(ds.DLVRY_STRT_DT) AS Delivery_StartDate, DATE(ctd.strtd_dt) AS WBS_Start_Date, CASE ds.OVRL_CNTRCT_SETUP WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS ContractSetupColor, CASE ds.OVRL_COS WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS COSColor, CASE ds.OVRL_GBS_LAUNCH WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS GBS_LaunchColor, CASE ds.OVRL_GDPR WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS GDPRColor, CASE ds.OVRL_SEVENKEYS WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS SevenKeysColor, CASE ds.SAVD_CNTRCT_SETUP WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS DContractSetupColor, CASE ds.SAVD_COS WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS DCOSColor, CASE ds.SAVD_GBS_LAUNCH WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS DGBS_LaunchColor, CASE ds.SAVD_GDPR WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS DGDPRColor, CASE ds.SAVD_SEVENKEYS WHEN 'G' THEN '#5AA700' WHEN 'Y' THEN '#FF7832' WHEN 'R' THEN '#E71D32' WHEN 'A' THEN '#FF7832' ELSE '-' END AS DSevenKeysColor, ctd.CNTRCT_DESC AS WBSShortDesc, sctr.sctr_gb_nm AS ippf_sector, ctry.CTRY_NM AS Country, ds.PM_COMNT AS BrandPM_GenCom, apss.APRV_STAT_NM AS PM_Submission_Status, CASE POSSTR(ds.SUBMTR_NOTES_ID, '/') WHEN 0 THEN ds.SUBMTR_NOTES_ID ELSE SUBSTR(ds.SUBMTR_NOTES_ID, 1, POSSTR(ds.SUBMTR_NOTES_ID, '/') -1) END AS PM_Name, ds.SUB_COMNT AS PM_Comments, CASE POSSTR(ds.APRVR_NOTES_ID , '/') WHEN 0 THEN ds.APRVR_NOTES_ID ELSE SUBSTR(ds.APRVR_NOTES_ID , 1, POSSTR(ds.APRVR_NOTES_ID , '/') -1) END AS PE_Name, aps.APRV_STAT_NM AS PE_Approval_Status, ds.APP_COMNT AS PE_Comment, ctd.IPPF_DS_URL AS IPFF_DS_URL, ds.NON_CMPLNT_FLG AS NonComplBool FROM PHD.DELIVERY_START_FACT ds INNER JOIN phd.customer_dim csd ON ds.cust_key = csd.cust_key INNER JOIN phd.contract_dim ctd ON ds.cntrct_key = ctd.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = ds.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = ds.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = ds.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = ds.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = ds.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = ds.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = ds.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = ds.practice_key AND prac.include = 1 INNER JOIN phd.approval_status_dim aps ON ds.app_key = aps.id INNER JOIN phd.approval_status_dim apss ON ds.sub_key = apss.id INNER JOIN phd.acct_drop d ON ds.mth_key = d.mth_key AND d.graph_nm = 'DS_L2_GR1' AND ds.IN_SCOPE_FLG = {scp} AND d.yr_mo_key = 'CURRENT' WHERE RTRIM(ctd.cntrct_num) = '{cntrctNum}'; \",\"description\":\"Delivery  Start Compliance popup\"}",
      "t2CompDSExport": "{\"name\":\"t2CompDSExport\",\"sqlTemplate\":\"SELECT cnt.cntrct_num AS wbs_id, cnt.IPPF_DS_URL, bra.brand_nm AS brand, {compl} AS compl, '{metric}' as metric, d.data_load_desc AS data_load_desc, ctry.ctry_nm AS country, geo1.geo_lvl1_cd AS geography, geo2.geo_lvl2_nm AS market, TRIM(sl.svc_line_nm) AS service_line, ds.SCTR_BRAND_NM AS ippf_sector_brand, ds.SCTR_SD_NM AS ippf_sector_sd, sctr.sctr_gb_cd AS ippf_sector_gb_overlaycode, sctr.sctr_gb_nm AS ippf_sector_gb_overlay, sld.SCTR_LCL_NM AS ippf_sector_local, cnt.pm_notes_id AS pm_notesid, cus.cust_nm AS client_name, ACTI.active_typ_desc AS WBS_IPPFStatus, DATE(DS.DLVRY_STRT_DT) AS Delivery_StartDate, DATE(CNT.strtd_dt) AS WBS_StartDate, DATE(CNT.WBS_END_DT) AS WBS_EndDate, DATE(CNT.sgnd_dt) AS Contract_SignDate, DATE(CNT.END_DT ) AS Contract_EndDate, GP.grth_plfm_desc AS GBS_Growth_Platform, DS.tot_tcv_amt AS TCV, ds.PRCSS_IND AS Process_Indicator, ApprovalStatusS.APRV_STAT_NM AS Brand_PM_Submission, APPRVSTA.APRV_STAT_NM AS Brand_PE_Approval, DS.SUBMTR_NOTES_ID AS Brand_PM_NotesID_Submission, CNT.pe_notes_id AS Brand_PE_NotesID, cnt.DE_NOTES_ID AS Brand_DE_NotesID, CASE cnt.DMS_STAT_IN_SCOPE_FLG WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' ELSE '-' END AS GBS_DMS_Scope, TRIM(PRA.practice_nm) AS Practice, CNT.CNTRCT_DESC AS WBS_Short_Description, TRIM(ACTI.active_typ_cd) AS Contract_StatusCode, ds.DEL_START_PROC_COMPL AS Delivery_Start_Process_Completion, ApprovalStatusS.APRV_STAT_NM AS Delivery_Start_Status, DS.SUBMTR_NOTES_ID AS Delivery_Start_Submitter, DS.APRVR_NOTES_ID AS Delivery_Start_Approver, DS.PM_COMNT AS Brand_PM_Comments, DS.APP_COMNT AS Brand_PE_Comments, cnt.DE_NOTES_ID AS Delivery_Excellence, CNT.SYS_CNTRCT_NUM AS System_Contract_Number, DS.DS_OVERDUE_DAYS AS NumberOfDays_Overdue, ds.DEL_START_OVER_CAT AS Delivery_Start_Overdue_Category, ds.INDSTRY_SD_NM AS IPPF_Industry_SD, ds.LCL_INDSTRY_NM AS IPPF_Industry_Local, TRIM(cus.LGCY_CUST_NUM) AS IPPF_Customer_Number, CASE cnt.CPM_RQRD_FLG WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' ELSE '-' END AS GBS_CPM_Required, ds.APRVD_GP_PCT AS Plan_GP_pct FROM PHD.DELIVERY_START_FACT AS DS INNER JOIN PHD.CONTRACT_DIM AS CNT ON DS.CNTRCT_KEY = CNT.CNTRCT_KEY INNER JOIN PHD.geo_lvl1_dim AS GEO1 ON DS.GEO_LVL1_KEY = GEO1.GEO_LVL1_KEY AND geo1.geo_lvl1_key NOT IN(0, 6, 21) INNER JOIN PHD.geo_lvl2_dim AS GEO2 ON DS.GEO_LVL2_KEY = GEO2.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM AS CTRY ON DS.CTRY_KEY = CTRY.CTRY_KEY INNER JOIN PHD.OFFERING_DIM AS OFR ON DS.OFFERING_KEY = OFR.OFFERING_KEY INNER JOIN PHD.svc_line_dim AS SL ON DS.SVC_LINE_KEY = SL.SVC_LINE_KEY AND SL.in_scope = 1 INNER JOIN PHD.sector_gb_dim AS SCTR ON DS.SCTR_KEY = SCTR.SCTR_GB_KEY INNER JOIN PHD.customer_dim AS CUS ON DS.CUST_KEY = CUS.CUST_KEY INNER JOIN PHD.growth_platform_dim AS GP ON DS.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY AND GP.in_scope = 1 INNER JOIN PHD.practice_dim AS PRA ON DS.PRACTICE_KEY = PRA.PRACTICE_KEY AND PRA.include = 1 INNER JOIN PHD.industry_dim AS IND ON DS.INDSTRY_KEY = IND.INDSTRY_KEY INNER JOIN PHD.approval_status_dim AS APPRVSTA ON DS.APP_KEY = APPRVSTA.ID INNER JOIN PHD.approval_status_dim AS ApprovalStatusS ON DS.SUB_KEY = ApprovalStatusS.ID INNER JOIN PHD.dw_brand_dim AS BRA ON CNT.DW_BRAND_KEY = BRA.DW_BRAND_KEY INNER JOIN PHD.active_type_dim AS ACTI ON CNT.ACTIVE_TYP_KEY = ACTI.ACTIVE_TYP_KEY LEFT JOIN phd.sector_lcl_dim sld ON cus.sctr_lcl_key = sld.sctr_lcl_key INNER JOIN phd.acct_drop d ON d.mth_key = DS.mth_key AND d.graph_nm = 'DS_L2_GR1' AND d.yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> ds.in_scope_flg = {scp} AND ds.non_cmplnt_flg {operator} {compl} and ds.PERIOD_14D_FLG = {metric} ORDER BY cnt.cntrct_num;\",\"description\":\"Delivery Start export\"}",

      "t2CompDMDelProfCount": "{\"name\":\"t2CompDMDelProfCount\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATA AS ( SELECT {busAttr} AS busattr, CASE WHEN '{metric}' = 'SUB' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NSUB' THEN COUNT(NULLIF(f.PRFL_NOT_SUB,0)) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) END FILTER_COUNT, CASE WHEN '{metric}' = 'SUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'NSUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) END TOTAL_COUNT FROM phd.DELIVERY_FILE_COMPLETION_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' FETCH FIRST row only) GROUP BY {busAttr} ) SELECT '{yrMoKey}' AS YR_MO_KEY, TOTAL_COUNT, ad.CURR_ACCT_YR, ad.CURR_ACCT_MO, ad.DATA_LOAD_DESC, busattr, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)*100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES FROM PHD.ACCT_DROP ad, DATA t1 WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.YR_MO_KEY='{yrMoKey}' ORDER BY busattr; \",\"description\":\"Delivery Methods, PM&T profile Delivery count\"}",
      "t2CompDMDelProfTrend": "{\"name\":\"t2CompDMDelProfTrend\",\"sqlTemplate\":\" WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATE_WINDOWS AS ( SELECT MTH_KEY AS QTR_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND CURRENT=0 ) , DATA AS ( SELECT f.QTR_KEY, CASE WHEN '{metric}' = 'SUB' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NSUB' THEN COUNT(NULLIF(f.PRFL_NOT_SUB,0)) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) END FILTER_COUNT, CASE WHEN '{metric}' = 'SUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'NSUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) END TOTAL_COUNT FROM phd.DELIVERY_FILE_COMPLETION_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY JOIN DATE_WINDOWS dw ON f.QTR_KEY = dw.QTR_KEY WHERE f.PRFL_MEASURED=1 GROUP BY f.QTR_KEY ) SELECT ad.yr_mo_key, TOTAL_COUNT, qd.QTR_NUM, qd.YEAR, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)*100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES FROM PHD.ACCT_DROP ad JOIN DATA t1 ON ad.MTH_KEY = t1.QTR_KEY LEFT JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = t1.QTR_KEY WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.CURRENT != 1 ORDER BY ad.yr_mo_key;   \",\"description\":\"Delivery Methods, PM&T profile Delivery trend\"}",
      "t2CompDMDelProfDetails": "{\"name\":\"t2CompDMDelProfDetails\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cd.cntrct_num,f.id, CASE f.prfl_measured WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_measured, CASE f.prfl_submtd WHEN 'Y' THEN 'Yes' WHEN 'N' THEN 'No' END AS prfl_submtd, RTRIM(f.client) AS client, cd.cntrct_desc AS project_nm, gpd.grth_plfm_desc, sld.svc_line_nm, RTRIM(pd.practice_nm) AS practice_nm, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm, sgd.sctr_gb_nm, id.indstry_cmr_nm, f.cntrct_strt_dt, COALESCE( CASE WHEN locate('/', f.cntrct_pm) != 0 THEN SUBSTR(f.cntrct_pm, 1, locate('/', f.cntrct_pm)-1) ELSE f.cntrct_pm END, 'N/A') AS cntrct_pm, COALESCE( CASE WHEN locate('/', f.cntrct_pe) != 0 THEN SUBSTR(f.cntrct_pe, 1, locate('/', f.cntrct_pe)-1) ELSE f.cntrct_pe END, 'N/A') AS cntrct_pe, COALESCE( CASE WHEN locate('/', f.lead_prtnr) != 0 THEN SUBSTR(f.lead_prtnr, 1, locate('/', f.lead_prtnr)-1) ELSE f.lead_prtnr END, 'N/A') AS lead_prtnr, f.CNTRCT_STATUS AS cntrct_status, f.cmplx_flg, f.sub_practice, f.non_aprvd_derivations, f.method, f.other_methods FROM phd.delivery_file_completion_fact f INNER JOIN phd.contract_dim cd ON cd.cntrct_key = f.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.prfl_measured=1 AND (( '{metric}' = 'SUB' AND f.PRFL_SUB = 1) OR ( '{metric}' = 'NSUB' AND f.PRFL_NOT_SUB = 1) OR ( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) );  \",\"description\":\"Delivery Methods, PM&T profile Delivery details\"}",
      "t2CompDMDelProfExport": "{\"name\":\"t2CompDMDelProfExport\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, qd.qtr, qd.year, CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, CASE f.PRFL_SUBMTD WHEN 'Y' THEN 'Yes' WHEN 'N' THEN 'No' END AS PRFL_SUBMTD, RTRIM(cd.CNTRCT_NUM) AS CNTRCT_NUM, RTRIM(f.CLIENT) AS client, cd.PHD_URL AS ippf_url, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.CNTRCT_STRT_DT, f.CNTRCT_END_DT, f.CNTRCT_STATUS AS cntrct_status, f.CMPLX_FLG, COALESCE( CASE WHEN locate('/', f.cntrct_pm) != 0 THEN SUBSTR(f.cntrct_pm, 1, locate('/', f.cntrct_pm)-1) ELSE f.cntrct_pm END, 'N/A') AS cntrct_pm, COALESCE( CASE WHEN locate('/', f.cntrct_pe) != 0 THEN SUBSTR(f.cntrct_pe, 1, locate('/', f.cntrct_pe)-1) ELSE f.cntrct_pe END, 'N/A') AS cntrct_pe, COALESCE( CASE WHEN locate('/', f.lead_prtnr) != 0 THEN SUBSTR(f.lead_prtnr, 1, locate('/', f.lead_prtnr)-1) ELSE f.lead_prtnr END, 'N/A') AS lead_prtnr, RTRIM(f.opptny_nums) AS opptny_num, cd.CNTRCT_DESC AS project, f.SUB_PRACTICE, f.PROFILE_COMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, COALESCE(f.NOT_CMPLNT_CAT, ' ') AS NOT_CMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.MOSAIC_METHOD_USED, f.PROFILE_DUE_DT AS PROFILE_DUE_DT, TIMESTAMP(f.PROFILE_CRETN_TMS, 0)     AS PROFILE_CRETN_TMS, TIMESTAMP(f.PROFILE_LAST_EDIT_TMS, 0) AS PROFILE_LAST_EDIT_TMS, f.PROFILE_ID FROM phd.delivery_file_completion_fact f INNER JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = f.QTR_KEY JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.PRFL_MEASURED = 1 AND (( '{metric}' = 'SUB' AND f.PRFL_SUB = 1) OR ( '{metric}' = 'NSUB' AND f.PRFL_NOT_SUB = 1) OR ( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) ) ORDER BY f.qtr_key DESC FETCH FIRST 2000 ROWS ONLY ; \",\"description\":\"Delivery Methods, PM&T profile Delivery export\"}",

      "t2CompDMPopContract": "{\"name\":\"t2CompDMPopContract\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cd.cntrct_num, cd.cntrct_key, f.id, cd.phd_url AS ippf_url, CASE f.prfl_measured WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_measured, CASE f.PRFL_SUB WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_submtd, RTRIM(f.client) AS client, cd.cntrct_desc AS project_nm, gpd.grth_plfm_desc, sld.svc_line_nm, RTRIM(pd.practice_nm) AS practice_nm, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm, sgd.sctr_gb_nm, id.indstry_cmr_nm, f.cntrct_strt_dt, f.CNTRCT_END_DT, COALESCE( CASE WHEN locate('/', f.cntrct_pm) != 0 THEN SUBSTR(f.cntrct_pm, 1, locate('/', f.cntrct_pm)-1) ELSE f.cntrct_pm END, 'N/A') AS cntrct_pm, COALESCE( CASE WHEN locate('/', f.cntrct_pe) != 0 THEN SUBSTR(f.cntrct_pe, 1, locate('/', f.cntrct_pe)-1) ELSE f.cntrct_pe END, 'N/A') AS cntrct_pe, COALESCE( CASE WHEN locate('/', f.lead_prtnr) != 0 THEN SUBSTR(f.lead_prtnr, 1, locate('/', f.lead_prtnr)-1) ELSE f.lead_prtnr END, 'N/A') AS lead_prtnr, left(f.OPPTNY_NUMS,24) as OPPTNY_NUM, f.CNTRCT_STATUS AS cntrct_status, f.cmplx_flg, f.sub_practice, f.non_aprvd_derivations, f.APRVD_DEV, f.method, f.other_methods, f.PROFILE_COMPLNT AS prfl_fully_cmpl, f.NOT_CMPLNT_CAT, f.DEV_REASONS FROM phd.delivery_file_completion_fact f INNER JOIN phd.contract_dim cd ON cd.cntrct_key = f.cntrct_key LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 LEFT JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' WHERE f.prfl_measured=1 AND cd.cntrct_num = '{cntrctNum}' AND f.id = {id} FETCH FIRST row only ;  \",\"description\":\"Delivery Methods, PM&T profile contract popup\"}",
      "t2CompDMPopOppty": "{\"name\":\"t2CompDMPopOppty\",\"sqlTemplate\":\"SELECT CASE f.prfl_measured WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_measured, CASE f.PRFL_SUB WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_submtd, RTRIM(od.opptny_num) AS opptny_num, f.opptny_key, RTRIM(f.client) AS client, f.project, gpd.grth_plfm_desc, sld.svc_line_nm, RTRIM(pd.practice_nm) AS practice_nm, f.sub_practice, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm, sgd.sctr_gb_nm, id.indstry_cmr_nm, f.opptny_stat, f.sltn_exc_aprvl_dt, COALESCE(f.cmplx_flg,' ') AS cmplx_flg, COALESCE( CASE WHEN locate('/', f.sltn_mngr) != 0 THEN SUBSTR(f.sltn_mngr, 1, locate('/', f.sltn_mngr)-1) ELSE f.sltn_mngr END, 'N/A') AS sltn_mngr, COALESCE( CASE WHEN locate('/', f.opptny_ownr) != 0 THEN SUBSTR(f.opptny_ownr, 1, locate('/', f.opptny_ownr)-1) ELSE f.opptny_ownr END, 'N/A') AS opptny_ownr, f.prfl_full_cmplnt AS prfl_fully_cmpl, f.aprvd_dev, f.non_aprvd_derivations, COALESCE(f.not_complnt_cat, ' ') AS not_cmplnt_cat, COALESCE(f.method, ' ') AS methods, COALESCE(f.other_methods, ' ') AS other_methods, COALESCE(f.dev_reasons, ' ') AS dev_reasons, f.mosaic_method_used AS mosaic_method_used FROM phd.solutioning_reporting_xref_file_fact f LEFT JOIN phd.opportunity_dim od ON od.opptny_key = f.opptny_key LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 LEFT JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' WHERE f.prfl_measured=1 AND od.opptny_num = '{opptyNum}' FETCH FIRST row only ; \",\"description\":\"Delivery Methods, PM&T profile oppty popup\"}",

      "t2CompDMSolProfCount": "{\"name\":\"t2CompDMSolProfCount\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATA AS ( SELECT {busAttr} AS busattr, CASE WHEN '{metric}' = 'SUB' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NSUB' THEN COUNT(NULLIF(f.PRFL_NOT_SUB,0)) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) END FILTER_COUNT, CASE WHEN '{metric}' = 'SUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'NSUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) END TOTAL_COUNT FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' FETCH FIRST row only) GROUP BY {busAttr} ) SELECT '{yrMoKey}' AS YR_MO_KEY, TOTAL_COUNT, ad.CURR_ACCT_YR, ad.CURR_ACCT_MO, ad.DATA_LOAD_DESC, busattr, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)*100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES FROM PHD.ACCT_DROP ad, DATA t1 WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.YR_MO_KEY='{yrMoKey}' ORDER BY busattr; \",\"description\":\"Delivery Methods, PM&T profile Solutioning count\"}",
      "t2CompDMSolProfTrend": "{\"name\":\"t2CompDMSolProfTrend\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATE_WINDOWS AS ( SELECT MTH_KEY AS QTR_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND CURRENT=0 ) , DATA AS ( SELECT f.QTR_KEY, CASE WHEN '{metric}' = 'SUB' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NSUB' THEN COUNT(NULLIF(f.PRFL_NOT_SUB,0)) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) END FILTER_COUNT, CASE WHEN '{metric}' = 'SUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'NSUB' THEN COUNT(f.PRFL_MEASURED) WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_SUB,0)) END TOTAL_COUNT FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY JOIN DATE_WINDOWS dw ON f.QTR_KEY = dw.QTR_KEY WHERE f.PRFL_MEASURED=1 GROUP BY f.QTR_KEY ) SELECT ad.yr_mo_key, TOTAL_COUNT, qd.QTR_NUM, qd.YEAR, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)*100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES FROM PHD.ACCT_DROP ad INNER JOIN DATA t1 ON ad.MTH_KEY = t1.QTR_KEY LEFT JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = t1.QTR_KEY WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.CURRENT != 1 ORDER BY ad.yr_mo_key; \",\"description\":\"Delivery Methods, PM&T profile Solutioning trend\"}",
      "t2CompDMSolProfDetails": "{\"name\":\"t2CompDMSolProfDetails\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, RTRIM(od.opptny_num) AS opty_id, CASE f.prfl_measured WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_measured, CASE f.PRFL_SUB WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS prfl_submtd, RTRIM(f.client) AS client, f.project AS proj_name, f.sltn_exc_aprvl_dt, gpd.grth_plfm_desc, sld.svc_line_nm, RTRIM(pd.practice_nm) AS practice_nm, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm, sgd.sctr_gb_nm, id.indstry_cmr_nm, COALESCE( CASE WHEN locate('/', f.sltn_mngr) != 0 THEN SUBSTR(f.sltn_mngr, 1, locate('/', f.sltn_mngr)-1) ELSE f.sltn_mngr END, 'N/A') AS sltn_mngr, COALESCE( CASE WHEN locate('/', f.opptny_ownr) != 0 THEN SUBSTR(f.opptny_ownr, 1, locate('/', f.opptny_ownr)-1) ELSE f.opptny_ownr END, 'N/A') AS opptny_ownr, f.cmplx_flg AS cmplx_flg, f.opptny_stat, f.non_aprvd_derivations, f.sub_practice, f.method, f.other_methods FROM phd.solutioning_reporting_xref_file_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN phd.opportunity_dim od ON od.opptny_key = f.opptny_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.prfl_measured=1 AND (( '{metric}' = 'SUB' AND f.PRFL_SUB = 1) OR ( '{metric}' = 'NSUB' AND f.PRFL_NOT_SUB = 1) OR ( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) );   \",\"description\":\"Delivery Methods, PM&T profile Solutioning details\"}",
      "t2CompDMSolProfExport": "{\"name\":\"t2CompDMSolProfExport\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, qd.qtr, qd.year, CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, CASE f.PRFL_SUB WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_SUBMTD, RTRIM(od.OPPTNY_NUM) AS OPPTNY_NUM, RTRIM(f.client) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.practice_nm) AS practice_nm, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.OPPTNY_STAT, DATE(f.SLTN_EXC_APRVL_DT) AS SLTN_EXC_APRVL_DT, f.cmplx_flg AS CMPLX_FLG, f.SLTN_MNGR, f.OPPTNY_OWNR, f.SUB_PRACTICE, f.PRFL_FULL_CMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, COALESCE(f.NOT_COMPLNT_CAT, ' ') AS NOT_CMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.mosaic_method_used AS MOSAIC_METHOD_USED,  DATE(f.SLTN_EXC_APRVL_DT) AS PROFILE_DUE_DT, TIMESTAMP(f.PROFILE_CRETN_TMS, 0)     AS PROFILE_CRETN_TMS, TIMESTAMP(f.PROFILE_LAST_EDIT_TMS, 0) AS PROFILE_LAST_EDIT_TMS, f.PROFILE_ID FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = f.QTR_KEY JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.PRFL_MEASURED = 1 AND (( '{metric}' = 'SUB' AND f.PRFL_SUB = 1) OR ( '{metric}' = 'NSUB' AND f.PRFL_NOT_SUB = 1) OR ( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) ) ORDER BY f.qtr_key DESC FETCH FIRST 2000 ROWS ONLY ; \",\"description\":\"Delivery Methods, PM&T profile Solutioning export\"}",

      "t2CompDMDelStdCount": "{\"name\":\"t2CompDMDelStdCount\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATA AS ( SELECT {busAttr} AS busattr, CASE WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) WHEN '{metric}' = 'APR' THEN COUNT(NULLIF(f.PRFL_AP_DEV,0)) WHEN '{metric}' = 'UAPR' THEN COUNT(NULLIF(f.PRFL_NOT_AP_DEV,0)) END FILTER_COUNT, COUNT(f.PRFL_MEASURED) AS TOTAL_COUNT FROM phd.DELIVERY_FILE_COMPLETION_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY= '{yrMoKey}' FETCH FIRST row only) GROUP BY {busAttr} ) SELECT '{yrMoKey}' AS YR_MO_KEY, t1.TOTAL_COUNT AS total_count, ad.CURR_ACCT_YR, ad.CURR_ACCT_MO, ad.data_load_desc, busattr, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)*100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES, 'Q' || ad.CURR_ACCT_MO || ' ' || ad.CURR_ACCT_YR AS qtrVal FROM PHD.ACCT_DROP ad, DATA t1 WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.YR_MO_KEY='{yrMoKey}' ORDER BY busattr; \",\"description\":\"Delivery Methods, PM&T standards Delivery compliance count\"}",
      "t2CompDMDelStdTrend": "{\"name\":\"t2CompDMDelStdTrend\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATE_WINDOWS AS ( SELECT MTH_KEY AS QTR_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND CURRENT=0 ) , DATA AS ( SELECT f.QTR_KEY, CASE WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) WHEN '{metric}' = 'APR' THEN COUNT(NULLIF(f.PRFL_AP_DEV,0)) WHEN '{metric}' = 'UAPR' THEN COUNT(NULLIF(f.PRFL_NOT_AP_DEV,0)) END FILTER_COUNT, COUNT(f.PRFL_MEASURED) AS TOTAL_COUNT FROM phd.DELIVERY_FILE_COMPLETION_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY JOIN DATE_WINDOWS dw ON f.QTR_KEY = dw.QTR_KEY WHERE f.PRFL_MEASURED=1 AND f.PRFL_SUB = 1 GROUP BY f.QTR_KEY ) SELECT ad.yr_mo_key AS yrmokey, t1.TOTAL_COUNT AS total_count, qd.QTR_NUM, qd.YEAR, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)* 100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES, ad.curr_acct_yr AS year_num, ad.curr_acct_mo AS qtr_num, ad.mth_key FROM PHD.ACCT_DROP ad JOIN DATA t1 ON ad.MTH_KEY = t1.QTR_KEY LEFT JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = t1.QTR_KEY WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.CURRENT != 1 ORDER BY ad.yr_mo_key; \",\"description\":\"Delivery Methods, PM&T standards Delivery trend\"}",
      "t2CompDMDelComStdDetails": "{\"name\":\"t2CompDMDelComStdDetails\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cd.cntrct_num, RTRIM(f.client) AS client, cd.cntrct_desc AS project, f.non_aprvd_derivations, pd.practice_nm, f.sub_practice, f.method, f.other_methods, f.id FROM phd.delivery_file_completion_fact f INNER JOIN phd.contract_dim cd ON cd.cntrct_key = f.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.prfl_measured=1 AND (( '{metric}' = 'COM' AND f.prfl_compl = 1) OR ( '{metric}' = 'NCOM' AND f.prfl_not_compl = 1)) ORDER BY client WITH UR;  \",\"description\":\"Delivery Methods, PM&T standards compliance details\"}",
      "t2CompDMDelComStdExport": "{\"name\":\"t2CompDMDelComStdExport\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, decode(f.PRFL_MEASURED,1,'Yes',0,'No') as PRFL_MEASURED, decode(f.PRFL_SUB,1,'Yes',0,'No') as PRFL_SUBMTD, cd.CNTRCT_NUM, cd.PHD_URL AS ippf_url, f.OPPTNY_NUMS AS OPPTNY_NUM, f.CLIENT, RTRIM(f.OPPTNY_NM) AS project, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.practice_nm) AS practice_nm, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.PROFILE_COMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, f.NOT_CMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.CMPLX_FLG, f.MOSAIC_METHOD_USED, f.CNTRCT_STRT_DT, f.CNTRCT_END_DT, f.CNTRCT_STATUS AS cntrct_status, COALESCE( CASE WHEN locate('/', f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM, 1, locate('/', f.CNTRCT_PM)-1) ELSE f.CNTRCT_PM END, 'N/A') AS CNTRCT_PM, COALESCE( CASE WHEN locate('/', f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE, 1, locate('/', f.CNTRCT_PE)-1) ELSE f.CNTRCT_PE END, 'N/A') AS CNTRCT_PE, COALESCE( CASE WHEN locate('/', f.LEAD_PRTNR) != 0 THEN SUBSTR(f.LEAD_PRTNR, 1, locate('/', f.LEAD_PRTNR)-1) ELSE f.LEAD_PRTNR END, 'N/A') AS LEAD_PRTNR, f.PROFILE_DUE_DT AS PROFILE_DUE_DT, TIMESTAMP(f.PROFILE_CRETN_TMS, 0) AS PROFILE_CRETN_TMS , TIMESTAMP(f.PROFILE_LAST_EDIT_TMS, 0) AS PROFILE_LAST_EDIT_TMS, f.PROFILE_ID FROM phd.delivery_file_completion_fact f INNER JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.PRFL_MEASURED = 1 AND ( ( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) ) FETCH FIRST 2000 ROWS ONLY WITH UR; \",\"description\":\"Delivery Methods, PM&T standards Delivery compliance export\"}",

      "t2CompDMDelDevStdDetails": "{\"name\":\"t2CompDMDelDevStdDetails\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cd.cntrct_num, RTRIM(f.client) AS client, cd.cntrct_desc AS project, RTRIM(pd.PRACTICE_NM) AS practice, f.method, f.dev_type, f.not_compl_cat, f.not_stndrt_pmt, f.id FROM phd.delivery_file_completion_fact f INNER JOIN phd.contract_dim cd ON cd.cntrct_key = f.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.prfl_measured = 1 AND(( '{metric}' = 'APR' AND f.PRFL_AP_DEV = 1) OR ( '{metric}' = 'UAPR' AND f.PRFL_NOT_AP_DEV = 1)) ORDER BY client WITH UR;  \",\"description\":\"Delivery Methods, PM&T standards Delivery deviations details\"}",
      "t2CompDMDelDevStdExport": "{\"name\":\"t2CompDMDelDevStdExport\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, DECODE(f.PRFL_MEASURED,1,'Yes',0,'No') AS PRFL_MEASURED, cd.CNTRCT_NUM, cd.phd_url AS ippf_url, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS practice, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.DEV_APRVD, f.METHOD, f.DEV_TYPE AS STANDARD_TYPE, f.NOT_COMPL_CAT, f.NOT_STNDRT_PMT, f.DEV_REASON, f.NON_STNDRT_DEV_REASON, f.APRVR_NM, f.CNTRCT_STRT_DT, COALESCE(CASE WHEN locate('/',f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM,1,locate('/', f.CNTRCT_PM) -1) ELSE f.CNTRCT_PM END,'N/A') AS CNTRCT_PM, COALESCE(CASE WHEN locate('/',f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE,1,locate('/', f.CNTRCT_PE) -1) ELSE f.CNTRCT_PE END,'N/A') AS CNTRCT_PE, COALESCE(CASE WHEN locate('/',f.LEAD_PRTNR) != 0 THEN SUBSTR(f.LEAD_PRTNR,1,locate('/', f.LEAD_PRTNR) -1) ELSE f.LEAD_PRTNR END,'N/A') AS LEAD_PRTNR FROM phd.delivery_file_completion_fact f LEFT JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 LEFT JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.PRFL_MEASURED = 1 AND(( '{metric}' = 'APR' AND f.PRFL_AP_DEV = 1) OR ( '{metric}' = 'UAPR' AND f.PRFL_NOT_AP_DEV = 1)) FETCH FIRST 2000 ROWS ONLY WITH UR;  \",\"description\":\"Delivery Methods, PM&T standards Delivery deviations export\"}",

      "t2CompDMDelComStdPopContract": "{\"name\":\"t2CompDMDelComStdPopContract\",\"sqlTemplate\":\"SELECT decode(f.PRFL_MEASURED,1,'Yes',0,'No') as PRFL_MEASURED, decode(f.PRFL_SUB,1,'Yes',0,'No') as PRFL_SUBMTD, cd.CNTRCT_NUM, cd.CNTRCT_KEY, f.id, cd.phd_url AS ippf_url, RTRIM(f.OPPTNY_NUMS) AS OPPTNY_NUM, f.CLIENT, f.OPPTNY_NM AS project, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.PROFILE_COMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, f.NOT_CMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.CMPLX_FLG, f.MOSAIC_METHOD_USED, f.CNTRCT_STRT_DT, f.CNTRCT_END_DT, f.CNTRCT_STATUS AS cntrct_status, COALESCE( CASE WHEN locate('/', f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM, 1, locate('/', f.CNTRCT_PM)-1) ELSE f.CNTRCT_PM END, 'N/A') AS CNTRCT_PM, COALESCE( CASE WHEN locate('/', f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE, 1, locate('/', f.CNTRCT_PE)-1) ELSE f.CNTRCT_PE END, 'N/A') AS CNTRCT_PE, COALESCE( CASE WHEN locate('/', f.LEAD_PRTNR) != 0 THEN SUBSTR(f.LEAD_PRTNR, 1, locate('/', f.LEAD_PRTNR)-1) ELSE f.LEAD_PRTNR END, 'N/A') AS LEAD_PRTNR, f.PROFILE_DUE_DT AS PROFILE_DUE_DT, f.PROFILE_CRETN_TMS, f.PROFILE_LAST_EDIT_TMS, f.PROFILE_ID FROM phd.delivery_file_completion_fact f INNER JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' WHERE f.PRFL_MEASURED = 1 AND f.id = {id} AND cd.CNTRCT_NUM = '{cntrctNum}' FETCH FIRST row only WITH ur;  \",\"description\":\"Delivery Methods, PM&T standards contract popup\"}",
      "t2CompDMDelDevStdPopContract": "{\"name\":\"t2CompDMDelDevStdPopContract\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, cd.cntrct_num, cd.cntrct_key, f.id, cd.phd_url AS ippf_url, DECODE(f.PRFL_MEASURED,1,'Yes',0,'No') AS PRFL_MEASURED, RTRIM(f.client) AS client, cd.cntrct_desc AS project_nm, gpd.grth_plfm_desc, sld.svc_line_nm, RTRIM(pd.practice_nm) AS practice_nm, geo1.geo_lvl1_nm AS geo, geo2.geo_lvl2_nm AS market, ctry.ctry_nm, sgd.sctr_gb_nm, id.indstry_cmr_nm, f.DEV_APRVD, f.METHOD, f.DEV_TYPE, f.NOT_COMPL_CAT AS NOT_CMPLNT_CAT, f.NOT_STNDRT_PMT, f.DEV_REASON, f.NON_STNDRT_DEV_REASON, COALESCE(CASE WHEN locate('/',f.APRVR_NM) != 0 THEN SUBSTR(f.APRVR_NM,1,locate('/',f.APRVR_NM) -1) ELSE f.APRVR_NM END,'N/A') AS APRVR_NM, f.CNTRCT_STRT_DT, COALESCE(CASE WHEN locate('/',f.cntrct_pm) != 0 THEN SUBSTR(f.cntrct_pm,1,locate('/', f.cntrct_pm) -1) ELSE f.cntrct_pm END,'N/A') AS cntrct_pm, COALESCE(CASE WHEN locate('/',f.cntrct_pe) != 0 THEN SUBSTR(f.cntrct_pe,1,locate('/', f.cntrct_pe) -1) ELSE f.cntrct_pe END,'N/A') AS cntrct_pe, COALESCE(CASE WHEN locate('/',f.lead_prtnr) != 0 THEN SUBSTR(f.lead_prtnr,1,locate('/', f.lead_prtnr) -1) ELSE f.lead_prtnr END,'N/A') AS lead_prtnr FROM phd.delivery_file_completion_fact f INNER JOIN phd.contract_dim cd ON cd.cntrct_key = f.cntrct_key LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 LEFT JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' WHERE f.prfl_measured = 1 AND cd.cntrct_num = '{cntrctNum}' AND f.id = {id} FETCH FIRST row only; \",\"description\":\"Delivery Methods, PM&T standards contract popup\"}",
      "t2CompDMSolComStdPopOppty": "{\"name\":\"t2CompDMSolComStdPopOppty\",\"sqlTemplate\":\"SELECT DECODE(f.PRFL_MEASURED,1,'Yes',0,'No') as PRFL_MEASURED, DECODE(f.PRFL_SUB,1,'Yes',0,'No') as PRFL_SUBMTD, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.PRFL_FULL_CMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, f.NOT_COMPLNT_CAT as NOT_CMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.CMPLX_FLG, f.MOSAIC_METHOD_USED, f.OPPTNY_STAT, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' WHERE f.PRFL_MEASURED = 1 AND od.OPPTNY_NUM = '{opptyNum}' FETCH FIRST row only WITH ur;  \",\"description\":\"Delivery Methods, PM&T standards oppty popup\"}",
      "t2CompDMSolDevStdPopOppty": "{\"name\":\"t2CompDMSolDevStdPopOppty\",\"sqlTemplate\":\"SELECT DECODE(f.PRFL_MEASURED,1,'Yes',0,'No') AS PRFL_MEASURED, RTRIM(od.OPPTNY_NUM) AS OPPTNY_NUM, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.DEV_APRVD, f.METHOD, f.DEV_TYPE, f.NOT_COMPL_CAT, f.NOT_STNDRT_PMT, f.DEV_REASON, f.NON_STNDRT_DEV_REASON, f.APRVR_NM, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' WHERE f.PRFL_MEASURED = 1 AND od.OPPTNY_NUM = '{opptyNum}' FETCH FIRST row only WITH ur;   \",\"description\":\"Delivery Methods, PM&T standards oppty popup\"}",

      "t2CompDMSolStdCount": "{\"name\":\"t2CompDMSolStdCount\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN(0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATA AS ( SELECT {busAttr} AS busattr, CASE WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) WHEN '{metric}' = 'APR' THEN COUNT(NULLIF(f.PRFL_AP_DEV,0)) WHEN '{metric}' = 'UAPR' THEN COUNT(NULLIF(f.PRFL_NOT_AP_DEV,0)) END FILTER_COUNT, COUNT(f.PRFL_MEASURED) AS TOTAL_COUNT FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY WHERE f.PRFL_MEASURED = 1 AND f.PRFL_SUB = 1 AND f.QTR_KEY = ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY = '{yrMoKey}' FETCH FIRST row only) GROUP BY {busAttr} ) SELECT '{yrMoKey}' AS YR_MO_KEY, t1.TOTAL_COUNT AS total_count, ad.CURR_ACCT_YR, ad.CURR_ACCT_MO, ad.DATA_LOAD_DESC, busattr, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0) * 100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES, 'Q' || ad.CURR_ACCT_MO || ' ' || ad.CURR_ACCT_YR AS qtrVal FROM PHD.ACCT_DROP ad, DATA t1 WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.YR_MO_KEY = '{yrMoKey}' ORDER BY busattr; \",\"description\":\"Delivery Methods, PM&T standards Solutioning compliance count\"}",
      "t2CompDMSolStdTrend": "{\"name\":\"t2CompDMSolStdTrend\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1 ) , DATE_WINDOWS AS ( SELECT MTH_KEY AS QTR_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND CURRENT=0 ) , DATA AS ( SELECT f.QTR_KEY, CASE WHEN '{metric}' = 'COM' THEN COUNT(NULLIF(f.PRFL_COMPL,0)) WHEN '{metric}' = 'NCOM' THEN COUNT(NULLIF(f.PRFL_NOT_COMPL,0)) WHEN '{metric}' = 'APR' THEN COUNT(NULLIF(f.PRFL_AP_DEV,0)) WHEN '{metric}' = 'UAPR' THEN COUNT(NULLIF(f.PRFL_NOT_AP_DEV,0)) END FILTER_COUNT, COUNT(f.PRFL_MEASURED) AS TOTAL_COUNT FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY JOIN DATE_WINDOWS dw ON f.QTR_KEY = dw.QTR_KEY WHERE f.PRFL_MEASURED=1 AND f.PRFL_SUB = 1 GROUP BY f.QTR_KEY ) SELECT ad.yr_mo_key AS yrmokey, t1.TOTAL_COUNT, CAST(COALESCE(CAST(t1.FILTER_COUNT AS FLOAT) / CAST(NULLIF(t1.TOTAL_COUNT,0) AS FLOAT),0)* 100.0 AS DECIMAL(5,2)) AS percent, t1.FILTER_COUNT AS VALUES, ad.curr_acct_yr AS year_num, ad.curr_acct_mo AS qtr_num, ad.mth_key FROM PHD.ACCT_DROP ad JOIN DATA t1 ON ad.MTH_KEY = t1.QTR_KEY WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.CURRENT != 1 ORDER BY ad.yr_mo_key; \",\"description\":\"Delivery Methods, PM&T Delivery standards Solutioning trend\"}",
      "t2CompDMSolComStdDetails": "{\"name\":\"t2CompDMSolComStdDetails\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, RTRIM(od.opptny_num) AS opty_id, RTRIM(f.client) AS client, f.project AS proj_name, f.non_aprvd_derivations, RTRIM(pd.practice_nm) AS practice, f.sub_practice, f.method, f.other_methods FROM phd.solutioning_reporting_xref_file_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN phd.opportunity_dim od ON od.opptny_key = f.opptny_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.prfl_measured=1 AND f.prfl_sub = 1 AND (( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) ) ORDER BY client WITH UR;  \",\"description\":\"Delivery Methods, PM&T standards Solutioning compliance details\"}",
      "t2CompDMSolComStdExport": "{\"name\":\"t2CompDMSolComStdExport\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, DECODE(f.PRFL_MEASURED,1,'Yes',0,'No') AS PRFL_MEASURED, DECODE(f.PRFL_SUB,1,'Yes',0,'No') AS PRFL_SUBMTD, RTRIM(od.OPPTNY_NUM) AS OPPTNY_NUM, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.PRFL_FULL_CMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, f.NOT_COMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.CMPLX_FLG, f.MOSAIC_METHOD_USED, f.OPPTNY_STAT, date(f.SLTN_EXC_APRVL_DT) as SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR, date(f.SLTN_EXC_APRVL_DT) AS PROFILE_DUE_DT, TIMESTAMP(f.PROFILE_CRETN_TMS, 0) as PROFILE_CRETN_TMS, TIMESTAMP(f.PROFILE_LAST_EDIT_TMS, 0) as PROFILE_LAST_EDIT_TMS, f.PROFILE_ID FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.PRFL_MEASURED = 1 AND f.PRFL_SUB = 1 AND(( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1)) FETCH FIRST 2000 rows only WITH ur; \",\"description\":\"Delivery Methods, PM&T standards Solutioning compliance export\"}",

      "t2CompDMSolDevStdDetails": "{\"name\":\"t2CompDMSolDevStdDetails\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, RTRIM(od.opptny_num) AS opty_id, RTRIM(f.client) AS client, f.project, RTRIM(pd.practice_nm) AS practice, f.method, f.dev_type, f.not_compl_cat, f.not_stndrt_pmt FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN phd.opportunity_dim od ON od.opptny_key = f.opptny_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.prfl_measured=1 AND(( '{metric}' = 'APR' AND f.PRFL_AP_DEV = 1) OR ( '{metric}' = 'UAPR' AND f.PRFL_NOT_AP_DEV = 1)) ORDER BY client WITH UR;  \",\"description\":\"Delivery Methods, PM&T standards Solutioning deviations details\"}",
      "t2CompDMSolDevStdExport": "{\"name\":\"t2CompDMSolDevStdExport\",\"sqlTemplate\":\"SELECT ad.DATA_LOAD_DESC, DECODE(f.PRFL_MEASURED,1,'Yes',0,'No') AS PRFL_MEASURED, RTRIM(od.OPPTNY_NUM) AS OPPTNY_NUM, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.DEV_APRVD, f.METHOD, f.DEV_TYPE, f.NOT_COMPL_CAT, f.NOT_STNDRT_PMT, f.DEV_REASON, f.NON_STNDRT_DEV_REASON, f.APRVR_NM, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN(0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key JOIN PHD.ACCT_DROP ad ON f.qtr_key = ad.mth_key AND ad.graph_nm = 'DLM_L2_GR1' AND yr_mo_key = '{yrMoKey}' {filter} <filter?AND:WHERE> f.PRFL_MEASURED=1 AND(( '{metric}' = 'APR' AND f.PRFL_AP_DEV = 1) OR ( '{metric}' = 'UAPR' AND f.PRFL_NOT_AP_DEV = 1)) FETCH FIRST 2000 ROWS ONLY WITH UR;  \",\"description\":\"Delivery Methods, PM&T standards Solutioning deviations export\"}",

      "t2CompDMDelUsgCount": "{\"name\":\"t2CompDMDelUsgCount\",\"sqlTemplate\":\"WITH filters AS( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1) , DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ), DATA as ( select {busAttr} as busAttr, CASE WHEN '{metric}' = 'INCDEV' then count(nullif(f.METHOD_USAGE,0)) WHEN '{metric}' = 'EXLDEV' then count(nullif(f.DEVIATIONS,0)) WHEN '{metric}' = 'APR' then count(nullif(f.APRVD_DEVIATIONS,0)) WHEN '{metric}' = 'NAPR' then count(nullif(f.UNAPRVD_DEVIATIONS,0)) END FILTER_COUNT, count(f.PRFL_MEASURED) AS TOTAL_COUNT from phd.PROFILES_METHODS_USAGE_DATA_DELIVERY_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) GROUP BY {busAttr} ) SELECT '{yrMoKey}' as YR_MO_KEY, TOTAL_COUNT, ad.CURR_ACCT_YR, ad.CURR_ACCT_MO, ad.DATA_LOAD_DESC, busAttr, cast(coalesce(cast(t1.FILTER_COUNT as float) / cast(nullif(t1.TOTAL_COUNT,0) as float),0)*100.0 as decimal(5,2)) as percent, t1.FILTER_COUNT as values FROM PHD.ACCT_DROP ad, DATA t1 WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.YR_MO_KEY='{yrMoKey}' ORDER BY busAttr; \",\"description\":\"Delivery Methods, Delivery Usage count\"}",
      "t2CompDMDelUsgTrend": "{\"name\":\"t2CompDMDelUsgTrend\",\"sqlTemplate\":\"WITH filters AS( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1) , DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY = 'CURRENT' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 9 row only ), DATA as ( select t2.QTR_KEY, SUM(nvl(FILTER_COUNT,0)) OVER (order by t2.QTR_KEY desc ROWS between current row and 4 FOLLOWING ) as FILTER_COUNT, SUM(nvl(TOTAL_COUNT,0)) OVER (order by t2.QTR_KEY desc ROWS between current row and 4 FOLLOWING ) as TOTAL_COUNT from ( select f.CNTRCT_STRT_QTR_KEY, CASE WHEN '{metric}' = 'INCDEV' then count(nullif(f.METHOD_USAGE,0)) WHEN '{metric}' = 'EXLDEV' then count(nullif(f.DEVIATIONS,0)) WHEN '{metric}' = 'APR' then count(nullif(f.APRVD_DEVIATIONS,0)) WHEN '{metric}' = 'NAPR' then count(nullif(f.UNAPRVD_DEVIATIONS,0)) END FILTER_COUNT, count(f.PRFL_MEASURED) AS TOTAL_COUNT from phd.PROFILES_METHODS_USAGE_DATA_DELIVERY_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) GROUP BY f.CNTRCT_STRT_QTR_KEY ) t1 RIGHT JOIN DATE_WINDOWS t2 ON t1.CNTRCT_STRT_QTR_KEY = t2.QTR_KEY ) SELECT ad.MTH_KEY, TOTAL_COUNT, qd.QTR_NUM, qd.YEAR, ad.DATA_LOAD_DESC, cast(coalesce(cast(t1.FILTER_COUNT as float) / cast(nullif(t1.TOTAL_COUNT,0) as float),0)*100.0 as decimal(5,2)) as percent, t1.FILTER_COUNT as values FROM PHD.ACCT_DROP ad LEFT JOIN DATA t1 ON ad.MTH_KEY = t1.QTR_KEY LEFT JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = t1.QTR_KEY WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.CURRENT!=1;\",\"description\":\"Delivery Methods, Delivery Usage trend\"}",
      "t2CompDMDelUsgDetails": "{\"name\":\"t2CompDMDelUsgDetails\",\"sqlTemplate\":\"WITH filters AS( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1), DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ) SELECT ad.DATA_LOAD_DESC, cd.CNTRCT_NUM, f.CLIENT, f.PROJECT as PROJ_NAME, prac.PRACTICE_NM, f.SUB_PRACTICE, f.STNDRT_METHOD_USED, f.METHOD, f.OTHER_METHODS FROM phd.PROFILES_METHODS_USAGE_DATA_DELIVERY_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY LEFT JOIN phd.practice_dim prac on prac.PRACTICE_KEY = f.PRACTICE_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key and ad.CURRENT!=1 WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) AND (( '{metric}' = 'INCDEV' AND f.METHOD_USAGE = 1) OR ( '{metric}' = 'EXLDEV' AND f.DEVIATIONS = 1) );\",\"description\":\"Delivery Methods, Delivery Usage details\"}",
      "t2CompDMDelUsgExport": "{\"name\":\"t2CompDMDelUsgExport\",\"sqlTemplate\":\"WITH DATE_WINDOWS AS( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only) SELECT ad.DATA_LOAD_DESC, CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, cd.CNTRCT_NUM, f.OPPTNY_NUM, f.CLIENT, f.PROJECT as PROJECT_NM, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, pd.PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.STNDRT_METHOD_USED, f.METHOD, f.OTHER_METHODS, f.DEV_REASON, f.APRVR_NM, f.CNTRCT_STRT_DT, COALESCE( CASE WHEN locate('/', f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM, 1, locate('/', f.CNTRCT_PM)-1) ELSE f.CNTRCT_PM END, 'N/A') AS CNTRCT_PM, COALESCE( CASE WHEN locate('/', f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE, 1, locate('/', f.CNTRCT_PE)-1) ELSE f.CNTRCT_PE END, 'N/A') AS CNTRCT_PE, COALESCE( CASE WHEN locate('/', f.LEAD_PRTN) != 0 THEN SUBSTR(f.LEAD_PRTN, 1, locate('/', f.LEAD_PRTN)-1) ELSE f.LEAD_PRTN END, 'N/A') AS LEAD_PRTN, f.PROFILE_ID, f.CRETN_DT, f.MDFD_DT FROM phd.PROFILES_METHODS_USAGE_DATA_DELIVERY_FACT f INNER JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.QTR_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key and ad.CURRENT!=1 WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) AND (( '{metric}' = 'INCDEV' AND f.METHOD_USAGE = 1) OR ( '{metric}' = 'EXLDEV' AND f.DEVIATIONS = 1) ) FETCH FIRST 2000 ROWS ONLY WITH UR;\",\"description\":\"Delivery Methods, Delivery Usage export\"}",

      "t2CompDMSolUsgCount": "{\"name\":\"t2CompDMSolUsgCount\",\"sqlTemplate\":\"WITH filters AS( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1) , DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ), DATA as ( select {busAttr} as busAttr, CASE WHEN '{metric}' = 'INCDEV' then count(nullif(f.METHOD_USAGE,0)) WHEN '{metric}' = 'EXLDEV' then count(nullif(f.DEVIATIONS,0)) WHEN '{metric}' = 'APR' then count(nullif(f.APRVD_DEVIATIONS,0)) WHEN '{metric}' = 'NAPR' then count(nullif(f.UNAPRVD_DEVIATIONS,0)) END FILTER_COUNT, count(f.PRFL_MEASURED) AS TOTAL_COUNT from phd.PROFILES_METHODS_USAGE_DATA_SOLUTIONING_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) GROUP BY {busAttr} ) SELECT '{yrMoKey}' as YR_MO_KEY, TOTAL_COUNT, ad.CURR_ACCT_YR, ad.CURR_ACCT_MO, ad.DATA_LOAD_DESC, busAttr, cast(coalesce(cast(t1.FILTER_COUNT as float) / cast(nullif(t1.TOTAL_COUNT,0) as float),0)*100.0 as decimal(5,2)) as percent, t1.FILTER_COUNT as values FROM PHD.ACCT_DROP ad, DATA t1 WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.YR_MO_KEY='{yrMoKey}' ORDER BY busAttr;\",\"description\":\"Delivery Methods, Delivery Usage solutioning count\"}",
      "t2CompDMSolUsgTrend": "{\"name\":\"t2CompDMSolUsgTrend\",\"sqlTemplate\":\"WITH filters AS( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1) , DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY = 'CURRENT' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 9 row only ), DATA as ( select t2.QTR_KEY, SUM(nvl(FILTER_COUNT,0)) OVER (order by t2.QTR_KEY desc ROWS between current row and 4 FOLLOWING ) as FILTER_COUNT, SUM(nvl(TOTAL_COUNT,0)) OVER (order by t2.QTR_KEY desc ROWS between current row and 4 FOLLOWING ) as TOTAL_COUNT from ( select f.CNTRCT_STRT_QTR_KEY, CASE WHEN '{metric}' = 'INCDEV' then count(nullif(f.METHOD_USAGE,0)) WHEN '{metric}' = 'EXLDEV' then count(nullif(f.DEVIATIONS,0)) WHEN '{metric}' = 'APR' then count(nullif(f.APRVD_DEVIATIONS,0)) WHEN '{metric}' = 'NAPR' then count(nullif(f.UNAPRVD_DEVIATIONS,0)) END FILTER_COUNT, count(f.PRFL_MEASURED) AS TOTAL_COUNT from phd.PROFILES_METHODS_USAGE_DATA_SOLUTIONING_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) GROUP BY f.CNTRCT_STRT_QTR_KEY ) t1 RIGHT JOIN DATE_WINDOWS t2 ON t1.CNTRCT_STRT_QTR_KEY = t2.QTR_KEY ) SELECT ad.MTH_KEY, TOTAL_COUNT, qd.QTR_NUM, qd.YEAR, ad.DATA_LOAD_DESC, cast(coalesce(cast(t1.FILTER_COUNT as float) / cast(nullif(t1.TOTAL_COUNT,0) as float),0)*100.0 as decimal(5,2)) as percent, t1.FILTER_COUNT as values FROM PHD.ACCT_DROP ad LEFT JOIN DATA t1 ON ad.MTH_KEY = t1.QTR_KEY LEFT JOIN phd.QUARTER_DIM qd ON qd.QTR_KEY = t1.QTR_KEY WHERE ad.GRAPH_NM = 'DLM_L2_GR1' AND ad.CURRENT!=1;\",\"description\":\"Delivery Methods, Delivery Usage Solutioning trend\"}",
      "t2CompDMDelDevSLMDetails": "{\"name\":\"t2CompDMDelDevSLMDetails\",\"sqlTemplate\":\"WITH filters AS( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1), DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ) SELECT ad.DATA_LOAD_DESC, cd.CNTRCT_NUM, f.CLIENT, f.PROJECT as PROJ_NAME, prac.PRACTICE_NM, f.SUB_PRACTICE, f.METHOD, f.OTHER_METHODS, f.DEV_REASON FROM phd.METHOD_REPORT_DELIVERY_DEVIATIONS_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY LEFT JOIN phd.practice_dim prac on prac.PRACTICE_KEY = f.PRACTICE_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key and ad.CURRENT!=1 WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only);\",\"description\":\"Delivery Methods, Delivery Usage deviations details\"}",
      "t2CompDMDelDevSLMExport": "{\"name\":\"t2CompDMDelDevSLMExport\",\"sqlTemplate\":\"WITH DATE_WINDOWS AS( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only) SELECT ad.DATA_LOAD_DESC, CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, cd.CNTRCT_NUM, f.OPPTNY_NUM, f.CLIENT, f.PROJECT as PROJECT_NM, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, f.PRACTICE as PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.METHOD, f.NOT_STNDRT_PMT, f.DEV_REASON, f.APRVR_NM, f.CNTRCT_STRT_DT, COALESCE( CASE WHEN locate('/', f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM, 1, locate('/', f.CNTRCT_PM)-1) ELSE f.CNTRCT_PM END, 'N/A') AS CNTRCT_PM, COALESCE( CASE WHEN locate('/', f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE, 1, locate('/', f.CNTRCT_PE)-1) ELSE f.CNTRCT_PE END, 'N/A') AS CNTRCT_PE, COALESCE( CASE WHEN locate('/', f.LEAD_PRTNR) != 0 THEN SUBSTR(f.LEAD_PRTNR, 1, locate('/', f.LEAD_PRTNR)-1) ELSE f.LEAD_PRTNR END, 'N/A') AS LEAD_PRTN, f.PROFILE_ID, f.CRETN_DT, f.MDFD_DT FROM phd.DELIVERY_PROFILES_ALL_DEVIATIONS_FACT f JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.QTR_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key and ad.CURRENT!=1 WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only);\",\"description\":\"Delivery Methods, Delivery Usage deviations export\"}",

      "t2CompDMSolUsgDetails": "{\"name\":\"t2CompDMSolUsgDetails\",\"sqlTemplate\":\"WITH filters AS( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1), DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ) SELECT ad.DATA_LOAD_DESC, od.OPPTNY_NUM AS opty_id, f.CLIENT, f.PROJECT AS proj_name, pd.PRACTICE_NM, f.SUB_PRACTICE, f.STNDRT_METHOD_USED, f.METHOD, f.OTHER_METHODS FROM phd.PROFILES_METHODS_USAGE_DATA_SOLUTIONING_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY LEFT JOIN phd.PRACTICE_DIM pd ON pd.PRACTICE_KEY = f.PRACTICE_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key and ad.CURRENT!=1 WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) AND (( '{metric}' = 'INCDEV' AND f.METHOD_USAGE = 1) OR ( '{metric}' = 'EXLDEV' AND f.DEVIATIONS = 1) ); \",\"description\":\"Delivery Methods, Delivery Usage Solutioning details\"}",
      "t2CompDMSolUsgExport": "{\"name\":\"t2CompDMSolUsgExport\",\"sqlTemplate\":\"WITH date_windows AS ( SELECT qtr_key FROM phd.quarter_dim WHERE qtr_key <= ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY = '{yrMoKey}' FETCH FIRST 1 row only) ORDER BY QTR_KEY DESC FETCH FIRST 5 row only ) SELECT ad.DATA_LOAD_DESC, CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, CASE f.PRFL_SUB WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_SUBMTD, RTRIM(od.OPPTNY_NUM) AS OPPTNY_NUM, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.PRFL_FULL_CMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, f.NOT_COMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.CMPLX_FLG, f.MOSAIC_METHOD_USED, f.OPPTNY_STAT, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR, /* f.PROFILE_DUE_DT, */ f.PROFILE_CRETN_TMS, f.PROFILE_LAST_EDIT_TMS, f.PROFILE_ID FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key {filter} <filter?AND:WHERE> f.PRFL_MEASURED = 1 AND f.PRFL_SUB = 1 AND f.QTR_KEY = ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY = 'CURRENT' FETCH FIRST row only) AND ( ( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) ) FETCH FIRST 2000 rows only WITH ur; \",\"description\":\"Delivery Methods, Delivery Usage Solutioning export\"}",

      "t2CompDMSolDevSLMDetails": "{\"name\":\"t2CompDMSolDevSLMDetails\",\"sqlTemplate\":\"WITH filters AS( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND geo1.geo_lvl1_key NOT IN (0,21) AND grth_plfm.in_scope = 1 AND svc_line.in_scope = 1), DATE_WINDOWS AS ( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ) SELECT ad.DATA_LOAD_DESC, od.OPPTNY_NUM AS opty_id, f.CLIENT, f.PROJECT AS proj_name, pd.PRACTICE_NM, f.SUB_PRACTICE, f.METHOD, f.OTHER_METHODS, f.DEV_REASON FROM phd.PROFILES_METHODS_USAGE_DATA_SOLUTIONING_FACT f INNER JOIN filters ff ON f.geo_lvl1_key = ff.geo_lvl1_key AND f.geo_lvl2_key = ff.geo_lvl2_key AND f.ctry_key = ff.ctry_key AND f.grth_plfm_key = ff.grth_plfm_key AND f.svc_line_key = ff.svc_line_key AND f.indstry_key = ff.indstry_key AND f.practice_key = ff.practice_key AND f.sctr_key = ff.sctr_gb_key JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY LEFT JOIN phd.PRACTICE_DIM pd ON pd.PRACTICE_KEY = f.PRACTICE_KEY LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key and ad.CURRENT!=1 WHERE f.PRFL_MEASURED=1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) AND (( '{metric}' = 'APR' AND f.APRVD_DEVIATIONS = 1) OR ( '{metric}' = 'NAPR' AND f.UNAPRVD_DEVIATIONS = 1) ); \",\"description\":\"Delivery Methods, Delivery Usage Solutioning deviations details\"}",
      "t2CompDMSolDevSLMExport": "{\"name\":\"t2CompDMSolDevSLMExport\",\"sqlTemplate\":\"WITH date_windows AS ( SELECT qtr_key FROM phd.quarter_dim WHERE qtr_key <= ( SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' FETCH FIRST 1 row only) ORDER BY QTR_KEY DESC FETCH FIRST 5 row only ) SELECT ad.DATA_LOAD_DESC, CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, RTRIM(od.OPPTNY_NUM) AS OPPTNY_NUM, RTRIM(f.CLIENT) AS client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, RTRIM(pd.PRACTICE_NM) AS PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.DEV_APRVD, f.METHOD, f.DEV_TYPE, f.NOT_COMPL_CAT, f.NOT_STNDRT_PMT, f.DEV_REASON, f.NON_STNDRT_DEV_REASON, f.APRVR_NM, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR FROM phd.SOLUTIONING_PROFILES_ALL_DEVIATIONS_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key LEFT JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.cntrct_strt_qtr_key LEFT JOIN PHD.ACCT_DROP ad ON dw.qtr_key = ad.mth_key {filter} <filter?AND:WHERE> f.PRFL_MEASURED=1 AND f.qtr_key = ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'DLM_L2_GR1' AND yr_mo_key = 'CURRENT' FETCH FIRST row only) AND (( '{metric}' = 'APR' AND f.DEV_APRVD = 'Yes') OR ( '{metric}' = 'NAPR' AND f.DEV_APRVD = 'No') ) FETCH FIRST 2000 ROWS ONLY WITH UR; \",\"description\":\"Delivery Methods, Delivery Usage Solutioning deviations export\"}",

      "t2CompDMUsgPopContract": "{\"name\":\"t2CompDMUsgPopContract\",\"sqlTemplate\":\"WITH DATE_WINDOWS AS( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only) SELECT CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, cd.CNTRCT_NUM, f.OPPTNY_NUM, f.CLIENT, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, prac.PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.STNDRT_METHOD_USED, f.METHOD, f.OTHER_METHODS, f.DEV_REASON, f.APRVR_NM, f.CNTRCT_STRT_DT, COALESCE( CASE WHEN locate('/', f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM, 1, locate('/', f.CNTRCT_PM)-1) ELSE f.CNTRCT_PM END, 'N/A') AS CNTRCT_PM, COALESCE( CASE WHEN locate('/', f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE, 1, locate('/', f.CNTRCT_PE)-1) ELSE f.CNTRCT_PE END, 'N/A') AS CNTRCT_PE, COALESCE( CASE WHEN locate('/', f.LEAD_PRTN) != 0 THEN SUBSTR(f.LEAD_PRTN, 1, locate('/', f.LEAD_PRTN)-1) ELSE f.LEAD_PRTN END, 'N/A') AS LEAD_PRTNR, f.PROFILE_ID FROM phd.PROFILES_METHODS_USAGE_DATA_DELIVERY_FACT f LEFT JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 LEFT JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key LEFT JOIN phd.practice_dim prac on prac.PRACTICE_KEY = f.PRACTICE_KEY INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY WHERE cd.CNTRCT_NUM = '{cntrctNum}' and f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) FETCH FIRST ROW ONLY WITH UR;\",\"description\":\"Delivery Methods, Delivery Usage contract popup\"}",
      "t2CompDMDevSLMPopContract": "{\"name\":\"t2CompDMDevSLMPopContract\",\"sqlTemplate\":\"WITH DATE_WINDOWS AS( select QTR_KEY FROM phd.QUARTER_DIM where QTR_KEY <=(select MTH_KEY from phd.ACCT_DROP where GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only) SELECT CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, cd.CNTRCT_NUM, f.OPPTNY_NUM, f.CLIENT, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, prac.PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.METHOD, f.OTHER_METHODS, f.DEV_REASON, COALESCE( CASE WHEN locate('/', f.APRVR_NM) != 0 THEN SUBSTR(f.APRVR_NM, 1, locate('/', f.APRVR_NM)-1) ELSE f.APRVR_NM END, 'N/A') AS APRVR_NM, f.CNTRCT_STRT_DT, COALESCE( CASE WHEN locate('/', f.CNTRCT_PM) != 0 THEN SUBSTR(f.CNTRCT_PM, 1, locate('/', f.CNTRCT_PM)-1) ELSE f.CNTRCT_PM END, 'N/A') AS CNTRCT_PM, COALESCE( CASE WHEN locate('/', f.CNTRCT_PE) != 0 THEN SUBSTR(f.CNTRCT_PE, 1, locate('/', f.CNTRCT_PE)-1) ELSE f.CNTRCT_PE END, 'N/A') AS CNTRCT_PE, COALESCE( CASE WHEN locate('/', f.LEAD_PRTN) != 0 THEN SUBSTR(f.LEAD_PRTN, 1, locate('/', f.LEAD_PRTN)-1) ELSE f.LEAD_PRTN END, 'N/A') AS LEAD_PRTNR FROM phd.METHOD_REPORT_DELIVERY_DEVIATIONS_FACT f LEFT JOIN phd.CONTRACT_DIM cd ON cd.CNTRCT_KEY = f.CNTRCT_KEY LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key LEFT JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 LEFT JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 LEFT JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 LEFT JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key LEFT JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key LEFT JOIN phd.practice_dim prac on prac.PRACTICE_KEY = f.PRACTICE_KEY INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY WHERE cd.CNTRCT_NUM = '{cntrctNum}' and f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY='CURRENT' fetch first row only) FETCH FIRST ROW ONLY WITH UR;\",\"description\":\"Delivery Methods, Delivery Usage contract deviations popup\"}",
      "t2CompDMUsgPopOppty": "{\"name\":\"t2CompDMUsgPopOppty\",\"sqlTemplate\":\"with date_windows as ( select qtr_key from phd.quarter_dim where qtr_key <=(select mth_key from phd.acct_drop where graph_nm = 'DLM_L2_GR1' AND YR_MO_KEY = '{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ) SELECT CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, CASE f.PRFL_SUB      WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_SUBMTD, rtrim(od.OPPTNY_NUM) as OPPTNY_NUM, rtrim(f.CLIENT) as client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, rtrim(pd.PRACTICE_NM) as PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.PRFL_FULL_CMPLNT AS prfl_fully_cmpl, f.APRVD_DEV, f.NON_APRVD_DERIVATIONS, f.NOT_COMPLNT_CAT, f.METHOD, f.OTHER_METHODS, f.DEV_REASONS, f.CMPLX_FLG, f.MOSAIC_METHOD_USED, f.OPPTNY_STAT, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR /* f.PROFILE_DUE_DT, f.PROFILE_CRETN_TMS, f.PROFILE_LAST_EDIT_TMS, f.PROFILE_ID */ FROM phd.SOLUTIONING_REPORTING_XREF_FILE_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.CNTRCT_STRT_QTR_KEY {filter}<filter?AND:WHERE> od.OPPTNY_NUM = '{opptyNum}' and f.PRFL_MEASURED = 1 AND f.PRFL_SUB = 1 AND f.QTR_KEY = (SELECT MTH_KEY FROM phd.ACCT_DROP WHERE GRAPH_NM = 'DLM_L2_GR1' AND YR_MO_KEY = '{yrMoKey}' fetch first row only) AND (( '{metric}' = 'COM' AND f.PRFL_COMPL = 1) OR  ( '{metric}' = 'NCOM' AND f.PRFL_NOT_COMPL = 1) ) fetch first row only with ur; \",\"description\":\"Delivery Methods, Delivery Usage oppty popup\"}",
      "t2CompDMDevSLMPopOppty": "{\"name\":\"t2CompDMDevSLMPopOppty\",\"sqlTemplate\":\"with date_windows as ( select qtr_key from phd.quarter_dim where qtr_key <=(select mth_key from phd.acct_drop where graph_nm = 'DLM_L2_GR1' AND YR_MO_KEY = '{yrMoKey}' fetch first 1 row only) ORDER BY QTR_KEY desc fetch first 5 row only ) SELECT CASE f.PRFL_MEASURED WHEN 1 THEN 'Yes' WHEN 0 THEN 'No' END AS PRFL_MEASURED, rtrim(od.OPPTNY_NUM) as OPPTNY_NUM, rtrim(f.CLIENT) as client, f.PROJECT, gpd.GRTH_PLFM_DESC, sld.SVC_LINE_NM, rtrim(pd.PRACTICE_NM) as PRACTICE_NM, f.SUB_PRACTICE, geo1.GEO_LVL1_NM AS geo, geo2.GEO_LVL2_NM AS market, ctry.CTRY_NM, sgd.SCTR_GB_NM, id.INDSTRY_CMR_NM, f.DEV_APRVD, f.METHOD, f.DEV_TYPE, f.NOT_COMPL_CAT, f.NOT_STNDRT_PMT, f.DEV_REASON, f.NON_STNDRT_DEV_REASON, f.APRVR_NM, f.SLTN_EXC_APRVL_DT, f.SLTN_MNGR, f.OPPTNY_OWNR FROM phd.SOLUTIONING_PROFILES_ALL_DEVIATIONS_FACT f INNER JOIN phd.OPPORTUNITY_DIM od ON od.OPPTNY_KEY = f.OPPTNY_KEY INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN (0,21) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gpd ON gpd.grth_plfm_key = f.grth_plfm_key AND gpd.in_scope = 1 INNER JOIN phd.svc_line_dim sld ON sld.svc_line_key = f.svc_line_key AND sld.in_scope = 1 INNER JOIN phd.practice_dim pd ON pd.practice_key = f.practice_key AND pd.include = 1 INNER JOIN phd.sector_gb_dim sgd ON sgd.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim id ON id.indstry_key = f.indstry_key INNER JOIN DATE_WINDOWS dw ON dw.QTR_KEY = f.QTR_KEY {filter}<filter?AND:WHERE> od.OPPTNY_NUM = '{opptyNum}' and f.PRFL_MEASURED=1 AND (( '{metric}' = 'APR' AND f.DEV_APRVD = 'Yes') OR  ( '{metric}' = 'NAPR' AND f.DEV_APRVD = 'No') ) fetch first row only with ur; \",\"description\":\"Delivery Methods, Delivery Usage oppty deviations popup\"}",
    
      "t1FinancialSummary": "{\"name\":\"t1FinancialSummary\",\"sqlTemplate\":\"WITH qtr AS ( SELECT mth_clndr.qtr_key AS curr_qtr_key, CASE WHEN mth_clndr.qtr_num = 1 THEN (mth_clndr.qtr_key - 7) ELSE (mth_clndr.qtr_key - 1) END AS prev_qtr_key FROM phd.acct_drop ad INNER JOIN phd.month_dim mth_clndr ON ad.mth_key + 1 = mth_clndr.mth_key WHERE ad.graph_nm = 'GP_L2_GR1' AND ad.current = 1 ) , QTR_GP AS ( SELECT SUM( CASE WHEN qtr_prev.prev_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END) - SUM( CASE WHEN qtr_prev.prev_qtr_key IS NOT NULL THEN pf.cost ELSE 0 END) AS prev_q_gp, DECIMAL(SUM( CASE WHEN qtr_prev.prev_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END) - SUM( CASE WHEN qtr_prev.prev_qtr_key IS NOT NULL THEN pf.cost ELSE 0 END), 31, 9) / NULLIF(SUM ( CASE WHEN qtr_prev.prev_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END), 0) AS prev_q_gp_pct, SUM( CASE WHEN qtr_prev.prev_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END) AS prev_q_rev , SUM( CASE WHEN qtr_curr.curr_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END) - SUM( CASE WHEN qtr_curr.curr_qtr_key IS NOT NULL THEN pf.cost ELSE 0 END) AS cq_port_gp , DECIMAL(SUM( CASE WHEN qtr_curr.curr_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END) - SUM( CASE WHEN qtr_curr.curr_qtr_key IS NOT NULL THEN pf.cost ELSE 0 END), 31, 9) / NULLIF(SUM ( CASE WHEN qtr_curr.curr_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END), 0) AS cq_port_gp_prec, SUM( CASE WHEN qtr_curr.curr_qtr_key IS NOT NULL THEN pf.rev ELSE 0 END) AS cq_port_rev FROM phd.qtr_gp_snap_fact pf INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pf.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = pf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pf.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = pf.practice_key AND prac.include = 1 LEFT JOIN phd.month_dim mth ON pf.mth_key = mth.mth_key LEFT JOIN qtr qtr_prev ON qtr_prev.prev_qtr_key = mth.qtr_key LEFT JOIN qtr qtr_curr ON qtr_curr.curr_qtr_key = mth.qtr_key {filter} <filter?AND:WHERE> ( qtr_curr.curr_qtr_key IS NOT NULL OR qtr_prev.prev_qtr_key IS NOT NULL ) ) , CURR_QTR AS ( SELECT D.DATA_LOAD_DESC, DT.ACCT_YR_NUM AS ACCT_YR, DT.ACCT_MTH_NUM AS ACCT_MO, DT.ACCT_QTR_NUM AS QTR_NUM, CASE WHEN SUM(F.QTD_ACTLS_REV_CB_AMT) = 0.0 THEN 0.0 ELSE (CAST(SUM (F.QTD_ACTLS_GP_CB_AMT) AS FLOAT) / CAST(SUM (F.QTD_ACTLS_REV_CB_AMT ) AS FLOAT)) END AS CQ_TO_DATE_GP_PREC, SUM(QTD_ACTLS_GP_CB_AMT) AS CQ_TO_DATE_GP, SUM (F.QTD_ACTLS_REV_CB_AMT) AS CQ_TO_DATE_REV, CASE WHEN COALESCE(SUM(YTD_ACTLS_REV_CB_AMT), 0.0) = 0.0 THEN 0.0 ELSE SIGN(SUM(YTD_ACTLS_GP_CB_AMT)) * ABS(CAST(COALESCE(SUM(YTD_ACTLS_GP_CB_AMT), 0.0 ) AS FLOAT) / CAST(COALESCE(SUM(YTD_ACTLS_REV_CB_AMT), 0.0) AS FLOAT)) END AS YTD_PORT_GP_PREC, COALESCE(SUM(F.YTD_ACTLS_GP_CB_AMT), 0.0) AS YTD_PORT_GP, COALESCE(SUM(F.YTD_ACTLS_REV_CB_AMT), 0.0) AS YTD_PORT_REV, COALESCE(CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.EAC_GP_CB_AMT ELSE 0 END) AS FLOAT) / NULLIF(SUM ( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.EAC_REV_CV_AMT ELSE 0 END), 0), 0) AS FORECAST_EAC_ACTLS_GP_PCT, SIGN(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.APRVD_GP_CB_AMT ELSE 0 END)) * ABS(COALESCE(CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.APRVD_GP_CB_AMT ELSE 0 END) AS FLOAT) / NULLIF(SUM ( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.APRVD_REV_CB_AMT ELSE 0 END), 0), 0)) AS APPROVED_PLAN_GP_PRE, SIGN(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.PC_GP_CB_AMT ELSE 0 END)) * ABS(COALESCE(CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.PC_GP_CB_AMT ELSE 0 END) AS FLOAT) / NULLIF(SUM ( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.PC_REV_CB_AMT ELSE 0 END), 0), 0)) AS PRICE_CASE_GP_PREC, CASE WHEN COALESCE(SUM(ITD_ACTLS_REV_CB_AMT), 0.0) = 0.0 THEN 0.0 ELSE SIGN(SUM(ITD_ACTLS_GP_CB_AMT)) * ABS(CAST(COALESCE(SUM(ITD_ACTLS_GP_CB_AMT), 0.0 ) AS FLOAT) / CAST(COALESCE(SUM(ITD_ACTLS_REV_CB_AMT), 0.0) AS FLOAT)) END AS ITD_PORT_GP_PREC, COALESCE(SUM(F.ITD_ACTLS_GP_CB_AMT), 0.0) AS ITD_PORT_GP, COALESCE(SUM(F.ITD_ACTLS_REV_CB_AMT), 0.0) AS ITD_PORT_REV FROM PHD.CONTRACT_LEAKAGE_FACT F INNER JOIN PHD.ACTIVE_TYPE_DIM A ON F.ACTIVE_TYP_KEY = A.ACTIVE_TYP_KEY INNER JOIN PHD.DATE_DIM DT ON F.DATE_KEY = DT.DATE_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN PHD.ACCT_DROP D ON DT.ACCT_YR_NUM = D.CURR_ACCT_YR AND DT.ACCT_MTH_NUM = D.CURR_ACCT_MO AND GRAPH_NM = 'GP_L2_GR1' AND D.YR_MO_KEY = 'CURRENT' {filter} GROUP BY D.DATA_LOAD_DESC, DT.ACCT_YR_NUM, DT.ACCT_MTH_NUM, DT.ACCT_QTR_NUM ) , PREV_MO AS ( SELECT CASE WHEN COALESCE(SUM(CQ_ACTLS_REV_AC_PV_AMT), 0.0) = 0.0 THEN 0.0 ELSE SIGN(SUM(CQ_ACTLS_GP_AC_PV_AMT)) * ABS(CAST(COALESCE(SUM(CQ_ACTLS_GP_AC_PV_AMT ) , 0.0) AS FLOAT) / CAST(COALESCE(SUM(CQ_ACTLS_REV_AC_PV_AMT), 0.0) AS FLOAT)) END AS CQ_PORT_GP_PCT, CASE WHEN COALESCE(SUM(YTD_ACTLS_REV_CB_AMT), 0.0) = 0.0 THEN 0.0 ELSE SIGN(SUM(YTD_ACTLS_GP_CB_AMT)) * ABS(CAST(COALESCE(SUM(YTD_ACTLS_GP_CB_AMT), 0.0 ) AS FLOAT) / CAST(COALESCE(SUM(YTD_ACTLS_REV_CB_AMT), 0.0) AS FLOAT)) END AS YTD_PORT_GP_PCT, COALESCE(CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.EAC_GP_CB_AMT ELSE 0 END) AS FLOAT) / NULLIF(SUM ( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.EAC_REV_CV_AMT ELSE 0 END), 0), 0) AS FORECAST_EAC_GP_PCT, SIGN(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.APRVD_GP_CB_AMT ELSE 0 END)) * ABS(COALESCE(CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.APRVD_GP_CB_AMT ELSE 0 END) AS FLOAT) / NULLIF(SUM ( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.APRVD_REV_CB_AMT ELSE 0 END), 0), 0)) AS APPROVED_PLAN_GP_PCT, SIGN(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.PC_GP_CB_AMT ELSE 0 END)) * ABS(COALESCE(CAST(SUM( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.PC_GP_CB_AMT ELSE 0 END) AS FLOAT) / NULLIF(SUM ( CASE WHEN F.INVLD_PC_CB_FLG = 'N' THEN F.PC_REV_CB_AMT ELSE 0 END), 0), 0)) AS PRICE_CASE_GP_PCT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN PHD.ACCT_DROP ad ON ad.GRAPH_NM = 'GP_L2_GR1' AND ad.YR_MO_KEY = 'CURRENT' AND F.MTH_KEY = ad.MTH_KEY - 1 {filter} <filter?AND:WHERE> F.INVLD_PC_CB_FLG = 'N' ) SELECT MOD(qtr.curr_qtr_key, 10) AS CURR_QTR_NUM, FLOOR(qtr.curr_qtr_key / 10) AS CURR_YR_NUM, C.DATA_LOAD_DESC AS DATA_LOAD_DATE, C.ACCT_YR, C.ACCT_MO, C.QTR_NUM, C.CQ_TO_DATE_GP_PREC, C.CQ_TO_DATE_GP, C.CQ_TO_DATE_REV, P.CQ_PORT_GP_PREC, P.CQ_PORT_GP, P.CQ_PORT_REV, C.YTD_PORT_GP_PREC, C.YTD_PORT_GP, C.YTD_PORT_REV, C.ITD_PORT_GP_PREC, C.ITD_PORT_GP, C.ITD_PORT_REV, C.FORECAST_EAC_ACTLS_GP_PCT AS FORECAST_EAC_GP_PREC, C.APPROVED_PLAN_GP_PRE, C.PRICE_CASE_GP_PREC, COALESCE(P.PREV_Q_GP, 0.0) AS PREV_Q_GP, COALESCE(P.PREV_Q_GP_PCT, 0.0) AS PREV_Q_GP_PCT, COALESCE(P.PREV_Q_REV, 0.0) AS PREV_Q_REV, FLOOR(qtr.prev_qtr_key / 10) AS PREV_YR_NUM, MOD(qtr.prev_qtr_key, 10) AS PREV_QTR_NUM, M.CQ_PORT_GP_PCT, M.YTD_PORT_GP_PCT, M.FORECAST_EAC_GP_PCT, M.APPROVED_PLAN_GP_PCT, M.PRICE_CASE_GP_PCT FROM CURR_QTR C, QTR_GP P, PREV_MO M, qtr\",\"targetModelName\":\"t1FinancialSummary\",\"description\":\"Growth Profit Performance t1 sql, originally named Financial Summary \"}",
      "t2gppTrendMonthPlan": "{\"name\":\"t2gppTrendMonthPlan\",\"sqlTemplate\":\"SELECT mth.mth_num AS acct_mo, mth.yr_num AS acct_yr, CASE WHEN CAST(COALESCE(SUM(f.eac_rev_cv_amt),0.0) AS FLOAT) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(f.eac_gp_cb_amt),0.0) AS FLOAT) / ABS(CAST(COALESCE(SUM (f.eac_rev_cv_amt),0.0) AS FLOAT)) END AS eac_fc_gp_pct, CASE WHEN COALESCE(SUM(f.pc_rev_cb_amt),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN (SUM(f.pc_gp_cb_amt)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM (f.pc_gp_cb_amt),0.0) AS FLOAT) / CAST(COALESCE(SUM(f.pc_rev_cb_amt),0.0) AS FLOAT)) END AS pc_gp_pct, CASE WHEN COALESCE(SUM(f.aprvd_rev_cb_amt),0.0) = 0.0 THEN 0.0 ELSE SUM(CAST(COALESCE(f.aprvd_gp_cb_amt,0.0) AS FLOAT)) / SUM(COALESCE(f.aprvd_rev_cb_amt, 0.0)) END AS ap_gp_pct FROM phd.contract_leakage_fact_16w_v f INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = f.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = f.practice_key AND prac.include = 1 INNER JOIN phd.month_dim mth ON f.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.current = 0 {filter} <filter?AND:WHERE> f.invld_pc_cb_flg = 'N' GROUP BY mth.mth_num, mth.yr_num ORDER BY mth.yr_num DESC, mth.mth_num DESC FETCH FIRST 13 ROWS only ;\",\"description\":\"GP Performance Plan Monthly Trend\"}",
      "t2gppTrendQtrFin": "{\"name\":\"t2gppTrendQtrFin\",\"sqlTemplate\":\"SELECT qtr_key_cd, REV, GP, GP_PCT FROM( SELECT m.yr_NUM || 'Q' || m.qtr_num AS qtr_key_cd, COALESCE(SUM(REV), 0.0) AS REV, COALESCE(CAST(SUM(REV) AS FLOAT), 0.0) - COALESCE(CAST(SUM(COST) AS FLOAT), 0.0) AS GP, CASE WHEN SUM(REV) = 0 THEN 0 ELSE(COALESCE(CAST(SUM(REV) AS FLOAT), 0.0) - COALESCE(CAST(SUM(COST) AS FLOAT), 0.0)) / SUM(REV) END AS GP_PCT FROM PHD.QTR_GP_SNAP_FACT QF INNER JOIN PHD.MONTH_DIM M ON QF.MTH_KEY = M.MTH_KEY INNER JOIN PHD.PROJECT_DIM PJ ON QF.PROJ_KEY = PJ.PROJ_KEY LEFT JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = QF.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = QF.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = QF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = QF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = QF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = QF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDUSTRY ON INDUSTRY.INDSTRY_KEY = QF.INDSTRY_KEY INNER JOIN phd.practice_dim prac ON prac.practice_key = qf.practice_key AND prac.include = 1 {filter} GROUP BY m.yr_NUM || 'Q' || m.qtr_num ORDER BY m.yr_NUM || 'Q' || m.qtr_num DESC FETCH FIRST 6 ROWS ONLY) ORDER BY qtr_key_cd ASC ;\",\"description\":\"GP Performance Financial Quarterly Trend\"}",
      "t2gppTrendMonthFin": "{\"name\":\"t2gppTrendMonthFin\",\"sqlTemplate\":\"select mth.mth_num as mth_num, mth.yr_num as yr_num, coalesce(sum(rev),0.0) as rev, coalesce(cast(sum(rev) as float), 0.0) - coalesce(cast(sum(cost) as float), 0.0) as gp, case when sum(rev) = 0 then 0 else (coalesce(cast(sum(rev) as float), 0.0) - coalesce(cast(sum(cost) as float), 0.0)) / sum(rev) end as gp_pct from phd.mth_gp_snap_fact pf inner join phd.month_dim mth on pf.mth_key = mth.mth_key inner join phd.acct_drop ad on pf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = pf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pf.indstry_key inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> (ad.graph_nm = 'GP_L2_GR1' and ad.current = 0) group by mth.yr_num, mth.mth_num order by mth.yr_num desc, mth.mth_num desc fetch first 13 rows only ;\",\"description\":\"GP Performance Financial Monthly Trend\"}",
      "t2gppTrendITDFin": "{\"name\":\"t2gppTrendITDFin\",\"sqlTemplate\":\"select mth.yr_num as yr_num, mth.mth_num as mth_num, coalesce(sum(pf.itd_actls_rev_cb_amt),0.0) as rev, coalesce(sum(pf.itd_actls_gp_cb_amt),0.0) as gp, case when sum(pf.itd_actls_rev_cb_amt) = 0 then 0 else(coalesce(cast(sum(pf.itd_actls_gp_cb_amt) as float), 0.0)) / (coalesce(cast(sum(pf.itd_actls_rev_cb_amt) as float), 0.0))end as gp_pct from phd.contract_leakage_fact_16w_v pf inner join phd.month_dim mth on pf.mth_key = mth.mth_key inner join phd.acct_drop ad on pf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = pf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pf.indstry_key inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> (ad.graph_nm = 'GP_L2_GR1' and ad.current = 0) group by mth.yr_num, mth.mth_num order by mth.yr_num, mth.mth_num asc fetch first 13 rows only \",\"description\":\"GP Performance Financial ITD Trend\"}",
      "t2gppTrendQTDFin": "{\"name\":\"t2gppTrendQTDFin\",\"sqlTemplate\":\"SELECT MTH.YR_NUM AS YR_NUM, MTH.MTH_NUM AS MTH_NUM, COALESCE(SUM(PF.QTD_ACTLS_REV_CB_AMT),0.0) AS REV, COALESCE(SUM(PF.QTD_ACTLS_GP_CB_AMT),0.0) AS GP, CASE WHEN COALESCE(SUM(PF.QTD_ACTLS_REV_CB_AMT), 0.0) = 0 THEN 0 ELSE(COALESCE(CAST(SUM(PF.QTD_ACTLS_GP_CB_AMT) AS FLOAT),0.0)) /(COALESCE(CAST(SUM(PF.QTD_ACTLS_REV_CB_AMT) AS FLOAT),0.0)) END AS GP_PCT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V PF INNER JOIN PHD.MONTH_DIM MTH ON PF.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = PF.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = PF.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = PF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = PF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = PF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = PF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> (AD.GRAPH_NM = 'GP_L2_GR1' AND AD.CURRENT = 0) GROUP BY MTH.YR_NUM, MTH.MTH_NUM ORDER BY MTH.YR_NUM||MTH.MTH_NUM DESC FETCH FIRST 13 ROWS ONLY \",\"description\":\"GP Performance Financial QTD Trend\"}",
      "t2gppDetailsMonthPlanContract": "{\"name\":\"t2gppDetailsMonthPlanContract\",\"sqlTemplate\":\"SELECT RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, CN.CNTRCT_DESC AS DESCRIPTION, COALESCE(SUM(PF.REV),0.0) AS REV, COALESCE(CAST(SUM(PF.REV) AS FLOAT),0.0) -COALESCE(CAST(SUM(PF.COST) AS FLOAT),0.0) AS GP, CASE WHEN SUM(PF.REV) = 0 THEN 0 ELSE COALESCE(DECIMAL((SUM(PF.REV) - SUM(PF.COST)),20,6) /DECIMAL(SUM(PF.REV),20,6),0.0) END AS GP_PCT, COALESCE(F.ACC_GP_CB_PCT,0.0) AS FC_EAC_PCT, COALESCE(F.APRVD_GP_CB_PCT,0.0) AS AP_PCT, COALESCE(F.PC_GP_CB_PCT,0.0) AS PC_PCT, MTH.YR_NUM AS YR_NUM, MTH.MTH_NUM AS MTH_NUM FROM PHD.MTH_GP_SNAP_FACT PF INNER JOIN PHD.MONTH_DIM MTH ON PF.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.PROJECT_DIM PJ ON PF.PROJ_KEY = PJ.PROJ_KEY INNER JOIN PHD.CONTRACT_DIM CN ON PF.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON PF.CUST_KEY = CD.CUST_KEY LEFT JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = PF.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = PF.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = PF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = PF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = PF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = PF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY LEFT JOIN PHD.CONTRACT_LEAKAGE_FACT_16W_V F ON CN.CNTRCT_KEY = F.CNTRCT_KEY AND PF.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY MTH.YR_NUM, MTH.MTH_NUM, F.ACC_GP_CB_PCT, F.APRVD_GP_CB_PCT, F.PC_GP_CB_PCT, CN.CNTRCT_NUM, CD.CUST_NM, CN.CNTRCT_DESC, CN.PHD_URL ORDER BY(CASE WHEN '{orderColumn}' = 'REV' THEN REV WHEN '{orderColumn}' = 'GP' THEN GP WHEN '{orderColumn}' = 'GPP' THEN GP_PCT WHEN '{orderColumn}' = 'FCP' THEN FC_EAC_PCT WHEN '{orderColumn}' = 'APP' THEN AP_PCT WHEN '{orderColumn}' = 'PCC' THEN PC_PCT END) {orderDirection} FETCH FIRST 30 ROWS ONLY \",\"description\":\"GPP Contract Details Monthly\"}",
      "t2gppDetailsQtrFinContract": "{\"name\":\"t2gppDetailsQtrFinContract\",\"sqlTemplate\":\"with gpsc as ( select cntrct_key, mf.qtr_key,cust_key, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key, coalesce(sum(mf.rev),0.0) as rev, coalesce(sum(mf.gp),0.0) as gp, coalesce(mf.gp_pct, 0.0) as gpp, mf.fc_eac_pct as fcp, mf.ap_pct as app, mf.pc_pct as pcc, m.yr_num as yr_num, m.mth_num as mth_num, ad.data_load_desc as data_load_date from phd.qtr_contract_gp_snap_aggr_fact mf inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = mf.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = mf.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = mf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = mf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = mf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = mf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = mf.indstry_key inner join phd.practice_dim prac on prac.practice_key = mf.practice_key and prac.include = 1 inner join phd.month_dim m on m.qtr_key = mf.qtr_key inner join phd.acct_drop ad on ad.mth_key = m.mth_key  and ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_GR1' {filter} <filter?AND:WHERE> mf.qtr_key = replace('{yrQtrKey}', 'Q', '') group by cntrct_key, mf.qtr_key, cust_key, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key, gp_pct, fc_eac_pct, ap_pct, pc_pct, m.yr_num, mth_num,ad.data_load_desc order by {orderColumn} {orderDirection} fetch first 30 rows only   ) select data_load_date, cn.cntrct_num as cntrct_num, cn.phd_url as ippf_url, cd.cust_nm as client_nm, cn.cntrct_desc as description, rev, gp, gpp, fcp, app, pcc, yr_num, mth_num from gpsc mf inner join phd.contract_dim cn on mf.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on mf.cust_key = cd.cust_key order by {orderColumn} {orderDirection} ; \",\"description\":\"GPP Contract Details Quarterly\"}",
      "t2gppDetailsMonthFinContract": "{\"name\":\"t2gppDetailsMonthFinContract\",\"sqlTemplate\":\"select rtrim(cn.cntrct_num) as cntrct_num, cn.phd_url as ippf_url, cd.cust_nm as client_nm, cn.cntrct_desc as description, coalesce(sum(pf.rev),0.0) as rev, coalesce(cast(sum(pf.rev) as float), 0.0) - coalesce(cast(sum(pf.cost) as float), 0.0) as gp, case when sum(pf.rev) = 0 then 0 else coalesce(decimal((sum(pf.rev) - sum(pf.cost)) ,20,6)/decimal(sum(pf.rev),20,6),0.0) end as gp_pct, coalesce(f.acc_gp_cb_pct,0.0) as fc_eac_pct, coalesce( f.aprvd_gp_cb_pct, 0.0) as ap_pct , coalesce(f.pc_gp_cb_pct, 0.0) as pc_pct, m.yr_num as yr_num, m.mth_num as mth_num from phd.mth_gp_snap_fact pf inner join phd.month_dim m on m.mth_key = pf.mth_key inner join phd.project_dim pj on pf.proj_key = pj.proj_key inner join phd.contract_dim cn on pf.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on pf.cust_key = cd.cust_key left join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pf.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = pf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pf.indstry_key inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 inner join phd.acct_drop ad on pf.mth_key = ad.mth_key left join phd.contract_leakage_fact_16w_v f on cn.cntrct_key = f.cntrct_key and pf.mth_key = f.mth_key {filter} <filter?AND:WHERE> ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_GR1' group by m.yr_num, m.mth_num, f.acc_gp_cb_pct, f.aprvd_gp_cb_pct, f.pc_gp_cb_pct, cn.cntrct_num, cd.cust_nm, cn.cntrct_desc, cn.phd_url order by(case when '{orderColumn}' = 'REV' then rev when '{orderColumn}' = 'GP' then gp when '{orderColumn}' = 'GPP' then gp_pct when '{orderColumn}' = 'FCP' then fc_eac_pct when '{orderColumn}' = 'APP' then ap_pct when '{orderColumn}' = 'PCC' then pc_pct end) {orderDirection} fetch first 30 rows only \",\"description\":\"GPP Contract Details Monthly\"}",
      "t2gppDetailsITDFinContract": "{\"name\":\"t2gppDetailsITDFinContract\",\"sqlTemplate\":\"SELECT RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, CN.CNTRCT_DESC AS DESCRIPTION, COALESCE(F.ITD_ACTLS_REV_CB_AMT,0.0) AS REV, COALESCE(F.ITD_ACTLS_GP_CB_AMT,0.0) AS GP, COALESCE(F.ITD_ACTLS_GP_CB_PCT,0.0) AS GP_PCT, COALESCE(F.ACC_GP_CB_PCT,0.0) AS FC_EAC_PCT, COALESCE(F.APRVD_GP_CB_PCT,0.0) AS AP_PCT, COALESCE(F.PC_GP_CB_PCT,0.0) AS PC_PCT, MTH.YR_NUM AS YR_NUM, MTH.MTH_NUM AS MTH_NUM FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.MONTH_DIM MTH ON F.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON F.CUST_KEY = CD.CUST_KEY LEFT JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' ORDER BY(CASE WHEN '{orderColumn}' = 'REV' THEN REV WHEN '{orderColumn}' = 'GP' THEN GP WHEN '{orderColumn}' = 'GPP' THEN GP_PCT WHEN '{orderColumn}' = 'FCP' THEN FC_EAC_PCT WHEN '{orderColumn}' = 'APP' THEN AP_PCT WHEN '{orderColumn}' = 'PCC' THEN PC_PCT END) {orderDirection} FETCH FIRST 30 ROWS ONLY ;\",\"description\":\"GPP Contract ITD Details\"}",
      "t2gppDetailsQTDFinContract": "{\"name\":\"t2gppDetailsQTDFinContract\",\"sqlTemplate\":\"SELECT RTRIM(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, CN.CNTRCT_DESC AS DESCRIPTION, COALESCE(F.QTD_ACTLS_REV_CB_AMT,0.0) AS REV, COALESCE(F.QTD_ACTLS_GP_CB_AMT,0.0) AS GP, COALESCE(F.QTD_ACTLS_GP_CB_PCT,0.0) AS GP_PCT, COALESCE(F.ACC_GP_CB_PCT,0.0) AS FC_EAC_PCT, COALESCE(F.APRVD_GP_CB_PCT,0.0) AS AP_PCT, COALESCE(F.PC_GP_CB_PCT,0.0) AS PC_PCT, MTH.YR_NUM AS YR_NUM, MTH.MTH_NUM AS MTH_NUM FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V F INNER JOIN PHD.MONTH_DIM MTH ON F.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.CONTRACT_DIM CN ON F.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON F.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = F.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = F.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = F.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = F.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = F.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = F.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = F.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 INNER JOIN PHD.ACCT_DROP AD ON F.MTH_KEY = AD.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' ORDER BY(CASE WHEN '{orderColumn}' = 'REV' THEN REV WHEN '{orderColumn}' = 'GP' THEN GP WHEN '{orderColumn}' = 'GPP' THEN GP_PCT WHEN '{orderColumn}' = 'FCP' THEN FC_EAC_PCT WHEN '{orderColumn}' = 'APP' THEN AP_PCT WHEN '{orderColumn}' = 'PCC' THEN PC_PCT END) {orderDirection} FETCH FIRST 30 ROWS ONLY ;\",\"description\":\"GPP Contract QTD Details\"}",
      "t2gppDetailsMonthPlanWorkNum": "{\"name\":\"t2gppDetailsMonthPlanWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(P.PROJ_NUM) AS WORK_NUM, P.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, RTRIM(CN.CNTRCT_DESC) AS DESCRIPTION, COALESCE(SUM(REV),0.0) AS REV, COALESCE(CAST(SUM(PF.REV) AS FLOAT),0.0) -COALESCE(CAST(SUM(PF.COST) AS FLOAT),0.0) AS GP, CASE WHEN SUM(PF.REV) = 0 THEN 0 ELSE COALESCE(DECIMAL((SUM(REV) - SUM(COST)),20,6) /DECIMAL(SUM(REV),20,6),0.0) END AS GP_PCT, COALESCE(EAC_ACTLS_GP_PCT,0.0) AS FC_EAC_PCT, COALESCE(APRVD_GP_PCT,0.0) AS AP_PCT, COALESCE(PC_GP_PCT,0.0) AS PC_PCT, F.CURR_ACCT_MO AS YR_NUM, F.CURR_ACCT_YR AS MTH_NUM FROM PHD.MTH_GP_SNAP_FACT PF INNER JOIN PHD.PROJECT_DIM P ON PF.PROJ_KEY = P.PROJ_KEY INNER JOIN PHD.CONTRACT_DIM CN ON PF.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON PF.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.GEO_LVL1_DIM G1 ON PF.GEO_LVL1_KEY = G1.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM G2 ON PF.GEO_LVL2_KEY = G2.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM C ON PF.CTRY_KEY = C.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON PF.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON PF.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON PF.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY INNER JOIN PHD.PROJECT_LEAKAGE_FACT_16W_V F ON P.PROJ_KEY = F.PROJ_KEY AND AD.CURR_ACCT_MO = F.CURR_ACCT_MO AND AD.CURR_ACCT_YR = F.CURR_ACCT_YR {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY F.CURR_ACCT_YR, F.CURR_ACCT_MO, F.PC_GP_PCT, F.EAC_ACTLS_GP_PCT, F.APRVD_GP_PCT, P.PROJ_NUM, CD.CUST_NM, CN.CNTRCT_DESC, P.PHD_URL ORDER BY(CASE WHEN '{orderColumn}' = 'REV' THEN REV WHEN '{orderColumn}' = 'GP' THEN GP WHEN '{orderColumn}' = 'GPP' THEN GP_PCT WHEN '{orderColumn}' = 'FCP' THEN FC_EAC_PCT WHEN '{orderColumn}' = 'APP' THEN AP_PCT WHEN '{orderColumn}' = 'PCC' THEN PC_PCT END) {orderDirection} FETCH FIRST 30 ROWS ONLY ;\",\"description\":\"GPP Work Number Details Monthly\"}",
      "t2gppDetailsQtrFinWorkNum": "{\"name\":\"t2gppDetailsQtrFinWorkNum\",\"sqlTemplate\":\"with gpsw as ( select proj_key,cntrct_key,mf.qtr_key,cust_key, geo1.geo_lvl1_key,geo2.geo_lvl2_key,ctry.ctry_key, grth_plfm.grth_plfm_key,svc_line.svc_line_key,sctr.sctr_gb_key,indstry.indstry_key, prac.practice_key, coalesce(sum(mf.rev),0.0) as rev, coalesce(sum(mf.gp),0.0) as gp, coalesce(mf.gp_pct, 0.0) as gpp, mf.fc_eac_pct as fcp, mf.ap_pct as app, mf.pc_pct as pcc, m.yr_num as yr_num, m.mth_num as mth_num, ad.data_load_desc as data_load_date from phd.qtr_gp_snap_aggr_fact mf inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = mf.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = mf.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = mf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = mf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = mf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = mf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = mf.indstry_key inner join phd.practice_dim prac on prac.practice_key = mf.practice_key and prac.include = 1 inner join phd.month_dim m on m.qtr_key = mf.qtr_key inner join phd.acct_drop ad on ad.mth_key = m.mth_key and ad.yr_mo_key = '{yrMoKey}' and ad.GRAPH_NM = 'GP_L2_GR1' {filter} <filter?AND:WHERE> mf.qtr_key = replace('{yrQtrKey}', 'Q', '')  group by proj_key, cntrct_key, mf.qtr_key, cust_key, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key, gp_pct, fc_eac_pct, ap_pct, pc_pct, m.yr_num,mth_num,ad.data_load_desc order by {orderColumn} {orderDirection} fetch first 30 rows only ) select data_load_date, pj.proj_num as work_num, pj.phd_url as ippf_url, cd.cust_nm as client_nm, cn.cntrct_desc as description, rev, gp, gpp, fcp, app, pcc, yr_num, mth_num from gpsw mf inner join phd.project_dim pj on mf.proj_key = pj.proj_key inner join phd.contract_dim cn on mf.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on mf.cust_key = cd.cust_key order by {orderColumn} {orderDirection}; \",\"description\":\"GPP Work Number Details Quarterly\"}",
      "t2gppDetailsMonthFinWorkNum": "{\"name\":\"t2gppDetailsMonthFinWorkNum\",\"sqlTemplate\":\"SELECT RTRIM(PJ.PROJ_NUM) AS WORK_NUM, PJ.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, RTRIM(CN.CNTRCT_DESC) AS DESCRIPTION, COALESCE(SUM(REV),0.0) AS REV, COALESCE(CAST(SUM(PF.REV) AS FLOAT),0.0) -COALESCE(CAST(SUM(PF.COST) AS FLOAT),0.0) AS GP, CASE WHEN SUM(PF.REV) = 0 THEN 0 ELSE COALESCE(DECIMAL((SUM(REV) - SUM(COST)),20,6) /DECIMAL(SUM(REV),20,6),0.0) END AS GP_PCT, COALESCE(EAC_ACTLS_GP_PCT,0.0) AS FC_EAC_PCT, COALESCE(APRVD_GP_PCT,0.0) AS AP_PCT, COALESCE(PC_GP_PCT,0.0) AS PC_PCT, F.CURR_ACCT_YR AS YR_NUM, F.CURR_ACCT_MO AS MTH_NUM FROM PHD.MTH_GP_SNAP_FACT PF INNER JOIN PHD.MONTH_DIM MTH ON PF.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.PROJECT_DIM PJ ON PF.PROJ_KEY = PJ.PROJ_KEY INNER JOIN PHD.CONTRACT_DIM CN ON PF.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON PF.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = PF.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = PF.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = PF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = PF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = PF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = PF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY LEFT JOIN PHD.PROJECT_LEAKAGE_FACT_16W_V F ON PJ.PROJ_KEY = F.PROJ_KEY AND AD.CURR_ACCT_MO = F.CURR_ACCT_MO AND AD.CURR_ACCT_YR = F.CURR_ACCT_YR {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY F.CURR_ACCT_YR, F.CURR_ACCT_MO, EAC_ACTLS_GP_PCT, APRVD_GP_PCT, PC_GP_PCT, PJ.PROJ_NUM, CD.CUST_NM, CN.CNTRCT_DESC, PJ.PHD_URL ORDER BY(CASE WHEN '{orderColumn}' = 'REV' THEN REV WHEN '{orderColumn}' = 'GP' THEN GP WHEN '{orderColumn}' = 'GPP' THEN GP_PCT WHEN '{orderColumn}' = 'FCP' THEN FC_EAC_PCT WHEN '{orderColumn}' = 'APP' THEN AP_PCT WHEN '{orderColumn}' = 'PCC' THEN PC_PCT END) {orderDirection} FETCH FIRST 30 ROWS ONLY ;\",\"description\":\"GPP Work Number Details Monthly\"}",
      "t2gppDetailsITDFinWorkNum": "{\"name\":\"t2gppDetailsITDFinWorkNum\",\"sqlTemplate\":\"SELECT rtrim(pj.proj_num) AS work_num, pj.phd_url AS ippf_url, cd.cust_nm AS client_nm, cn.cntrct_desc AS description, COALESCE(PF.ITD_ACTLS_REV_AMT,0.0) AS rev, COALESCE(PF.ITD_ACTLS_GP_AMT,0.0) AS gp, COALESCE(PF.ITD_ACTLS_GP_PCT,0.0) AS gp_pct, COALESCE(PF.EAC_ACTLS_GP_PCT,0.0) AS fc_eac_pct, COALESCE(PF.APRVD_GP_PCT,0.0) AS ap_pct, COALESCE(PF.PC_GP_PCT,0.0) AS pc_pct, Pf.curr_acct_yr AS yr_num, Pf.curr_acct_mo AS mth_num FROM phd.project_leakage_fact_16w_v pf INNER JOIN phd.month_dim mth ON pf.mth_key = mth.mth_key INNER JOIN phd.project_dim pj ON pf.proj_key = pj.proj_key INNER JOIN phd.contract_dim cn ON pf.cntrct_key = cn.cntrct_key INNER JOIN phd.customer_dim cd ON pf.cust_key = cd.cust_key LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = pf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pf.indstry_key inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 INNER JOIN phd.acct_drop ad ON pf.mth_key = ad.mth_key {filter} <filter?AND:WHERE> ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_GR1' ORDER BY(CASE WHEN '{orderColumn}' = 'REV' THEN rev WHEN '{orderColumn}' = 'GP' THEN gp WHEN '{orderColumn}' = 'GPP' THEN gp_pct WHEN '{orderColumn}' = 'FCP' THEN fc_eac_pct WHEN '{orderColumn}' = 'APP' THEN ap_pct WHEN '{orderColumn}' = 'PCC' THEN pc_pct END) {orderDirection} fetch first 30 ROWS only \",\"description\":\"GPP Work Number ITD Details\"}",
      "t2gppDetailsQTDFinWorkNum": "{\"name\":\"t2gppDetailsQTDFinWorkNum\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, pj.phd_url as ippf_url, cd.cust_nm as client_nm, cn.cntrct_desc as description, coalesce(F.QTD_ACTLS_REV_AMT,0.0) as rev, coalesce(F.QTD_ACTLS_GP_AMT, 0.0) as gp, coalesce(F.QTD_ACTLS_GP_PCT,0.0) as gp_pct, coalesce(f.EAC_ACTLS_GP_PCT,0.0) as fc_eac_pct, coalesce(f.APRVD_GP_PCT , 0.0) as ap_pct, coalesce(f.PC_GP_PCT, 0.0) as pc_pct, f.curr_acct_yr as yr_num, f.curr_acct_mo as mth_num from phd.project_leakage_fact_16w_v f inner join phd.month_dim mth on f.mth_key = mth.mth_key inner join phd.project_dim pj on f.proj_key = pj.proj_key inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on f.cust_key = cd.cust_key left join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = f.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 inner join phd.acct_drop ad on f.mth_key = ad.mth_key {filter} <filter?AND:WHERE> ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_GR1' order by(case when '{orderColumn}' = 'REV' then rev when '{orderColumn}' = 'GP' then gp when '{orderColumn}' = 'GPP' then gp_pct when '{orderColumn}' = 'FCP' then fc_eac_pct when '{orderColumn}' = 'APP' then ap_pct when '{orderColumn}' = 'PCC' then pc_pct end) {orderDirection} fetch first 30 rows only \",\"description\":\"GPP Work Number QTD Details\"}",
      "t2gppExportContract": "{\"name\":\"t2gppExportContract\",\"sqlTemplate\":\"SELECT rtrim(CN.CNTRCT_NUM) AS CNTRCT_NUM, CN.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, COALESCE(SUM(PF.REV),0.0) AS REV, COALESCE(CAST(SUM(PF.REV) AS FLOAT),0.0) -COALESCE(CAST(SUM(PF.COST) AS FLOAT),0.0) AS GP, CASE WHEN SUM(PF.REV) = 0 THEN 0 ELSE COALESCE(DECIMAL((SUM(PF.REV) - SUM(PF.COST)),20,6) /DECIMAL(SUM(PF.REV),20,6),0.0) END AS GP_PCT, COALESCE(F.ACC_GP_CB_PCT,0.0) AS MONTHLY_FC_EAC_PCT, COALESCE(F.APRVD_GP_CB_PCT,0.0) AS MONTHLY_AP_PCT, COALESCE(F.PC_GP_CB_PCT,0.0) AS MONTHLY_PC_PCT, COALESCE((F.ITD_ACTLS_REV_CB_AMT),0.0) AS ITD_REV, COALESCE((F.ITD_ACTLS_GP_CB_AMT),0.0) AS ITD_GP, COALESCE(F.ITD_ACTLS_GP_CB_PCT,0.0) AS ITD_GP_PCT, COALESCE((F.QTD_ACTLS_REV_CB_AMT),0.0) AS QTD_REV, COALESCE((F.QTD_ACTLS_GP_CB_AMT),0.0) AS QTD_GP, COALESCE(F.QTD_ACTLS_GP_CB_PCT,0.0) AS QTD_GP_PCT, COALESCE((QF.REV),0.0) AS QTR_REV, COALESCE((QF.GP),0.0) AS QTR_GP, COALESCE(QF.GP_PCT,0.0) AS QTR_GP_PCT, MTH.YR_NUM AS YR_NUM, MTH.MTH_NUM AS MTH_NUM FROM PHD.MTH_GP_SNAP_FACT PF INNER JOIN PHD.QTR_CONTRACT_GP_SNAP_AGGR_FACT QF ON PF.CNTRCT_KEY = QF.CNTRCT_KEY INNER JOIN PHD.MONTH_DIM MTH ON PF.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.CONTRACT_DIM CN ON PF.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON PF.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY INNER JOIN PHD.GEO_LVL1_DIM G1 ON PF.GEO_LVL1_KEY = G1.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM G2 ON PF.GEO_LVL2_KEY = G2.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM C ON PF.CTRY_KEY = C.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GP ON PF.GRTH_PLFM_KEY = GP.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SL ON PF.SVC_LINE_KEY = SL.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM S ON PF.SCTR_KEY = S.SCTR_GB_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 LEFT JOIN PHD.CONTRACT_LEAKAGE_FACT F ON CN.CNTRCT_KEY = F.CNTRCT_KEY AND PF.MTH_KEY = F.MTH_KEY {filter} <filter?AND:WHERE>(AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1') GROUP BY MTH.YR_NUM, MTH.MTH_NUM, CN.CNTRCT_NUM, CD.CUST_NM, CN.PHD_URL, QF.GP_PCT, F.ACC_GP_CB_PCT, QF.REV, QF.GP, F.APRVD_GP_CB_PCT, F.PC_GP_CB_PCT, F.ITD_ACTLS_GP_CB_PCT, F.QTD_ACTLS_GP_CB_PCT, F.QTD_ACTLS_GP_CB_AMT, F.QTD_ACTLS_REV_CB_AMT, F.ITD_ACTLS_GP_CB_AMT, F.ITD_ACTLS_REV_CB_AMT ORDER BY (CASE WHEN '{orderColumn}' = 'REV' THEN rev WHEN '{orderColumn}' = 'GP' THEN gp WHEN '{orderColumn}' = 'GPP' THEN gp_pct WHEN '{orderColumn}' = 'FCP' THEN monthly_fc_eac_pct WHEN '{orderColumn}' = 'APP' THEN monthly_ap_pct WHEN '{orderColumn}' = 'PCC' THEN monthly_pc_pct END) {orderDirection} fetch first 500 ROWS only ;\",\"description\":\"GPP Contract Export\"}",
      "t2gppExportWorkNum": "{\"name\":\"t2gppExportWorkNum\",\"sqlTemplate\":\"WITH GPS AS( SELECT PROJ_KEY, CNTRCT_KEY, MF.QTR_KEY, CUST_KEY, GEO1.GEO_LVL1_KEY, GEO2.GEO_LVL2_KEY, CTRY.CTRY_KEY, GRTH_PLFM.GRTH_PLFM_KEY, SVC_LINE.SVC_LINE_KEY, SCTR.SCTR_GB_KEY, INDSTRY.INDSTRY_KEY, prac.practice_key, COALESCE(SUM(MF.REV),0.0) AS QTR_REV, COALESCE(SUM(MF.GP),0.0) AS QTR_GP, COALESCE(MF.GP_PCT,0.0) AS QTR_GP_PCT, M.YR_NUM AS YR_NUM, M.MTH_NUM AS MTH_NUM, M.MTH_KEY AS MTH_KEY, AD.DATA_LOAD_DESC AS DATA_LOAD_DATE FROM PHD.QTR_GP_SNAP_AGGR_FACT MF INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = MF.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = MF.GEO_LVL2_KEY INNER JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = MF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = MF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = MF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = MF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = MF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = mf.practice_key and prac.include = 1 INNER JOIN PHD.MONTH_DIM M ON M.QTR_KEY = MF.QTR_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = M.MTH_KEY {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY PROJ_KEY, CNTRCT_KEY, MF.QTR_KEY, CUST_KEY, GEO1.GEO_LVL1_KEY, GEO2.GEO_LVL2_KEY, CTRY.CTRY_KEY, GRTH_PLFM.GRTH_PLFM_KEY, SVC_LINE.SVC_LINE_KEY, SCTR.SCTR_GB_KEY, INDSTRY.INDSTRY_KEY, prac.practice_key, GP_PCT, M.YR_NUM, MTH_NUM, AD.DATA_LOAD_DESC, M.MTH_KEY ORDER BY (CASE WHEN '{orderColumn}' = 'REV' THEN qtr_rev WHEN '{orderColumn}' = 'GP' THEN qtr_gp WHEN '{orderColumn}' = 'GPP' THEN qtr_gp_pct END) ASC FETCH FIRST 500 ROWS ONLY  ) SELECT PF.DATA_LOAD_DATE, PJ.PROJ_NUM AS WORK_NUM, PJ.PHD_URL AS IPPF_URL, CD.CUST_NM AS CLIENT_NM, COALESCE(MS.REV,0.0) AS REV, COALESCE((MS.REV - MS.COST),0.0) AS GP, CASE WHEN (MS.REV) = 0 THEN 0 ELSE COALESCE((MS.REV - MS.COST) / MS.REV,0.0) END AS GP_PCT, COALESCE(F.EAC_ACTLS_GP_PCT,0.0) AS MONTHLY_FC_EAC_PCT, COALESCE(F.APRVD_GP_PCT,0.0) AS MONTHLY_AP_PCT, COALESCE(F.PC_GP_PCT,0.0) AS MONTHLY_PC_PCT, COALESCE((F.ITD_ACTLS_REV_AMT),0.0) AS ITD_REV, COALESCE((F.ITD_ACTLS_GP_AMT),0.0) AS ITD_GP, COALESCE(F.ITD_ACTLS_GP_PCT,0.0) AS ITD_GP_PCT, COALESCE((F.QTD_ACTLS_REV_AMT),0.0) AS QTD_REV, COALESCE((F.QTD_ACTLS_GP_AMT),0.0) AS QTD_GP, COALESCE(F.QTD_ACTLS_GP_PCT,0.0) AS QTD_GP_PCT, QTR_REV, QTR_GP, QTR_GP_PCT, YR_NUM, MTH_NUM FROM GPS PF INNER JOIN PHD.PROJECT_LEAKAGE_FACT_16W_V F ON PF.PROJ_KEY = F.PROJ_KEY AND PF.MTH_KEY = F.MTH_KEY INNER JOIN PHD.MTH_GP_SNAP_FACT MS ON PF.PROJ_KEY = MS.PROJ_KEY AND PF.MTH_KEY = MS.MTH_KEY INNER JOIN PHD.PROJECT_DIM PJ ON PF.PROJ_KEY = PJ.PROJ_KEY INNER JOIN PHD.CONTRACT_DIM CN ON PF.CNTRCT_KEY = CN.CNTRCT_KEY INNER JOIN PHD.CUSTOMER_DIM CD ON PF.CUST_KEY = CD.CUST_KEY INNER JOIN PHD.ACCT_DROP AD ON AD.MTH_KEY = PF.MTH_KEY WHERE AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1';\",\"description\":\"GPP Work Number Export\"}",
      "t2gppSideMonthPlan": "{\"name\":\"t2gppSideMonthPlan\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS bus_attr, ad.data_load_desc AS data_load_date, mth.mth_num AS mth_num, CASE WHEN COALESCE(SUM(pf.PC_REV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SIGN(SUM(pf.PC_GP_CB_AMT)),0.0) AS FLOAT)*ABS(CAST(COALESCE(SUM (pf.PC_GP_CB_AMT),0.0) AS FLOAT) / CAST(COALESCE(SUM(pf.PC_REV_CB_AMT),0.0) AS FLOAT)) END AS pc_pct, CASE WHEN COALESCE(SUM(pf.APRVD_REV_CB_AMT),0.0) = 0.0 THEN 0.0 ELSE SUM(CAST(COALESCE(pf.APRVD_GP_CB_AMT,0.0) AS FLOAT)) / SUM(COALESCE (pf.APRVD_REV_CB_AMT,0.0)) END AS ap_pct, CASE WHEN CAST(COALESCE(SUM(pf.eac_rev_cv_amt),0.0) AS FLOAT) = 0.0 THEN 0.0 ELSE CAST(COALESCE(SUM(pf.eac_gp_cb_amt),0.0) AS FLOAT) / ABS(CAST(COALESCE(SUM (pf.eac_rev_cv_amt),0.0) AS FLOAT)) END AS fc_pct FROM phd.contract_leakage_fact_16w_v pf INNER JOIN phd.month_dim mth ON pf.mth_key = mth.mth_key LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pf.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = pf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pf.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = pf.practice_key AND prac.include = 1 INNER JOIN phd.acct_drop ad ON pf.mth_key = ad.mth_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'GP_L2_GR1'{filter} <filter?AND:WHERE> pf.INVLD_PC_CB_FLG = 'N' GROUP BY {busAttr}, ad.data_load_desc, mth.mth_num ORDER BY bus_attr \",\"description\":\"GP Performance Plan Month side by side\"}",
      "t2gppSideQtrFin": "{\"name\":\"t2gppSideQtrFin\",\"sqlTemplate\":\"SELECT rtrim({busAttr}) AS bus_attr, md.yr_num || 'Q' || md.qtr_num AS qtr_key_cd,(SELECT data_load_desc AS DATA_LOAD_DATE FROM phd.acct_drop WHERE yr_mo_key = '{yrMoKey}' AND graph_nm = 'GP_L2_GR1'), COALESCE(SUM(rev),0.0) AS rev, COALESCE(CAST(SUM(rev) AS FLOAT),0.0) -COALESCE(CAST(SUM(cost) AS FLOAT),0.0) AS gp, CASE WHEN SUM(rev) = 0 THEN 0 ELSE (COALESCE(CAST(SUM(rev) AS FLOAT),0.0) -COALESCE(CAST(SUM(cost) AS FLOAT),0.0)) / SUM(rev) END AS gp_pct FROM phd.qtr_gp_snap_fact pf INNER JOIN phd.month_dim md ON pf.mth_key = md.mth_key LEFT JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = pf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pf.indstry_key inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> md.qtr_key IN (SELECT qtr_key FROM phd.month_dim WHERE mth_key = (SELECT mth_key FROM phd.acct_drop WHERE yr_mo_key = '{yrMoKey}' AND graph_nm = 'GP_L2_GR1')) GROUP BY {busAttr}, md.yr_num || 'Q' || md.qtr_num ORDER BY bus_attr \",\"description\":\"GP Performance Financial Quarterly side by side\"}",
      "t2gppSideMonthFin": "{\"name\":\"t2gppSideMonthFin\",\"sqlTemplate\":\"select rtrim({busAttr}) as bus_attr, ad.data_load_desc as data_load_date, coalesce(sum(rev),0.0) as rev, coalesce(cast(sum(rev) as float), 0.0) - coalesce(cast(sum(cost) as float), 0.0) as gp, case when sum(rev) = 0 then 0 else(coalesce(cast(sum(rev) as float), 0.0) - coalesce(cast(sum(cost) as float), 0.0)) / sum(rev) end as gp_pct, mth.mth_num as mth_num, mth.yr_num as yr_num from phd.mth_gp_snap_fact pf inner join phd.month_dim mth on pf.mth_key = mth.mth_key inner join phd.acct_drop ad on pf.mth_key = ad.mth_key inner join phd.project_dim pj on pf.proj_key = pj.proj_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = pf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pf.indstry_key inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'GP_L2_GR1' group by {busAttr} , ad.data_load_desc, mth.mth_num, mth.yr_num order by bus_attr ;\",\"description\":\"GP Performance Financial Month side by side\"}",
      "t2gppSideITDFin": "{\"name\":\"t2gppSideITDFin\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS BUS_ATTR, AD.DATA_LOAD_DESC AS DATA_LOAD_DATE, MTH.MTH_NUM AS MTH_NUM, COALESCE(SUM(PF.ITD_ACTLS_REV_CB_AMT),0.0) AS REV, COALESCE(SUM(PF.ITD_ACTLS_GP_CB_AMT),0.0) AS GP, CASE WHEN SUM(PF.ITD_ACTLS_REV_CB_AMT) = 0.0 THEN 0 ELSE(DECIMAL(SUM(PF.ITD_ACTLS_GP_CB_AMT),22,9)) /(DECIMAL(SUM(PF.ITD_ACTLS_REV_CB_AMT),22,9)) END AS GP_PCT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V PF INNER JOIN PHD.MONTH_DIM MTH ON PF.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = PF.GEO_LVL1_KEY LEFT JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = PF.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = PF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = PF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = PF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = PF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY {busAttr}, AD.DATA_LOAD_DESC, MTH.MTH_NUM ORDER BY BUS_ATTR \",\"description\":\"GP Performance Financial ITD side by side\"}",
      "t2gppSideQTDFin": "{\"name\":\"t2gppSideQTDFin\",\"sqlTemplate\":\"SELECT RTRIM({busAttr}) AS BUS_ATTR, AD.DATA_LOAD_DESC AS DATA_LOAD_DATE, MTH.MTH_NUM AS MTH_NUM, COALESCE(SUM(PF.QTD_ACTLS_REV_CB_AMT),0.0) AS REV, COALESCE(SUM(PF.QTD_ACTLS_GP_CB_AMT),0.0) AS GP, CASE WHEN COALESCE(SUM(PF.QTD_ACTLS_REV_CB_AMT),0.0) = 0.0 THEN 0 ELSE(DECIMAL(SUM(PF.QTD_ACTLS_GP_CB_AMT),22,9)) /(DECIMAL(SUM(PF.QTD_ACTLS_REV_CB_AMT),22,9)) END AS GP_PCT FROM PHD.CONTRACT_LEAKAGE_FACT_16W_V PF INNER JOIN PHD.MONTH_DIM MTH ON PF.MTH_KEY = MTH.MTH_KEY INNER JOIN PHD.ACCT_DROP AD ON PF.MTH_KEY = AD.MTH_KEY INNER JOIN PHD.GEO_LVL1_DIM GEO1 ON GEO1.GEO_LVL1_KEY = PF.GEO_LVL1_KEY INNER JOIN PHD.GEO_LVL2_DIM GEO2 ON GEO2.GEO_LVL2_KEY = PF.GEO_LVL2_KEY LEFT JOIN PHD.COUNTRY_DIM CTRY ON CTRY.CTRY_KEY = PF.CTRY_KEY INNER JOIN PHD.GROWTH_PLATFORM_DIM GRTH_PLFM ON GRTH_PLFM.GRTH_PLFM_KEY = PF.GRTH_PLFM_KEY INNER JOIN PHD.SVC_LINE_DIM SVC_LINE ON SVC_LINE.SVC_LINE_KEY = PF.SVC_LINE_KEY INNER JOIN PHD.SECTOR_GB_DIM SCTR ON SCTR.SCTR_GB_KEY = PF.SCTR_KEY INNER JOIN PHD.INDUSTRY_DIM INDSTRY ON INDSTRY.INDSTRY_KEY = PF.INDSTRY_KEY inner join phd.practice_dim prac on prac.practice_key = pf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> AD.YR_MO_KEY = '{yrMoKey}' AND AD.GRAPH_NM = 'GP_L2_GR1' GROUP BY {busAttr}, AD.DATA_LOAD_DESC, MTH.MTH_NUM ORDER BY BUS_ATTR \",\"description\":\"GP Performance Financial QTD side by side\"}",

      "t1PredRisk": "{\"name\":\"t1PredRisk\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 AND ctry.GEO_LVL1_KEY = geo1.geo_lvl1_key AND ctry.geo_lvl2_key = geo2.geo_lvl2_key ) , structure AS ( SELECT trim(ad.data_load_desc) AS data_load_desc, overall_risk, pri.tot_tcv_amt, ff.sctr_gb_key , ff.geo_lvl1_key , ff.geo_lvl2_key , ff.ctry_key FROM phd.pri_history_fact pri JOIN phd.acct_drop ad ON pri.mth_key = ad.mth_key AND ad.graph_nm = 'PRI_L1_GR1' /*INNER JOIN phd.dw_brand_dim br ON br.dw_brand_key = pri.dw_brand_key AND CAST(br.brand_short_nm AS CHAR(3))='GBS'*/ INNER JOIN filters ff ON pri.geo_lvl1_key = ff.geo_lvl1_key AND pri.geo_lvl2_key = ff.geo_lvl2_key AND pri.ctry_key = ff.ctry_key AND pri.grth_plfm_key = ff.grth_plfm_key AND pri.svc_line_key = ff.svc_line_key AND pri.indstry_key = ff.indstry_key AND pri.practice_key = ff.practice_key AND pri.sctr_key = ff.sctr_gb_key WHERE pri.trgt_plan = 'PC' AND pri.active_typ_key = 1 AND pri.tot_tcv_amt > 0 AND pri.ctry_key <> -1 FETCH FIRST 99999999999 ROWS ONLY ) SELECT attr_name, pri_type, load_date, avg_risk, total_tcv FROM ( SELECT 'Total' AS attr_name, 'Total' AS pri_type, ad.data_load_desc AS load_date, CAST(ROUND(SUM(overall_risk*tot_tcv_amt) / (SUM(tot_tcv_amt)*100),2) AS DECIMAL (5,2)) AS avg_risk, SUM(tot_tcv_amt) AS total_tcv FROM structure ad GROUP BY ad.data_load_desc UNION ALL SELECT sctr.sctr_gb_nm AS attr_name, t1.pri_type, t1.load_date, t1.avg_risk, t1.total_tcv FROM ( SELECT ad.sctr_gb_key AS attr_name, 'SCTR' AS pri_type, ad.data_load_desc AS load_date, CAST(ROUND(SUM(overall_risk*tot_tcv_amt) / (SUM(tot_tcv_amt)*100),2) AS DECIMAL (5,2)) AS avg_risk, SUM(tot_tcv_amt) AS total_tcv FROM structure ad GROUP BY ad.sctr_gb_key, ad.data_load_desc ) t1 JOIN phd.sector_gb_dim sctr ON t1.attr_name = sctr.sctr_gb_key WHERE sctr.sctr_gb_nm NOT IN ('N/A', 'Unassigned') UNION ALL SELECT RTRIM(geo1.geo_lvl1_nm) AS attr_name, t1.pri_type, t1.load_date, t1.avg_risk, t1.total_tcv FROM ( SELECT ad.geo_lvl1_key AS attr_name, 'GEO' AS pri_type, ad.data_load_desc AS load_date, CAST(ROUND(SUM(overall_risk*tot_tcv_amt) / (SUM(tot_tcv_amt)*100),2) AS DECIMAL (5,2)) AS avg_risk, SUM(tot_tcv_amt) AS total_tcv FROM structure ad GROUP BY ad.geo_lvl1_key, ad.data_load_desc ) t1 JOIN phd.geo_lvl1_dim geo1 ON t1.attr_name = geo1.geo_lvl1_key WHERE geo1.geo_lvl1_key <> -1 UNION ALL SELECT RTRIM(geo2.geo_lvl2_nm) AS attr_name, t1.pri_type, t1.load_date, t1.avg_risk, t1.total_tcv FROM ( SELECT ad.geo_lvl2_key AS attr_name, 'MKT' AS pri_type, ad.data_load_desc AS load_date, CAST(ROUND(SUM(overall_risk*tot_tcv_amt) / (SUM(tot_tcv_amt)*100),2) AS DECIMAL (5,2)) AS avg_risk, SUM(tot_tcv_amt) AS total_tcv FROM structure ad GROUP BY ad.geo_lvl2_key, ad.data_load_desc ) t1 JOIN phd.geo_lvl2_dim geo2 ON t1.attr_name = geo2.geo_lvl2_key WHERE geo2.geo_lvl2_key <> -1 UNION ALL SELECT RTRIM(ctry.ctry_nm) AS attr_name, t1.pri_type, t1.load_date, t1.avg_risk, t1.total_tcv FROM ( SELECT ad.ctry_key AS attr_name, 'CTRY' AS pri_type, ad.data_load_desc AS load_date, CAST(ROUND(SUM(overall_risk*tot_tcv_amt) / (SUM(tot_tcv_amt)*100),2) AS DECIMAL (5,2)) AS avg_risk, SUM(tot_tcv_amt) AS total_tcv FROM structure ad GROUP BY ad.ctry_key, ad.data_load_desc ) t1 JOIN phd.country_dim ctry ON t1.attr_name = ctry.ctry_key ) ORDER BY 2,1 with ur; \",\"description\":\"Predictive Risk Indicator for the T1 page\"}",
      "t2PriVarEacPlanMapContract": "{\"name\":\"t2PriVarEacPlanMapContract\",\"sqlTemplate\":\"with contList as ( select rtrim({busAttr}) as bus_attr, rtrim(pj.cntrct_num) as cntrct_num, rtrim(pj.cntrct_desc) as cntrct_desc, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, rtrim(gbg.glbl_buy_grp_nm) as gbg_nm, rtrim(geo_lvl1_nm) as geo_lvl1_nm, rtrim(geo_lvl2_nm) as geo_lvl2_nm, rtrim(grth_plfm_desc) as grth_plfm_desc, rtrim(svc_line_nm) as svc_line_nm, rtrim(sctr_gb_nm) as sctr_gb_nm, rtrim(indstry_cmr_nm) as indstry_cmr_nm, rtrim(practice_nm) as practice_nm, coalesce((pri.overall_risk), 0.0) as overall_risk, coalesce((pri.eac_to_pln_gp_pct), 0.0) * -1 as var_eac_plan_gp_pct, coalesce((pri.etc_gp_amt), 0.0) as etc_gp from phd.pri_contract_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.contract_dim pj on pri.cntrct_key = pj.cntrct_key inner join phd.global_buying_group_dim gbg on pri.glbl_buy_grp_key = gbg.glbl_buy_grp_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc fetch first 100 rows only   ) select bus_attr, cntrct_num, cntrct_desc, lnch_flg, lnch_date, data_load_desc, gbg_nm, geo_lvl1_nm, geo_lvl2_nm, grth_plfm_desc, svc_line_nm, sctr_gb_nm, indstry_cmr_nm, practice_nm, overall_risk, var_eac_plan_gp_pct, etc_gp from contList order by bus_attr with ur; \",\"description\":\"PRI T2 Contract map\"}",
      "t2PriVarEacPlanMapWorkNum": "{\"name\":\"t2PriVarEacPlanMapWorkNum\",\"sqlTemplate\":\"with projectList as ( select rtrim({busAttr}) as bus_attr, rtrim(pj.proj_num) as work_num, rtrim(pj.proj_desc) as work_desc, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, rtrim(gbg.glbl_buy_grp_nm) as gbg_nm, rtrim(geo_lvl1_nm) as geo_lvl1_nm, rtrim(geo_lvl2_nm) as geo_lvl2_nm, rtrim(grth_plfm_desc) as grth_plfm_desc, rtrim(svc_line_nm) as svc_line_nm, rtrim(sctr_gb_nm) as sctr_gb_nm, rtrim(indstry_cmr_nm) as indstry_cmr_nm, rtrim(practice_nm) as practice_nm, coalesce((pri.overall_risk), 0.0) as overall_risk, coalesce((pri.eac_to_pln_gp_pct), 0.0) * -1 as var_eac_plan_gp_pct, coalesce((pri.etc_gp_amt), 0.0) as etc_gp from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.global_buying_group_dim gbg on pri.glbl_buy_grp_key = gbg.glbl_buy_grp_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc fetch first 100 rows only   ) select bus_attr, work_num, work_desc, lnch_flg, lnch_date, data_load_desc, gbg_nm, geo_lvl1_nm, geo_lvl2_nm, grth_plfm_desc, svc_line_nm, sctr_gb_nm, indstry_cmr_nm, practice_nm, overall_risk, var_eac_plan_gp_pct, etc_gp from projectList order by bus_attr with ur; \",\"description\":\"PRI T2 Work Nbr map\"}",
      "t2PriVarEacPlanDetailsContract": "{\"name\":\"t2PriVarEacPlanDetailsContract\",\"sqlTemplate\":\"with contDetailsList as ( select rtrim(pj.cntrct_num) as cntrct_num, rtrim(pj.cntrct_desc) as cntrct_desc, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, pri.cntrct_stage_pct, rtrim(cd.cust_nm) as client_nm, /* rtrim(gbg.glbl_buy_grp_nm) as gbg_nm, */ rtrim(geo_lvl1_nm) as geo_lvl1_nm, rtrim(geo_lvl2_nm) as geo_lvl2_nm, rtrim(grth_plfm_desc) as grth_plfm_desc, rtrim(svc_line_nm) as svc_line_nm, rtrim(sctr_gb_nm) as sctr_gb_nm, rtrim(ctry.ctry_nm) as ctry_nm, rtrim(indstry_cmr_nm) as indstry_cmr_nm, rtrim(practice_nm) as practice_nm, coalesce((pri.overall_risk), 0.00) as overall_risk, coalesce((pri.mtm_chng_pct), 0.00) as mtm_pts, case when coalesce((pri.mtm_chng_pct), 0.00) > 0 then '#FFA4A9' when coalesce((pri.mtm_chng_pct), 0.00) < 0 then '#9DEEB2' else '#D0E1FF' end as mtm_pts_color, case when coalesce((pri.mtm_chng_pct), 0.00) > 0 then '+' else '' end as mtm_pts_sign, /* red #FFA4A9 green #9DEEB2 blue #D0E1FF */ coalesce((pri.itd_gp_pct), 0.0) as itd_gp_pct, coalesce((pri.pc_gp_pct), 0.0) as pc_gp_pct, coalesce((pri.tot_act_tcv_amt), 0.0) as tcv, coalesce((pri.etc_gp_amt), 0.0) as etc_gp_amt, case when pj.prtnr_nm != '' then substr(pj.prtnr_nm, 1, locate('/',pj.prtnr_nm)-1) else 'N/A' end as partner_nm, case when pj.pm_notes_id != '' then substr(pj.pm_notes_id, 1, locate('/',pj.pm_notes_id)-1) else 'N/A' end as pm_nm, coalesce((pri.pc_gp_amt), 0.0) as pc_gp_amt, coalesce((pri.ap_gp_pct), 0.0) as ap_gp_pct, coalesce((pri.ap_gp_amt), 0.0) as ap_gp_amt, coalesce((pri.eac_to_pln_gp_pct), 0.0) as eac_to_pln_gp_pct, coalesce((pri.etc_gp_pct), 0.0) as etc_gp_pct, coalesce((pri.etc_cost_amt), 0.0) as etc_cost_amt, coalesce((pri.etc_rev_amt), 0.0) as etc_rev_amt, coalesce((pri.itd_cost_amt), 0.0) as itd_cost_amt, coalesce((pri.itd_rev_amt), 0.0) as itd_rev_amt, /* dense_rank() over (partition by pri.{rankAttr}_key order by coalesce(pri.overall_risk,0) desc) as ranking, case when pri2.cntrct_key is null then '--' else cast(dense_rank() over (partition by pri2.{rankAttr}_key order by coalesce(pri2.overall_risk,0) desc) as varchar(5)) end as prev_ranking,  case when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng < 10 then 'NA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng < 10  then 'MEA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng < 10  then 'EU'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng < 10  then 'GCG'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng < 10  then 'AP'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng < 10  then 'LA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'NA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'MEA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'EU'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'GCG'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'AP'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'LA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 100 then 'NA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 100 then 'MEA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 100 then 'EU'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 100 then 'GCG'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 100 then 'AP'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 100 then 'LA'||'_'||coalesce((pri.geo_rnkng), 0) else geo1.geo_lvl1_cd||'_'||coalesce((pri.geo_rnkng), 0) end as geo_ranking, case when pri.is_new = 1 then 'Yes' else 'No' end as new_ind,  case when pri.is_new = 1 then 'New Work No. added' else 'N/A' end as new_reason, */ case when pri.de_list_flg = 1 then 'Yes' else 'No' end as de_ind, case when pri.dca_wtch_lst_flg = 1 then 'Yes' else 'No' end as dca_ind, case when pri.cic_flg = 1 then 'Yes' else 'No' end as cic_ind, coalesce((pri.rsk_typ), 0) as risk_type, case when pri.rsk_typ = 1 then '#E71D32' when pri.rsk_typ = 2 then '#FF7832' else '#E7E6E6' end as risk_color, case when pri.rsk_typ = 1 then 'High' when pri.rsk_typ = 2 then 'Medium' else 'Low' end as risk_value from phd.pri_contract_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key = 'CURRENT' /* inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%' inner join phd.global_buying_group_dim gbg on pri.glbl_buy_grp_key = gbg.glbl_buy_grp_key */ inner join phd.customer_dim cd on pri.cust_key = cd.cust_key inner join phd.contract_dim pj on pri.cntrct_key = pj.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 /*left join phd.pri_contract_history_fact pri2 on pri.cntrct_key = pri2.cntrct_key and pri.mth_key-1 = pri2.mth_key and pri2.trgt_plan = '{type}' and ( pri2.de_list_flg = {de} or pri2.de_list_flg = 0 ) and pri2.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri2.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri2.dca_wtch_lst_flg = {dca} or pri2.dca_wtch_lst_flg = 0 ) and ( pri2.cic_flg = {cic} or pri2.cic_flg = 0 ) */  {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc fetch first 100 rows only ) select cntrct_num, cntrct_desc, lnch_flg, data_load_desc, lnch_date, cntrct_stage_pct, client_nm, geo_lvl1_nm, geo_lvl2_nm, grth_plfm_desc, svc_line_nm, sctr_gb_nm, indstry_cmr_nm, practice_nm, overall_risk, mtm_pts, mtm_pts_color, mtm_pts_sign, itd_gp_pct, pc_gp_pct, tcv, etc_gp_amt, partner_nm, pm_nm, pc_gp_amt, ap_gp_pct, ap_gp_amt, eac_to_pln_gp_pct, etc_gp_pct, etc_cost_amt, etc_rev_amt, itd_cost_amt, itd_rev_amt, /* ranking, prev_ranking, geo_ranking, new_ind, new_reason, */ de_ind, dca_ind, cic_ind, risk_type, risk_color, risk_value from contDetailsList order by risk_type with ur; \",\"description\":\"PRI T2 Contract details\"}",
      "t2PriVarEacPlanDetailsWorkNum": "{\"name\":\"t2PriVarEacPlanDetailsWorkNum\",\"sqlTemplate\":\"with projDetailsList as ( select rtrim(pj.proj_num) as work_num, rtrim(pj.proj_desc) as work_desc, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, pri.proj_stage_pct, rtrim(gbg.glbl_buy_grp_nm) as gbg_nm, rtrim(geo_lvl1_nm) as geo_lvl1_nm, rtrim(geo_lvl2_nm) as geo_lvl2_nm, rtrim(grth_plfm_desc) as grth_plfm_desc, rtrim(svc_line_nm) as svc_line_nm, rtrim(sctr_gb_nm) as sctr_gb_nm, rtrim(indstry_cmr_nm) as indstry_cmr_nm, rtrim(practice_nm) as practice_nm, coalesce((pri.overall_risk), 0.00) as overall_risk, dense_rank() over (partition by pri.{rankAttr}_key order by coalesce(pri.overall_risk,0) desc) as ranking, case when pri2.proj_key is null then '--' else cast(dense_rank() over (partition by pri2.{rankAttr}_key order by coalesce(pri2.overall_risk,0) desc) as varchar(5)) end as prev_ranking, case when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng < 10 then 'NA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng < 10  then 'MEA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng < 10  then 'EU'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng < 10  then 'GCG'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng < 10  then 'AP'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng < 10  then 'LA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'NA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'MEA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'EU'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'GCG'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'AP'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'LA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 100 then 'NA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 100 then 'MEA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 100 then 'EU'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 100 then 'GCG'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 100 then 'AP'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 100 then 'LA'||'_'||coalesce((pri.geo_rnkng), 0) else geo1.geo_lvl1_cd||'_'||coalesce((pri.geo_rnkng), 0) end as geo_ranking, case when pri.is_new = 1 then 'Yes' else 'No' end as new_ind, case when pri.is_new = 1 then 'New Work No. added' else 'N/A' end as new_reason, case when pri.de_list_flg = 1 then 'Yes' else 'No' end as de_ind, case when pri.dca_wtch_lst_flg = 1 then 'Yes' else 'No' end as dca_ind, case when pri.cic_flg = 1 then 'Yes' else 'No' end as cic_ind, coalesce((pri.rsk_typ), 0) as risk_type, case when pri.rsk_typ = 1 then '#E71D32' when pri.rsk_typ = 2 then '#FF7832' else '#E7E6E6' end as risk_color, case when pri.rsk_typ = 1 then 'High' when pri.rsk_typ = 2 then 'Medium' else 'Low' end as risk_value from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.global_buying_group_dim gbg on pri.glbl_buy_grp_key = gbg.glbl_buy_grp_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 left join phd.pri_history_fact pri2 on pri.proj_key = pri2.proj_key and pri.mth_key-1 = pri2.mth_key and pri2.trgt_plan = '{type}' and ( pri2.de_list_flg = {de} or pri2.de_list_flg = 0 ) and pri2.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri2.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri2.dca_wtch_lst_flg = {dca} or pri2.dca_wtch_lst_flg = 0 ) and ( pri2.cic_flg = {cic} or pri2.cic_flg = 0 ) {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc fetch first 100 rows only   ) select work_num, work_desc, lnch_flg, lnch_date, data_load_desc, proj_stage_pct, gbg_nm, geo_lvl1_nm, geo_lvl2_nm, grth_plfm_desc, svc_line_nm, sctr_gb_nm, indstry_cmr_nm, practice_nm, overall_risk, ranking, prev_ranking, geo_ranking, new_ind, new_reason, de_ind, dca_ind, cic_ind, risk_type, risk_color, risk_value from projDetailsList order by risk_type with ur; \",\"description\":\"PRI T2 Work Nbr details\"}",
      "t2PriPopCIContract": "{\"name\":\"t2PriPopCIContract\",\"sqlTemplate\":\"SELECT RTRIM(pj.cntrct_num) AS cntrct_num, RTRIM(pj.cntrct_desc) AS cntrct_desc, pj.cntrct_key, pri.lnch_flg, ad.data_load_desc, ad.desc_2 AS date_label, ad.desc_1 AS lnch_date, DATE(pj.sgnd_dt) AS sgnd_dt, CASE WHEN pj.prtnr_nm != '' THEN SUBSTR(pj.prtnr_nm, 1, locate('/',pj.prtnr_nm)-1) ELSE 'N/A' END AS partner_nm, CASE WHEN pj.pm_notes_id != '' THEN SUBSTR(pj.pm_notes_id, 1, locate('/',pj.pm_notes_id)-1) ELSE 'N/A' END AS PM_NM, RTRIM(geo_lvl1_nm) AS GEO, RTRIM(cd.cust_nm) AS client_nm, RTRIM(geo_lvl2_nm) AS MARKET, RTRIM(grth_plfm_desc) AS GRTH_PLFM_DESC, RTRIM(svc_line_nm) AS SERVICE_LINE, RTRIM(sctr_gb_nm) AS sctr_nm, RTRIM(ctry.ctry_nm) AS CTRY_NM, RTRIM(indstry_cmr_nm) AS INDUSTRY, RTRIM(practice_nm) AS PRACTICE_NM, COALESCE((pri.tot_act_tcv_amt), 0.0) AS tcv, COALESCE((pri.overall_risk), 0.00) AS overall_risk, COALESCE((pri.mtm_chng_pct), 0.00) AS mtm_pts, COALESCE((pri.pc_gp_pct), 0.0) AS pc_gp_pct, COALESCE((pri.pc_gp_amt), 0.0) AS pc_gp_amt, COALESCE((pri.ap_gp_pct), 0.0) AS ap_gp_pct, COALESCE((pri.ap_gp_amt), 0.0) AS ap_gp_amt, COALESCE((pri.eac_to_pln_gp_pct), 0.0) AS eac_to_pln_gp_pct, COALESCE((pri.etc_gp_pct), 0.0) AS etc_gp_pct, COALESCE((pri.etc_gp_amt), 0.0) AS etc_gp_amt, COALESCE((pri.etc_rev_amt), 0.0) AS etc_rev_amt, COALESCE((pri.etc_cost_amt), 0.0) AS etc_cost_amt, COALESCE((pri.itd_gp_pct), 0.0) AS itd_gp_pct, COALESCE((pri.itd_gp_amt), 0.0) AS itd_gp_amt, COALESCE((pri.itd_cost_amt), 0.0) AS itd_cost_amt, COALESCE((pri.itd_rev_amt), 0.0) AS itd_rev_amt, RTRIM(pj.phd_url) AS ippf_url FROM phd.pri_contract_history_fact pri INNER JOIN phd.acct_drop ad ON pri.mth_key = ad.mth_key AND ad.graph_nm = 'PRI_L2_CN1' AND ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ INNER JOIN phd.contract_dim pj ON pri.cntrct_key = pj.cntrct_key INNER JOIN phd.customer_dim cd ON pri.cust_key = cd.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pri.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pri.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = pri.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pri.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pri.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pri.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pri.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = pri.practice_key AND prac.include = 1 /* left join phd.pri_contract_history_fact pri2 on pri.CNTRCT_KEY = pri2.CNTRCT_KEY and pri.mth_key-1 = pri2.mth_key and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) */ {filter} <filter?AND:WHERE> pri.in_scope = 1 AND pj.cntrct_num = '{cntrctNum}' AND pri.trgt_plan = '{type}' AND ( pri.de_list_flg = {de} OR pri.de_list_flg = 0 ) AND pri.lnch_flg = {mdl} AND ( ( 0 = {mdl} AND pri.cntrct_stage_pct {operator} .60 ) OR ( {mdl} = 1 ) ) AND ( pri.dca_wtch_lst_flg = {dca} OR pri.dca_wtch_lst_flg = 0 ) AND ( pri.cic_flg = {cic} OR pri.cic_flg = 0 ) ORDER BY cntrct_num DESC FETCH FIRST row only WITH ur;\",\"description\":\"PRI T2 Popup Contract Info\"}",
      "t2PriPopCIWorkNum": "{\"name\":\"t2PriPopCIWorkNum\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, rtrim(pj.proj_desc) as work_desc, pj.proj_key, cn.cntrct_key, pri.lnch_flg, ad.data_load_desc, ad.desc_2 as date_label, ad.desc_1 as lnch_date, rtrim(cn.cntrct_num) as cntrct_num, rtrim(cn.cntrct_desc) as cntrct_desc, case when pj.prtnr_nm != '' then substr(pj.prtnr_nm, 1, locate('/',pj.prtnr_nm)-1) else 'N/A' end as partner_nm, date(cn.sgnd_dt) as sgnd_dt, case when pj.pm_notes_id != '' then substr(pj.pm_notes_id, 1, locate('/',pj.pm_notes_id)-1) else 'N/A' end as pm_notes_id, rtrim(geo_lvl1_nm) as GEO, rtrim(cd.cust_nm) as client_nm, rtrim(geo_lvl2_nm) as MARKET, rtrim(grth_plfm_desc) as GRTH_PLFM_DESC, rtrim(svc_line_nm) as SERVICE_LINE, rtrim(sctr_gb_nm) as sctr_nm, rtrim(ctry.ctry_nm) as CTRY_NM, rtrim(indstry_cmr_nm) as INDUSTRY, rtrim(practice_nm) as PRACTICE_NM, date(pj.aprv_pln_dt) as aprvd_plan_dt, date(pj.frcst_sbmt_tms) as fcast_aprvd_plan_dt, coalesce((pri.pc_gp_pct), 0.0) as pc_gp_pct, coalesce((pri.pc_gp_amt), 0.0) as pc_gp_amt,  coalesce((pri.tot_tcv_amt), 0.0) as tcv, coalesce((pri.ap_gp_pct), 0.0) as ap_gp_pct, coalesce((pri.ap_gp_amt), 0.0) as ap_gp_amt, coalesce((pri.eac_to_pln_gp_pct), 0.0) as eac_to_pln_gp_pct, coalesce((pri.etc_gp_pct), 0.0) as etc_gp_pct, coalesce((pri.etc_gp_amt), 0.0) as etc_gp_amt, coalesce((pri.etc_rev_amt), 0.0) as etc_rev_amt, coalesce((pri.etc_cost_amt), 0.0) as etc_cost_amt, coalesce((pri.pc_gp_pct), 0.0) as itd_gp_pct, coalesce((pri.pc_gp_amt), 0.0) as itd_gp_amt, coalesce((pri.etc_cost_amt), 0.0) as itd_cost_amt, coalesce((pri.etc_rev_amt), 0.0) as itd_rev_amt, rtrim(pj.phd_url) as ippf_url from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.contract_dim cn on pri.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on pri.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pj.proj_num = '{workNum}' and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by work_num desc fetch first row only with ur; \",\"description\":\"PRI T2 Popup Work Num Info\"}",
      "t2PriPopTrendContract": "{\"name\":\"t2PriPopTrendContract\",\"sqlTemplate\":\"select rtrim(pj.cntrct_num) as cntrct_num, ad.data_load_desc, rtrim(pj.cntrct_desc) as cntrct_desc, rtrim(cd.cust_nm) as client_nm, pri.cntrct_stage_pct as duration, case when pri.lnch_flg = 1 then 'Yes' else 'No' end as launch_flag, pj.cntrct_key, pri.overall_risk as overall_risk, ad.desc_2 as date_label, pri.factor_list as risk_factors, rtrim(pri.trgt_plan) as trgt_plan, m.mth_num as acct_mo, m.yr_num as acct_yr, rtrim(pj.phd_url) as ippf_url /*, pri.contr_factors_desc as pri_factors*/ from phd.pri_contract_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key <> 'CURRENT' inner join phd.month_dim m ON pri.mth_key = m.mth_key /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.contract_dim pj on pri.cntrct_key = pj.cntrct_key inner join phd.customer_dim cd on pri.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry ON ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line ON svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry ON indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pj.cntrct_num ='{cntrctNum}' and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by m.yr_num, m.mth_num asc fetch first 13 rows only with ur; \",\"description\":\"PRI T2 Popup Contract Risk Info\"}",
      "t2PriPopTrendWorkNum": "{\"name\":\"t2PriPopTrendWorkNum\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, ad.data_load_desc, pri.proj_stage_pct as duration, case when pri.lnch_flg = 1 then 'Yes' else 'No' end as launch_flag, pj.proj_key, rtrim(pj.proj_desc) as work_desc, rtrim(cd.cust_nm) as client_nm, pj.cntrct_key, pri.overall_risk as overall_risk, ad.desc_2 as date_label, pri.factor_list_var as risk_factors, rtrim(pri.trgt_plan) as trgt_plan, m.mth_num as acct_mo, m.yr_num as acct_yr, rtrim(pj.phd_url) as ippf_url /*, pri.contr_factors_desc as pri_factors*/ from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key <> 'CURRENT' inner join phd.customer_dim cd on pri.cust_key = cd.cust_key inner join phd.month_dim m ON pri.mth_key = m.mth_key /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.project_dim pj ON pri.proj_key = pj.proj_key inner join phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry ON ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line ON svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry ON indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pj.proj_num ='{workNum}' and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by m.yr_num, m.mth_num asc fetch first 13 rows only with ur; \",\"description\":\"PRI T2 Popup Work Num Risk Info\"}",
      "t2PriExportContract": "{\"name\":\"t2PriExportContract\",\"sqlTemplate\":\"with contExport as ( select rtrim(pj.cntrct_num) as cntrct_num, rtrim(pj.cntrct_desc) as cntrct_desc, ad.data_load_desc, ad.desc_1 as lnch_date, pri.cntrct_stage_pct, rtrim(cd.cust_nm) as client_nm, /* rtrim(gbg.glbl_buy_grp_nm) as gbg_nm, */ rtrim(geo_lvl1_nm) as geo_lvl1_nm, rtrim(geo_lvl2_nm) as geo_lvl2_nm, rtrim(grth_plfm_desc) as grth_plfm_desc, rtrim(svc_line_nm) as svc_line_nm, rtrim(sctr_gb_nm) as sctr_gb_nm, rtrim(ctry.ctry_nm) as ctry_nm, rtrim(indstry_cmr_nm) as indstry_cmr_nm, rtrim(practice_nm) as practice_nm, coalesce((pri.overall_risk), 0.00) as overall_risk, coalesce((pri.mtm_chng_pct), 0.00) as mtm_pts, case when coalesce((pri.mtm_chng_pct), 0.00) > 0 then '#FFA4A9' when coalesce((pri.mtm_chng_pct), 0.00) < 0 then '#9DEEB2' else '#D0E1FF' end as mtm_pts_color, /* red #FFA4A9 green #9DEEB2 blue #D0E1FF */ coalesce((pri.itd_gp_pct), 0.0) as itd_gp_pct, coalesce((pri.itd_gp_amt), 0.0) as itd_gp_amt, coalesce((pri.pc_gp_pct), 0.0) as pc_gp_pct, coalesce((pri.tot_act_tcv_amt), 0.0) as tcv, coalesce((pri.etc_gp_amt), 0.0) as etc_gp_amt, case when pj.prtnr_nm != '' then substr(pj.prtnr_nm, 1, locate('/',pj.prtnr_nm)-1) else 'N/A' end as partner_nm, case when pj.pm_notes_id != '' then substr(pj.pm_notes_id, 1, locate('/',pj.pm_notes_id)-1) else 'N/A' end as pm_nm, coalesce((pri.pc_gp_amt), 0.0) as pc_gp_amt, coalesce((pri.ap_gp_pct), 0.0) as ap_gp_pct, coalesce((pri.ap_gp_amt), 0.0) as ap_gp_amt, coalesce((pri.eac_to_pln_gp_pct), 0.0) as eac_to_pln_gp_pct, coalesce((pri.etc_gp_pct), 0.0) as etc_gp_pct, coalesce((pri.etc_cost_amt), 0.0) as etc_cost_amt, coalesce((pri.etc_rev_amt), 0.0) as etc_rev_amt, coalesce((pri.itd_cost_amt), 0.0) as itd_cost_amt, coalesce((pri.itd_rev_amt), 0.0) as itd_rev_amt, /* dense_rank() over (partition by pri.{rankAttr}_key order by coalesce(pri.overall_risk,0) desc) as ranking, case when pri2.cntrct_key is null then '--' else cast(dense_rank() over (partition by pri2.{rankAttr}_key order by coalesce(pri2.overall_risk,0) desc) as varchar(5)) end as prev_ranking,  case when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng < 10 then 'NA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng < 10  then 'MEA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng < 10  then 'EU'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng < 10  then 'GCG'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng < 10  then 'AP'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng < 10  then 'LA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'NA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'MEA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'EU'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'GCG'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'AP'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'LA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 100 then 'NA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 100 then 'MEA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 100 then 'EU'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 100 then 'GCG'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 100 then 'AP'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 100 then 'LA'||'_'||coalesce((pri.geo_rnkng), 0) else geo1.geo_lvl1_cd||'_'||coalesce((pri.geo_rnkng), 0) end as geo_ranking, case when pri.is_new = 1 then 'Yes' else 'No' end as new_ind,  case when pri.is_new = 1 then 'New Work No. added' else 'N/A' end as new_reason, */ case when pri.de_list_flg = 1 then 'Yes' else 'No' end as de_ind, case when pri.dca_wtch_lst_flg = 1 then 'Yes' else 'No' end as dca_ind, case when pri.cic_flg = 1 then 'Yes' else 'No' end as cic_ind, coalesce((pri.rsk_typ), 0) as risk_type /*, case when pri.rsk_typ = 1 then '#E71D32' when pri.rsk_typ = 2 then '#FF7832' else '#E7E6E6' end as risk_color, case when pri.rsk_typ = 1 then 'High' when pri.rsk_typ = 2 then 'Medium' else 'Low' end as risk_value */ from phd.pri_contract_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key = 'CURRENT' /* inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%' inner join phd.global_buying_group_dim gbg on pri.glbl_buy_grp_key = gbg.glbl_buy_grp_key */ inner join phd.customer_dim cd on pri.cust_key = cd.cust_key inner join phd.contract_dim pj on pri.cntrct_key = pj.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 /* left join phd.pri_contract_history_fact pri2 on pri.cntrct_key = pri2.cntrct_key and pri.mth_key-1 = pri2.mth_key and pri2.trgt_plan = '{type}' and ( pri2.de_list_flg = {de} or pri2.de_list_flg = 0 ) and pri2.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri2.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri2.dca_wtch_lst_flg = {dca} or pri2.dca_wtch_lst_flg = 0 ) and ( pri2.cic_flg = {cic} or pri2.cic_flg = 0 ) */  {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc fetch first 1000 rows only ) select cntrct_num, cntrct_desc, client_nm, partner_nm, pm_nm, data_load_desc, lnch_date, cntrct_stage_pct, geo_lvl1_nm, geo_lvl2_nm, ctry_nm, grth_plfm_desc, svc_line_nm, practice_nm, indstry_cmr_nm, sctr_gb_nm, indstry_cmr_nm, cic_ind, dca_ind, de_ind, overall_risk, mtm_pts, itd_gp_pct, itd_gp_amt, pc_gp_pct, pc_gp_amt, ap_gp_pct, ap_gp_amt, eac_to_pln_gp_pct, etc_gp_pct, etc_gp_amt, etc_cost_amt, etc_rev_amt, itd_cost_amt, itd_rev_amt, tcv, /* ranking, prev_ranking, geo_ranking, new_ind, new_reason, */ risk_type from contExport order by overall_risk desc with ur; \",\"description\":\"PRI T2 Contract export\"}",
      "t2PriExportWorkNum": "{\"name\":\"t2PriExportWorkNum\",\"sqlTemplate\":\"with projExport as ( select rtrim(pj.proj_num) as work_num, rtrim(pj.proj_desc) as work_desc, rtrim(gbg.glbl_buy_grp_nm) as gbg_nm, rtrim(geo_lvl1_nm) as geo_lvl1_nm, rtrim(geo_lvl2_nm) as geo_lvl2_nm, rtrim(grth_plfm_desc) as grth_plfm_desc, rtrim(svc_line_nm) as svc_line_nm, rtrim(sctr_gb_nm) as sctr_gb_nm, rtrim(indstry_cmr_nm) as indstry_cmr_nm, rtrim(practice_nm) as practice_nm, coalesce((pri.overall_risk), 0.00) as overall_risk, dense_rank() over (partition by pri.{rankAttr}_key order by coalesce(pri.overall_risk,0) desc) as ranking, case when pri2.proj_key is null then '--' else cast(dense_rank() over (partition by pri2.{rankAttr}_key order by coalesce(pri2.overall_risk,0) desc) as varchar(5)) end as prev_ranking, case when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng < 10 then 'NA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng < 10  then 'MEA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng < 10  then 'EU'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng < 10  then 'GCG'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng < 10  then 'AP'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng < 10  then 'LA'||'_00'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'NA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'MEA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'EU'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'GCG'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'AP'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 10 and pri.geo_rnkng <= 99 then 'LA'||'_0'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AM' and pri.geo_rnkng >= 100 then 'NA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EA' and pri.geo_rnkng >= 100 then 'MEA'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'EP' and pri.geo_rnkng >= 100 then 'EU'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'CG' and pri.geo_rnkng >= 100 then 'GCG'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'AS' and pri.geo_rnkng >= 100 then 'AP'||'_'||coalesce((pri.geo_rnkng), 0) when geo1.geo_lvl1_cd = 'LA' and pri.geo_rnkng >= 100 then 'LA'||'_'||coalesce((pri.geo_rnkng), 0) else geo1.geo_lvl1_cd||'_'||coalesce((pri.geo_rnkng), 0) end as geo_ranking, coalesce((pri.eac_to_pln_gp_pct), 0.0) as eac_to_pln_gp_pct, coalesce((pri.rsk_typ), 0) as risk_type_val, case when pri.rsk_typ = 1 then 'High' when pri.rsk_typ = 2 then 'Medium' else 'Low' end as risk_type, case when pri.is_new = 1 then 'Yes' else 'No' end as new_ind, case when pri.de_list_flg = 1 then 'Yes' else 'No' end as de_ind, case when pri.dca_wtch_lst_flg = 1 then 'Yes' else 'No' end as dca_ind, case when pri.cic_flg = 1 then 'Yes' else 'No' end as cic_ind, pri.trgt_plan, case when pri.lnch_flg = 1 then 'Yes' else 'No' end as lnch_ind  from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.global_buying_group_dim gbg on pri.glbl_buy_grp_key = gbg.glbl_buy_grp_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 left join phd.pri_history_fact pri2 on pri.proj_key = pri2.proj_key and pri.mth_key-1 = pri2.mth_key and pri2.trgt_plan = '{type}' and ( pri2.de_list_flg = {de} or pri2.de_list_flg = 0 ) and pri2.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri2.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri2.dca_wtch_lst_flg = {dca} or pri2.dca_wtch_lst_flg = 0 ) and ( pri2.cic_flg = {cic} or pri2.cic_flg = 0 ) {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc fetch first 1000 rows only   ) select work_num, work_desc, gbg_nm, geo_lvl1_nm, geo_lvl2_nm, grth_plfm_desc, svc_line_nm, sctr_gb_nm, indstry_cmr_nm, practice_nm, overall_risk, ranking, prev_ranking, geo_ranking, eac_to_pln_gp_pct, risk_type, new_ind, de_ind, dca_ind, cic_ind, trgt_plan, lnch_ind from projExport order by overall_risk desc with ur; \",\"description\":\"PRI T2 Work Nbr export\"}",
      "t2PriAllViewByContract": "{\"name\":\"t2PriAllViewByContract\",\"sqlTemplate\":\"with viewByList as ( select rtrim(sctr_gb_nm) as bus_attr, rtrim(geo_lvl1_nm) as geo, rtrim(geo_lvl2_nm) as market, rtrim(grth_plfm_desc) as growth_platform, rtrim(svc_line_nm) as service_line, rtrim(sctr_gb_nm) as sector, rtrim(indstry_cmr_nm) as industry, rtrim(practice_nm) as practice, coalesce((pri.overall_risk), 0.0) as overall_risk from phd.pri_contract_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc /*fetch first 500 rows only*/   ), viewBySorted as ( select geo, market, growth_platform, service_line, sector, industry, practice, overall_risk, row_number() over (partition by sector order by overall_risk desc) as rn from viewByList ), finalOutput as ( select geo, market, growth_platform, service_line, sector, industry, practice from viewBySorted where rn <= 2000 ) select 'All' as label_txt, 'ALLSC' as all_txt, 'Sectors' as value_txt, 'SCTR' as type_value, 'All' as attr, 'GEO_LVL1' as rankAttr, 0 as sortCol, 1 as orderCol from finalOutput union select 'All' as label_txt, 'ALLGO' as all_txt, 'Geographies' as value_txt, 'GEO' as type_value, 'All' as attr, 'GEO_LVL1' as rankAttr, 0 as sortCol, 2 as orderCol from finalOutput union select 'All' as label_txt, 'ALLMK' as all_txt, 'Markets' as value_txt, 'MKT' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 3 as orderCol from finalOutput union select 'All' as label_txt, 'ALLGP' as all_txt, 'Growth Platforms' as value_txt, 'GPLAT' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 4 as orderCol from finalOutput union select 'All' as label_txt, 'ALLSL' as all_txt, 'Service Lines' as value_txt, 'SERV' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 5 as orderCol from finalOutput union select 'All' as label_txt, 'ALLIN' as all_txt, 'All Industries' as value_txt, 'INDU' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 6 as orderCol from finalOutput union select 'All' as label_txt, 'ALLPR' as all_txt, 'Practices' as value_txt, 'PRACT' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 7 as orderCol from finalOutput union select distinct 'Sector' as label_txt, 'Sector' as all_txt, sector as value_txt, 'SCTR' as type_value, 'SECTOR_DESC' as attr,'SCTR' as rankAttr, 1 as sortCol, 1 as orderCol from finalOutput union select distinct 'Geography' as label_txt, 'Geography' as all_txt, geo as value_txt, 'GEO' as type_value, 'GEO_DESC' as attr,'GEO_LVL1' as rankAttr, 1 as sortCol, 2 as orderCol from finalOutput union select distinct 'Market' as label_txt, 'Market' as all_txt, market as value_txt, 'MKT' as type_value, 'MKT_DESC' as attr,'GEO_LVL2' as rankAttr, 1 as sortCol, 3 as orderCol from finalOutput union select distinct 'Growth Platform' as label_txt, 'Growth Platform' as all_txt, growth_platform as value_txt, 'GPLAT' as type_value, 'GROWTH_PLATFORM_DESC' as attr,'GRTH_PLFM' as rankAttr, 1 as sortCol, 4 as orderCol from finalOutput union select distinct 'Service Line' as label_txt, 'Service Line' as all_txt, service_line as value_txt, 'SERV' as type_value, 'SVC_LINE_DESC' as attr,'SVC_LINE' as rankAttr, 1 as sortCol, 5 as orderCol from finalOutput union select distinct 'Industry' as label_txt, 'Industry' as all_txt, industry as value_txt, 'INDU' as type_value, 'INDUSTRY_DESC' as attr,'INDSTRY' as rankAttr, 1 as sortCol, 6 as orderCol from finalOutput union select distinct 'Practice' as label_txt, 'Practice' as all_txt, practice as value_txt, 'PRACT' as type_value, 'PRACTICE_NM' as attr,'PRACTICE' as rankAttr, 1 as sortCol, 7 as orderCol from finalOutput order by orderCol, sortCol; \",\"description\":\"Predictive Risk Indicator view by with All option, Work Nbrs\"}",
      "t2PriAllViewBy": "{\"name\":\"t2PriAllViewBy\",\"sqlTemplate\":\"with viewByList as ( select rtrim(sctr_gb_nm) as bus_attr, rtrim(geo_lvl1_nm) as geo, rtrim(geo_lvl2_nm) as market, rtrim(grth_plfm_desc) as growth_platform, rtrim(svc_line_nm) as service_line, rtrim(sctr_gb_nm) as sector, rtrim(indstry_cmr_nm) as industry, rtrim(practice_nm) as practice, coalesce((pri.overall_risk), 0.0) as overall_risk from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by overall_risk desc /*fetch first 500 rows only*/   ), viewBySorted as ( select geo, market, growth_platform, service_line, sector, industry, practice, overall_risk, row_number() over (partition by sector order by overall_risk desc) as rn from viewByList ), finalOutput as ( select geo, market, growth_platform, service_line, sector, industry, practice from viewBySorted where rn <= 2000 ) select 'All' as label_txt, 'ALLSC' as all_txt, 'Sectors' as value_txt, 'SCTR' as type_value, 'All' as attr, 'GEO_LVL1' as rankAttr, 0 as sortCol, 1 as orderCol from finalOutput union select 'All' as label_txt, 'ALLGO' as all_txt, 'Geographies' as value_txt, 'GEO' as type_value, 'All' as attr, 'GEO_LVL1' as rankAttr, 0 as sortCol, 2 as orderCol from finalOutput union select 'All' as label_txt, 'ALLMK' as all_txt, 'Markets' as value_txt, 'MKT' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 3 as orderCol from finalOutput union select 'All' as label_txt, 'ALLGP' as all_txt, 'Growth Platforms' as value_txt, 'GPLAT' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 4 as orderCol from finalOutput union select 'All' as label_txt, 'ALLSL' as all_txt, 'Service Lines' as value_txt, 'SERV' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 5 as orderCol from finalOutput union select 'All' as label_txt, 'ALLIN' as all_txt, 'All Industries' as value_txt, 'INDU' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 6 as orderCol from finalOutput union select 'All' as label_txt, 'ALLPR' as all_txt, 'Practices' as value_txt, 'PRACT' as type_value, 'All' as attr,'GEO_LVL1' as rankAttr, 0 as sortCol, 7 as orderCol from finalOutput union select distinct 'Sector' as label_txt, 'Sector' as all_txt, sector as value_txt, 'SCTR' as type_value, 'SECTOR_DESC' as attr,'SCTR' as rankAttr, 1 as sortCol, 1 as orderCol from finalOutput union select distinct 'Geography' as label_txt, 'Geography' as all_txt, geo as value_txt, 'GEO' as type_value, 'GEO_DESC' as attr,'GEO_LVL1' as rankAttr, 1 as sortCol, 2 as orderCol from finalOutput union select distinct 'Market' as label_txt, 'Market' as all_txt, market as value_txt, 'MKT' as type_value, 'MKT_DESC' as attr,'GEO_LVL2' as rankAttr, 1 as sortCol, 3 as orderCol from finalOutput union select distinct 'Growth Platform' as label_txt, 'Growth Platform' as all_txt, growth_platform as value_txt, 'GPLAT' as type_value, 'GROWTH_PLATFORM_DESC' as attr,'GRTH_PLFM' as rankAttr, 1 as sortCol, 4 as orderCol from finalOutput union select distinct 'Service Line' as label_txt, 'Service Line' as all_txt, service_line as value_txt, 'SERV' as type_value, 'SVC_LINE_DESC' as attr,'SVC_LINE' as rankAttr, 1 as sortCol, 5 as orderCol from finalOutput union select distinct 'Industry' as label_txt, 'Industry' as all_txt, industry as value_txt, 'INDU' as type_value, 'INDUSTRY_DESC' as attr,'INDSTRY' as rankAttr, 1 as sortCol, 6 as orderCol from finalOutput union select distinct 'Practice' as label_txt, 'Practice' as all_txt, practice as value_txt, 'PRACT' as type_value, 'PRACTICE_NM' as attr,'PRACTICE' as rankAttr, 1 as sortCol, 7 as orderCol from finalOutput order by orderCol, sortCol; \",\"description\":\"Predictive Risk Indicator view by with All option, Contracts\"}",
      "t2PriPopRiskContract": "{\"name\":\"t2PriPopRiskContract\",\"sqlTemplate\":\"select rtrim(pj.cntrct_num) as cntrct_num, pj.cntrct_key, rtrim(pj.cntrct_desc) as cntrct_desc, rtrim(cd.cust_nm) as client_nm, trgt_plan, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, ad.desc_2 as date_label, pri.factor_list as risk_factors, rtrim(pj.phd_url) as ippf_url from phd.pri_contract_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key = 'CURRENT' /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.contract_dim pj on pri.cntrct_key = pj.cntrct_key inner join phd.customer_dim cd on pri.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pj.cntrct_num = '{cntrctNum}' and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.cntrct_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) fetch first row only with ur; \",\"description\":\"PRI Popup Contract Risk factors\"}",
      "t2PriPopRiskWorkNum": "{\"name\":\"t2PriPopRiskWorkNum\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, pj.proj_key, rtrim(pj.proj_desc) as work_desc, rtrim(cd.cust_nm) as client_nm, pj.cntrct_key, trgt_plan, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, ad.desc_2 as date_label, pri.factor_list_var as risk_factors, rtrim(pj.phd_url) as ippf_url from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' inner join phd.customer_dim cd on pri.cust_key = cd.cust_key /*inner join phd.dw_brand_dim br on br.dw_brand_key = pri.dw_brand_key and br.brand_short_nm like 'GBS%'*/ inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pj.proj_num = '{workNum}' and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) fetch first row only with ur; \",\"description\":\"PRI Popup Work Num Risk factors\"}",
      "t2PriPlanContract": "{\"name\":\"t2PriPlanContract\",\"sqlTemplate\":\"select rtrim(pj.cntrct_num) as cntrct_num, pri.trgt_plan, count (*) as count from phd.pri_contract_history_fact pri inner join phd.contract_dim pj on pri.cntrct_key = pj.cntrct_key inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_CN1' and ad.yr_mo_key = 'CURRENT' where pri.in_scope = 1 and pj.cntrct_num = '{cntrctNum}' group by pri.trgt_plan, pj.cntrct_num with ur; \",\"description\":\"Returns plan type flags for provided work number\"}", 
      "t2PriPlanWorkNum": "{\"name\":\"t2PriPlanWorkNum\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, pri.trgt_plan, count (*) as count from phd.pri_history_fact pri inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' where pri.in_scope = 1 and pj.proj_num = '{workNum}' group by pri.trgt_plan, pj.proj_num with ur; \",\"description\":\"Returns plan type flags for provided work number\"}", 
      "t2PriPopInclContract": "{\"name\":\"t2PriPopInclContract\",\"sqlTemplate\":\"SELECT RTRIM(pj.proj_num) AS work_num, RTRIM(pj.proj_desc) AS work_desc, pj.proj_key, cn.cntrct_key, pri.lnch_flg, ad.data_load_desc, ad.desc_1 AS lnch_date, RTRIM(cn.cntrct_num) AS cntrct_num, COALESCE(cic,' ') AS cic, CASE WHEN pri.cic_pm_nm != '' THEN SUBSTR(pri.cic_pm_nm, 1, locate('/',pri.cic_pm_nm)-1) ELSE 'N/A' END AS cic_pm_nm, COALESCE(pal_nm,' ') AS pal_nm, COALESCE(sub_proj_id,' ') AS sub_proj_id, COALESCE(sub_proj_nm,' ') AS sub_proj_nm, COALESCE(master_proj_nm,' ') AS master_proj_nm, COALESCE(proj_id,' ') AS proj_id, COALESCE(cic_status,' ') AS cic_status, cic_dlvry_risc_score AS cic_score, CASE WHEN cic_dlvry_risc_score >= 0 AND cic_dlvry_risc_score <= 9 THEN '#5AA700' WHEN cic_dlvry_risc_score >= 10 AND cic_dlvry_risc_score <= 40 THEN '#FF7832' WHEN cic_dlvry_risc_score >= 41 THEN '#E71D32' ELSE '#fff0' END AS cic_score_color, CASE WHEN cic_dlvry_risc_score >= 0 AND cic_dlvry_risc_score <= 9 THEN 'Low' WHEN cic_dlvry_risc_score >= 10 AND cic_dlvry_risc_score <= 40 THEN 'Medium' WHEN cic_dlvry_risc_score >= 41 THEN 'High' ELSE 'N/A' END AS cic_score_text, COALESCE(reasons,' ') AS reasons, RTRIM(pj.phd_url) AS ippf_url FROM phd.pri_history_fact pri INNER JOIN phd.acct_drop ad ON pri.mth_key = ad.mth_key AND ad.graph_nm = 'PRI_L2_CN1' AND ad.yr_mo_key = 'CURRENT' INNER JOIN phd.project_dim pj ON pri.proj_key = pj.proj_key INNER JOIN phd.contract_dim cn ON pri.cntrct_key = cn.cntrct_key AND cn.cntrct_num = '{cntrctNum}' INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pri.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pri.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = pri.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pri.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pri.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pri.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pri.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = pri.practice_key AND prac.include = 1 {filter} <filter?AND:WHERE> pri.trgt_plan = 'PC' AND pri.cic_flg = 1 ORDER BY pri.cic_dlvry_risc_score ASC WITH ur; \",\"description\":\"PRI T2 Popup Contract Inclusions\"}",
      "t2PriPopInclWorkNum": "{\"name\":\"t2PriPopInclWorkNum\",\"sqlTemplate\":\"select rtrim(pj.proj_num) as work_num, rtrim(pj.proj_desc) as work_desc, pj.proj_key, pri.cic_flg, cn.cntrct_key, pri.lnch_flg, ad.data_load_desc, ad.desc_1 as lnch_date, case when pri.de_list_flg = 1 then 'Yes' else 'No' end as de_list_flg, rtrim(cn.cntrct_num) as cntrct_num, coalesce(cic,' ') as cic, case when pri.cic_pm_nm != '' then substr(pri.cic_pm_nm, 1, locate('/',pri.cic_pm_nm)-1) else 'N/A' end as cic_pm_nm, coalesce(pal_nm,' ') as pal_nm, coalesce(sub_proj_id,' ') as sub_proj_id, coalesce(sub_proj_nm,' ') as sub_proj_nm, coalesce(master_proj_nm,' ') as master_proj_nm, coalesce(proj_id,' ') as proj_id, coalesce(cic_status,' ') as cic_status, cic_dlvry_risc_score as cic_score, case when cic_dlvry_risc_score >= 0 and cic_dlvry_risc_score <= 9 then '#5AA700' when cic_dlvry_risc_score >= 10 and cic_dlvry_risc_score <= 40 then '#FF7832' when cic_dlvry_risc_score >= 41 then '#E71D32' ELSE '#fff0' end as cic_score_color, case when cic_dlvry_risc_score >= 0 and cic_dlvry_risc_score <= 9 then 'Low' when cic_dlvry_risc_score >= 10 and cic_dlvry_risc_score <= 40 then 'Medium' when cic_dlvry_risc_score >= 41 then 'High' ELSE 'N/A' end as cic_score_text, coalesce(reasons,' ') as reasons, rtrim(pj.phd_url) as ippf_url, rtrim(pj.phd_url) as dca_url, date(de_list_tms) as de_date from phd.pri_history_fact pri inner join phd.acct_drop ad on pri.mth_key = ad.mth_key and ad.graph_nm = 'PRI_L2_GR1' and ad.yr_mo_key = 'CURRENT' inner join phd.project_dim pj on pri.proj_key = pj.proj_key inner join phd.contract_dim cn on pri.cntrct_key = cn.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = pri.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = pri.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = pri.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = pri.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = pri.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = pri.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = pri.indstry_key inner join phd.practice_dim prac on prac.practice_key = pri.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> pri.in_scope = 1 and pj.proj_num = '{workNum}' and pri.trgt_plan = '{type}' and ( pri.de_list_flg = {de} or pri.de_list_flg = 0 ) and pri.lnch_flg = {mdl} and ( ( 0 = {mdl} and pri.proj_stage_pct {operator} .60 ) or ( {mdl} = 1 ) ) and ( pri.dca_wtch_lst_flg = {dca} or pri.dca_wtch_lst_flg = 0 ) and ( pri.cic_flg = {cic} or pri.cic_flg = 0 ) order by work_num desc fetch first row only with ur; \",\"description\":\"PRI T2 Popup Work Num Inclusions\"}",
      "t2PriPopDEContract": "{\"name\":\"t2PriPopDEContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc, ad.desc_1 AS lnch_date, cn.cntrct_key, RTRIM(cn.cntrct_num) AS cntrct_num, CASE WHEN pri.de_list_flg = 1 THEN 'Yes' ELSE 'No' END AS de_list_flg, DATE(pri.de_list_tms) AS de_date, pri.lnch_flg, RTRIM(cn.PHD_URL) AS IPPF_URL FROM phd.PRI_CONTRACT_HISTORY_FACT pri INNER JOIN phd.acct_drop ad ON pri.mth_key = ad.mth_key AND ad.graph_nm = 'PRI_L2_CN1' AND ad.yr_mo_key = 'CURRENT' INNER JOIN phd.contract_dim cn ON pri.cntrct_key = cn.cntrct_key AND cn.cntrct_num = '{cntrctNum}' WHERE pri.trgt_plan = 'PC'\",\"description\":\"PRI T2 Popup Contract DE\"}",

      "t1UBAR": "{\"name\":\"t1UBAR\",\"sqlTemplate\":\"select ad.data_load_desc as load_date, coalesce(sum(ubar_tot),0.0) as total, coalesce(sum(buck_1_30),0.0) as a30, coalesce(sum(buck_31_60),0.0) as a60, coalesce(sum(buck_61_90),0.0) as a90, coalesce(sum(buck_91_120),0.0) as a120, coalesce(sum(buck_121_180),0.0) as a180, coalesce(sum(buck_181_270),0.0) as a270, coalesce(sum(buck_271_365),0.0) as a360, coalesce(sum(buck_365),0.0) as a361 from phd.ubar_history_fact uf inner join phd.project_dim pj on uf.proj_key = pj.proj_key inner join phd.month_dim mth on uf.mth_key = mth.mth_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ad.yr_mo_key = 'CURRENT' and ad.graph_nm = 'UB_L2_GR1' group by ad.data_load_desc ;\",\"description\":\"UBAR AR T1 data\"}",
      "t2UBCountContract": "{\"name\":\"t2UBCountContract\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 ) , globalTotal AS ( SELECT COALESCE(SUM(ubar_tot),0.0) AS total, COALESCE(SUM(buck_01),0.0) AS tot_buck_01, COALESCE(SUM(buck_02),0.0) AS tot_buck_02, COALESCE(SUM(buck_03),0.0) AS tot_buck_03, COALESCE(SUM(buck_04),0.0) AS tot_buck_04, COALESCE(SUM(buck_05),0.0) AS tot_buck_05, COALESCE(SUM(buck_06),0.0) AS tot_buck_06, COALESCE(SUM(buck_07),0.0) AS tot_buck_07, COALESCE(SUM(buck_08),0.0) AS tot_buck_08, COALESCE(SUM(buck_09),0.0) AS tot_buck_09, COALESCE(SUM(buck_10_11_12),0.0) AS tot_buck_10_11_12, COALESCE(SUM(buck_13),0.0) AS tot_buck_13 FROM phd.ubar_history_fact uf INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) ) , ubar_count AS ( SELECT RTRIM({busAttr}) AS busattr , ad.data_load_desc, COUNT(NULLIF(buck_01,0.0)) AS a30_cnt, COUNT(NULLIF(buck_02,0.0)) AS a60_cnt, COUNT(NULLIF(buck_03,0.0)) AS a90_cnt, COUNT(NULLIF(buck_04,0.0)) AS a120_cnt, COUNT(NULLIF(buck_05,0.0)) AS a150_cnt, COUNT(NULLIF(buck_06,0.0)) AS a180_cnt, COUNT(NULLIF(buck_07,0.0)) AS a210_cnt, COUNT(NULLIF(buck_08,0.0)) AS a240_cnt, COUNT(NULLIF(buck_09,0.0)) AS a270_cnt, COUNT(NULLIF(buck_10_11_12,0.0)) AS a360_cnt, COUNT(NULLIF(buck_13,0.0)) AS a361_cnt, COUNT(NULLIF(ubar_tot,0.0)) AS ubtotal_cnt, COALESCE(SUM(ubar_tot),0.0) AS ubar_tot, COALESCE(SUM(buck_01),0.0) AS buck_01, COALESCE(SUM(buck_02),0.0) AS buck_02, COALESCE(SUM(buck_03),0.0) AS buck_03, COALESCE(SUM(buck_04),0.0) AS buck_04, COALESCE(SUM(buck_05),0.0) AS buck_05, COALESCE(SUM(buck_06),0.0) AS buck_06, COALESCE(SUM(buck_07),0.0) AS buck_07, COALESCE(SUM(buck_08),0.0) AS buck_08, COALESCE(SUM(buck_09),0.0) AS buck_09, COALESCE(SUM(buck_10_11_12),0.0) AS buck_10_11_12, COALESCE(SUM(buck_13),0.0) AS buck_13 FROM phd.ubar_history_fact uf INNER JOIN phd.contract_dim cn ON uf.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) GROUP BY {busAttr}, ad.data_load_desc ) SELECT busattr, data_load_desc, a30_cnt, a60_cnt, a90_cnt, a120_cnt, a150_cnt, a180_cnt, a210_cnt, a240_cnt, a270_cnt, a360_cnt, a361_cnt, ubtotal_cnt, buck_01 AS a30, buck_02 AS a60, buck_03 AS a90, buck_04 AS a120, buck_05 AS a150, buck_06 AS a180, buck_07 AS a210, buck_08 AS a240, buck_09 AS a270, buck_10_11_12 AS a360, buck_13 AS a361, COALESCE((CAST(buck_01 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_01,0.0) AS FLOAT)),0.0) AS a30_pct, COALESCE((CAST(buck_02 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_02,0.0) AS FLOAT)),0.0) AS a60_pct, COALESCE((CAST(buck_03 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_03,0.0) AS FLOAT)),0.0) AS a90_pct, COALESCE((CAST(buck_04 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_04,0.0) AS FLOAT)),0.0) AS a120_pct, COALESCE((CAST(buck_05 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_05,0.0) AS FLOAT)),0.0) AS a150_pct, COALESCE((CAST(buck_06 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_06,0.0) AS FLOAT)),0.0) AS a180_pct, COALESCE((CAST(buck_07 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_07,0.0) AS FLOAT)),0.0) AS a210_pct, COALESCE((CAST(buck_08 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_08,0.0) AS FLOAT)),0.0) AS a240_pct, COALESCE((CAST(buck_09 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_09,0.0) AS FLOAT)),0.0) AS a270_pct, COALESCE((CAST(buck_10_11_12 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_10_11_12,0) AS FLOAT) ),0.0) AS a360_pct, COALESCE((CAST(buck_13 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_13,0.0) AS FLOAT)),0.0) AS a361_pct, ubar_tot AS ubtotal, COALESCE((CAST(ubar_tot AS FLOAT) / CAST(NULLIF(globaltotal.total,0.0) AS FLOAT)),0.0) AS ubTotal_pct FROM ubar_count, globalTotal ORDER BY busattr ;\",\"description\":\"UBAR T2 Count Contract data\"}",
      "t2UBCountWorkNum": "{\"name\":\"t2UBCountWorkNum\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 ), globalTotal AS ( SELECT COALESCE(SUM(ubar_tot),0.0) AS total, COALESCE(SUM(buck_01),0.0) AS tot_buck_01, COALESCE(SUM(buck_02),0.0) AS tot_buck_02, COALESCE(SUM(buck_03),0.0) AS tot_buck_03, COALESCE(SUM(buck_04),0.0) AS tot_buck_04, COALESCE(SUM(buck_05),0.0) AS tot_buck_05, COALESCE(SUM(buck_06),0.0) AS tot_buck_06, COALESCE(SUM(buck_07),0.0) AS tot_buck_07, COALESCE(SUM(buck_08),0.0) AS tot_buck_08, COALESCE(SUM(buck_09),0.0) AS tot_buck_09, COALESCE(SUM(buck_10_11_12),0.0) AS tot_buck_10_11_12, COALESCE(SUM(buck_13),0.0) AS tot_buck_13 FROM phd.ubar_history_fact uf INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) ), ubar_count as ( SELECT RTRIM({busAttr}) AS busattr , ad.data_load_desc, count(nullif(buck_01,0.0)) as a30_cnt, count(nullif(buck_02,0.0)) as a60_cnt, count(nullif(buck_03,0.0)) as a90_cnt, count(nullif(buck_04,0.0)) as a120_cnt, count(nullif(buck_05,0.0)) as a150_cnt, count(nullif(buck_06,0.0)) as a180_cnt, count(nullif(buck_07,0.0)) as a210_cnt, count(nullif(buck_08,0.0)) as a240_cnt, count(nullif(buck_09,0.0)) as a270_cnt, count(nullif(buck_10_11_12,0.0)) as a360_cnt, count(nullif(buck_13,0.0)) as a361_cnt, count(nullif(ubar_tot,0.0)) as ubtotal_cnt, COALESCE(SUM(ubar_tot),0.0) as ubar_tot, COALESCE(SUM(buck_01),0.0) AS buck_01, COALESCE(SUM(buck_02),0.0) AS buck_02, COALESCE(SUM(buck_03),0.0) AS buck_03, COALESCE(SUM(buck_04),0.0) AS buck_04, COALESCE(SUM(buck_05),0.0) AS buck_05, COALESCE(SUM(buck_06),0.0) AS buck_06, COALESCE(SUM(buck_07),0.0) AS buck_07, COALESCE(SUM(buck_08),0.0) AS buck_08, COALESCE(SUM(buck_09),0.0) AS buck_09, COALESCE(SUM(buck_10_11_12),0.0) AS buck_10_11_12, COALESCE(SUM(buck_13),0.0) AS buck_13 FROM phd.ubar_history_fact uf INNER JOIN phd.project_dim pj ON uf.proj_key = pj.proj_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) GROUP BY {busAttr}, ad.data_load_desc ) SELECT busattr, data_load_desc, a30_cnt, a60_cnt, a90_cnt, a120_cnt, a150_cnt, a180_cnt, a210_cnt, a240_cnt, a270_cnt, a360_cnt, a361_cnt, ubtotal_cnt, buck_01 as a30, buck_02 as a60, buck_03 as a90, buck_04 as a120, buck_05 as a150, buck_06 as a180, buck_07 as a210, buck_08 as a240, buck_09 as a270, buck_10_11_12 as a360, buck_13 as a361, COALESCE((CAST(buck_01 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_01,0.0) AS FLOAT)),0.0) as a30_pct, COALESCE((CAST(buck_02 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_02,0.0) AS FLOAT)),0.0) as a60_pct, COALESCE((CAST(buck_03 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_03,0.0) AS FLOAT)),0.0) as a90_pct, COALESCE((CAST(buck_04 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_04,0.0) AS FLOAT)),0.0) as a120_pct, COALESCE((CAST(buck_05 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_05,0.0) AS FLOAT)),0.0) as a150_pct, COALESCE((CAST(buck_06 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_06,0.0) AS FLOAT)),0.0) as a180_pct, COALESCE((CAST(buck_07 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_07,0.0) AS FLOAT)),0.0) as a210_pct, COALESCE((CAST(buck_08 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_08,0.0) AS FLOAT)),0.0) as a240_pct, COALESCE((CAST(buck_09 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_09,0.0) AS FLOAT)),0.0) as a270_pct, COALESCE((CAST(buck_10_11_12 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_10_11_12,0) AS FLOAT)),0.0) as a360_pct, COALESCE((CAST(buck_13 AS FLOAT) / CAST(nullif(globaltotal.tot_buck_13,0.0) AS FLOAT)),0.0) as a361_pct, ubar_tot AS ubtotal, COALESCE((CAST(ubar_tot AS FLOAT) / CAST(nullif(globaltotal.total,0.0) AS FLOAT)),0.0) as ubTotal_pct FROM ubar_count,globalTotal ORDER BY busattr ; \",\"description\":\"UBAR T2 Count Work No. data\"}",
      "t2UBCountClient": "{\"name\":\"t2UBCountClient\",\"sqlTemplate\":\"WITH filters AS ( SELECT {busAttr}, geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 ) , globalTotal AS ( SELECT COALESCE(SUM(ubar_tot),0.0) AS total, COALESCE(SUM(buck_01),0.0) AS tot_buck_01, COALESCE(SUM(buck_02),0.0) AS tot_buck_02, COALESCE(SUM(buck_03),0.0) AS tot_buck_03, COALESCE(SUM(buck_04),0.0) AS tot_buck_04, COALESCE(SUM(buck_05),0.0) AS tot_buck_05, COALESCE(SUM(buck_06),0.0) AS tot_buck_06, COALESCE(SUM(buck_07),0.0) AS tot_buck_07, COALESCE(SUM(buck_08),0.0) AS tot_buck_08, COALESCE(SUM(buck_09),0.0) AS tot_buck_09, COALESCE(SUM(buck_10_11_12),0.0) AS tot_buck_10_11_12, COALESCE(SUM(buck_13),0.0) AS tot_buck_13 FROM phd.ubar_customer_history_fact uf INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) ) , ubar_count AS ( SELECT RTRIM({busAttr}) AS busattr , ad.data_load_desc, COUNT(NULLIF(buck_01,0.0)) AS a30_cnt, COUNT(NULLIF(buck_02,0.0)) AS a60_cnt, COUNT(NULLIF(buck_03,0.0)) AS a90_cnt, COUNT(NULLIF(buck_04,0.0)) AS a120_cnt, COUNT(NULLIF(buck_05,0.0)) AS a150_cnt, COUNT(NULLIF(buck_06,0.0)) AS a180_cnt, COUNT(NULLIF(buck_07,0.0)) AS a210_cnt, COUNT(NULLIF(buck_08,0.0)) AS a240_cnt, COUNT(NULLIF(buck_09,0.0)) AS a270_cnt, COUNT(NULLIF(buck_10_11_12,0.0)) AS a360_cnt, COUNT(NULLIF(buck_13,0.0)) AS a361_cnt, COUNT(NULLIF(ubar_tot,0.0)) AS ubtotal_cnt, COALESCE(SUM(ubar_tot),0.0) AS ubar_tot, COALESCE(SUM(buck_01),0.0) AS buck_01, COALESCE(SUM(buck_02),0.0) AS buck_02, COALESCE(SUM(buck_03),0.0) AS buck_03, COALESCE(SUM(buck_04),0.0) AS buck_04, COALESCE(SUM(buck_05),0.0) AS buck_05, COALESCE(SUM(buck_06),0.0) AS buck_06, COALESCE(SUM(buck_07),0.0) AS buck_07, COALESCE(SUM(buck_08),0.0) AS buck_08, COALESCE(SUM(buck_09),0.0) AS buck_09, COALESCE(SUM(buck_10_11_12),0.0) AS buck_10_11_12, COALESCE(SUM(buck_13),0.0) AS buck_13 FROM phd.ubar_customer_history_fact uf INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) GROUP BY {busAttr}, ad.data_load_desc ) SELECT busattr, data_load_desc, a30_cnt, a60_cnt, a90_cnt, a120_cnt, a150_cnt, a180_cnt, a210_cnt, a240_cnt, a270_cnt, a360_cnt, a361_cnt, ubtotal_cnt, buck_01 AS a30, buck_02 AS a60, buck_03 AS a90, buck_04 AS a120, buck_05 AS a150, buck_06 AS a180, buck_07 AS a210, buck_08 AS a240, buck_09 AS a270, buck_10_11_12 AS a360, buck_13 AS a361, COALESCE((CAST(buck_01 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_01,0.0) AS FLOAT)),0.0) AS a30_pct, COALESCE((CAST(buck_02 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_02,0.0) AS FLOAT)),0.0) AS a60_pct, COALESCE((CAST(buck_03 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_03,0.0) AS FLOAT)),0.0) AS a90_pct, COALESCE((CAST(buck_04 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_04,0.0) AS FLOAT)),0.0) AS a120_pct, COALESCE((CAST(buck_05 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_05,0.0) AS FLOAT)),0.0) AS a150_pct, COALESCE((CAST(buck_06 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_06,0.0) AS FLOAT)),0.0) AS a180_pct, COALESCE((CAST(buck_07 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_07,0.0) AS FLOAT)),0.0) AS a210_pct, COALESCE((CAST(buck_08 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_08,0.0) AS FLOAT)),0.0) AS a240_pct, COALESCE((CAST(buck_09 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_09,0.0) AS FLOAT)),0.0) AS a270_pct, COALESCE((CAST(buck_10_11_12 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_10_11_12,0) AS FLOAT) ),0.0) AS a360_pct, COALESCE((CAST(buck_13 AS FLOAT) / CAST(NULLIF(globaltotal.tot_buck_13,0.0) AS FLOAT)),0.0) AS a361_pct, ubar_tot AS ubtotal, COALESCE((CAST(ubar_tot AS FLOAT) / CAST(NULLIF(globaltotal.total,0.0) AS FLOAT)),0.0) AS ubTotal_pct FROM ubar_count, globalTotal ORDER BY busattr ; \",\"description\":\"UBAR T2 Count Client data\"}",
      "t2UBDetailsContract": "{\"name\":\"t2UBDetailsContract\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 ) SELECT uf.yr_num, uf.mth_num, RTRIM(cn.cntrct_num) AS cntrct_num, RTRIM(cd.cust_nm) AS client_nm, RTRIM(sctr.sctr_gb_nm) AS sector_nm, DATE(cn.end_dt) AS closed_dt, INTEGER( YEAR(cn.end_dt)|| lpad( MONTH(cn.end_dt), 2, '0' )|| lpad( DAY(cn.end_dt), 2, '0' ) ) AS closed_sort, unbilled, aging_value FROM ( SELECT uf.cntrct_key, uf.cust_key, mth.yr_num, mth.mth_num, uf.sctr_key, COALESCE( SUM(uf.ubar_tot), 0.0 ) AS unbilled, COALESCE( SUM(uf.{metric}), 0.0 ) AS aging_value FROM phd.ubar_history_fact uf INNER JOIN phd.contract_dim cn ON uf.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} AND uf.{metric} <> 0.0 ) GROUP BY uf.cntrct_key, mth.yr_num, mth.mth_num, uf.cust_key, uf.sctr_key ) uf LEFT JOIN phd.contract_dim cn ON uf.cntrct_key = cn.cntrct_key LEFT JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key LEFT JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key ORDER BY CASE WHEN '{orderColumn}' = 'UB' THEN unbilled WHEN '{orderColumn}' = 'CB' THEN closed_sort END {orderDirection} FETCH FIRST 500 rows only ;\",\"description\":\"UBAR Expansion T2 Contract Details data\"}",
      "t2UBDetailsWorkNum": "{\"name\":\"t2UBDetailsWorkNum\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 ) SELECT uf.yr_num, uf.mth_num, RTRIM(cd.cust_nm) AS client_nm, RTRIM(pj.proj_num) AS work_num, RTRIM(sctr.sctr_gb_nm) AS sector_nm, RTRIM(geo2.geo_lvl2_nm) AS mkt_desc, DATE(pj.end_dt) AS closed_dt, INTEGER( YEAR(pj.end_dt)|| lpad( MONTH(pj.end_dt), 2, '0' )|| lpad( DAY(pj.end_dt), 2, '0' ) ) AS closed_sort, unbilled, aging_value FROM ( SELECT uf.proj_key, uf.cust_key, mth.yr_num, mth.mth_num, uf.sctr_key, uf.geo_lvl2_key, COALESCE( SUM(uf.ubar_tot), 0.0 ) AS unbilled, COALESCE( SUM(uf.{metric}), 0.0 ) AS aging_value FROM phd.ubar_history_fact uf INNER JOIN phd.project_dim pj ON uf.proj_key = pj.proj_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} AND uf.{metric} <> 0.0 ) GROUP BY uf.proj_key, uf.cust_key, mth.yr_num, mth.mth_num, uf.sctr_key, uf.geo_lvl2_key ) uf LEFT JOIN phd.project_dim pj ON uf.proj_key = pj.proj_key LEFT JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key LEFT JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key ORDER BY CASE WHEN '{orderColumn}' = 'UB' THEN unbilled WHEN '{orderColumn}' = 'CB' THEN closed_sort END {orderDirection} FETCH FIRST 500 rows only ; \",\"description\":\"UBAR Expansion T2 Work Nbr Details data\"}",
      "t2UBDetailsClient": "{\"name\":\"t2UBDetailsClient\",\"sqlTemplate\":\"WITH filters AS ( SELECT geo1.geo_lvl1_key, geo2.geo_lvl2_key, ctry.ctry_key, grth_plfm.grth_plfm_key, svc_line.svc_line_key, sctr.sctr_gb_key, indstry.indstry_key, prac.practice_key FROM phd.geo_lvl1_dim geo1, phd.geo_lvl2_dim geo2, phd.country_dim ctry, phd.growth_platform_dim grth_plfm, phd.svc_line_dim svc_line, phd.sector_gb_dim sctr, phd.industry_dim indstry, phd.practice_dim prac {filter} <filter?AND:WHERE> prac.include = 1 ) SELECT uf.yr_num, uf.mth_num, RTRIM(cd.cust_nm) AS client_nm, RTRIM(geo2.geo_lvl2_nm) AS mkt_desc, RTRIM(sctr.sctr_gb_nm) AS sector_nm, unbilled, aging_value FROM ( SELECT uf.cust_key, mth.yr_num, mth.mth_num, uf.sctr_key, uf.geo_lvl2_key, COALESCE( SUM(uf.ubar_tot), 0.0 ) AS unbilled, COALESCE( SUM(uf.{metric}), 0.0 ) AS aging_value FROM phd.ubar_customer_history_fact uf INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key INNER JOIN filters ff ON uf.geo_lvl1_key = ff.geo_lvl1_key AND uf.geo_lvl2_key = ff.geo_lvl2_key AND uf.ctry_key = ff.ctry_key AND uf.grth_plfm_key = ff.grth_plfm_key AND uf.svc_line_key = ff.svc_line_key AND uf.indstry_key = ff.indstry_key AND uf.practice_key = ff.practice_key AND uf.sctr_key = ff.sctr_gb_key WHERE ( ad.yr_mo_key = 'CURRENT' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} AND uf.{metric} <> 0.0 ) GROUP BY uf.cust_key, uf.geo_lvl2_key, uf.sctr_key, mth.yr_num, mth.mth_num ) uf LEFT JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key LEFT JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key ORDER BY unbilled {orderDirection} FETCH FIRST 500 rows only ; \",\"description\":\"UBAR Expansion T2 Client Details data\"}",
      "t2UBTrendContract": "{\"name\":\"t2UBTrendContract\",\"sqlTemplate\":\"SELECT yr_num, mth_num, a30_cnt, a60_cnt, a90_cnt, a120_cnt, a150_cnt, a180_cnt, a210_cnt, a240_cnt, a270_cnt, a360_cnt, a361_cnt, ubTotal_cnt, a30, a60, a90, a120, a150, a180, a210, a240, a270, a360, a361, ubtotal, COALESCE((CAST(a30 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a30_pct, COALESCE((CAST(a60 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a60_pct, COALESCE((CAST(a90 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a90_pct, COALESCE((CAST(a120 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a120_pct, COALESCE((CAST(a150 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a150_pct, COALESCE((CAST(a180 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a180_pct, COALESCE((CAST(a210 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a210_pct, COALESCE((CAST(a240 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a240_pct, COALESCE((CAST(a270 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a270_pct, COALESCE((CAST(a360 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a360_pct, COALESCE((CAST(a361 AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS a361_pct, COALESCE((CAST(ubtotal AS FLOAT) / CAST(NULLIF(ubtotal,0.0) AS FLOAT)),0.0) AS ubTotal_pct FROM ( SELECT yr_num AS yr_num, mth_num AS mth_num, COUNT(NULLIF(buck_01,0.0)) AS a30_cnt, COUNT(NULLIF(buck_02,0.0)) AS a60_cnt, COUNT(NULLIF(buck_03,0.0)) AS a90_cnt, COUNT(NULLIF(buck_04,0.0)) AS a120_cnt, COUNT(NULLIF(buck_05,0.0)) AS a150_cnt, COUNT(NULLIF(buck_06,0.0)) AS a180_cnt, COUNT(NULLIF(buck_07,0.0)) AS a210_cnt, COUNT(NULLIF(buck_08,0.0)) AS a240_cnt, COUNT(NULLIF(buck_09,0.0)) AS a270_cnt, COUNT(NULLIF(buck_10_11_12,0.0)) AS a360_cnt, COUNT(NULLIF(buck_13,0.0)) AS a361_cnt, COUNT(NULLIF(ubar_tot,0.0)) AS ubTotal_cnt, COALESCE(SUM(buck_01),0.0) AS a30, COALESCE(SUM(buck_02),0.0) AS a60, COALESCE(SUM(buck_03),0.0) AS a90, COALESCE(SUM(buck_04),0.0) AS a120, COALESCE(SUM(buck_05),0.0) AS a150, COALESCE(SUM(buck_06),0.0) AS a180, COALESCE(SUM(buck_07),0.0) AS a210, COALESCE(SUM(buck_08),0.0) AS a240, COALESCE(SUM(buck_09),0.0) AS a270, COALESCE(SUM(buck_10_11_12),0.0) AS a360, COALESCE(SUM(buck_13),0.0) AS a361, COALESCE(SUM(ubar_tot),0.0) AS ubtotal FROM phd.ubar_history_fact uf INNER JOIN phd.contract_dim cn ON uf.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = uf.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = uf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = uf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = uf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = uf.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = uf.practice_key AND prac.include = 1 {filter} <filter?AND:WHERE> ( ad.graph_nm = 'UB_L2_GR1' AND ad.current <> 1 AND uf.poc_ind {operator}= {poc} ) GROUP BY yr_num, mth_num ORDER BY yr_num DESC, mth_num DESC FETCH FIRST 13 rows only ) ;\",\"description\":\"UBAR T2 Trend Contract data\"}",
      "t2UBTrendWorkNum": "{\"name\":\"t2UBTrendWorkNum\",\"sqlTemplate\":\"SELECT yr_num, mth_num, a30_cnt, a60_cnt, a90_cnt, a120_cnt, a150_cnt, a180_cnt, a210_cnt, a240_cnt, a270_cnt, a360_cnt, a361_cnt, ubTotal_cnt, a30, a60, a90, a120, a150, a180, a210, a240, a270, a360, a361, ubtotal, COALESCE((CAST(a30 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a30_pct, COALESCE((CAST(a60 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a60_pct, COALESCE((CAST(a90 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a90_pct, COALESCE((CAST(a120 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a120_pct, COALESCE((CAST(a150 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a150_pct, COALESCE((CAST(a180 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a180_pct, COALESCE((CAST(a210 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a210_pct, COALESCE((CAST(a240 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a240_pct, COALESCE((CAST(a270 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a270_pct, COALESCE((CAST(a360 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a360_pct, COALESCE((CAST(a361 AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as a361_pct, COALESCE((CAST(ubtotal AS FLOAT) / CAST(nullif(ubtotal,0.0) AS FLOAT)),0.0) as ubTotal_pct FROM ( SELECT yr_num AS yr_num, mth_num AS mth_num, count(nullif(buck_01,0.0)) as a30_cnt, count(nullif(buck_02,0.0)) as a60_cnt, count(nullif(buck_03,0.0)) as a90_cnt, count(nullif(buck_04,0.0)) as a120_cnt, count(nullif(buck_05,0.0)) as a150_cnt, count(nullif(buck_06,0.0)) as a180_cnt, count(nullif(buck_07,0.0)) as a210_cnt, count(nullif(buck_08,0.0)) as a240_cnt, count(nullif(buck_09,0.0)) as a270_cnt, count(nullif(buck_10_11_12,0.0)) as a360_cnt, count(nullif(buck_13,0.0)) as a361_cnt, count(nullif(ubar_tot,0.0)) as ubTotal_cnt, COALESCE(SUM(buck_01),0.0) AS a30, COALESCE(SUM(buck_02),0.0) AS a60, COALESCE(SUM(buck_03),0.0) AS a90, COALESCE(SUM(buck_04),0.0) AS a120, COALESCE(SUM(buck_05),0.0) AS a150, COALESCE(SUM(buck_06),0.0) AS a180, COALESCE(SUM(buck_07),0.0) AS a210, COALESCE(SUM(buck_08),0.0) AS a240, COALESCE(SUM(buck_09),0.0) AS a270, COALESCE(SUM(buck_10_11_12),0.0) AS a360, COALESCE(SUM(buck_13),0.0) AS a361, COALESCE(SUM(ubar_tot),0.0) AS ubtotal FROM phd.ubar_history_fact uf INNER JOIN phd.project_dim pj ON uf.proj_key = pj.proj_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = uf.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = uf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = uf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = uf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = uf.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = uf.practice_key AND prac.include = 1 {filter} <filter?AND:WHERE> ( ad.graph_nm = 'UB_L2_GR1' AND ad.current <> 1 AND uf.poc_ind {operator}= {poc} ) GROUP BY yr_num, mth_num ORDER BY yr_num DESC, mth_num DESC FETCH FIRST 13 rows only ) ;\",\"description\":\"UBAR T2 Trend Work Numbers data\"}",
      "t2UBExpanClient": "{\"name\":\"t2UBExpanClient\",\"sqlTemplate\":\"SELECT mth.yr_num, mth.mth_num, ad.data_load_desc, cd.cust_nm AS client_nm, coalesce( sum(uf.UBAR_TOT), 0.0) AS unbilled, coalesce( sum(uf.BUCK_01), 0.0) AS a30, coalesce( sum(uf.BUCK_02), 0.0 ) AS a60, coalesce( sum(uf.BUCK_03), 0.0 ) AS a90, coalesce( sum(uf.BUCK_04), 0.0 ) AS a120, coalesce( sum(uf.BUCK_05), 0.0 ) AS a150, coalesce( sum(uf.BUCK_06), 0.0 ) AS a180, coalesce( sum(uf.BUCK_07), 0.0 ) AS a210, coalesce( sum(uf.BUCK_08), 0.0 ) AS a240, coalesce( sum(uf.BUCK_09), 0.0 ) AS a270, coalesce( sum(uf.BUCK_10_11_12), 0.0 ) AS a360, coalesce( sum(uf.BUCK_13), 0.0 ) AS a361 FROM phd.ubar_history_fact uf INNER JOIN phd.contract_dim cn ON uf.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = uf.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = uf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = uf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = uf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE>(ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'UB_L2_GR1' AND uf.poc_ind {operator}= {poc} ) GROUP BY cd.cust_nm, mth.yr_num, mth.mth_num, ad.data_load_desc ORDER BY client_nm fetch first 100 rows only ;\",\"description\":\"UBAR Expansion T2 Client data\"}",
      "t2UBExpanContract": "{\"name\":\"t2UBExpanContract\",\"sqlTemplate\":\"SELECT mth.yr_num, mth.mth_num, rtrim(cn.cntrct_num) AS cntrct_num, cd.cust_nm AS client_nm, date(cn.closed_dt) AS closed_dt, integer( year(cn.closed_dt)|| lpad( month(cn.closed_dt), 2, '0')|| lpad( day(cn.closed_dt), 2, '0' ) ) AS closed_sort, coalesce( sum(uf.UBAR_TOT), 0.0 ) AS unbilled, coalesce( sum(uf.BUCK_01), 0.0 ) AS a30, coalesce( sum(uf.BUCK_02), 0.0 ) AS a60, coalesce( sum(uf.BUCK_03), 0.0 ) AS a90, coalesce( sum(uf.BUCK_04), 0.0 ) AS a120, coalesce( sum(uf.BUCK_05), 0.0 ) AS a150, coalesce( sum(uf.BUCK_06), 0.0 ) AS a180, coalesce( sum(uf.BUCK_07), 0.0 ) AS a210, coalesce( sum(uf.BUCK_08), 0.0 ) AS a240, coalesce( sum(uf.BUCK_09), 0.0 ) AS a270, coalesce( sum(uf.BUCK_10_11_12), 0.0 ) AS a360, coalesce( sum(uf.BUCK_13), 0.0 ) AS a361 FROM phd.ubar_history_fact uf INNER JOIN phd.contract_dim cn ON uf.cntrct_key = cn.cntrct_key INNER JOIN phd.month_dim mth ON uf.mth_key = mth.mth_key INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key INNER JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = uf.geo_lvl1_key LEFT JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key LEFT JOIN phd.country_dim ctry ON ctry.ctry_key = uf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = uf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = uf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE>( ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'UB_L2_GR1' AND cd.cust_nm = '{client}' AND uf.poc_ind {operator}= {poc} ) GROUP BY cd.cust_nm, cn.cntrct_num, mth.yr_num, mth.mth_num, cn.closed_dt ORDER BY client_nm, cntrct_num fetch first 100 rows only ;\",\"description\":\"UBAR Expansion T2 Contract data\"}",
      "t2UBExpanWorkNum": "{\"name\":\"t2UBExpanWorkNum\",\"sqlTemplate\":\"select mth.yr_num, mth.mth_num, rtrim(cn.cntrct_num) as cntrct_num, cd.cust_nm as client_nm, rtrim(pj.proj_num) as work_num, sctr.sctr_gb_nm as sector_nm, rtrim(geo2.geo_lvl2_nm) as mkt_desc, date(pj.end_dt) as closed_dt, integer( year(pj.end_dt)|| lpad( month(pj.end_dt), 2, '0' )|| lpad( day(pj.end_dt), 2, '0' ) ) as closed_sort, coalesce( sum(uf.UBAR_TOT), 0.0 ) as unbilled, coalesce( sum(uf.BUCK_01), 0.0 ) as a30, coalesce( sum(uf.BUCK_02), 0.0 ) as a60, coalesce( sum(uf.BUCK_03), 0.0 ) as a90, coalesce( sum(uf.BUCK_04), 0.0 ) as a120, coalesce( sum(uf.BUCK_05), 0.0 ) as a150, coalesce( sum(uf.BUCK_06), 0.0 ) as a180, coalesce( sum(uf.BUCK_07), 0.0 ) as a210, coalesce( sum(uf.BUCK_08), 0.0 ) as a240, coalesce( sum(uf.BUCK_09), 0.0 ) as a270, coalesce( sum(uf.BUCK_10_11_12), 0.0 ) as a360, coalesce( sum(uf.BUCK_13), 0.0 ) as a361 from phd.ubar_history_fact uf inner join phd.project_dim pj on uf.proj_key = pj.proj_key inner join phd.month_dim mth on uf.mth_key = mth.mth_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.contract_dim cn on uf.cntrct_key = cn.cntrct_key inner join phd.customer_dim cd on uf.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ( ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'UB_L2_GR1' and cn.cntrct_num = '{cntrctNum}' and uf.poc_ind {operator}= {poc} ) group by pj.proj_num, cn.cntrct_num, cd.cust_nm, mth.yr_num, mth.mth_num, sctr.sctr_gb_nm, geo2.geo_lvl2_nm, pj.end_dt order by work_num fetch first 100 rows only ;\",\"description\":\"UBAR Expansion T2 Work Number data\"}",
      "t2UBExportClient": "{\"name\":\"t2UBExportClient\",\"sqlTemplate\":\"select mth.yr_num, mth.mth_num, case when uf.poc_ind = 1 then 'Yes' else 'No' end as poc_ind, rtrim(cn.cntrct_num) as cntrct_num, cd.cust_nm as client_nm, sctr.sctr_gb_nm as sector_nm, rtrim(geo2.geo_lvl2_nm) as mkt_desc, rtrim(prac.practice_nm) as practice_nm, date(cn.closed_dt) as closed_dt, integer( year(cn.closed_dt)|| lpad( month(cn.closed_dt), 2, '0' )|| lpad( day(cn.closed_dt), 2, '0' ) ) as closed_sort, coalesce( sum(uf.UBAR_TOT), 0.0 ) as unbilled, coalesce( sum(uf.BUCK_01), 0.0 ) as a30, coalesce( sum(uf.BUCK_02), 0.0 ) as a60, coalesce( sum(uf.BUCK_03), 0.0 ) as a90, coalesce( sum(uf.BUCK_04), 0.0 ) as a120, coalesce( sum(uf.BUCK_05), 0.0 ) as a150, coalesce( sum(uf.BUCK_06), 0.0 ) as a180, coalesce( sum(uf.BUCK_07), 0.0 ) as a210, coalesce( sum(uf.BUCK_08), 0.0 ) as a240, coalesce( sum(uf.BUCK_09), 0.0 ) as a270, coalesce( sum(uf.BUCK_10_11_12), 0.0 ) as a360, coalesce( sum(uf.BUCK_13), 0.0 ) as a361 from phd.ubar_history_fact uf inner join phd.contract_dim cn on uf.cntrct_key = cn.cntrct_key inner join phd.month_dim mth on uf.mth_key = mth.mth_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.customer_dim cd on uf.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ( ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'UB_L2_GR1' ) group by cd.cust_nm, cn.cntrct_num, mth.yr_num, mth.mth_num, sctr.sctr_gb_nm, geo2.geo_lvl2_nm, prac.practice_nm, cn.closed_dt, uf.poc_ind order by client_nm, cntrct_num fetch first 500 rows only ; \",\"description\":\"UBAR Expansion T2 Client export data\"}",
      "t2UBExportContract": "{\"name\":\"t2UBExportContract\",\"sqlTemplate\":\"select mth.yr_num, mth.mth_num, case when uf.poc_ind = 1 then 'Yes' else 'No' end as poc_ind, rtrim(cn.cntrct_num) as cntrct_num, cd.cust_nm as client_nm, sctr.sctr_gb_nm as sector_nm, rtrim(geo2.geo_lvl2_nm) as mkt_desc, rtrim(prac.practice_nm) as practice_nm, date(cn.closed_dt) as closed_dt, integer( year(cn.closed_dt)|| lpad( month(cn.closed_dt), 2, '0' )|| lpad( day(cn.closed_dt), 2, '0' ) ) as closed_sort, coalesce( sum(uf.UBAR_TOT), 0.0 ) as unbilled, coalesce( sum(uf.BUCK_01), 0.0 ) as a30, coalesce( sum(uf.BUCK_02), 0.0 ) as a60, coalesce( sum(uf.BUCK_03), 0.0 ) as a90, coalesce( sum(uf.BUCK_04), 0.0 ) as a120, coalesce( sum(uf.BUCK_05), 0.0 ) as a150, coalesce( sum(uf.BUCK_06), 0.0 ) as a180, coalesce( sum(uf.BUCK_07), 0.0 ) as a210, coalesce( sum(uf.BUCK_08), 0.0 ) as a240, coalesce( sum(uf.BUCK_09), 0.0 ) as a270, coalesce( sum(uf.BUCK_10_11_12), 0.0 ) as a360, coalesce( sum(uf.BUCK_13), 0.0 ) as a361 from phd.ubar_history_fact uf inner join phd.contract_dim cn on uf.cntrct_key = cn.cntrct_key inner join phd.month_dim mth on uf.mth_key = mth.mth_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.customer_dim cd on uf.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ( ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'UB_L2_GR1' ) group by cd.cust_nm, cn.cntrct_num, mth.yr_num, mth.mth_num, sctr.sctr_gb_nm, geo2.geo_lvl2_nm, prac.practice_nm, cn.closed_dt, uf.poc_ind order by cntrct_num fetch first 500 rows only ; \",\"description\":\"UBAR Expansion T2 Contract export data\"}",
      "t2UBExportWorkNum": "{\"name\":\"t2UBExportWorkNum\",\"sqlTemplate\":\"select mth.yr_num, mth.mth_num, case when uf.poc_ind = 1 then 'Yes' else 'No' end as poc_ind, rtrim(cn.cntrct_num) as cntrct_num, cd.cust_nm as client_nm, rtrim(pj.proj_num) as work_num, sctr.sctr_gb_nm as sector_nm, rtrim(geo2.geo_lvl2_nm) as mkt_desc, rtrim(prac.practice_nm) as practice_nm, date(pj.end_dt) as closed_dt, integer( year(pj.end_dt)|| lpad( month(pj.end_dt), 2, '0' )|| lpad( day(pj.end_dt), 2, '0' ) ) as closed_sort, coalesce( sum(uf.UBAR_TOT), 0.0 ) as unbilled, coalesce( sum(uf.BUCK_01), 0.0 ) as a30, coalesce( sum(uf.BUCK_02), 0.0 ) as a60, coalesce( sum(uf.BUCK_03), 0.0 ) as a90, coalesce( sum(uf.BUCK_04), 0.0 ) as a120, coalesce( sum(uf.BUCK_05), 0.0 ) as a150, coalesce( sum(uf.BUCK_06), 0.0 ) as a180, coalesce( sum(uf.BUCK_07), 0.0 ) as a210, coalesce( sum(uf.BUCK_08), 0.0 ) as a240, coalesce( sum(uf.BUCK_09), 0.0 ) as a270, coalesce( sum(uf.BUCK_10_11_12), 0.0 ) as a360, coalesce( sum(uf.BUCK_13), 0.0 ) as a361 from phd.ubar_history_fact uf inner join phd.project_dim pj on uf.proj_key = pj.proj_key inner join phd.contract_dim cn on uf.cntrct_key = cn.cntrct_key inner join phd.month_dim mth on uf.mth_key = mth.mth_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.customer_dim cd on uf.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ( ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'UB_L2_GR1' ) group by pj.proj_num, cn.cntrct_num, cd.cust_nm, mth.yr_num, mth.mth_num, sctr.sctr_gb_nm, geo2.geo_lvl2_nm, prac.practice_nm, pj.end_dt, uf.poc_ind order by work_num fetch first 500 rows only ; \",\"description\":\"UBAR Expansion T2 Work Number export data\"}",
      "t2UBAlertWorkNum": "{\"name\":\"t2UBAlertWorkNum\",\"sqlTemplate\":\"with totalCritRisk as ( select coalesce(sum(ubar_rsk_amt),0.0) as totalCrit from phd.ubar_history_fact uf inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> uf.alrt_prty_key = 3 and ad.yr_mo_key = 'CURRENT' and ad.graph_nm = 'UB_L2_GR1'), totalHighRisk as ( select coalesce(sum(ubar_rsk_amt),0.0) as totalHigh from phd.ubar_history_fact uf inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> uf.alrt_prty_key = 2 and ad.yr_mo_key = 'CURRENT' and ad.graph_nm = 'UB_L2_GR1') select ad.data_load_desc as data_load_date, cd.cust_nm as client_nm, rtrim(pj.proj_num) as work_num, sctr.sctr_gb_nm as sector_nm, rtrim(geo2.geo_lvl2_nm) as mkt_desc, date(pj.end_dt) as closed_dt, coalesce(sum(uf.ubar_tot),0.0) as unbilled, coalesce(sum(uf.tcv_pln_amt),0.0) as tcv, coalesce(sum(uf.ubar_rsk_amt),0.0) as risk_amt, case when uf.alrt_prty_key = 3 then '#E71D32' when uf.alrt_prty_key = 2 then '#FF7832' when uf.alrt_prty_key = 1 then '#FDD600' else '#E7E6E6' end as row_color, coalesce(rtrim(al.alrt_prty_nm),'No Alert') as alert_type, coalesce(uf.alrt_prty_key,0)  as alert_type_sort, coalesce(rtrim(al.alrt_ubar_desc)||' '||(qtr.qtr||', '||qtr.year),' ') as alert_reason, pj.phd_url as ippf_url, totalCritRisk.totalCrit as total_Crit, totalHighRisk.totalHigh as total_High from phd.ubar_history_fact uf inner join phd.project_dim pj on uf.proj_key = pj.proj_key inner join phd.alert_priority_dim al on uf.alrt_prty_key = al.alrt_prty_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.customer_dim cd on uf.cust_key = cd.cust_key left join phd.quarter_dim qtr on uf.alrt_qtr_key = qtr.qtr_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 , totalCritRisk, totalHighRisk {filter} <filter?AND:WHERE> ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'UB_L2_GR1' group by pj.proj_num, cd.cust_nm, sctr.sctr_gb_nm, geo2.geo_lvl2_nm, pj.end_dt, totalCritRisk.totalCrit, totalHighRisk.totalHigh, ad.data_load_desc, uf.alrt_prty_key, al.alrt_prty_nm, al.alrt_ubar_desc, pj.phd_url, qtr.qtr, qtr.year order by alert_type_sort desc, risk_amt desc, work_num fetch first 2000 rows only ;\",\"description\":\"UBAR Expansion T2 Work Number alert data\"}",
      "t2UBAlertContract": "{\"name\":\"t2UBAlertContract\",\"sqlTemplate\":\"WITH data AS (SELECT ad.data_load_desc AS data_load_date , cd.cust_nm AS client_nm , RTRIM(pj.cntrct_num) AS contract_num , sctr.sctr_gb_nm AS sector_nm , RTRIM(geo2.geo_lvl2_nm) AS mkt_desc , DATE(pj.end_dt) AS closed_dt , COALESCE(SUM(uf.ubar_tot), 0.0) AS unbilled , COALESCE(SUM(uf.tcv_pln_amt), 0.0) AS tcv , COALESCE(MAX(uf.ubar_rsk_amt), 0.0) AS risk_amt , CASE WHEN uf.alrt_prty_key = 3 THEN '#E71D32' WHEN uf.alrt_prty_key = 2 THEN '#FF7832' WHEN uf.alrt_prty_key = 1 THEN '#FDD600' ELSE '#E7E6E6' END AS row_color , COALESCE(RTRIM(al.alrt_prty_nm), 'No Alert') AS alert_type , COALESCE(uf.alrt_prty_key, 0) AS alert_type_sort , COALESCE(RTRIM(al.alrt_ubar_desc) ||' '||(qtr.qtr||', '||qtr.year), ' ') AS alert_reason , uf.alrt_prty_key , pj.phd_url AS ippf_url FROM phd.ubar_contract_history_fact uf INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'UB_L2_GR1' INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = uf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = uf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = uf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = uf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = uf.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = uf.practice_key AND prac.include = 1 INNER JOIN phd.contract_dim pj ON uf.cntrct_key = pj.cntrct_key INNER JOIN phd.alert_priority_dim al ON uf.alrt_prty_key = al.alrt_prty_key LEFT JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key LEFT JOIN phd.quarter_dim qtr ON uf.alrt_qtr_key = qtr.qtr_key {filter} GROUP BY pj.cntrct_num , cd.cust_nm , sctr.sctr_gb_nm , geo2.geo_lvl2_nm , pj.end_dt , ad.data_load_desc , uf.alrt_prty_key , al.alrt_prty_nm , al.alrt_ubar_desc , pj.phd_url , qtr.qtr , qtr.year ) SELECT uf.data_load_date , uf.client_nm , uf.contract_num , uf.sector_nm , uf.mkt_desc , uf.closed_dt , uf.unbilled , uf.tcv , uf.risk_amt , SUM( CASE WHEN uf.alrt_prty_key = 3 THEN COALESCE(uf.risk_amt, 0.0) ELSE 0.0 END) OVER() AS total_Crit , SUM( CASE WHEN uf.alrt_prty_key = 2 THEN COALESCE(uf.risk_amt, 0.0) ELSE 0.0 END) OVER() AS total_High , uf.row_color , uf.alert_type , uf.alert_type_sort , uf.alert_reason , uf.ippf_url FROM data uf ORDER BY uf.alert_type_sort DESC , uf.risk_amt DESC , uf.contract_num FETCH FIRST 2000 rows only ;\",\"description\":\"UBAR Expansion T2 Contract alert data\"}",
      "t2UBAlertExportWorkNum": "{\"name\":\"t2UBAlertExportWorkNum\",\"sqlTemplate\":\"with totalCritRisk as ( select coalesce(sum(ubar_rsk_amt),0.0) as totalCrit from phd.ubar_history_fact uf inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> uf.alrt_prty_key = 3 and ad.yr_mo_key = 'CURRENT' and ad.graph_nm = 'UB_L2_GR1'), totalHighRisk as ( select coalesce(sum(ubar_rsk_amt),0.0) as totalHigh from phd.ubar_history_fact uf inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> uf.alrt_prty_key = 2 and ad.yr_mo_key = 'CURRENT' and ad.graph_nm = 'UB_L2_GR1') select cd.cust_nm as client_nm, rtrim(pj.proj_num) as work_num, sctr.sctr_gb_nm as sector_nm, rtrim(geo2.geo_lvl2_nm) as mkt_desc, rtrim(prac.practice_nm) as practice_nm, date(pj.end_dt) as closed_dt, coalesce(sum(uf.ubar_tot),0.0) as unbilled, coalesce(sum(uf.tcv_pln_amt),0.0) as tcv, coalesce(sum(uf.ubar_rsk_amt),0.0) as risk_amt, coalesce(rtrim(al.alrt_prty_nm),'No Alert') as alert_type, coalesce(uf.alrt_prty_key,0) as alert_type_sort, coalesce(rtrim(al.alrt_ubar_desc)||' '||(qtr.qtr||', '||qtr.year),' ') as alert_reason, pj.phd_url as ippf_url, totalCritRisk.totalCrit as total_Crit, totalHighRisk.totalHigh as total_High from phd.ubar_history_fact uf inner join phd.project_dim pj on uf.proj_key = pj.proj_key inner join phd.alert_priority_dim al on uf.alrt_prty_key = al.alrt_prty_key inner join phd.acct_drop ad on uf.mth_key = ad.mth_key inner join phd.customer_dim cd on uf.cust_key = cd.cust_key left join phd.quarter_dim qtr on uf.alrt_qtr_key = qtr.qtr_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = uf.geo_lvl1_key left join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = uf.geo_lvl2_key left join phd.country_dim ctry on ctry.ctry_key = uf.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = uf.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = uf.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = uf.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = uf.indstry_key inner join phd.practice_dim prac on prac.practice_key = uf.practice_key and prac.include = 1 , totalCritRisk, totalHighRisk {filter} <filter?AND:WHERE> ad.yr_mo_key = '{yrMoKey}' and ad.graph_nm = 'UB_L2_GR1' group by pj.proj_num, cd.cust_nm, sctr.sctr_gb_nm, geo2.geo_lvl2_nm, prac.practice_nm, pj.end_dt, totalCritRisk.totalCrit, totalHighRisk.totalHigh, uf.alrt_prty_key, al.alrt_prty_nm, al.alrt_ubar_desc, pj.phd_url, qtr.qtr, qtr.year order by alert_type_sort desc, risk_amt desc, work_num fetch first 2000 rows only ; \",\"description\":\"UBAR Expansion T2 Work Number alert export\"}",
      "t2UBAlertExportContract": "{\"name\":\"t2UBAlertExportContract\",\"sqlTemplate\":\"WITH data AS (SELECT cd.cust_nm AS client_nm , RTRIM(pj.cntrct_num) AS contract_num , sctr.sctr_gb_nm AS sector_nm , RTRIM(geo2.geo_lvl2_nm) AS mkt_desc , RTRIM(prac.practice_nm) AS practice_nm , DATE(pj.end_dt) AS closed_dt , COALESCE(SUM(uf.ubar_tot), 0.0) AS unbilled , COALESCE(SUM(uf.tcv_pln_amt), 0.0) AS tcv , COALESCE(MAX(uf.ubar_rsk_amt), 0.0) AS risk_amt , COALESCE(RTRIM(al.alrt_prty_nm), 'No Alert') AS alert_type , COALESCE(uf.alrt_prty_key, 0) AS alert_type_sort , COALESCE(RTRIM(al.alrt_ubar_desc) ||' '||(qtr.qtr||', '||qtr.year), ' ') AS alert_reason , pj.phd_url AS ippf_url , uf.alrt_prty_key FROM phd.ubar_contract_history_fact uf INNER JOIN phd.acct_drop ad ON uf.mth_key = ad.mth_key AND ad.yr_mo_key = '{yrMoKey}' AND ad.graph_nm = 'UB_L2_GR1' INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = uf.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = uf.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = uf.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = uf.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = uf.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = uf.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = uf.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = uf.practice_key AND prac.include = 1 INNER JOIN phd.contract_dim pj ON uf.cntrct_key = pj.cntrct_key INNER JOIN phd.alert_priority_dim al ON uf.alrt_prty_key = al.alrt_prty_key LEFT JOIN phd.customer_dim cd ON uf.cust_key = cd.cust_key LEFT JOIN phd.quarter_dim qtr ON uf.alrt_qtr_key = qtr.qtr_key {filter} GROUP BY pj.cntrct_num , cd.cust_nm , sctr.sctr_gb_nm , geo2.geo_lvl2_nm , prac.practice_nm , pj.end_dt , uf.alrt_prty_key , al.alrt_prty_nm , al.alrt_ubar_desc , pj.phd_url , qtr.qtr , qtr.year ) SELECT uf.client_nm , uf.contract_num , uf.sector_nm , uf.mkt_desc , uf.practice_nm , uf.closed_dt , uf.unbilled , uf.tcv , uf.risk_amt , uf.alert_type , uf.alert_type_sort , uf.alert_reason , uf.ippf_url , SUM( CASE WHEN uf.alrt_prty_key = 3 THEN COALESCE(uf.risk_amt, 0.0) ELSE 0.0 END) OVER() AS total_Crit , SUM( CASE WHEN uf.alrt_prty_key = 2 THEN COALESCE(uf.risk_amt, 0.0) ELSE 0.0 END) OVER() AS total_High FROM data uf ORDER BY uf.alert_type_sort DESC , uf.risk_amt DESC , uf.contract_num FETCH FIRST 2000 rows only ;\",\"description\":\"UBAR Expansion T2 Contract alert export\"}",

      "t1Search": "{\"name\":\"t1Search\",\"sqlTemplate\":\"select rtrim(ss.wbs_id) as wbs, ss.proj_key, ss.cntrct_key, case when ss.wbs_type = 'C' then 'Contract' else 'Work Number' end as wbs_type, case geo1.geo_lvl1_cd when 'AM' then 'NA' when 'EA' then 'MEA' when 'EP' then 'EU' when 'CG' then 'GCG' when 'AS' then 'AP' else geo1.geo_lvl1_cd end as geo_cd, rtrim(stat.active_typ_desc) as status from phd.lu_search_snap ss inner join phd.active_type_dim stat on ss.active_typ_key = stat.active_typ_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = ss.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = ss.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = ss.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = ss.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = ss.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = ss.sctr_gb_key inner join phd.industry_dim indstry on indstry.indstry_key = ss.indstry_key inner join phd.practice_dim prac on prac.practice_key = ss.practice_key and prac.include = 1 {filter} <filter?AND:WHERE> ss.wbs_id like upper('%{sval}%') and stat.ACTIVE_TYP_CD like '%A%' order by ss.wbs_id desc fetch first 12 rows only ; \",\"description\":\"PHD Search, simple\"}",

      "t2ActPortDetailsContract": "{\"name\":\"t2ActPortDetailsContract\",\"sqlTemplate\":\"WITH cmnts AS (SELECT t.cntrct_key , COUNT AS cmnt_cnt FROM(SELECT c.cntrct_key , c.archive_status , ROW_NUMBER() OVER(PARTITION BY c.comment_id ORDER BY c.modified_on DESC) AS rn FROM phd.comments c LEFT JOIN APP.VIEW_LIST vlt ON vlt.VIEW_ID = {viewId} AND vlt.CNTRCT_KEY = c.CNTRCT_KEY WHERE c.reply_id = 0 AND( {viewId} = -1 OR vlt.VIEW_ID IS NOT NULL)) t WHERE t.rn = 1 AND t.archive_status = 'I' GROUP BY t.cntrct_key ) SELECT ad.data_load_desc AS data_load_desc , cd.cust_nm AS client , RTRIM(ctry.ctry_nm) AS country , f.cntrct_key , f.cntrct_num , f.cntrct_desc AS contract_name , RTRIM(svc_line.svc_line_nm) AS service_line , f.tcv_amt AS tcv , CASE WHEN geo1.geo_lvl1_cd = 'AM' THEN 'NA' WHEN geo1.geo_lvl1_cd = 'EA' THEN 'MEA' WHEN geo1.geo_lvl1_cd = 'EP' THEN 'EU' WHEN geo1.geo_lvl1_cd = 'CG' THEN 'GCG' WHEN geo1.geo_lvl1_cd = 'as' THEN 'AP' ELSE geo1.geo_lvl1_cd END AS geo , COALESCE((f.overall_risk), 0.0) AS OVERALL_RISK , CASE WHEN f.cic_dlvry_risc_score >= 0 AND f.cic_dlvry_risc_score <= 9 THEN 'Low' WHEN f.cic_dlvry_risc_score >= 10 AND f.cic_dlvry_risc_score <= 40 THEN 'Medium' WHEN f.cic_dlvry_risc_score >= 41 THEN 'High' ELSE 'N/A' END AS CIC_SCORE_TEXT , CASE WHEN f.cic_dlvry_risc_score >= 0 AND f.cic_dlvry_risc_score <= 9 THEN '#9DEEB2' WHEN f.cic_dlvry_risc_score >= 10 AND f.cic_dlvry_risc_score <= 40 THEN '#FCCF0A' WHEN f.cic_dlvry_risc_score >= 41 THEN '#FFA4A9' ELSE '#fff0' END AS CIC_SCORE_COLOR, CASE WHEN f.de_notes_id != '' THEN SUBSTR(f.de_notes_id, 1, locate('/', f.de_notes_id) -1) ELSE 'N/A' END AS BRAND_DE , CASE WHEN f.pg_roat = 1 THEN 'Compliant' WHEN f.pg_roat = 0 THEN 'Non Compliant' ELSE 'Not in scope' END AS RO_ACT_CREATED , CASE WHEN f.pg_roat = 1 THEN '#9DEEB2' WHEN f.pg_roat = 0 THEN '#FFA4A9' ELSE '#fff0' END AS RO_ACT_CREATED_COLOR , CASE WHEN f.pg_roato = 1 THEN 'Compliant' WHEN f.pg_roato = 0 THEN 'Non Compliant' ELSE 'Not in scope' END AS RO_OVRDUE_ACT , CASE WHEN f.pg_roato = 1 THEN '#9DEEB2' WHEN f.pg_roato = 0 THEN '#FFA4A9' ELSE '#fff0' END AS RO_OVRDUE_ACT_COLOR , geo2.geo_lvl2_nm AS market , gp.grth_plfm_desc AS growth_platform , RTRIM(p.practice_nm) AS practice_nm , s.sctr_gb_nm AS sector , i.indstry_cmr_nm , CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN 'C' WHEN f.sevenkey_cmplt_cnt = 0 THEN 'NC' ELSE 'Desc N/A' END AS overall_7k , CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN 'Compliant' WHEN f.sevenkey_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS overall_7k_label , CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN '#9DEEB2' WHEN f.sevenkey_cmplt_cnt = 0 THEN '#FFA4A9' ELSE '#fff0' END AS overall_7k_color , CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'C' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'NC' ELSE 'Desc N/A' END AS cpm_comp , CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'Compliant' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'Non Compliant' ELSE 'Desc N/A' END AS cpm_comp_label , CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN '#9DEEB2' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN '#FFA4A9' ELSE '#fff0' END AS cpm_comp_color , CASE WHEN f.cos_cmplt_cnt = 1 THEN 'C' WHEN f.cos_cmplt_cnt = 0 THEN 'NC' ELSE 'Desc N/A' END AS cos_comp , CASE WHEN f.cos_cmplt_cnt = 1 THEN 'Compliant' WHEN f.cos_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS cos_comp_label , CASE WHEN f.cos_cmplt_cnt = 1 THEN '#9DEEB2' WHEN f.cos_cmplt_cnt = 0 THEN '#FFA4A9' ELSE '#fff0' END AS cos_comp_color , CASE WHEN f.ovrl_cos = 'R' THEN 'Red' WHEN f.ovrl_cos = 'G' THEN 'Green' WHEN f.ovrl_cos = 'Y' THEN 'Yellow' WHEN f.ovrl_cos = 'O' THEN 'Orange' ELSE 'Desc N/A' END AS overall_cos , CASE WHEN f.ovrl_cos = 'R' THEN '#FFA4A9' WHEN f.ovrl_cos = 'G' THEN '#9DEEB2' WHEN f.ovrl_cos = 'Y' THEN '#FCCF0A' WHEN f.ovrl_cos = 'O' THEN '#FFA573' ELSE '#fff0' END AS overall_cos_color , CASE WHEN f.ovrl_cos = 'R' THEN 'Red' WHEN f.ovrl_cos = 'G' THEN 'Green' WHEN f.ovrl_cos = 'Y' THEN 'Yellow' WHEN f.ovrl_cos = 'O' THEN 'Orange' ELSE '-' END AS overall_cos_label , CASE WHEN f.pg_o_cmplnce = 1 THEN 'C' WHEN f.pg_o_cmplnce = 0 THEN 'NC' ELSE 'Desc N/A' END AS pg_o_cmplnce_val , CASE WHEN f.pg_o_cmplnce = 1 THEN 'Compliant' WHEN f.pg_o_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_o_cmplnce_val_label , CASE WHEN f.pg_o_cmplnce = 1 THEN '#9DEEB2' WHEN f.pg_o_cmplnce = 0 THEN '#FFA4A9' ELSE '#fff0' END AS pg_o_cmplnce_color , CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'C' WHEN f.pg_1_4_cmplnce = 0 THEN 'NC' ELSE 'Desc N/A' END AS pg_1_4_cmplnce_val , CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'Compliant' WHEN f.pg_1_4_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_1_4_cmplnce_val_label , CASE WHEN f.pg_1_4_cmplnce = 1 THEN '#9DEEB2' WHEN f.pg_1_4_cmplnce = 0 THEN '#FFA4A9' ELSE '#fff0' END AS pg_1_4_cmplnce_color , CASE WHEN f.pg_0_stat_flg = 'R' THEN 'Red' WHEN f.pg_0_stat_flg = 'G' THEN 'Green' WHEN f.pg_0_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_0_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_0_stat_flg_val , CASE WHEN f.pg_0_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_0_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_0_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_0_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_0_stat_flg_color , CASE WHEN f.pg_1_stat_flg = 'R' THEN 'Red' WHEN f.pg_1_stat_flg = 'G' THEN 'Green' WHEN f.pg_1_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_1_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_1_stat_flg_val , CASE WHEN f.pg_1_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_1_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_1_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_1_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_1_stat_flg_color , CASE WHEN f.pg_2_stat_flg = 'R' THEN 'Red' WHEN f.pg_2_stat_flg = 'G' THEN 'Green' WHEN f.pg_2_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_2_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_2_stat_flg_val , CASE WHEN f.pg_2_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_2_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_2_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_2_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_2_stat_flg_color , CASE WHEN f.pg_3_stat_flg = 'R' THEN 'Red' WHEN f.pg_3_stat_flg = 'G' THEN 'Green' WHEN f.pg_3_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_3_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_3_stat_flg_val , CASE WHEN f.pg_3_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_3_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_3_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_3_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_3_stat_flg_color , CASE WHEN f.pg_4_stat_flg = 'R' THEN 'Red' WHEN f.pg_4_stat_flg = 'G' THEN 'Green' WHEN f.pg_4_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_4_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_4_stat_flg_val , CASE WHEN f.pg_4_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_4_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_4_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_4_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_4_stat_flg_color , f.itd_to_pc_lkg , f.ytd_to_pc_lkg , f.cq_to_pc_lkg_amt , f.ub_ov_90 , CASE WHEN f.ub_ov_90 = 0 THEN '#9DEEB2' WHEN f.ub_ov_90 > 0 THEN '#FFA4A9' ELSE '#fff0' END AS ub_ov_90_color , f.cq_actls_gp_ac_pv_amt , f.cq_actls_gp_ac_pv_pct , f.fc_gp_pct , f.aprvd_gp_pct , f.pc_actls_gp_ac_pct , f.cq_actls_rev_ac_amt , f.rev_incr_qtq_amt , f.itd_actls_gp_pct , f.completion_perc , CASE WHEN f.pm_notes_id != '' THEN SUBSTR(f.pm_notes_id, 1, locate('/', f.pm_notes_id) -1) ELSE 'N/A' END AS pm_notes_nm , CASE WHEN f.prtnr_nm != '' THEN SUBSTR(f.prtnr_nm, 1, locate('/', f.prtnr_nm) -1) ELSE 'N/A' END AS prtnr_nm , CASE WHEN f.cpm_rqrd_cnt = 1 THEN 'Yes' ELSE 'No' END AS cmplx_flg , CASE WHEN f.de_list_flg = 1 THEN 'Yes' ELSE 'No' END AS de_list_flg , CASE WHEN f.poc_ind = 'Y' THEN 'Yes' ELSE 'No' END AS poc_ind , CASE WHEN f.ovrl_sevenkeys = 'R' THEN 'Red' WHEN f.ovrl_sevenkeys = 'G' THEN 'Green' WHEN f.ovrl_sevenkeys = 'A' THEN 'Orange' ELSE '-' END AS overall_7k_result , CASE WHEN f.ovrl_sevenkeys = 'R' THEN '#FFA4A9' WHEN f.ovrl_sevenkeys = 'G' THEN '#9DEEB2' WHEN f.ovrl_sevenkeys = 'A' THEN '#FFA573' ELSE '#fff0' END AS overall_7k_result_color , CASE WHEN f.ds_cmplnt_cnt = 1 THEN 'C' WHEN f.ds_cmplnt_cnt = 0 THEN 'NC' ELSE 'Desc N/A' END AS delivery_start_val , CASE WHEN f.ds_cmplnt_cnt = 1 THEN 'Compliant' WHEN f.ds_cmplnt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS delivery_start_label , CASE WHEN f.ds_cmplnt_cnt = 1 THEN '#9DEEB2' WHEN f.ds_cmplnt_cnt = 0 THEN '#FFA4A9' ELSE '#fff0' END AS delivery_start_color , COALESCE(cmnt.cmnt_cnt, 0) AS cmnt_cnt FROM phd.dm_contract_portfolio_fact f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'APH_L2_GR1' AND ad.current = 1 INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key AND geo1.geo_lvl1_key != 0 INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim i ON i.indstry_key = f.indstry_key INNER JOIN phd.practice_dim p ON p.practice_key = f.practice_key AND p.include = 1 LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key LEFT JOIN APP.VIEW_LIST vlt ON vlt.VIEW_ID = {viewId} AND vlt.CNTRCT_KEY = f.CNTRCT_KEY LEFT JOIN cmnts cmnt ON cmnt.cntrct_key = f.cntrct_key {filter} <filter?AND:WHERE> ({viewId} = -1 OR vlt.VIEW_ID IS NOT NULL) ORDER BY COALESCE(f.OVERALL_RISK, 0) DESC FETCH FIRST {expLimit} rows only ; \",\"description\":\"Active Porfolio Contract Details\"}",
      "t2ActPortDetailsWorkNum": "{\"name\":\"t2ActPortDetailsWorkNum\",\"sqlTemplate\":\"with cmnts AS ( select t.cntrct_key, COUNT AS cmnt_cnt FROM ( SELECT c.cntrct_key, c.archive_status, ROW_NUMBER() OVER(PARTITION BY c.comment_id ORDER BY c.modified_on DESC) AS rn FROM phd.comments c WHERE c.reply_id = 0 ) t WHERE t.rn = 1 AND t.archive_status = 'I' GROUP BY t.cntrct_key ) SELECT ad.data_load_desc AS data_load_desc, cd.cust_nm AS client, RTRIM(ctry.ctry_nm) AS country, f.cntrct_key, f.cntrct_num, f.cntrct_desc AS contract_name, RTRIM(svc_line.svc_line_nm) AS service_line, f.tcv_amt AS tcv, CASE WHEN geo1.geo_lvl1_cd = 'AM' THEN 'NA' WHEN geo1.geo_lvl1_cd = 'EA' THEN 'MEA' WHEN geo1.geo_lvl1_cd = 'EP' THEN 'EU' WHEN geo1.geo_lvl1_cd = 'CG' THEN 'GCG' WHEN geo1.geo_lvl1_cd = 'AS' THEN 'AP' ELSE geo1.geo_lvl1_cd END AS geo, geo2.geo_lvl2_nm AS market, gp.grth_plfm_desc AS growth_platform, RTRIM(p.practice_nm) AS practice_nm, s.sctr_gb_nm AS sector, i.indstry_cmr_nm, CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN 'C' WHEN f.sevenkey_cmplt_cnt = 0 THEN 'NC' ELSE 'Desc N/A' END AS overall_7k, CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN 'Compliant' WHEN f.sevenkey_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS overall_7k_label, CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN '#9DEEB2' WHEN f.sevenkey_cmplt_cnt = 0 THEN '#FFA4A9' ELSE '#fff0' END AS overall_7k_color, CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'C' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'NC' ELSE 'Desc N/A' END AS cpm_comp, CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'Compliant' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'Non Compliant' ELSE 'Desc N/A' END AS cpm_comp_label, CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN '#9DEEB2' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN '#FFA4A9' ELSE '#fff0' END AS cpm_comp_color, CASE WHEN f.cos_cmplt_cnt = 1 THEN 'C' WHEN f.cos_cmplt_cnt = 0 THEN 'NC' ELSE 'Desc N/A' END AS cos_comp, CASE WHEN f.cos_cmplt_cnt = 1 THEN 'Compliant' WHEN f.cos_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS cos_comp_label, CASE WHEN f.cos_cmplt_cnt = 1 THEN '#9DEEB2' WHEN f.cos_cmplt_cnt = 0 THEN '#FFA4A9' ELSE '#fff0' END AS cos_comp_color, CASE WHEN f.ovrl_cos = 'R' THEN 'Red' WHEN f.ovrl_cos = 'G' THEN 'Green' WHEN f.ovrl_cos = 'Y' THEN 'Yellow' WHEN f.ovrl_cos = 'O' THEN 'Orange' ELSE 'Desc N/A' END AS overall_cos, CASE WHEN f.ovrl_cos = 'R' THEN '#FFA4A9' WHEN f.ovrl_cos = 'G' THEN '#9DEEB2' WHEN f.ovrl_cos = 'Y' THEN '#FCCF0A' WHEN f.ovrl_cos = 'O' THEN '#FFA573' ELSE '#fff0' END AS overall_cos_color, CASE WHEN f.ovrl_cos = 'R' THEN 'Red' WHEN f.ovrl_cos = 'G' THEN 'Green' WHEN f.ovrl_cos = 'Y' THEN 'Yellow' WHEN f.ovrl_cos = 'O' THEN 'Orange' ELSE '-' END AS overall_cos_label, CASE WHEN f.pg_o_cmplnce = 1 THEN 'C' WHEN f.pg_o_cmplnce = 0 THEN 'NC' ELSE 'Desc N/A' END AS pg_o_cmplnce_val, CASE WHEN f.pg_o_cmplnce = 1 THEN 'Compliant' WHEN f.pg_o_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_o_cmplnce_val_label, CASE WHEN f.pg_o_cmplnce = 1 THEN '#9DEEB2' WHEN f.pg_o_cmplnce = 0 THEN '#FFA4A9' ELSE '#fff0' END AS pg_o_cmplnce_color, CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'C' WHEN f.pg_1_4_cmplnce = 0 THEN 'NC' ELSE 'Desc N/A' END AS pg_1_4_cmplnce_val, CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'Compliant' WHEN f.pg_1_4_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_1_4_cmplnce_val_label, CASE WHEN f.pg_1_4_cmplnce = 1 THEN '#9DEEB2' WHEN f.pg_1_4_cmplnce = 0 THEN '#FFA4A9' ELSE '#fff0' END AS pg_1_4_cmplnce_color, CASE WHEN f.pg_0_stat_flg = 'R' THEN 'Red' WHEN f.pg_0_stat_flg = 'G' THEN 'Green' WHEN f.pg_0_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_0_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_0_stat_flg_val, CASE WHEN f.pg_0_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_0_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_0_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_0_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_0_stat_flg_color, CASE WHEN f.pg_1_stat_flg = 'R' THEN 'Red' WHEN f.pg_1_stat_flg = 'G' THEN 'Green' WHEN f.pg_1_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_1_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_1_stat_flg_val, CASE WHEN f.pg_1_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_1_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_1_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_1_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_1_stat_flg_color, CASE WHEN f.pg_2_stat_flg = 'R' THEN 'Red' WHEN f.pg_2_stat_flg = 'G' THEN 'Green' WHEN f.pg_2_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_2_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_2_stat_flg_val, CASE WHEN f.pg_2_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_2_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_2_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_2_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_2_stat_flg_color, CASE WHEN f.pg_3_stat_flg = 'R' THEN 'Red' WHEN f.pg_3_stat_flg = 'G' THEN 'Green' WHEN f.pg_3_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_3_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_3_stat_flg_val, CASE WHEN f.pg_3_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_3_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_3_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_3_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_3_stat_flg_color, CASE WHEN f.pg_4_stat_flg = 'R' THEN 'Red' WHEN f.pg_4_stat_flg = 'G' THEN 'Green' WHEN f.pg_4_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_4_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_4_stat_flg_val, CASE WHEN f.pg_4_stat_flg = 'R' THEN '#FFA4A9' WHEN f.pg_4_stat_flg = 'G' THEN '#9DEEB2' WHEN f.pg_4_stat_flg = 'Y' THEN '#FCCF0A' WHEN f.pg_4_stat_flg = 'O' THEN '#FFA573' ELSE '#fff0' END AS pg_4_stat_flg_color, f.itd_to_pc_lkg, f.ytd_to_pc_lkg, f.cq_to_pc_lkg_amt, f.ub_ov_90, CASE WHEN f.ub_ov_90 = 0 THEN '#9DEEB2' WHEN f.ub_ov_90 > 0 THEN '#FFA4A9' ELSE '#fff0' END AS ub_ov_90_color, f.cq_actls_gp_ac_pv_amt, f.cq_actls_gp_ac_pv_pct, f.fc_gp_pct, f.aprvd_gp_pct, f.pc_actls_gp_ac_pct, f.cq_actls_rev_ac_amt, f.rev_incr_qtq_amt, f.itd_actls_gp_pct, f.completion_perc, CASE WHEN f.pm_notes_id != '' THEN SUBSTR(f.pm_notes_id, 1, locate('/', f.pm_notes_id)-1) ELSE 'N/A' END AS pm_notes_nm, CASE WHEN f.prtnr_nm != '' THEN SUBSTR(f.prtnr_nm, 1, locate('/', f.prtnr_nm)-1) ELSE 'N/A' END AS prtnr_nm, CASE WHEN f.cpm_rqrd_cnt = 1 THEN 'Yes' ELSE 'No' END AS cmplx_flg, CASE WHEN f.de_list_flg = 1 THEN 'Yes' ELSE 'No' END AS de_list_flg, CASE WHEN f.poc_ind = 'Y' THEN 'Yes' ELSE 'No' END AS poc_ind, CASE WHEN f.ovrl_sevenkeys = 'R' THEN 'Red' WHEN f.ovrl_sevenkeys = 'G' THEN 'Green' WHEN f.ovrl_sevenkeys = 'A' THEN 'Orange' ELSE '-' END AS overall_7k_result, CASE WHEN f.ovrl_sevenkeys = 'R' THEN '#FFA4A9' WHEN f.ovrl_sevenkeys = 'G' THEN '#9DEEB2' WHEN f.ovrl_sevenkeys = 'A' THEN '#FFA573' ELSE '#fff0' END AS overall_7k_result_color, CASE WHEN f.ds_cmplnt_cnt = 1 THEN 'C' WHEN f.ds_cmplnt_cnt = 0 THEN 'NC' ELSE 'Desc N/A' END AS delivery_start_val, CASE WHEN f.ds_cmplnt_cnt = 1 THEN 'Compliant' WHEN f.ds_cmplnt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS delivery_start_label, CASE WHEN f.ds_cmplnt_cnt = 1 THEN '#9DEEB2' WHEN f.ds_cmplnt_cnt = 0 THEN '#FFA4A9' ELSE '#fff0' END AS delivery_start_color, COALESCE(cmnt.cmnt_cnt, 0) AS cmnt_cnt FROM phd.dm_contract_portfolio_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key AND geo1.geo_lvl1_key != 0 INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim i ON i.indstry_key = f.indstry_key INNER JOIN phd.practice_dim p ON p.practice_key = f.practice_key AND p.include = 1 LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key LEFT JOIN cmnts cmnt ON cmnt.cntrct_key = f.cntrct_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.GRAPH_NM = 'APH_L2_GR1' AND ad.current = 1 {filter} ORDER BY f.tcv_amt DESC FETCH FIRST {expLimit} rows only ;\",\"description\":\"Active Porfolio Work Nbr Details\"}",
      "t2ActPortSrchContract": "{\"name\":\"t2ActPortSrchContract\",\"sqlTemplate\":\"select rtrim(f.cntrct_num) as cntrct_num, rtrim(f.cntrct_desc) as cntrct_desc, rtrim(cust.cust_nm) as client, cntrct_key, count(*) over() AS total_count from phd.dm_contract_portfolio_fact f /*inner join phd.active_type_dim stat on f.active_typ_key = stat.active_typ_key  */ inner join phd.customer_dim cust on f.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = f.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 inner join phd.acct_drop ad ON ad.mth_key = f.mth_key and ad.graph_nm = 'APH_L2_GR1' and ad.current = 1 {filter} <filter?AND:WHERE> f.cntrct_num like upper('%{sval}%') /*and stat.active_typ_cd like '%A%' */ order by f.cntrct_num desc fetch first 15 rows only ; \",\"description\":\"APH Contract Search\"}",
      "t2ActPortSrchClient": "{\"name\":\"t2ActPortSrchClient\",\"sqlTemplate\":\"select rtrim(f.cntrct_num) as cntrct_num, rtrim(f.cntrct_desc) as cntrct_desc, rtrim(cust.cust_nm) as client, cntrct_key, count(*) over() AS total_count from phd.dm_contract_portfolio_fact f /*inner join phd.active_type_dim stat on f.active_typ_key = stat.active_typ_key  */ inner join phd.customer_dim cust on f.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = f.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 inner join phd.acct_drop ad ON ad.mth_key = f.mth_key and ad.graph_nm = 'APH_L2_GR1' and ad.current = 1 {filter} <filter?AND:WHERE> upper(cust.cust_nm) like upper('%{sval}%') /*and stat.active_typ_cd like '%A%' */ order by f.cntrct_num desc fetch first 15 rows only ; \",\"description\":\"APH Client Search\"}",      
      "t2ActPortSrchWorkNum": "{\"name\":\"t2ActPortSrchWorkNum\",\"sqlTemplate\":\"select rtrim(f.cntrct_num) as cntrct_num, rtrim(f.cntrct_desc) as cntrct_desc, rtrim(cust.cust_nm) as client, cntrct_key, count(*) over() AS total_count from phd.dm_contract_portfolio_fact f /*inner join phd.active_type_dim stat on f.active_typ_key = stat.active_typ_key  */ inner join phd.customer_dim cust on f.cust_key = cust.cust_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = f.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.practice_dim prac on prac.practice_key = f.practice_key and prac.include = 1 inner join phd.acct_drop ad ON ad.mth_key = f.mth_key and ad.graph_nm = 'APH_L2_GR1' and ad.current = 1 {filter} <filter?AND:WHERE> f.cntrct_num like upper('%{sval}%') /*and stat.active_typ_cd like '%A%' */ order by f.cntrct_num desc fetch first 15 rows only ; \",\"description\":\"APH Work Nbr Search\"}",      
      "t2ActPortExportContract": "{\"name\":\"t2ActPortExportContract\",\"sqlTemplate\":\"SELECT ad.data_load_desc AS data_load_desc , cd.cust_nm AS client , RTRIM(ctry.ctry_nm) AS country , f.cntrct_num , f.cntrct_desc AS contract_name , RTRIM(svc_line.svc_line_nm) AS service_line , f.tcv_amt AS tcv , geo1.geo_lvl1_nm AS geo , geo2.geo_lvl2_nm AS market , gp.grth_plfm_desc AS growth_platform , RTRIM(p.practice_nm) AS practice_nm , s.sctr_gb_nm AS sector , i.indstry_cmr_nm , COALESCE((f.overall_risk), 0.0) AS OVERALL_RISK , CASE WHEN f.cic_dlvry_risc_score >= 0 AND f.cic_dlvry_risc_score <= 9 THEN 'Low' WHEN f.cic_dlvry_risc_score >= 10 AND f.cic_dlvry_risc_score <= 40 THEN 'Medium' WHEN f.cic_dlvry_risc_score >= 41 THEN 'High' ELSE 'N/A' END AS CIC_SCORE_TEXT , CASE WHEN f.de_notes_id != '' THEN SUBSTR(f.de_notes_id, 1, locate('/', f.de_notes_id) -1) ELSE 'N/A' END AS BRAND_DE , CASE WHEN f.pg_roat = 1 THEN 'Compliant' WHEN f.pg_roat = 0 THEN 'Non Compliant' ELSE 'Not in scope' END AS RO_ACT_CREATED , CASE WHEN f.pg_roato = 1 THEN 'Compliant' WHEN f.pg_roato = 0 THEN 'Non Compliant' ELSE 'Not in scope' END AS RO_OVRDUE_ACT , CASE WHEN f.sevenkey_cmplt_cnt = 1 THEN 'Compliant' WHEN f.sevenkey_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS overall_7k_label , CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'Compliant' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'Non Compliant' ELSE 'Desc N/A' END AS cpm_comp_label , CASE WHEN f.cos_cmplt_cnt = 1 THEN 'Compliant' WHEN f.cos_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS cos_comp_label , CASE WHEN f.ovrl_cos = 'R' THEN 'Red' WHEN f.ovrl_cos = 'G' THEN 'Green' WHEN f.ovrl_cos = 'Y' THEN 'Yellow' WHEN f.ovrl_cos = 'O' THEN 'Orange' ELSE '-' END AS overall_cos_label , CASE WHEN f.pg_o_cmplnce = 1 THEN 'Compliant' WHEN f.pg_o_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_o_cmplnce_val_label , CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'Compliant' WHEN f.pg_1_4_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_1_4_cmplnce_val_label , CASE WHEN f.pg_0_stat_flg = 'R' THEN 'Red' WHEN f.pg_0_stat_flg = 'G' THEN 'Green' WHEN f.pg_0_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_0_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_0_stat_flg_val , CASE WHEN f.pg_1_stat_flg = 'R' THEN 'Red' WHEN f.pg_1_stat_flg = 'G' THEN 'Green' WHEN f.pg_1_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_1_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_1_stat_flg_val , CASE WHEN f.pg_2_stat_flg = 'R' THEN 'Red' WHEN f.pg_2_stat_flg = 'G' THEN 'Green' WHEN f.pg_2_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_2_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_2_stat_flg_val , CASE WHEN f.pg_3_stat_flg = 'R' THEN 'Red' WHEN f.pg_3_stat_flg = 'G' THEN 'Green' WHEN f.pg_3_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_3_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_3_stat_flg_val , CASE WHEN f.pg_4_stat_flg = 'R' THEN 'Red' WHEN f.pg_4_stat_flg = 'G' THEN 'Green' WHEN f.pg_4_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_4_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_4_stat_flg_val , f.itd_to_pc_lkg , f.ytd_to_pc_lkg , f.cq_to_pc_lkg_amt , f.ub_ov_90 , f.cq_actls_gp_ac_pv_amt , f.cq_actls_gp_ac_pv_pct , f.fc_gp_pct , f.aprvd_gp_pct , f.pc_actls_gp_ac_pct , f.cq_actls_rev_ac_amt , f.rev_incr_qtq_amt , f.itd_actls_gp_pct , f.completion_perc , CASE WHEN f.pm_notes_id != '' THEN SUBSTR(f.pm_notes_id, 1, locate('/', f.pm_notes_id) -1) ELSE 'N/A' END AS pm_notes_nm , CASE WHEN f.prtnr_nm != '' THEN SUBSTR(f.prtnr_nm, 1, locate('/', f.prtnr_nm) -1) ELSE 'N/A' END AS prtnr_nm , CASE WHEN f.cpm_rqrd_cnt = 1 THEN 'Yes' ELSE 'No' END AS cmplx_flg , CASE WHEN f.de_list_flg = 1 THEN 'Yes' ELSE 'No' END AS de_list_flg , CASE WHEN f.poc_ind = 'Y' THEN 'Yes' ELSE 'No' END AS poc_ind , CASE WHEN f.ovrl_sevenkeys = 'R' THEN 'Red' WHEN f.ovrl_sevenkeys = 'G' THEN 'Green' WHEN f.ovrl_sevenkeys = 'A' THEN 'Orange' ELSE '-' END AS overall_7k_result , CASE WHEN f.ds_cmplnt_cnt = 1 THEN 'Compliant' WHEN f.ds_cmplnt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS delivery_start_val FROM phd.dm_contract_portfolio_fact f INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.GRAPH_NM = 'APH_L2_GR1' AND ad.current = 1 INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key AND geo1.geo_lvl1_key != 0 INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim i ON i.indstry_key = f.indstry_key INNER JOIN phd.practice_dim p ON p.practice_key = f.practice_key AND p.include = 1 LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key LEFT JOIN APP.VIEW_LIST vlt ON vlt.VIEW_ID = {viewId} AND vlt.CNTRCT_KEY = f.CNTRCT_KEY {filter} <filter?AND:WHERE> ({viewId} = -1 OR vlt.VIEW_ID IS NOT NULL) ORDER BY COALESCE(f.OVERALL_RISK, 0) DESC FETCH FIRST {expLimit} rows only ; \",\"description\":\"Active Porfolio Contract Export\"}",
      "t2ActPortExportWorkNum": "{\"name\":\"t2ActPortExportWorkNum\",\"sqlTemplate\":\"select ad.data_load_desc as data_load_desc, cd.cust_nm as client, rtrim(ctry.ctry_nm) as country, f.cntrct_num, f.cntrct_desc as contract_name, rtrim(svc_line.svc_line_nm) as service_line, f.tcv_amt as tcv, geo1.geo_lvl1_nm as geo, geo2.geo_lvl2_nm as market, gp.grth_plfm_desc as growth_platform, rtrim(p.practice_nm) as practice_nm, s.sctr_gb_nm as sector, i.indstry_cmr_nm, case when f.sevenkey_cmplt_cnt = 1 then 'Compliant' WHEN f.sevenkey_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS overall_7k_label, CASE WHEN f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1 THEN 'Compliant' WHEN NOT(f.cpm_assgnd = 1 OR f.cpm_excp_cnt = 1) THEN 'Non Compliant' ELSE 'Desc N/A' END AS cpm_comp_label, CASE WHEN f.cos_cmplt_cnt = 1 THEN 'Compliant' WHEN f.cos_cmplt_cnt = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS cos_comp_label, CASE WHEN f.ovrl_cos = 'R' THEN 'Red' WHEN f.ovrl_cos = 'G' THEN 'Green' WHEN f.ovrl_cos = 'Y' THEN 'Yellow' WHEN f.ovrl_cos = 'O' THEN 'Orange' ELSE '-' END AS overall_cos_label, CASE WHEN f.pg_o_cmplnce = 1 THEN 'Compliant' WHEN f.pg_o_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_o_cmplnce_val_label, CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'Compliant' WHEN f.pg_1_4_cmplnce = 0 THEN 'Non Compliant' ELSE 'Desc N/A' END AS pg_1_4_cmplnce_val_label, CASE WHEN f.pg_0_stat_flg = 'R' THEN 'Red' WHEN f.pg_0_stat_flg = 'G' THEN 'Green' WHEN f.pg_0_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_0_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_0_stat_flg_val, CASE WHEN f.pg_1_stat_flg = 'R' THEN 'Red' WHEN f.pg_1_stat_flg = 'G' THEN 'Green' WHEN f.pg_1_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_1_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_1_stat_flg_val, CASE WHEN f.pg_2_stat_flg = 'R' THEN 'Red' WHEN f.pg_2_stat_flg = 'G' THEN 'Green' WHEN f.pg_2_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_2_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_2_stat_flg_val, CASE WHEN f.pg_3_stat_flg = 'R' THEN 'Red' WHEN f.pg_3_stat_flg = 'G' THEN 'Green' WHEN f.pg_3_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_3_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_3_stat_flg_val, CASE WHEN f.pg_4_stat_flg = 'R' THEN 'Red' WHEN f.pg_4_stat_flg = 'G' THEN 'Green' WHEN f.pg_4_stat_flg = 'Y' THEN 'Yellow' WHEN f.pg_4_stat_flg = 'O' THEN 'Orange' ELSE '-' END AS pg_4_stat_flg_val, f.itd_to_pc_lkg, f.ytd_to_pc_lkg, f.cq_to_pc_lkg_amt, f.ub_ov_90, f.cq_actls_gp_ac_pv_amt, f.cq_actls_gp_ac_pv_pct, f.fc_gp_pct, f.aprvd_gp_pct, f.pc_actls_gp_ac_pct, f.cq_actls_rev_ac_amt, f.rev_incr_qtq_amt, f.itd_actls_gp_pct, f.completion_perc, CASE WHEN f.pm_notes_id != '' THEN SUBSTR(f.pm_notes_id, 1, locate('/', f.pm_notes_id)-1) ELSE 'N/A' END AS pm_notes_nm, CASE WHEN f.prtnr_nm != '' THEN SUBSTR(f.prtnr_nm, 1, locate('/', f.prtnr_nm)-1) ELSE 'N/A' END AS prtnr_nm, CASE WHEN f.cpm_rqrd_cnt = 1 THEN 'Yes' ELSE 'No' END AS cmplx_flg, CASE WHEN f.de_list_flg = 1 THEN 'Yes' ELSE 'No' END AS de_list_flg, case when f.poc_ind = 'Y' then 'Yes' else 'No' end as poc_ind, CASE WHEN f.ovrl_sevenkeys = 'R' THEN 'Red' WHEN f.ovrl_sevenkeys = 'G' THEN 'Green' WHEN f.ovrl_sevenkeys = 'A' THEN 'Orange' ELSE '-' END AS overall_7k_result, case when f.ds_cmplnt_cnt = 1 then 'Compliant' when f.ds_cmplnt_cnt = 0 then 'Non Compliant' else 'Desc N/A' end as delivery_start_val FROM phd.dm_contract_portfolio_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key AND geo1.geo_lvl1_key != 0 INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key AND svc_line.in_scope = 1 INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim i ON i.indstry_key = f.indstry_key INNER JOIN phd.practice_dim p ON p.practice_key = f.practice_key AND p.include = 1 LEFT JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.GRAPH_NM = 'APH_L2_GR1' AND ad.current = 1 {filter} ORDER BY f.tcv_amt DESC FETCH FIRST {expLimit} rows only ; \",\"description\":\"Active Porfolio Work Nbr Export\"}",
      
      "cmntGetAll": "{\"name\":\"cmntGetAll\",\"sqlTemplate\":\"call dw.COMMENTS_GET_ALL('{cntrctKey}', '{status}'); \",\"description\":\"Comments - get cmnts all types\"}",
      "cmntAdd": "{\"name\":\"cmntAdd\",\"sqlTemplate\":\"call dw.COMMENTS_ADD('{cntrctKey}', '{email}', '{metric}', '{ttl}', '{cmnt}'); \",\"description\":\"Comments - add\"}",
      "cmntUpdate": "{\"name\":\"cmntUpdate\",\"sqlTemplate\":\"call dw.COMMENTS_UPDATE('{cmntId}', '{ttl}', '{cmnt}'); \",\"description\":\"Comments - update\"}",
      "cmntStatus": "{\"name\":\"cmntStatus\",\"sqlTemplate\":\"call dw.COMMENTS_CHANGE_STATUS('{cmntId}', '{status}'); \",\"description\":\"Comments - update status\"}",      
      "cmntReply": "{\"name\":\"cmntReply\",\"sqlTemplate\":\"call dw.COMMENTS_REPLY('{cntrctKey}', '{email}', '{metric}', '{cmnt}', '{cmntId}');   \",\"description\":\"Comments - reply\"}",
      "cmntReplyUpdate": "{\"name\":\"cmntReplyUpdate\",\"sqlTemplate\":\"call dw.COMMENTS_REPLY_UPDATE('{cmntId}', '{replyId}', '{cmnt}');   \",\"description\":\"Comments - update reply\"}",
      "cmntReplyStatus": "{\"name\":\"cmntReplyStatus\",\"sqlTemplate\":\"call dw.COMMENTS_REPLY_DELETE('{cmntId}', '{replyId}');   \",\"description\":\"Comments - update status of reply\"}",

      "t1PMContractList": "{\"name\":\"t1PMContractList\",\"sqlTemplate\":\"select rtrim(cn.cntrct_num) as cntrct_num, cn.cntrct_key, cn.cntrct_desc as cntrct_desc, cu.cust_nm as customer, 'All' as work_nbr, date(cn.strtd_dt) as wbs_start_dt, date(cn.end_dt) as wbs_end_dt, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country from phd.contract_leakage_fact f inner join phd.customer_dim cu on f.cust_key = cu.cust_key inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on ad.mth_key = f.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.yr_mo_key = 'CURRENT' {pmAccess} {filter} order by cntrct_num fetch first 30 rows only ; \",\"description\":\"PM Dashboard contract list\"}",
      "t1PMContractListPHD": "{\"name\":\"t1PMContractListPHD\",\"sqlTemplate\":\"SELECT Rtrim(cn.cntrct_num) AS cntrct_num, cn.cntrct_key, cn.cntrct_desc AS cntrct_desc, cu.cust_nm AS customer, 'All' AS work_nbr, DATE(strtd_dt) AS wbs_start_dt, DATE(end_dt) AS wbs_end_dt, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country FROM phd.contract_leakage_fact f INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN ( 0, 21 ) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND ad.yr_mo_key = 'CURRENT' {filter} <filter?AND:WHERE> cn.cntrct_key = '{cntrctKey}' ORDER BY cntrct_num FETCH first 30 ROWS only ; \",\"description\":\"PM Dashboard contract header details from PHD\"}",
      "t1PMWorkNumList": "{\"name\":\"t1PMWorkNumList\",\"sqlTemplate\":\"select rtrim(cn.cntrct_num) as contract_num, cn.cntrct_key, rtrim(p.proj_num) as work_num, days(current date) - days(p.strt_dt) as nbr_days, case when days(current date) - days(p.strt_dt) <= 45 and days(current date) - days(p.strt_dt) > 0 then 1 else 0 end as launch_flg, case when days(current date) - days(p.strt_dt) <= 45 and days(current date) - days(p.strt_dt) > 0 then 'Data will not be displayed on any work items/contracts that have not been in operation for under 45 days' else '' end as launch_text, p.proj_key, cu.cust_nm as customer, ad.data_load_desc, rtrim(a.active_typ_desc) as contract_type, rtrim(p.proj_desc) as work_name, date(p.strt_dt) as wbs_start_dt, date(p.end_dt) as wbs_end_dt, geo2.geo_lvl2_nm AS market, ctry.ctry_nm AS country, CASE WHEN p.flg_ap51_ppf = 'Y' THEN 'PoC' ELSE 'Non-PoC' END AS ap51  from phd.project_leakage_fact_16w_v f inner join phd.project_dim p on f.proj_key = p.proj_key and p.active_typ_key in (1,8) inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.customer_dim cu on f.cust_key = cu.cust_key inner join phd.active_type_dim a on cn.active_typ_key = a.active_typ_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on ad.mth_key = f.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.yr_mo_key = 'CURRENT' {pmAccess} {filter} <filter?AND:WHERE> rtrim(cn.cntrct_key) = '{cntrctKey}' order by work_num asc /* fetch first 30 rows only */ ; \",\"description\":\"PM Dashboard work nbr list\"}",

      "t1PMPlanPerfContract": "{\"name\":\"t1PMPlanPerfContract\",\"sqlTemplate\":\"select rtrim(c.mth_key) as month, ad.data_load_desc, c.itd_actls_rev_cb_amt as itd_revenue_dol, c.itd_actls_cost_cb_amt as itd_cost_dol, c.itd_actls_gp_cb_amt as itd_rev_gp_dol, c.itd_actls_gp_cb_pct as itd_rev_gp_per, c.pc_rev_cb_amt as pc_revenue_dol, c.pc_cost_cb_amt as pc_cost_dol, c.pc_gp_cb_amt as pc_rev_gp_dol, c.pc_gp_cb_pct as pc_rev_gp_per, c.aprvd_rev_cb_amt as ap_revenue_dol, c.aprvd_cost_cb_amt as ap_cost_dol, c.aprvd_gp_cb_amt as ap_rev_gp_dol, c.aprvd_gp_cb_pct as ap_rev_gp_per, c.eac_rev_cv_amt as fc_eac_revenue_dol, c.eac_cost_cb_amt as fc_eac_cost_dol, c.eac_gp_cb_amt as fc_eac_rev_gp_dol, c.acc_gp_cb_pct as fc_eac_rev_gp_per, cn.cntrct_num, cn.cntrct_key, m.mth_nm as mth_num from phd.contract_leakage_fact_16w_v c inner join phd.month_dim m on c.mth_key = m.mth_key inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key left join phd.acct_drop ad on c.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} <filter?AND:WHERE> c.mth_key <= ( select mth_key from phd.acct_drop where graph_nm = 'GP_L2_GR1' and CURRENT = 1) and c.mth_key >= ( select ( mth_key - 3 ) from phd.acct_drop where graph_nm = 'GP_L2_GR1' and CURRENT = 1 ) and cn.cntrct_key = '{cntrctKey}' order by c.mth_key ; \",\"description\":\"Plan Performance Contract Level T1 data\"}",
      "t1PMPlanPerfWorkNum": "{\"name\":\"t1PMPlanPerfWorkNum\",\"sqlTemplate\":\"select p.itd_actls_cost_amt as itd_cost_dol, ad.data_load_desc, ad.data_load_desc, p.itd_actls_gp_amt as itd_rev_gp_dol, p.itd_actls_gp_pct as itd_rev_gp_per, p.pc_rev_amt as pc_revenue_dol, p.pc_cost_amt as pc_cost_dol, p.pc_gp_amt as pc_rev_gp_dol, p.pc_gp_pct as pc_rev_gp_per, p.aprvd_rev_amt as ap_revenue_dol, p.aprvd_cost_amt as ap_cost_dol, p.aprvd_gp_amt as ap_rev_gp_dol, p.aprvd_gp_pct as ap_rev_gp_per, p.eac_actls_rev_amt as fc_eac_revenue_dol, p.eac_actls_cost_amt as fc_eac_cost_dol, p.eac_actls_gp_amt as fc_eac_rev_gp_dol, p.eac_actls_gp_pct as fc_eac_rev_gp_per, pn.proj_num, pn.proj_key, rtrim(m.mth_nm) as mth_num from phd.project_leakage_fact_16w_v p inner join phd.month_dim m on p.mth_key = m.mth_key inner join phd.project_dim pn on p.proj_key = pn.proj_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = p.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = p.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = p.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = p.indstry_key inner join phd.growth_platform_dim gp on p.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on p.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on p.sctr_key = s.sctr_gb_key inner join phd.contract_dim cn on p.cntrct_key = cn.cntrct_key left join phd.acct_drop ad on p.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} <filter?AND:WHERE>  p.mth_key <= ( select mth_key from phd.acct_drop where graph_nm = 'GP_L2_GR1' and current = 1) and p.mth_key >= ( select ( mth_key - 3 ) from phd.acct_drop where graph_nm = 'GP_L2_GR1' and current = 1 ) and pn.proj_key = '{workKey}' order by p.mth_key ; \",\"description\":\"Plan Performance Project Level T1 data\"}",

      "t1PMContPerfPCContract": "{\"name\":\"t1PMContPerfPCContract\",\"sqlTemplate\":\"with pc_current_month as ( select cn.cntrct_key, cn.cntrct_num, ad.data_load_desc, c.itd_to_pc_lkg_amt, c.itd_actls_rev_cb_amt, c.frcst_to_pc_lkg_amt, c.pc_rev_amt, c.ytd_to_pc_lkg_amt, c.ytd_actls_rev_amt, c.cq_to_pc_lkg_amt, c.cq_actls_rev_ac_pv_amt, c.pq_to_pc_lkg_amt, c.pq_actls_rev_ac_amt, c.etc_actls_rev_amt, c.etc_actls_cost_amt  from phd.contract_leakage_fact_16w_v c inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key and cn.cntrct_key = '{cntrctKey}' inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on c.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1  {pmAccess} {filter} ), pc_previous_month as ( select c.itd_to_pc_lkg_amt, c.itd_actls_rev_cb_amt, c.frcst_to_pc_lkg_amt, c.pc_rev_amt, c.ytd_to_pc_lkg_amt, c.ytd_actls_rev_amt, c.cq_to_pc_lkg_amt, c.cq_actls_rev_ac_pv_amt, c.pq_to_pc_lkg_amt, c.pq_actls_rev_ac_amt, c.etc_actls_rev_amt, c.etc_actls_cost_amt, cn.cntrct_key, cn.cntrct_num, ad.data_load_desc from phd.contract_leakage_fact_16w_v c inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key and cn.cntrct_key = '{cntrctKey}' inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on c.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} ) select coalesce(sum(c.itd_to_pc_lkg_amt), 0) as current_month_itd_to_pc, case when coalesce(sum(c.itd_actls_rev_cb_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c.itd_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c.itd_actls_rev_cb_amt),0)as decimal(19, 4)) end as current_month_itd_to_pc_per, coalesce(sum(c.frcst_to_pc_lkg_amt),0) as current_month_eac_to_pc, case when coalesce(sum(c.pc_rev_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c.frcst_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c.pc_rev_amt),0)as decimal(19, 4)) end as current_month_eac_to_pc_per, coalesce(sum(c.ytd_to_pc_lkg_amt),0) as current_month_ytd_to_pc, case when coalesce(sum(c.ytd_actls_rev_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c.ytd_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c.ytd_actls_rev_amt),0)as decimal(19, 4)) end as current_month_ytd_to_pc_per, coalesce(sum(c.cq_to_pc_lkg_amt),0) as current_month_qtd_to_pc, case when coalesce(sum(c.cq_actls_rev_ac_pv_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c.cq_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c.cq_actls_rev_ac_pv_amt),0)as decimal(19, 4)) end as current_month_qtd_to_pc_per, coalesce(sum(c.etc_actls_rev_amt),0) - coalesce(sum(c.etc_actls_cost_amt),0) as current_month_etc, case when coalesce(sum(c.etc_actls_rev_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c.etc_actls_rev_amt),0) - coalesce(sum(c.etc_actls_cost_amt),0)as decimal(19, 4))/cast(coalesce(sum(c.etc_actls_rev_amt),0)as decimal(19, 4)) end as current_month_etc_per , coalesce(sum(c1.itd_to_pc_lkg_amt),0) as previous_month_itd_to_pc, case when coalesce(sum(c1.itd_actls_rev_cb_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c1.itd_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c1.itd_actls_rev_cb_amt),0)as decimal(19, 4)) end as previous_month_itd_to_pc_per, coalesce(sum(c1.frcst_to_pc_lkg_amt),0) as previous_month_eac_to_pc, case when coalesce(sum(c1.pc_rev_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c1.frcst_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c1.pc_rev_amt),0)as decimal(19, 4)) end as previous_month_eac_to_pc_per, coalesce(sum(c1.ytd_to_pc_lkg_amt),0) as previous_month_ytd_to_pc, case when coalesce(sum(c1.ytd_actls_rev_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c1.ytd_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c1.ytd_actls_rev_amt),0)as decimal(19, 4)) end as previous_month_ytd_to_pc_per, coalesce(sum(c.pq_to_pc_lkg_amt),0) as previous_month_qtd_to_pc, case when coalesce(sum(c.pq_actls_rev_ac_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c.pq_to_pc_lkg_amt),0)as decimal(19, 4))/cast(coalesce(sum(c.pq_actls_rev_ac_amt),0)as decimal(19, 4)) end as previous_month_qtd_to_pc_per, coalesce(sum(c1.etc_actls_rev_amt),0) - coalesce(sum(c1.etc_actls_cost_amt),0) as previous_month_etc, case when coalesce(sum(c1.etc_actls_rev_amt),0) = 0 then cast(0.0 as float) else cast(coalesce(sum(c1.etc_actls_rev_amt),0) - coalesce(sum(c1.etc_actls_cost_amt),0)as decimal(19, 4))/cast(coalesce(sum(c1.etc_actls_rev_amt),0)as decimal(19, 4)) end as previous_month_etc_per, c.data_load_desc from pc_current_month c, pc_previous_month c1 where c.cntrct_key = c1.cntrct_key group by c.cntrct_key, c1.cntrct_key, c.data_load_desc ; \",\"description\":\"Contract Performance PC Contract Level T1 data\"}",
      "t1PMContPerfPCWorkNum": "{\"name\":\"t1PMContPerfPCWorkNum\",\"sqlTemplate\":\"with pc_current_month as ( select cn.cntrct_num, pn.proj_num, pn.proj_key, ad.data_load_desc, p.itd_to_pc_lkg_amt, p.itd_actls_rev_amt, p.frcst_to_pc_lkg_amt, p.pc_rev_amt, p.ytd_to_pc_lkg_amt, p.ytd_actls_rev_amt, p.cq_to_pc_lkg_amt, p.cq_actls_rev_ac_pv_amt, p.pq_to_pc_lkg_amt, p.pq_actls_rev_ac_amt, p.etc_actls_rev_amt, p.etc_actls_cost_amt from phd.project_leakage_fact_16w_v p inner join phd.contract_dim cn on p.cntrct_key = cn.cntrct_key inner join phd.project_dim pn on p.proj_key = pn.proj_key and pn.proj_key = '{workKey}' inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = p.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = p.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = p.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = p.indstry_key inner join phd.growth_platform_dim gp on p.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on p.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on p.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on p.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} ), pc_previous_month as ( select cn.cntrct_num, pn.proj_num, pn.proj_key, ad.data_load_desc, p.itd_to_pc_lkg_amt, p.itd_actls_rev_amt, p.frcst_to_pc_lkg_amt, p.pc_rev_amt, p.ytd_to_pc_lkg_amt, p.ytd_actls_rev_amt, p.cq_to_pc_lkg_amt, p.cq_actls_rev_ac_pv_amt, p.pq_to_pc_lkg_amt, p.pq_actls_rev_ac_amt, p.etc_actls_rev_amt, p.etc_actls_cost_amt from phd.project_leakage_fact_16w_v p inner join phd.contract_dim cn on p.cntrct_key = cn.cntrct_key inner join phd.project_dim pn on p.proj_key = pn.proj_key and pn.proj_key = '{workKey}' inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = p.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = p.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = p.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = p.indstry_key inner join phd.growth_platform_dim gp on p.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on p.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on p.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on p.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} ) select p.itd_to_pc_lkg_amt as current_month_itd_to_pc, case when coalesce(p.itd_actls_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p.itd_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p.itd_actls_rev_amt, 0)as decimal(19, 4)) end as current_month_itd_to_pc_per, coalesce(p.frcst_to_pc_lkg_amt, 0) as current_month_eac_to_pc, case when coalesce(p.pc_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p.frcst_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p.pc_rev_amt, 0)as decimal(19, 4)) end as current_month_eac_to_pc_per, coalesce(p.ytd_to_pc_lkg_amt, 0) as current_month_ytd_to_pc, case when coalesce(p.ytd_actls_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p.ytd_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p.ytd_actls_rev_amt, 0)as decimal(19, 4)) end as current_month_ytd_to_pc_per, coalesce(p.cq_to_pc_lkg_amt, 0) as current_month_qtd_to_pc, case when coalesce(p.cq_actls_rev_ac_pv_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p.cq_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p.cq_actls_rev_ac_pv_amt, 0)as decimal(19, 4)) end as current_month_qtd_to_pc_per, coalesce(p.etc_actls_rev_amt, 0) - coalesce(p.etc_actls_cost_amt, 0) as current_month_etc, case when coalesce(p.etc_actls_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p.etc_actls_rev_amt, 0) - coalesce(p.etc_actls_cost_amt, 0)as decimal(19, 4))/cast(coalesce(p.etc_actls_rev_amt, 0)as decimal(19, 4)) end as current_month_etc_per, p1.itd_to_pc_lkg_amt as previous_month_itd_to_pc, case when coalesce(p1.itd_actls_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p1.itd_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p1.itd_actls_rev_amt, 0)as decimal(19, 4)) end as previous_month_itd_to_pc_per, coalesce(p1.frcst_to_pc_lkg_amt, 0) as previous_month_eac_to_pc, case when coalesce(p1.pc_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p1.frcst_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p1.pc_rev_amt, 0)as decimal(19, 4)) end as previous_month_eac_to_pc_per, coalesce(p1.ytd_to_pc_lkg_amt, 0) as previous_month_ytd_to_pc, case when coalesce(p1.ytd_actls_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p1.ytd_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p1.ytd_actls_rev_amt, 0)as decimal(19, 4)) end as previous_month_ytd_to_pc_per, coalesce(p.pq_to_pc_lkg_amt, 0) as previous_month_qtd_to_pc, case when coalesce(p.pq_actls_rev_ac_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p.pq_to_pc_lkg_amt, 0)as decimal(19, 4))/cast(coalesce(p.pq_actls_rev_ac_amt, 0)as decimal(19, 4)) end as previous_month_qtd_to_pc_per, coalesce(p1.etc_actls_rev_amt, 0) - coalesce(p1.etc_actls_cost_amt, 0) as previous_month_etc, case when coalesce(p1.etc_actls_rev_amt, 0) = 0 then cast(0.0 as float) else cast(coalesce(p1.etc_actls_rev_amt, 0) - coalesce(p1.etc_actls_cost_amt, 0)as decimal(19, 4))/cast(coalesce(p1.etc_actls_rev_amt, 0)as decimal(19, 4)) end as previous_month_etc_per, p.data_load_desc from pc_current_month p, pc_previous_month p1 where p.proj_key = p1.proj_key ; \",\"description\":\"Contract Performance PC Project Level T1 data\"}",

      "t1PMFinPerfMthPCContract": "{\"name\":\"t1PMFinPerfMthPCContract\",\"sqlTemplate\":\"with ctable as ( select f.rev_pc_pln_amt AS rev_in_dol, f.cost_pc_pln_amt AS cost_in_dol, ( f.rev_pc_pln_amt - f.cost_pc_pln_amt) AS gp_in_dol, CASE WHEN COALESCE(f.rev_pc_pln_amt, 0) = 0 THEN Cast(0.0 AS FLOAT) ELSE Cast( COALESCE( ( f.rev_pc_pln_amt - f.cost_pc_pln_amt ), 0 ) AS DECIMAL(19, 4) )/ ABS(Cast( COALESCE(f.rev_pc_pln_amt, 0) AS DECIMAL(19, 4) )) END AS gp_in_per, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.rev_actls_pln_amt ELSE 0.0 END AS act_rev_in_dol, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.rev_frcst_pln_amt ELSE 0.0 END AS fcst_rev_in_dol, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.cost_actls_pln_amt ELSE 0.0 END AS act_cost_in_dol, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.cost_frcst_pln_amt ELSE 0.0 END AS fcst_cost_in_dol, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN ( f.rev_actls_pln_amt - f.cost_actls_pln_amt ) ELSE 0.0 END AS act_gp_in_dol, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN ( f.rev_frcst_pln_amt - f.cost_frcst_pln_amt ) ELSE 0.0 END AS fcst_gp_in_dol, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN CASE WHEN COALESCE(f.rev_actls_pln_amt, 0) = 0 THEN Cast(0.0 AS FLOAT) ELSE Cast( COALESCE( ( f.rev_actls_pln_amt - f.cost_actls_pln_amt ), 0 ) AS DECIMAL(19, 4) )/ ABS(Cast( COALESCE(f.rev_actls_pln_amt, 0) AS DECIMAL(19, 4) )) END ELSE 0.0 END AS act_gp_in_per, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN CASE WHEN COALESCE(f.rev_frcst_pln_amt, 0) = 0 THEN Cast(0.0 AS FLOAT) ELSE Cast( COALESCE( ( f.rev_frcst_pln_amt - f.cost_frcst_pln_amt ), 0 ) AS DECIMAL(19, 4) )/ ABS(Cast( COALESCE(f.rev_frcst_pln_amt, 0) AS DECIMAL(19, 4) )) END ELSE 0.0 END AS fcst_gp_in_per, cn.cntrct_num, cn.cntrct_key, c.cust_nm, cn.cntrct_desc, date(cn.strtd_dt) as strtd_dt, date(cn.end_dt) as end_dt, f.mth_key, Rtrim(m.mth_nm) AS mth_nm, ad.data_load_desc from phd.contract_financial_snap_fact f inner join phd.customer_dim c on f.cust_key = c.cust_key inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key and f.cntrct_key = '{cntrctKey}' inner join phd.month_dim m on f.mth_key = m.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key left join phd.acct_drop ad on f.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} <filter?AND:WHERE> f.mth_key IN ( SELECT mth_key FROM phd.month_dim WHERE qtr_key IN ( ( SELECT cal_yr_num || cal_qtr_num FROM phd.date_dim WHERE day_dt = CURRENT_DATE ) UNION ( SELECT CASE WHEN cal_qtr_num = 1 THEN (cal_yr_num - 1) || 4 ELSE (cal_yr_num) ||(cal_qtr_num - 1) END FROM phd.date_dim WHERE day_dt = CURRENT_DATE ) UNION ( SELECT CASE WHEN cal_qtr_num = 4 THEN (cal_yr_num + 1) || 1 ELSE (cal_yr_num) ||(cal_qtr_num + 1) end from phd.date_dim where day_dt = current_date ) ) ) order by f.mth_key ), gp_per as (select coalesce(f.pc_gp_pct, 0.0) as plan_gp_per, coalesce(f.eac_actls_gp_pct, 0.0) as pv_gp_per from phd.contract_leakage_fact_16w_v f inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key and f.cntrct_key = '{cntrctKey}'  inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on f.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and yr_mo_key = 'CURRENT' {pmAccess} {filter} ) select rev_in_dol, cost_in_dol, gp_in_dol, gp_in_per, act_rev_in_dol, fcst_rev_in_dol, act_cost_in_dol, act_cost_in_dol, fcst_cost_in_dol, act_gp_in_dol, fcst_gp_in_dol, act_gp_in_per, fcst_gp_in_per, cntrct_num, cntrct_key, cust_nm, cntrct_desc, strtd_dt, end_dt, mth_key, mth_nm, ctable.data_load_desc, gp_per.plan_gp_per, gp_per.pv_gp_per from ctable left join gp_per on 1 = 1 ; \",\"description\":\"Financial Performance Contract Level T1 data\"}",
      "t1PMFinPerfMthPCWorkNum": "{\"name\":\"t1PMFinPerfMthPCWorkNum\",\"sqlTemplate\":\"with ctable as ( select f.rev_pc_pln_amt as rev_in_dol, f.cost_pc_pln_amt as cost_in_dol, ( f.rev_pc_pln_amt - f.cost_pc_pln_amt) AS gp_in_dol, CASE WHEN Coalesce(f.rev_pc_pln_amt, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST( Coalesce( ( f.rev_pc_pln_amt - f.cost_pc_pln_amt ), 0 ) AS DECIMAL(19, 4) )/ ABS(CAST( Coalesce(f.rev_pc_pln_amt, 0) AS DECIMAL(19, 4) )) END AS gp_in_per, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.rev_actls_pln_amt ELSE 0.0 END AS act_rev_in_dol, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.rev_frcst_pln_amt ELSE 0.0 END AS fcst_rev_in_dol, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.cost_actls_pln_amt ELSE 0.0 END AS act_cost_in_dol, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN f.cost_frcst_pln_amt ELSE 0.0 END AS fcst_cost_in_dol, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN ( f.rev_actls_pln_amt - f.cost_actls_pln_amt ) ELSE 0.0 END AS act_gp_in_dol, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN ( f.rev_frcst_pln_amt - f.cost_frcst_pln_amt ) ELSE 0.0 END AS fcst_gp_in_dol, CASE WHEN f.mth_key <= ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN CASE WHEN coalesce(f.rev_actls_pln_amt, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST( coalesce( ( f.rev_actls_pln_amt - f.cost_actls_pln_amt ), 0 ) AS decimal(19, 4) )/ CAST( coalesce(f.rev_actls_pln_amt, 0) AS decimal(19, 4) ) END ELSE 0.0 END AS act_gp_in_per, CASE WHEN f.mth_key > ( SELECT mth_key FROM phd.acct_drop WHERE graph_nm = 'GP_L2_GR1' AND CURRENT = 1 ) THEN CASE WHEN coalesce(f.rev_frcst_pln_amt, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST( coalesce( ( f.rev_frcst_pln_amt - f.cost_frcst_pln_amt ), 0 ) AS decimal(19, 4) )/ CAST( coalesce(f.rev_frcst_pln_amt, 0) AS decimal(19, 4) ) END ELSE 0.0 END AS fcst_gp_in_per, pn.proj_num, pn.proj_key, cn.cntrct_num, c.cust_nm, pn.proj_desc, date(pn.strt_dt) as strt_dt, date(pn.end_dt) as end_dt, f.mth_key, rtrim(m.mth_nm) AS mth_nm, ad.data_load_desc from phd.project_financial_snap_fact f inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.customer_dim c on f.cust_key = c.cust_key inner join phd.project_dim pn on f.proj_key = pn.proj_key and pn.proj_key = '{workKey}'  inner join phd.month_dim m on f.mth_key = m.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key left join phd.acct_drop ad on f.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 {pmAccess} {filter} <filter?AND:WHERE> f.mth_key IN ( SELECT mth_key FROM phd.month_dim where qtr_key IN ( ( SELECT cal_yr_num || cal_qtr_num FROM phd.date_dim WHERE day_dt = CURRENT_DATE ) UNION ( SELECT CASE WHEN cal_qtr_num = 1 THEN (cal_yr_num - 1) || 4 ELSE (cal_yr_num) ||(cal_qtr_num - 1) END FROM phd.date_dim WHERE day_dt = CURRENT_DATE ) UNION ( SELECT CASE WHEN cal_qtr_num = 4 THEN (cal_yr_num + 1) || 1 ELSE (cal_yr_num) ||(cal_qtr_num + 1) end from phd.date_dim where day_dt = current_date ) ) ) order by f.mth_key ), gp_per as ( select coalesce(f.pc_gp_pct, 0.0) as plan_gp_per, coalesce(f.eac_actls_gp_pct, 0.0) as pv_gp_per from phd.project_leakage_fact_16w_v f inner join phd.project_dim p on f.proj_key = p.proj_key and p.proj_key = '{workKey}' inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on f.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and yr_mo_key = 'CURRENT' {pmAccess} {filter} ) select rev_in_dol, cost_in_dol, gp_in_dol, gp_in_per, act_rev_in_dol, fcst_rev_in_dol, act_cost_in_dol, act_cost_in_dol, fcst_cost_in_dol, act_gp_in_dol, fcst_gp_in_dol, act_gp_in_per, fcst_gp_in_per, proj_num, proj_key, cntrct_num, cust_nm, proj_desc, strt_dt, end_dt, mth_key, mth_nm, ctable.data_load_desc, gp_per.plan_gp_per, gp_per.pv_gp_per from ctable left join gp_per on 1 = 1 ; \",\"description\":\"Financial Performance Project Level T1 data\"}",

      "t1PMTrendIncepContract": "{\"name\":\"t1PMTrendIncepContract\",\"sqlTemplate\":\"with price_case_all_month as ( select c.mth_key, sum(c.pc_rev_amt) as price_case_revenue_dol, sum(c.pc_cost_amt) as price_case_cost_dol, sum(c.pc_gp_amt) as price_case_gp_dol, case when not(sum(nullif(c.pc_rev_amt, 0)) = 0) then cast(sum(c.pc_gp_amt) as decimal(19, 4)) / cast(abs(sum(nullif(c.pc_rev_amt, 0))) as decimal(19, 4)) else cast(0.0 as float) end as price_case_gp_per, sum(c.aprvd_rev_amt) as approved_plan_revenue_dol, sum(c.aprvd_cost_amt) as approved_plan_cost_dol, sum(c.aprvd_gp_amt) as approved_plan_rev_gp_dol, case when not(sum(nullif(c.aprvd_rev_amt, 0)) = 0) then cast(sum(c.aprvd_gp_amt) as decimal(19, 4)) / cast(abs(sum(nullif(c.aprvd_rev_amt, 0))) as decimal(19, 4)) else cast(0.0 as float) end as approved_plan_rev_gp_per, sum(c.eac_actls_rev_amt) as forecast_revenue_dol, sum(c.eac_actls_cost_amt) as forecast_cost_dol, sum(c.eac_actls_gp_amt) as forecast_gp_dol, case when not(sum(nullif(c.eac_actls_rev_amt, 0)) = 0) then cast(sum(c.eac_actls_gp_amt) as decimal(19, 4)) / cast(abs(sum(nullif(c.eac_actls_rev_amt, 0))) as decimal(19, 4)) else cast(0.0 as float) end as forecast_gp_per, rtrim(m.mth_nm) as mth_nm from phd.project_leakage_fact_16w_v c inner join phd.month_dim m on c.mth_key = m.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key {pmAccess} {filter} <filter?AND:WHERE> c.cntrct_key = '{cntrctKey}' group by c.mth_key, mth_nm order by c.mth_key ), price_case_current_month AS ( SELECT c.mth_key,  ad.data_load_desc, SUM(c.pc_rev_amt) AS price_case_revenue_dol, SUM(c.pc_cost_amt) AS price_case_cost_dol, SUM(c.pc_gp_amt) AS price_case_gp_dol, CASE WHEN NOT(SUM(NULLIF(c.pc_rev_amt, 0)) = 0) THEN CAST(SUM(c.pc_gp_amt) AS DECIMAL(19, 4)) / CAST(ABS(SUM(NULLIF(c.pc_rev_amt, 0))) AS DECIMAL(19, 4)) ELSE CAST(0.0 AS float) END AS price_case_gp_per, SUM(c.aprvd_rev_amt) AS approved_plan_revenue_dol, SUM(c.aprvd_cost_amt) AS approved_plan_cost_dol, SUM(c.aprvd_gp_amt) AS approved_plan_rev_gp_dol, CASE WHEN NOT(SUM(NULLIF(c.aprvd_rev_amt, 0)) = 0) THEN CAST(SUM(c.aprvd_gp_amt) AS DECIMAL(19, 4)) / CAST(ABS(SUM(NULLIF(c.aprvd_rev_amt, 0))) AS DECIMAL(19, 4)) ELSE CAST(0.0 AS float) END AS approved_plan_rev_gp_per, SUM(c.eac_actls_rev_amt) AS forecast_revenue_dol, SUM(c.eac_actls_cost_amt) AS forecast_cost_dol, SUM(c.eac_actls_gp_amt) AS forecast_gp_dol, CASE WHEN NOT(SUM(NULLIF(c.eac_actls_rev_amt, 0)) = 0) THEN CAST(SUM(c.eac_actls_gp_amt) AS DECIMAL(19, 4)) / CAST(ABS(SUM(NULLIF(c.eac_actls_rev_amt, 0))) AS DECIMAL(19, 4)) ELSE CAST(0.0 AS float) END AS forecast_gp_per from phd.project_leakage_fact_16w_v c inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on c.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key {pmAccess} {filter} <filter?AND:WHERE> c.cntrct_key = '{cntrctKey}'  group by c.mth_key, ad.data_load_desc order by c.mth_key ), price_case_first_month AS ( SELECT c.mth_key, SUM(c.pc_rev_amt) AS price_case_revenue_dol, SUM(c.pc_cost_amt) AS price_case_cost_dol, SUM(c.pc_gp_amt) AS price_case_gp_dol, CASE WHEN NOT(SUM(NULLIF(c.pc_rev_amt, 0)) = 0) THEN CAST(SUM(c.pc_gp_amt) AS DECIMAL(19, 4)) / CAST(ABS(SUM(NULLIF(c.pc_rev_amt, 0))) AS DECIMAL(19, 4)) ELSE CAST(0.0 AS float) END AS price_case_gp_per, SUM(c.aprvd_rev_amt) AS approved_plan_revenue_dol, SUM(c.aprvd_cost_amt) AS approved_plan_cost_dol, SUM(c.aprvd_gp_amt) AS approved_plan_rev_gp_dol, CASE WHEN NOT(SUM(NULLIF(c.aprvd_rev_amt, 0)) = 0) THEN CAST(SUM(c.aprvd_gp_amt) AS DECIMAL(19, 4)) / CAST(ABS(SUM(NULLIF(c.aprvd_rev_amt, 0))) AS DECIMAL(19, 4)) ELSE CAST(0.0 AS float) END AS approved_plan_rev_gp_per, SUM(c.eac_actls_rev_amt) AS forecast_revenue_dol, SUM(c.eac_actls_cost_amt) AS forecast_cost_dol, SUM(c.eac_actls_gp_amt) AS forecast_gp_dol, CASE WHEN NOT(SUM(NULLIF(c.eac_actls_rev_amt, 0)) = 0) THEN CAST(SUM(c.eac_actls_gp_amt) AS DECIMAL(19, 4)) / CAST(ABS(SUM(NULLIF(c.eac_actls_rev_amt, 0))) AS DECIMAL(19, 4)) ELSE CAST(0.0 AS float) END AS forecast_gp_per from phd.project_leakage_fact_16w_v c inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key {pmAccess} {filter} <filter?AND:WHERE>  c.cntrct_key = '{cntrctKey}'  group by c.mth_key order by c.mth_key asc fetch first 1 rows only ) select pall.mth_key, pall.mth_nm, pc.data_load_desc, pall.price_case_revenue_dol, pall.price_case_cost_dol, pall.price_case_gp_dol, pall.price_case_gp_per, pall.approved_plan_revenue_dol, pall.approved_plan_cost_dol, pall.approved_plan_rev_gp_dol, pall.approved_plan_rev_gp_per, pall.forecast_revenue_dol, pall.forecast_cost_dol, pall.forecast_gp_dol, pall.forecast_gp_per, ( pc.price_case_revenue_dol - pf.price_case_revenue_dol ) AS diff_pcr_dol, CASE WHEN coalesce(pf.price_case_revenue_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.price_case_revenue_dol - pf.price_case_revenue_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.price_case_revenue_dol , 0) AS decimal(19, 4)) END AS pcr_per_diff, ( pc.price_case_cost_dol - pf.price_case_cost_dol ) AS diff_pcc_dol, CASE WHEN coalesce(pf.price_case_cost_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.price_case_cost_dol - pf.price_case_cost_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.price_case_cost_dol , 0) AS decimal(19, 4)) END AS pcc_per_diff, ( pc.price_case_gp_dol - pf.price_case_gp_dol ) AS diff_pcgp_dol, CASE WHEN coalesce(pf.price_case_gp_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.price_case_gp_dol - pf.price_case_gp_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.price_case_gp_dol , 0) AS decimal(19, 4)) END AS pcgp_per_diff, ( pc.price_case_gp_per - pf.price_case_gp_per ) AS diff_pcgp_per, CASE WHEN coalesce(pf.price_case_gp_per, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.price_case_gp_per - pf.price_case_gp_per), 0) AS decimal(19, 4)) / CAST(coalesce(pf.price_case_gp_per , 0) AS decimal(19, 4)) END AS pcgp_per_diff, ( pc.approved_plan_revenue_dol - pf.approved_plan_revenue_dol ) AS diff_apr_dol, CASE WHEN coalesce(pf.approved_plan_revenue_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.approved_plan_revenue_dol - pf.approved_plan_revenue_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.approved_plan_revenue_dol, 0) AS decimal(19, 4)) END AS apr_per_diff, ( pc.approved_plan_cost_dol - pf.approved_plan_cost_dol ) AS diff_apc_dol, CASE WHEN coalesce(pf.approved_plan_cost_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.approved_plan_cost_dol - pf.approved_plan_cost_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.approved_plan_cost_dol , 0) AS decimal(19, 4)) END AS apc_per_diff, ( pc.approved_plan_rev_gp_dol - pf.approved_plan_rev_gp_dol ) AS diff_apgp_dol, CASE WHEN coalesce(pf.approved_plan_rev_gp_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.approved_plan_rev_gp_dol - pf.approved_plan_rev_gp_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.approved_plan_rev_gp_dol , 0) AS decimal(19, 4)) END AS apg_per_diff, ( pc.approved_plan_rev_gp_per - pf.approved_plan_rev_gp_per ) AS diff_apgp_per, CASE WHEN coalesce(pf.approved_plan_rev_gp_per, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.approved_plan_rev_gp_per - pf.approved_plan_rev_gp_per), 0) AS decimal(19, 4)) / CAST(coalesce(pf.approved_plan_rev_gp_per , 0) AS decimal(19, 4)) END AS apg_per_diff, ( pc.forecast_revenue_dol - pf.forecast_revenue_dol ) AS diff_fr_dol, CASE WHEN coalesce(pf.forecast_revenue_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.forecast_revenue_dol - pf.forecast_revenue_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.forecast_revenue_dol , 0) AS decimal(19, 4)) END AS fr_per_diff, ( pc.forecast_cost_dol - pf.forecast_cost_dol ) AS diff_fc_dol, CASE WHEN coalesce(pf.forecast_cost_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.forecast_cost_dol - pf.forecast_cost_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.forecast_cost_dol , 0) AS decimal(19, 4)) END AS fc_per_diff, ( pc.forecast_gp_dol - pf.forecast_gp_dol ) AS diff_fgp_dol, CASE WHEN coalesce(pf.forecast_gp_dol, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.forecast_gp_dol - pf.forecast_gp_dol), 0) AS decimal(19, 4)) / CAST(coalesce(pf.forecast_gp_dol, 0) AS decimal(19, 4)) END AS fgp_per_diff, ( pc.forecast_gp_per - pf.forecast_gp_per ) AS diff_fgp_per, CASE WHEN coalesce(pf.forecast_gp_per, 0) = 0 THEN CAST(0.0 AS float) ELSE CAST(coalesce((pc.forecast_gp_per - pf.forecast_gp_per), 0) AS decimal(19, 4)) / CAST(coalesce(pf.forecast_gp_per, 0) as decimal(19, 4)) end as fgp_per_diff from price_case_all_month pall, price_case_first_month pf, price_case_current_month pc order by pall.mth_key ; \",\"description\":\"Trending from Incepetion Contract Level T1 data\"}",
      "t1PMTrendIncepWorkNum": "{\"name\":\"t1PMTrendIncepWorkNum\",\"sqlTemplate\":\"with price_case_all_month as ( select c.mth_key, c.pc_rev_amt as price_case_revenue_dol, c.pc_cost_amt as price_case_cost_dol, c.pc_gp_amt as price_case_gp_dol, c.pc_gp_pct as price_case_gp_per, c.aprvd_rev_amt as approved_plan_revenue_dol, c.aprvd_cost_amt as approved_plan_cost_dol, c.aprvd_gp_amt as approved_plan_rev_gp_dol, c.aprvd_gp_pct as approved_plan_rev_gp_per, c.eac_actls_rev_amt as forecast_revenue_dol, c.eac_actls_cost_amt as forecast_cost_dol, c.eac_actls_gp_amt as forecast_gp_dol, c.eac_actls_gp_pct as forecast_gp_per, rtrim(m.mth_nm) as mth_nm, c.proj_key from phd.project_leakage_fact_16w_v c inner join phd.month_dim m on c.mth_key = m.mth_key inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key {pmAccess} {filter} <filter?AND:WHERE> c.proj_key = '{workKey}' order by c.mth_key ), price_case_current_month as ( select c.mth_key, ad.data_load_desc, c.pc_rev_amt as price_case_revenue_dol, c.pc_cost_amt as price_case_cost_dol, c.pc_gp_amt as price_case_gp_dol, c.pc_gp_pct as price_case_gp_per, c.aprvd_rev_amt as approved_plan_revenue_dol, c.aprvd_cost_amt as approved_plan_cost_dol, c.aprvd_gp_amt as approved_plan_rev_gp_dol, c.aprvd_gp_pct as approved_plan_rev_gp_per, c.eac_actls_rev_amt as forecast_revenue_dol, c.eac_actls_cost_amt as forecast_cost_dol, c.eac_actls_gp_amt as forecast_gp_dol, c.eac_actls_gp_pct as forecast_gp_per, c.proj_key from phd.project_leakage_fact_16w_v c inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on c.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and ad.current = 1 inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key {pmAccess} {filter} <filter?AND:WHERE> c.proj_key = '{workKey}' order by c.mth_key ), price_case_first_month as ( select c.mth_key, c.pc_rev_amt as price_case_revenue_dol, c.pc_cost_amt as price_case_cost_dol, c.pc_gp_amt as price_case_gp_dol, c.pc_gp_pct as price_case_gp_per, c.aprvd_rev_amt as approved_plan_revenue_dol, c.aprvd_cost_amt as approved_plan_cost_dol, c.aprvd_gp_amt as approved_plan_rev_gp_dol, c.aprvd_gp_pct as approved_plan_rev_gp_per, c.eac_actls_rev_amt as forecast_revenue_dol, c.eac_actls_cost_amt as forecast_cost_dol, c.eac_actls_gp_amt as forecast_gp_dol, c.eac_actls_gp_pct as forecast_gp_per, c.proj_key from phd.project_leakage_fact_16w_v c inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = c.geo_lvl1_key and geo1.geo_lvl1_key not in ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = c.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = c.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = c.indstry_key inner join phd.growth_platform_dim gp on c.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on c.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on c.sctr_key = s.sctr_gb_key inner join phd.contract_dim cn on c.cntrct_key = cn.cntrct_key {pmAccess} {filter} <filter?AND:WHERE> c.proj_key = '{workKey}' order by c.mth_key asc fetch first 1 rows only ) select pall.mth_key, pall.mth_nm, pc.data_load_desc, pall.proj_key, pall.price_case_revenue_dol, pall.price_case_cost_dol, pall.price_case_gp_dol, pall.price_case_gp_per, pall.approved_plan_revenue_dol, pall.approved_plan_cost_dol, pall.approved_plan_rev_gp_dol, pall.approved_plan_rev_gp_per, pall.forecast_revenue_dol, pall.forecast_cost_dol, pall.forecast_gp_dol, pall.forecast_gp_per, ( pc.price_case_revenue_dol - pf.price_case_revenue_dol ) AS diff_pcr_dol, CASE WHEN Coalesce(pf.price_case_revenue_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.price_case_revenue_dol - pf.price_case_revenue_dol ), 0) AS DECIMAL(19, 4)) / CAST(Coalesce(pf.price_case_revenue_dol, 0) AS DECIMAL(19, 4)) END AS pcr_per_diff, ( pc.price_case_cost_dol - pf.price_case_cost_dol ) AS diff_pcc_dol, CASE WHEN Coalesce(pf.price_case_cost_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.price_case_cost_dol - pf.price_case_cost_dol ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.price_case_cost_dol, 0) AS DECIMAL(19, 4)) END AS pcc_per_diff, ( pc.price_case_gp_dol - pf.price_case_gp_dol ) AS diff_pcgp_dol, CASE WHEN Coalesce(pf.price_case_gp_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.price_case_gp_dol - pf.price_case_gp_dol ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.price_case_gp_dol, 0) AS DECIMAL(19, 4)) END AS pcgp_per_diff, ( pc.price_case_gp_per - pf.price_case_gp_per ) AS diff_pcgp_per, CASE WHEN Coalesce(pf.price_case_gp_per, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.price_case_gp_per - pf.price_case_gp_per ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.price_case_gp_per, 0) AS DECIMAL(19, 4)) END pcgp_per_diff, ( pc.approved_plan_revenue_dol - pf.approved_plan_revenue_dol ) AS diff_apr_dol, CASE WHEN Coalesce(pf.approved_plan_revenue_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.approved_plan_revenue_dol - pf.approved_plan_revenue_dol ), 0) AS DECIMAL(19, 4)) / CAST(Coalesce(pf .approved_plan_revenue_dol, 0) AS DECIMAL(19, 4)) END AS apr_per_diff, ( pc.approved_plan_cost_dol - pf.approved_plan_cost_dol ) AS diff_apc_dol, CASE WHEN Coalesce(pf.approved_plan_cost_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.approved_plan_cost_dol - pf.approved_plan_cost_dol ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.approved_plan_cost_dol, 0) AS DECIMAL(19, 4)) END AS apc_per_diff, ( pc.approved_plan_rev_gp_dol - pf.approved_plan_rev_gp_dol ) AS diff_apgp_dol, CASE WHEN Coalesce(pf.approved_plan_rev_gp_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.approved_plan_rev_gp_dol - pf.approved_plan_rev_gp_dol ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.approved_plan_rev_gp_dol, 0) AS DECIMAL(19, 4)) END AS apg_per_diff, ( pc.approved_plan_rev_gp_per - pf.approved_plan_rev_gp_per ) AS diff_apgp_dol, CASE WHEN Coalesce(pf.approved_plan_rev_gp_per, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.approved_plan_rev_gp_per - pf.approved_plan_rev_gp_per ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.approved_plan_rev_gp_per, 0) AS DECIMAL(19, 4)) END AS apg_per_diff, ( pc.forecast_revenue_dol - pf.forecast_revenue_dol ) AS diff_fr_dol, CASE WHEN Coalesce(pf.forecast_revenue_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.forecast_revenue_dol - pf.forecast_revenue_dol ), 0) AS DECIMAL(19, 4)) / CAST( Coalesce(pf.forecast_revenue_dol, 0) AS DECIMAL(19, 4)) END AS fr_per_diff, ( pc.forecast_cost_dol - pf.forecast_cost_dol ) AS diff_fc_dol, CASE WHEN Coalesce(pf.forecast_cost_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.forecast_cost_dol - pf.forecast_cost_dol ), 0) AS DECIMAL(19, 4)) / CAST(Coalesce(pf.forecast_cost_dol, 0) AS DECIMAL(19, 4)) END AS fc_per_diff, ( pc.forecast_gp_dol - pf.forecast_gp_dol ) AS diff_fgp_dol, CASE WHEN Coalesce(pf.forecast_gp_dol, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.forecast_gp_dol - pf.forecast_gp_dol ), 0) AS DECIMAL(19, 4)) / CAST(Coalesce(pf.forecast_gp_dol, 0) AS DECIMAL(19, 4)) END AS fgp_per_diff, ( pc.forecast_gp_per - pf.forecast_gp_per ) AS diff_fgp_per, CASE WHEN Coalesce(pf.forecast_gp_per, 0) = 0 THEN CAST(0.0 AS FLOAT) ELSE CAST(Coalesce(( pc.forecast_gp_per - pf.forecast_gp_per ), 0) AS DECIMAL(19, 4)) / CAST(Coalesce(pf.forecast_gp_per, 0) AS DECIMAL(19, 4)) END AS fgp_per_diff FROM price_case_all_month pall, price_case_first_month pf, price_case_current_month pc order by pall.mth_key ; \",\"description\":\"Trending from Incepetion Project Level T1 data\"}",

      "t1PMFooterContract": "{\"name\":\"t1PMFooterContract\",\"sqlTemplate\":\"with curr_sevenkey as ( select f.ovrl_sevenkeys, case when f.ovrl_sevenkeys = 'R' THEN '#E71D32' WHEN f.ovrl_sevenkeys = 'G' THEN '#5AA700' WHEN f.ovrl_sevenkeys = 'A' THEN '#FF7832' ELSE '-' END AS SevenKeysColor, f.ubar_tot_amt as ubar_tot_amt, f.ubar_rsk_amt as ubar_rsk_amt from phd.dm_contract_portfolio_fact f inner join phd.customer_dim cd on f.cust_key = cd.cust_key inner join phd.geo_lvl1_dim geo1 on f.geo_lvl1_key = geo1.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on f.geo_lvl2_key = geo2.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.growth_platform_dim gp on gp.grth_plfm_key = f.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = f.svc_line_key inner join phd.sector_gb_dim s on s.sctr_gb_key = f.sctr_key inner join phd.industry_dim i on i.indstry_key = f.indstry_key inner join phd.practice_dim p on p.practice_key = f.practice_key inner join phd.global_buying_group_dim g on g.glbl_buy_grp_key = f.glbl_buy_grp_key inner join phd.acct_drop ad on f.mth_key = ad.mth_key and ad.graph_nm = 'APH_L2_GR1' and yr_mo_key = 'CURRENT' where f.cntrct_key = '{cntrctKey}' ), curr_mo as (select ad.mth_key as mth_key, cn.cntrct_key, cn.cntrct_num, coalesce(f.itd_actls_gp_cb_pct, 0.0) as itd_actls_gp_pct, coalesce(f.pc_gp_pct, 0.0) as pc_gp_pct, coalesce(f.eac_actls_gp_pct, 0.0) as eac_actls_gp_pct, coalesce(f.pc_rev_amt, 0.0) as total_ubar, coalesce(f.pq_to_pc_lkg_amt, 0.0) as risk_rev from phd.contract_leakage_fact_16w_v f inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key and f.cntrct_key = '{cntrctKey}' inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key NOT IN ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key inner join phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on f.mth_key = ad.mth_key and ad.graph_nm = 'GP_L2_GR1' and yr_mo_key = 'CURRENT'), prev_mo as (select coalesce(f.itd_actls_gp_cb_pct, 0.0) as itd_actls_gp_pct, coalesce(f.pc_gp_pct, 0.0) as pc_gp_pct, coalesce(f.eac_actls_gp_pct, 0.0) as eac_actls_gp_pct from phd.contract_leakage_fact_16w_v f inner join phd.contract_dim cn on f.cntrct_key = cn.cntrct_key and f.cntrct_key = '{cntrctKey}' inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = f.geo_lvl1_key and geo1.geo_lvl1_key NOT IN ( 0, 21 ) inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = f.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = f.ctry_key inner join phd.industry_dim indstry on indstry.indstry_key = f.indstry_key inner join phd.growth_platform_dim gp on f.grth_plfm_key = gp.grth_plfm_key and gp.in_scope = 1 inner join phd.svc_line_dim sl on f.svc_line_key = sl.svc_line_key INNER JOIN phd.sector_gb_dim s on f.sctr_key = s.sctr_gb_key inner join phd.acct_drop ad on f.mth_key = ( ad.mth_key - 1 ) and ad.graph_nm = 'GP_L2_GR1' and yr_mo_key = 'CURRENT') select c.mth_key as mth_key, c.cntrct_key as cntrct_key, c.cntrct_num as cntrct_num, c.itd_actls_gp_pct as gp_pct, coalesce(CAST(c.itd_actls_gp_pct as float) - CAST( p.itd_actls_gp_pct as float), 0.0) as gp_comp, c.pc_gp_pct as pc_gp_pct, c.eac_actls_gp_pct as eac_gp_pct, coalesce(CAST(c.eac_actls_gp_pct as float) - CAST( p.eac_actls_gp_pct as float), 0.0) as eac_comp, c.total_ubar as total_ubar_old, c.risk_rev as risk_rev_old, sk.ovrl_sevenkeys as seven_keys, sk.SevenKeysColor as seven_keys_color, sk.ubar_tot_amt as total_ubar, sk.UBAR_RSK_AMT as risk_rev, case when coalesce(sk.ubar_rsk_amt,0) >= 0 then '#33AC2E' when coalesce(sk.ubar_rsk_amt,0) < 0 then '#E71D32' else '#E71D32' end as risk_rev_color from curr_mo c, prev_mo p, curr_sevenkey sk ; \",\"description\":\"Footer Banner Contract Level T1 data\"}",
      "t1PMFooterWorkNum": "{\"name\":\"t1PMFooterWorkNum\",\"sqlTemplate\":\"WITH curr_mo_ubar AS (SELECT u.mth_key, u.proj_key, p.proj_num, u.cntrct_key, cn.cntrct_num, u.ubar_tot AS total_ubar, u.ubar_rsk_amt AS risk_rev FROM PHD.UBAR_HISTORY_FACT u INNER JOIN phd.project_dim p ON u.proj_key = p.proj_key AND u.proj_key = '{workKey}' INNER JOIN phd.contract_dim cn ON u.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = u.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN ( 0, 21 ) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = u.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = u.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = u.indstry_key INNER JOIN phd.growth_platform_dim gp ON u.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON u.svc_line_key = sl.svc_line_key INNER JOIN phd.sector_gb_dim s ON u.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ads ON u.mth_key = ads.mth_key AND ads.graph_nm = 'UB_L2_GR1' AND ads.current = 1 ), curr_mo AS (SELECT ad.mth_key AS mth_key, p.proj_key, p.proj_num, cn.cntrct_key, cn.cntrct_num, Coalesce(Sum(f.itd_actls_gp_pct), 0.0) AS itd_actls_gp_pct, Coalesce(Sum(f.pc_gp_pct), 0.0) AS pc_gp_pct, Coalesce(Sum(f.eac_actls_gp_pct), 0.0) AS eac_actls_gp_pct, CASE p.poc_ind WHEN 'Y' THEN 'POC' WHEN 'N' THEN 'Non POC' ELSE 'Non POC' END AS POCStatus FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key AND p.proj_key = '{workKey}' INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN ( 0, 21 ) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'GP_L2_GR1' AND yr_mo_key = 'CURRENT' GROUP BY ad.mth_key, p.proj_key, p.proj_num, cn.cntrct_key, cn.cntrct_num, p.poc_ind), prev_mo AS (SELECT Coalesce(Sum(f.itd_actls_gp_pct), 0.0) AS itd_actls_gp_pct, Coalesce(Sum(f.pc_gp_pct), 0.0) AS pc_gp_pct, Coalesce(Sum(f.eac_actls_gp_pct), 0.0) AS eac_actls_gp_pct FROM phd.project_leakage_fact_16w_v f INNER JOIN phd.project_dim p ON f.proj_key = p.proj_key AND p.proj_key = '{workKey}' INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = f.geo_lvl1_key AND geo1.geo_lvl1_key NOT IN ( 0, 21 ) INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = f.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = f.indstry_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key AND gp.in_scope = 1 INNER JOIN phd.svc_line_dim sl ON f.svc_line_key = sl.svc_line_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON f.mth_key = ( ad.mth_key - 1 ) AND ad.graph_nm = 'GP_L2_GR1' AND yr_mo_key = 'CURRENT') SELECT c.mth_key AS mth_key, c.proj_key AS proj_key, c.proj_num AS proj_num, c.cntrct_key AS cntrct_key, c.cntrct_num AS cntrct_num, c.itd_actls_gp_pct AS gp_pct, Coalesce(CAST(c.itd_actls_gp_pct AS FLOAT) - CAST( p.itd_actls_gp_pct AS FLOAT), 0.0) AS gp_comp, c.pc_gp_pct AS pc_gp_pct, c.eac_actls_gp_pct AS eac_gp_pct, Coalesce(CAST(c.eac_actls_gp_pct AS FLOAT) - CAST( p.eac_actls_gp_pct AS FLOAT), 0.0) AS eac_comp, cu.total_ubar AS total_ubar, cu.risk_rev AS risk_rev, CASE WHEN COALESCE(cu.risk_rev,0) >= 0 THEN '#33AC2E' WHEN COALESCE(cu.risk_rev,0) < 0 THEN '#E71D32' ELSE '#E71D32' END AS risk_rev_color, c.pocstatus AS POC FROM curr_mo c, prev_mo p LEFT OUTER JOIN curr_mo_ubar cu ON 1 = 1 ; \",\"description\":\"Footer Banner Project Level T1 data\"}",

      "t1PMProcCompContract": "{\"name\":\"t1PMProcCompContract\",\"sqlTemplate\":\"WITH proccomp_gdpr AS ( SELECT f.cntrct_key, f.gdpr_ovrl AS gdpr_ovrl, CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END AS gdpr_clsfc, CASE WHEN f.IMPCT_BY_GDPR = 1 THEN 'GDPR - Impacted Contracts' WHEN f.NOT_IMPCT_BY_GDPR = 1 THEN 'Non-GDPR - Impacted Contracts' WHEN f.NOT_ASSESSED = 1 THEN 'GDPR - Active Contracts Not Assessed' ELSE '' END AS gdpr_impact FROM phd.gdpr_fact f INNER JOIN phd.process_indicator_dim pid ON f.proc_stat_key = pid.proc_stat_key AND pid.proc_stat_cd != 'D' INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key AND f.cntrct_key = '{cntrctKey}' INNER JOIN phd.country_dim ctry ON f.ctry_key = ctry.ctry_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = 'CURRENT' FETCH first ROW only ), proccomp_cos AS ( SELECT f.cntrct_key, f.ovrl_cos AS ovrl_cos, f.COS_IN_SCOPE_FLG, f.NON_CMPLNT_FLG, f.IN_12_MTH, f.greater_12_mth, f.tot_tcv_amt, CASE WHEN f.cmplnt_cnt = 1 AND f.IN_12_MTH = 1 THEN 'CoS - Compliant Within 12 Months' WHEN f.cmplnt_cnt = 1 AND f.greater_12_mth = 1 THEN 'CoS - Compliance Greater Than 12 Months' WHEN f.cmplnt_cnt = 0 THEN 'CoS - Non Compliant' WHEN (f.tot_tcv_amt > 1000000.00) OR (f.tot_tcv_amt > 500000.00 AND f.geo_lvl1_key = 2) OR (f.COS_IN_SCOPE_FLG = 0) THEN 'CoS - Exemption' ELSE 'CoS - Exemption' END AS COS_Assessment_Status, CASE WHEN f.cmplnt_cnt = 1 THEN '#5AA700' WHEN f.cmplnt_cnt = 0 THEN '#E71D32' ELSE '#E5E5E5' END AS COS_Assessment_Status_Color FROM phd.cos_fact f INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key AND f.cntrct_key = '{cntrctKey}' INNER JOIN phd.country_dim ctry ON f.ctry_key = ctry.ctry_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'COS_L2_GR1' AND ad.yr_mo_key = 'CURRENT' FETCH first ROW only ) SELECT f.mth_key AS mth_key, ad.data_load_date AS data_load_date, ad.data_load_desc AS data_load_desc, cn.cntrct_key AS cntrct_key, cn.cntrct_num AS cntrct_num, f.ovrl_sevenkeys, CASE WHEN f.ovrl_sevenkeys = 'R' THEN '#E71D32' WHEN f.ovrl_sevenkeys = 'G' THEN '#5AA700' WHEN f.ovrl_sevenkeys = 'A' THEN '#FF7832' ELSE '-' END AS seven_keys_color, f.pg_o_cmplnce AS phasegate_0_compliance, CASE WHEN f.pg_o_cmplnce = 1 THEN 'Compliant' WHEN f.pg_o_cmplnce = 0 THEN 'Non Compliant' ELSE '-' END AS phasegate_0_compliance_val, CASE WHEN f.pg_o_cmplnce = 1 THEN '#5AA700' WHEN f.pg_o_cmplnce = 0 THEN '#E71D32' ELSE '-' END AS phasegate_0_color, f.pg_1_4_cmplnce AS phasegate_1_4_compliance, CASE WHEN f.pg_1_4_cmplnce = 1 THEN 'Compliant' WHEN f.pg_1_4_cmplnce = 0 THEN 'Non Compliant' ELSE '-' END AS phasegate_1_4_compliance_val, CASE WHEN f.pg_1_4_cmplnce = 1 THEN '#5AA700' WHEN f.pg_1_4_cmplnce = 0 THEN '#E71D32' ELSE '-' END AS phasegate_1_4_color, gd.gdpr_clsfc AS GDPR_Compliance_Color, gd.gdpr_impact AS GDPR_Compliance_Status, cs.COS_Assessment_Status, cs.COS_Assessment_Status_Color FROM phd.dm_contract_portfolio_fact f INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key AND f.cntrct_key = '{cntrctKey}' LEFT JOIN proccomp_gdpr gd ON gd.cntrct_key = f.cntrct_key LEFT JOIN proccomp_cos cs ON cs.cntrct_key = f.cntrct_key INNER JOIN phd.customer_dim cd ON f.cust_key = cd.cust_key INNER JOIN phd.geo_lvl1_dim geo1 ON f.geo_lvl1_key = geo1.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = f.ctry_key INNER JOIN phd.growth_platform_dim gp ON gp.grth_plfm_key = f.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key INNER JOIN phd.sector_gb_dim s ON s.sctr_gb_key = f.sctr_key INNER JOIN phd.industry_dim i ON i.indstry_key = f.indstry_key INNER JOIN phd.practice_dim p ON p.practice_key = f.practice_key INNER JOIN phd.global_buying_group_dim g ON g.glbl_buy_grp_key = f.glbl_buy_grp_key INNER JOIN phd.acct_drop ad ON f.mth_key = ad.mth_key AND ad.graph_nm = 'APH_L2_GR1' AND yr_mo_key = 'CURRENT' {pmAccess}; \",\"description\":\"Process Compliance Contract Level T1 data\"}", 
      "t1PMProcCompWorkNum": "{\"name\":\"t1PMProcCompWorkNum\",\"sqlTemplate\":\"select d.data_load_desc, forecast.cntrct_key, forecast.proj_key, forecast.forcstd_flg, forecast.submtd_flg, forecast.apprvd_flg, case forecast.submtd_flg when 1 then '#5AA700' when 0 then '#E71D32' else '-' end as SubmittedByBrandPMColor, case forecast.apprvd_flg when 1 then '#5AA700' when 0 then '#E71D32' else '-' end as ApprovedByBrandPEColor from phd.forecast_compliance_fact forecast inner join phd.geo_lvl1_dim geo1 on geo1.geo_lvl1_key = forecast.geo_lvl1_key inner join phd.geo_lvl2_dim geo2 on geo2.geo_lvl2_key = forecast.geo_lvl2_key inner join phd.country_dim ctry on ctry.ctry_key = forecast.ctry_key inner join phd.growth_platform_dim grth_plfm on grth_plfm.grth_plfm_key = forecast.grth_plfm_key inner join phd.svc_line_dim svc_line on svc_line.svc_line_key = forecast.svc_line_key inner join phd.sector_gb_dim sctr on sctr.sctr_gb_key = forecast.sctr_key inner join phd.industry_dim indstry on indstry.indstry_key = forecast.indstry_key inner join phd.practice_dim prac on prac.practice_key = forecast.practice_key and prac.include = 1 inner join phd.acct_drop d on forecast.rptg_mth_key = d.mth_key and d.graph_nm = 'FC_L2_GR1' and d.yr_mo_key = 'CURRENT' {pmAccess} where forecast.proj_key = '{workKey}' ; \",\"description\":\"Process Compliance Project Level T1 data\"}",

      "t1PMPRIWorkNum": "{\"name\":\"t1PMPRIWorkNum\",\"sqlTemplate\":\"SELECT Rtrim(pj.proj_num) AS work_num, pj.proj_key, pj.cntrct_key, trgt_plan, pri.lnch_flg, ad.data_load_desc, ad.desc_1 AS lnch_date, pri.factor_list_var AS risk_factors, Rtrim(pj.phd_url) AS ippf_url FROM phd.pri_history_fact pri INNER JOIN phd.acct_drop ad ON pri.mth_key = ad.mth_key AND ad.graph_nm = 'PRI_L2_GR1' AND ad.yr_mo_key = 'CURRENT' /*INNER JOIN phd.dw_brand_dim br ON br.dw_brand_key = pri.dw_brand_key AND br.brand_short_nm LIKE 'GBS%' */ INNER JOIN phd.project_dim pj ON pri.proj_key = pj.proj_key inner join phd.contract_dim cn on pri.cntrct_key = cn.cntrct_key INNER JOIN phd.geo_lvl1_dim geo1 ON geo1.geo_lvl1_key = pri.geo_lvl1_key INNER JOIN phd.geo_lvl2_dim geo2 ON geo2.geo_lvl2_key = pri.geo_lvl2_key INNER JOIN phd.country_dim ctry ON ctry.ctry_key = pri.ctry_key INNER JOIN phd.growth_platform_dim grth_plfm ON grth_plfm.grth_plfm_key = pri.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = pri.svc_line_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = pri.sctr_key INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = pri.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = pri.practice_key AND prac.include = 1 {pmAccess} where pri.in_scope = 1 AND pri.proj_key = '{workKey}' with ur; \",\"description\":\"Predictive Risk Indicator Project Level T1 data\"}",

      "t2PMProcComp7KPopup": "{\"name\":\"t2PMProcComp7KPopup\",\"sqlTemplate\":\"SELECT cn.cntrct_num, cn.cntrct_key, cn.lgl_cntrct_num AS legal_cntrct_num, skf.tot_tcv_amt AS tcv, Rtrim(csd.cust_nm) AS ippf_customer, Coalesce(Varchar(DATE(cn.strtd_dt)), '') AS wbs_start_dt, Coalesce(Varchar(DATE(cn.sgnd_dt)), '') AS contract_sign_date, actv.active_typ_desc AS contract_status, CASE WHEN SKF.ovrl_rag = 'G' THEN '#5AA700' WHEN SKF.ovrl_rag = 'Y' THEN '#FF7832' WHEN SKF.ovrl_rag = 'R' THEN '#E71D32' WHEN SKF.ovrl_rag = 'A' THEN '#FF7832' ELSE '-' END AS Overal7Keys, Coalesce(SKF.svnkey_typ, 'N/A') AS Seven_Keys, CASE WHEN( cn.pm_notes_id = '--' ) THEN '--' WHEN( ( Locate('/', cn.pm_notes_id) ) <= 1 ) OR ( cn.pm_notes_id = 'N/A' ) THEN 'N/A' WHEN ( ( Locate('/', cn.pm_notes_id) ) > 1 ) AND NOT ( cn.pm_notes_id = 'N/A' ) THEN Rtrim( Substr(cn.pm_notes_id, 1, Locate(' ', cn.pm_notes_id) - 1) || ' ' || Substr(cn.pm_notes_id, ( Locate(' ', cn.pm_notes_id) + 1 ), ( ( Locate('/', cn.pm_notes_id) - 1 ) - ( Locate(' ', cn.pm_notes_id) ) ))) END AS Brand_pm_name, CASE WHEN( cn.pe_notes_id = '--' ) THEN '--' WHEN( ( Locate('/', cn.pe_notes_id) ) <= 1 ) OR ( cn.pe_notes_id = 'N/A' ) THEN 'N/A' WHEN ( ( Locate('/', cn.pe_notes_id) ) > 1 ) AND NOT ( cn.pe_notes_id = 'N/A' ) THEN Rtrim( Substr(cn.pe_notes_id, 1, Locate(' ', cn.pe_notes_id) - 1) || ' ' || Substr(cn.pe_notes_id, ( Locate(' ', cn.pe_notes_id) + 1 ), ( ( Locate('/', cn.pe_notes_id) - 1 ) - ( Locate(' ', cn.pe_notes_id) ) ))) END AS Brand_pe_name, Coalesce(aps.aprv_stat_nm, 'N/A') AS brand_pe_approval, Coalesce(skf.app_comnt, 'N/A') AS brand_pe_comments, Coalesce(skf.sub_comnt, 'N/A') AS brand_pm, Rtrim(ct.ctry_nm) AS country, std.sctr_gb_nm AS sector, Rtrim(cn.cntrct_desc) AS wbs_shr_desc, Coalesce(skf.pm_comnt, 'N/A') AS brand_pm_gen_rem, Coalesce(apss.aprv_stat_nm, 'N/A') AS brand_pm_submission, CASE WHEN SKF.stak_rag = 'G' THEN '#5AA700' WHEN SKF.stak_rag = 'Y' THEN '#FF7832' WHEN SKF.stak_rag = 'R' THEN '#E71D32' WHEN SKF.stak_rag = 'A' THEN '#FF7832' ELSE '-' END AS Stake_Holder_7key, CASE WHEN SKF.bus_rag = 'G' THEN '#5AA700' WHEN SKF.bus_rag = 'Y' THEN '#FF7832' WHEN SKF.bus_rag = 'R' THEN '#E71D32' WHEN SKF.bus_rag = 'A' THEN '#FF7832' ELSE '-' END AS Business_Benefits_7key, CASE WHEN SKF.scop_rag = 'G' THEN '#5AA700' WHEN SKF.scop_rag = 'Y' THEN '#FF7832' WHEN SKF.scop_rag = 'R' THEN '#E71D32' WHEN SKF.scop_rag = 'A' THEN '#FF7832' ELSE '-' END AS Scope_7key, CASE WHEN SKF.risk_rag = 'G' THEN '#5AA700' WHEN SKF.risk_rag = 'Y' THEN '#FF7832' WHEN SKF.risk_rag = 'R' THEN '#E71D32' WHEN SKF.risk_rag = 'A' THEN '#FF7832' ELSE '-' END AS Risk_7key, CASE WHEN SKF.work_rag = 'G' THEN '#5AA700' WHEN SKF.work_rag = 'Y' THEN '#FF7832' WHEN SKF.work_rag = 'R' THEN '#E71D32' WHEN SKF.work_rag = 'A' THEN '#FF7832' ELSE '-' END AS Work_Schedule_7key, CASE WHEN SKF.team_rag = 'G' THEN '#5AA700' WHEN SKF.team_rag = 'Y' THEN '#FF7832' WHEN SKF.team_rag = 'R' THEN '#E71D32' WHEN SKF.team_rag = 'A' THEN '#FF7832' ELSE '-' END AS Team7key, CASE WHEN SKF.del_rag = 'G' THEN '#5AA700' WHEN SKF.del_rag = 'Y' THEN '#FF7832' WHEN SKF.del_rag = 'R' THEN '#E71D32' WHEN SKF.del_rag = 'A' THEN '#FF7832' ELSE '-' END AS Deli_Orga_7key, cn.phd_url AS ippf_url FROM phd.sevenkeys_fact skf INNER JOIN phd.customer_dim csd ON skf.cust_key = csd.cust_key INNER JOIN phd.contract_dim cn ON skf.cntrct_key = cn.cntrct_key AND skf.cntrct_key = '{cntrctKey}' INNER JOIN phd.sector_gb_dim std ON skf.sctr_key = std.sctr_gb_key LEFT JOIN phd.active_type_dim actv ON cn.active_typ_key = actv.active_typ_key INNER JOIN phd.acct_drop ad ON skf.mth_key = ad.mth_key AND ad.graph_nm = 'SK_L2_GR1' AND ad.yr_mo_key = 'CURRENT' INNER JOIN phd.country_dim ct ON skf.ctry_key = ct.ctry_key LEFT JOIN phd.approval_status_dim aps ON skf.app_key = aps.id LEFT JOIN phd.approval_status_dim apss ON skf.sub_key = apss.id {pmAccess} ; \",\"description\":\"Process Compliance Project Level T2 data\"}",

      "t2PMProcCompPGPopupSum": "{\"name\":\"t2PMProcCompPGPopupSum\",\"sqlTemplate\":\"SELECT Rtrim(cn.cntrct_num) AS cntrct_num, cn.cntrct_key, Rtrim(cn.cntrct_desc) AS cntrct_desc, Rtrim(csd.cust_nm) AS customer, pgc.tot_tcv AS tcv, Coalesce(Varchar(DATE(dt.day_dt)), '') AS wbs_start_dt, Coalesce(Varchar(DATE(dd.day_dt)), '') AS deli_start_date, CASE WHEN cn.pe_notes_id != '' THEN SUBSTR(cn.pe_notes_id, 1, locate('/', cn.pe_notes_id)-1) ELSE 'N/A' END AS brand_pe, CASE WHEN cn.pm_notes_id != '' THEN SUBSTR(cn.pm_notes_id, 1, locate('/', cn.pm_notes_id)-1) ELSE 'N/A' END AS brand_pm, Rtrim(Coalesce(prac.practice_nm, 'N/A')) AS practice, Coalesce(Varchar(DATE(cn.sgnd_dt)), '') AS contract_sign_date, Rtrim(std.sctr_gb_nm) AS sector, CASE WHEN pgc.pg_req = 1 THEN 'Yes' ELSE 'No' END AS pg_req, CASE WHEN pgc.pg0_req = 1 THEN 'Yes' ELSE 'No' END AS pg0_req, CASE WHEN pgc.pg1_req = 1 THEN 'Yes' ELSE 'No' END AS pg1_req, CASE WHEN pgc.pg2_req = 1 THEN 'Yes' ELSE 'No' END AS pg2_req, CASE WHEN pgc.pg3_req = 1 THEN 'Yes' ELSE 'No' END AS pg3_req, CASE WHEN pgc.pg4_req = 1 THEN 'Yes' ELSE 'No' END AS pg4_req, CASE WHEN pgc.pg_o_assessed = 1 THEN 'Yes' ELSE 'No' END AS pg_o_assessed, CASE WHEN pgc.pg_1_4_assessed = 1 THEN 'Yes' ELSE 'No' END AS pg_1_4_assessed, CASE WHEN pgc.pg_o_cmplnce = 1 THEN 'Compliant' WHEN pgc.pg_o_cmplnce = 0 THEN 'Non Compliant' WHEN pgc.pg_o_cmplnce = 2 THEN 'Not Assessed' ELSE 'N/A' END AS pg_o_cmplnce, CASE WHEN pgc.pg_o_cmplnce = 1 THEN '#5AA700' WHEN pgc.pg_o_cmplnce = 0 THEN '#E71D32' WHEN pgc.pg_o_cmplnce = 2 THEN '#D4D4D4' END AS pg_o_cmplnce_col, CASE WHEN pgc.pg_1_4_cmplnce = 1 THEN 'Compliant' WHEN pgc.pg_1_4_cmplnce = 0 THEN 'Non Compliant' WHEN pgc.pg_1_4_cmplnce = 2 THEN 'Not Assessed' ELSE 'N/A' END AS pg_1_4_cmplnce, CASE WHEN pgc.pg_1_4_cmplnce = 1 THEN '#5AA700' WHEN pgc.pg_1_4_cmplnce = 0 THEN '#E71D32' WHEN pgc.pg_1_4_cmplnce = 2 THEN '#D4D4D4' END AS pg_1_4_cmplnce_col, CASE WHEN pgc.pg_0_ro_res = 1 THEN 'Yes' ELSE 'No' END AS pg_0_ro_res, CASE WHEN pgc.pg_1_4_ro_res = 1 THEN 'Yes' ELSE 'No' END AS pg_1_4_ro_res, CASE WHEN pgc.pg_0_ro_at = 1 THEN 'Yes' ELSE 'No' END AS pg_0_ro_at, CASE WHEN pgc.pg_0_ro_at = 1 THEN '#5AA700' WHEN pgc.pg_0_ro_at = 0 THEN '#E71D32' END AS pg_0_ro_at_col, CASE WHEN pgc.pg_1_4_ro_at = 1 THEN 'Yes' ELSE 'No' END AS pg_1_4_ro_at, CASE WHEN pgc.pg_1_4_ro_at = 1 THEN '#5AA700' WHEN pgc.pg_1_4_ro_at = 0 THEN '#E71D32' END AS pg_1_4_ro_at_col, CASE WHEN pgc.pg_0_ro_ato = 1 THEN 'Yes' ELSE 'No' END AS pg_0_ro_ato, CASE WHEN pgc.pg_0_ro_ato = 1 THEN '#E71D32' WHEN pgc.pg_0_ro_ato = 0 THEN '#5AA700' END AS pg_0_ro_ato_col, CASE WHEN pgc.pg_1_4_ro_ato = 1 THEN 'Yes' ELSE 'No' END AS pg_1_4_ro_ato, CASE WHEN pgc.pg_1_4_ro_ato = 1 THEN '#E71D32' WHEN pgc.pg_1_4_ro_ato = 0 THEN '#5AA700' END AS pg_1_4_ro_ato_col, pgc.exempt_days AS exempt_days, CASE WHEN DATE(CURRENT DATE) < DATE(dd.day_dt + pgc.exempt_days DAYS) OR DATE(CURRENT DATE) < DATE(dt.day_dt + pgc.exempt_days DAYS) THEN 'is' ELSE 'is not' END AS exempt_flag, CASE WHEN pgc.pure_pre = 1 THEN 'Yes' ELSE 'No' END AS pure_pre, cn.ippf_assess_url AS ippf_url FROM phd.phase_gate_compliance_fact pgc INNER JOIN phd.customer_dim csd ON pgc.cust_key = csd.cust_key INNER JOIN phd.contract_dim cn ON pgc.cntrct_key = cn.cntrct_key AND pgc.cntrct_key = '{cntrctKey}' INNER JOIN phd.sector_gb_dim std ON pgc.sctr_key = std.sctr_gb_key INNER JOIN phd.acct_drop ad ON pgc.rptg_mth_key = ad.mth_key AND ad.graph_nm = 'PG_CB_GR1' AND ad.yr_mo_key = 'CURRENT' LEFT JOIN phd.date_dim dt ON pgc.cb_strt_dt_key = dt.date_key LEFT JOIN phd.date_dim dd ON pgc.ds_date_key = dd.date_key INNER JOIN phd.practice_dim prac ON cn.practice_key = prac.practice_key AND prac.include = 1 {pmAccess} ; \",\"description\":\"PM Phase Gate CPM Summary tab popup\"}",
      "t2PMProcCompPGPopupDet": "{\"name\":\"t2PMProcCompPGPopupDet\",\"sqlTemplate\":\"SELECT Rtrim(cn.cntrct_num) AS cntrct_num, cn.cntrct_key, CASE WHEN pgc.pg_0_excptn = 1 THEN 'Yes' ELSE 'No' END AS pg_0_excptn, CASE WHEN pgc.pg_1_excptn = 1 THEN 'Yes' ELSE 'No' END AS pg_1_excptn, CASE WHEN pgc.pg_2_excptn = 1 THEN 'Yes' ELSE 'No' END AS pg_2_excptn, CASE WHEN pgc.pg_3_excptn = 1 THEN 'Yes' ELSE 'No' END AS pg_3_excptn, CASE WHEN pgc.pg_4_excptn = 1 THEN 'Yes' ELSE 'No' END AS pg_4_excptn, pgc.pg_0_ske AS pg_0_ske, pgc.pg_1_ske AS pg_1_ske, pgc.pg_2_ske AS pg_2_ske, pgc.pg_3_ske AS pg_3_ske, pgc.pg_4_ske AS pg_4_ske, pgc.pg_0_skeo AS pg_0_skeo, pgc.pg_1_skeo AS pg_1_skeo, pgc.pg_2_skeo AS pg_2_skeo, pgc.pg_3_skeo AS pg_3_skeo, pgc.pg_4_skeo AS pg_4_skeo, pgc.pg_0_ipr AS pg_0_ipr, pgc.pg_1_ipr AS pg_1_ipr, pgc.pg_2_ipr AS pg_2_ipr, pgc.pg_3_ipr AS pg_3_ipr, pgc.pg_4_ipr AS pg_4_ipr, pgc.pg_0_ipro AS pg_0_ipro, pgc.pg_1_ipro AS pg_1_ipro, pgc.pg_2_ipro AS pg_2_ipro, pgc.pg_3_ipro AS pg_3_ipro, pgc.pg_4_ipro AS pg_4_ipro, pgc.pg_0_cippf AS pg_0_cippf, pgc.pg_1_cippf AS pg_1_cippf, pgc.pg_2_cippf AS pg_2_cippf, pgc.pg_3_cippf AS pg_3_cippf, pgc.pg_4_cippf AS pg_4_cippf, pgc.pg_0_clgcy AS pg_0_clgcy, pgc.pg_1_clgcy AS pg_1_clgcy, pgc.pg_2_clgcy AS pg_2_clgcy, pgc.pg_3_clgcy AS pg_3_clgcy, pgc.pg_4_clgcy AS pg_4_clgcy, pgc.pg_0_green AS pg_0_green, pgc.pg_1_green AS pg_1_green, pgc.pg_2_green AS pg_2_green, pgc.pg_3_green AS pg_3_green, pgc.pg_4_green AS pg_4_green, pgc.pg_0_yellow AS pg_0_yellow, pgc.pg_1_yellow AS pg_1_yellow, pgc.pg_2_yellow AS pg_2_yellow, pgc.pg_3_yellow AS pg_3_yellow, pgc.pg_4_yellow AS pg_4_yellow, pgc.pg_0_orange AS pg_0_orange, pgc.pg_1_orange AS pg_1_orange, pgc.pg_2_orange AS pg_2_orange, pgc.pg_3_orange AS pg_3_orange, pgc.pg_4_orange AS pg_4_orange, pgc.pg_0_red AS pg_0_red, pgc.pg_1_red AS pg_1_red, pgc.pg_2_red AS pg_2_red, pgc.pg_3_red AS pg_3_red, pgc.pg_4_red AS pg_4_red, pgc.pg_0_roat AS pg_0_roat, pgc.pg_1_roat AS pg_1_roat, pgc.pg_2_roat AS pg_2_roat, pgc.pg_3_roat AS pg_3_roat, pgc.pg_4_roat AS pg_4_roat, pgc.pg_0_roato AS pg_0_roato, pgc.pg_1_roato AS pg_1_roato, pgc.pg_2_roato AS pg_2_roato, pgc.pg_3_roato AS pg_3_roato, pgc.pg_4_roato AS pg_4_roato, cn.ippf_assess_url AS ippf_url FROM phd.phase_gate_compliance_fact pgc INNER JOIN phd.contract_dim cn ON pgc.cntrct_key = cn.cntrct_key AND pgc.cntrct_key = '{cntrctKey}' INNER JOIN phd.acct_drop ad ON pgc.rptg_mth_key = ad.mth_key AND ad.graph_nm = 'PG_CB_GR1' AND ad.yr_mo_key = 'CURRENT' {pmAccess} ; \",\"description\":\"PM Phase Gate CPM Detail tab popup\"}",

      "t2PMProcCompCOSPopup": "{\"name\":\"t2PMProcCompCOSPopup\",\"sqlTemplate\":\"SELECT Rtrim(cn.cntrct_num) AS cntrct_num, cn.cntrct_key, cos.tot_tcv_amt AS tcv, Rtrim(csd.cust_nm) AS customer, indstry.indstry_cmr_nm AS ippf_industry, Coalesce(Varchar(DATE(cn.strtd_dt)), '') AS wbs_start_dt, Coalesce(cos.cmpltd_by, 'N/A') AS completed_by, Coalesce(Varchar(DATE(cos.cmpltd_dt)), '') AS completed_dt, Coalesce(Varchar(DATE(cos.dlvry_strt_dt)), '') AS deli_start_dt, CASE WHEN cos.ovrl_cos = 'R' THEN '#E71D32' WHEN cos.ovrl_cos = 'G' THEN '#8CD211' WHEN cos.ovrl_cos = 'Y' THEN '#FDD600' WHEN cos.ovrl_cos = 'A' THEN '#FF7832' ELSE '#D4D4D4' END AS overall_cos_color, sctr.sctr_gb_nm AS ippf_sector, Rtrim(ctry.ctry_nm) AS country, Coalesce(Varchar(DATE(cn.sgnd_dt)), '') AS cntrct_sign_date, cn.pm_notes_id AS brand_pm, aps.aprv_stat_nm AS brand_pe_apr, Rtrim(pm_comnt) AS pm_comnt, Rtrim(app_comnt) AS pe_comnt, Rtrim(apss.active_typ_cd) AS cntrct_status_cd, Rtrim(cn.cntrct_desc) AS cntrct_desc, Rtrim(cos.comnt) AS gen_comnt, cn.ippf_ds_url AS ippf_url FROM phd.cos_fact cos INNER JOIN phd.customer_dim csd ON cos.cust_key = csd.cust_key INNER JOIN phd.contract_dim cn ON cos.cntrct_key = cn.cntrct_key AND cos.cntrct_key = '{cntrctKey}' INNER JOIN phd.sector_gb_dim std ON cos.sctr_key = std.sctr_gb_key INNER JOIN phd.acct_drop ad ON cos.mth_key = ad.mth_key AND ad.graph_nm = 'COS_L2_GR1' AND ad.yr_mo_key = 'CURRENT' INNER JOIN phd.industry_dim indstry ON indstry.indstry_key = cos.indstry_key INNER JOIN phd.practice_dim prac ON prac.practice_key = cos.practice_key AND prac.include = 1 INNER JOIN phd.country_dim ctry ON ctry.ctry_key = cos.ctry_key INNER JOIN phd.sector_gb_dim sctr ON sctr.sctr_gb_key = cos.sctr_key INNER JOIN phd.approval_status_dim aps ON cos.app_key = aps.id INNER JOIN phd.active_type_dim apss ON apss.active_typ_key = cn.active_typ_key WHERE cos.cos_in_scope_flg = 1 {pmAccess} ; \",\"description\":\"CoS CPM popup for PM\"}",
      "t2PMProcCompGDPRPopup": "{\"name\":\"t2PMProcCompGDPRPopup\",\"sqlTemplate\":\"SELECT Rtrim(cn.cntrct_desc) AS cntrct_name, Rtrim(cntrct_num) AS cntrct_num, Rtrim(cu.cust_nm) AS client_nm, cn.cntrct_key, CASE WHEN cn.prtnr_nm != '' THEN Substr(cn.prtnr_nm, 1, Locate('/', cn.prtnr_nm) - 1) ELSE 'N/A' END AS partner_nm, Rtrim(ctry.ctry_nm) AS country, DATE(cn.sgnd_dt) AS contract_sign_date, DATE(cn.end_dt) AS end_dt, Rtrim(gp.grth_plfm_desc) AS growth_platform, svc_line.svc_line_nm AS service_line, Rtrim(s.sctr_gb_nm) AS sector, geo2.geo_lvl2_nm AS market, CASE WHEN cn.pe_notes_id != '' THEN Substr(cn.pe_notes_id, 1, Locate('/', cn.pe_notes_id) - 1) ELSE 'N/A' END AS brand_pe_nm, Coalesce(f.tcv, 0.0) AS tcv, Coalesce(f.pc_gp_amt, 0.0) AS pc_gp, f.pc_gp_pct AS pc_gp_pct, Coalesce(f.aprvd_gp_amt, 0.0) AS aprvd_gp_amt, f.aprvd_gp_pct AS aprvd_gp_pct, Initcap(f.gdpr_ovrl) AS gdpr_ovrl, Initcap(CASE f.gdpr_clsfc WHEN 'A' THEN 'Amber' WHEN 'G' THEN 'Green' WHEN 'R' THEN 'Red' WHEN 'Y' THEN 'Yellow' ELSE f.gdpr_clsfc END) AS gdpr_clsfc, Initcap(f.dpa_stat) AS dpa_stat, Initcap(f.ex_stat) AS exhib_stat, Initcap(f.sl_stat) sl_revw_stat, Initcap(f.eumc_stat) AS eumc_stat, Initcap(f.sub_stat) AS subprcs_stat, Initcap(f.tom_impl) AS toms_impl, Initcap(f.cls_in_cnrct) AS clause_in_cntr, Initcap(f.lgl_lttr_sgnd) AS lgl_letter_sgn, Initcap(f.cnfrm_lttr_sgnd) AS conf_letter_sgn, Initcap(f.one_way_lttr_sgnd) AS one_way_letter_snt, cn.phd_url AS ippf_url FROM phd.gdpr_fact f INNER JOIN phd.geo_lvl2_dim geo2 ON f.geo_lvl2_key = geo2.geo_lvl2_key INNER JOIN phd.growth_platform_dim gp ON f.grth_plfm_key = gp.grth_plfm_key INNER JOIN phd.svc_line_dim svc_line ON svc_line.svc_line_key = f.svc_line_key INNER JOIN phd.contract_dim cn ON f.cntrct_key = cn.cntrct_key AND f.cntrct_key = '{cntrctKey}' INNER JOIN phd.country_dim ctry ON f.ctry_key = ctry.ctry_key INNER JOIN phd.customer_dim cu ON f.cust_key = cu.cust_key INNER JOIN phd.sector_gb_dim s ON f.sctr_key = s.sctr_gb_key INNER JOIN phd.acct_drop ad ON ad.mth_key = f.mth_key AND ad.graph_nm = 'GDP_L2_GR1' AND ad.yr_mo_key = 'CURRENT' {pmAccess} FETCH first ROW only ;\",\"description\":\"GDPR Process compliance contract level popup\"}",

      "t2PMMultiSelect": "{\"name\":\"t2PMMultiSelect\",\"sqlTemplate\":\"SELECT PROJ_KEY FROM PHD.PROJECT_DIM WHERE PROJ_KEY IN ({workKey}) ;\",\"description\":\"MultiSelet Test\"}"

    },
    "Parameter": {
      "getResourceByGrowthPlatform-growth-platform-cd": {
        "name":"growth-platform-cd",
        "serviceName":"getResourceByGrowthPlatform",
        "requiredInd":true,
        "defaultValue":"15CAI",
        "externalName":"Growth Platform Code",
        "dataType":3,
        "description":"Growth Platform Code"
      },
      "phdbFilters-bus-attr": "{\"name\":\"busAttr\",\"serviceName\":\"phdbFilters\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "phdbFilters-filter": "{\"name\":\"filter\",\"serviceName\":\"phdbFilters\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "entitlementLineage-email": "{\"name\":\"email\",\"serviceName\":\"entitlementLineage\",\"requiredInd\":true,\"externalName\":\"Email Id\",\"dataType\":3,\"description\":\"The email Id of the user the entitlement is for.\"}",
      "entitlement-email": "{\"name\":\"email\",\"serviceName\":\"entitlement\",\"requiredInd\":true,\"externalName\":\"Email Id\",\"dataType\":3,\"description\":\"The email Id of the user the entitlement is for.\"}",
      "financialQuarters-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"financialQuarters\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"9999Q4\",\"description\":\"Specifies the quarter year key.\"}",
      "cpmQuarters-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"cpmQuarters\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"9999Q4\",\"description\":\"Specifies the quarter year key.\"}",
      "phdPageLogger-page": "{\"name\":\"page\",\"serviceName\":\"phdPageLogger\",\"requiredInd\":true,\"externalName\":\"Page\",\"dataType\":3,\"description\":\"Specifies which page user has visited.\"}",
      "phdFilterLogger-filters": "{\"name\":\"filters\",\"serviceName\":\"phdFilterLogger\",\"requiredInd\":true,\"externalName\":\"Filters\",\"dataType\":3,\"description\":\"Specifies which filters a user has applied.\"}",
      
      "t1TieredLeakage-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t1TieredLeakage\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"TOTAL\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1TieredLeakage-filter": "{\"name\":\"filter\",\"serviceName\":\"t1TieredLeakage\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1TieredLeakage-status": "{\"name\":\"status\",\"serviceName\":\"t1TieredLeakage\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ReportTieredLeakageMillions-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ReportTieredLeakageMillions\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakageMillions-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ReportTieredLeakageMillions\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakageMillions-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ReportTieredLeakageMillions\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ReportTieredLeakageMillions-status": "{\"name\":\"status\",\"serviceName\":\"t2ReportTieredLeakageMillions\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ReportTieredLeakagePercentage-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ReportTieredLeakagePercentage\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakagePercentage-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ReportTieredLeakagePercentage\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakagePercentage-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ReportTieredLeakagePercentage\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ReportTieredLeakagePercentage-status": "{\"name\":\"status\",\"serviceName\":\"t2ReportTieredLeakagePercentage\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ReportTieredLeakageContractCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ReportTieredLeakageContractCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakageContractCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ReportTieredLeakageContractCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data. These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakageContractCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ReportTieredLeakageContractCount\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ReportTieredLeakageContractCount-status": "{\"name\":\"status\",\"serviceName\":\"t2ReportTieredLeakageContractCount\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ReportTieredLeakageWorkCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ReportTieredLeakageWorkCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakageWorkCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ReportTieredLeakageWorkCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportTieredLeakageWorkCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ReportTieredLeakageWorkCount\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2ReportTieredLeakageWorkCount-status": "{\"name\":\"status\",\"serviceName\":\"t2ReportTieredLeakageWorkCount\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ReportLeakage12MthTrend-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ReportLeakage12MthTrend\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data. These filters translate into the SQL WHERE clause.\"}",
      "t2ReportLeakage12MthTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ReportLeakage12MthTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data. These filters translate into the SQL WHERE clause.\"}",
      "t2ReportLeakage12MthTrend-status": "{\"name\":\"status\",\"serviceName\":\"t2ReportLeakage12MthTrend\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ReportVariance-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ReportVariance\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportVariance-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ReportVariance\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ReportVariance-status": "{\"name\":\"status\",\"serviceName\":\"t2ReportVariance\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TopContributorsQtrGpLeakageContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TopContributorsQtrGpLeakageContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TopContributorsQtrGpLeakageContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsQtrGpLeakageContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2TopContributorsQtrGpLeakageContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TopContributorsQtrGpLeakageContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TopContributorsQtrGpLeakageWorkNumber-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TopContributorsQtrGpLeakageWorkNumber\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TopContributorsQtrGpLeakageWorkNumber-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsQtrGpLeakageWorkNumber\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2TopContributorsQtrGpLeakageWorkNumber-status": "{\"name\":\"status\",\"serviceName\":\"t2TopContributorsQtrGpLeakageWorkNumber\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TopContributorsEac2PlanWorkNumber-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TopContributorsEac2PlanWorkNumber\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TopContributorsEac2PlanWorkNumber-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsEac2PlanWorkNumber\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",

      "t2TopContributorsEac2PlanContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TopContributorsEac2PlanContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TopContributorsEac2PlanContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsEac2PlanContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",

      "t2TopContributorsCostOverrunContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TopContributorsCostOverrunContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TopContributorsCostOverrunContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsCostOverrunContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",

      "t2TieredLeakContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TieredLeakContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TieredLeakContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TieredLeakContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TieredLeakContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TieredLeakContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_GP_LKG\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TieredLeakContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TieredLeakContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2TieredLeakContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TieredLeakContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TieredLeakWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TieredLeakWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TieredLeakWorkNum-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2TieredLeakWorkNum\",\"requiredInd\":true,\"externalName\":\"Contract number\",\"dataType\":3,\"description\":\"Specifies the contract number for which the work numbers should be returned.\"}",
      "t2TieredLeakWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TieredLeakWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TieredLeakWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TieredLeakWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_GP_LKG\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TieredLeakWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TieredLeakWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2TieredLeakWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TieredLeakWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TieredLeakContractExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TieredLeakContractExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TieredLeakContractExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TieredLeakContractExport\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TieredLeakContractExport-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TieredLeakContractExport\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_GP_LKG\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TieredLeakContractExport-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TieredLeakContractExport\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2TieredLeakContractExport-status": "{\"name\":\"status\",\"serviceName\":\"t2TieredLeakContractExport\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TieredLeakWorkNumExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TieredLeakWorkNumExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TieredLeakWorkNumExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TieredLeakWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TieredLeakWorkNumExport-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TieredLeakWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_GP_LKG\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TieredLeakWorkNumExport-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TieredLeakWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2TieredLeakWorkNumExport-status": "{\"name\":\"status\",\"serviceName\":\"t2TieredLeakWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TopContributorsCostOverrunWorkNumber-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TopContributorsCostOverrunWorkNumber\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TopContributorsCostOverrunWorkNumber-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsCostOverrunWorkNumber\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",

      "t2TopContributorsContractPopupDetail-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2TopContributorsContractPopupDetail-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2TopContributorsContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2TopContributorsContractPopupDetail-status": "{\"name\":\"status\",\"serviceName\":\"t2TopContributorsContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TopContributorsWorkPopupDetail-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2TopContributorsWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2TopContributorsWorkPopupDetail-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TopContributorsWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2TopContributorsWorkPopupDetail-status": "{\"name\":\"status\",\"serviceName\":\"t2TopContributorsWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2TLCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2TLCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2TLCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLCountContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLCountContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2TLCountContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLCountContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLCountContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLCountContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLCountContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLCountContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLCountWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLCountWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2TLCountWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLCountWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2TLCountWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLCountWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLCountWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLCountWorkNumAll-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLCountWorkNumAll-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2TLCountWorkNumAll-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLCountWorkNumAll-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2TLCountWorkNumAll-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLCountWorkNumAll-status": "{\"name\":\"status\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLCountWorkNumAll-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLCountWorkNumAll\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLTrendMthContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendMthContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendMthContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendMthContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendMthContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLTrendQtrContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendQtrContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendQtrContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendQtrContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendQtrContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLTrendMthWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendMthWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendMthWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendMthWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendMthWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLTrendQtrWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendQtrWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendQtrWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendQtrWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendQtrWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLTrendMthMetContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendMthMetContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendMthMetContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendMthMetContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendMthMetContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLTrendMthMetContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2TLTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",

      "t2TLTrendQtrMetContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendQtrMetContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendQtrMetContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendQtrMetContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendQtrMetContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLTrendQtrMetContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2TLTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",

      "t2TLTrendMthMetWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendMthMetWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendMthMetWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendMthMetWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendMthMetWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLTrendMthMetWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2TLTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",

      "t2TLTrendQtrMetWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLTrendQtrMetWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLTrendQtrMetWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLTrendQtrMetWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLTrendQtrMetWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLTrendQtrMetWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2TLTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",

      "t2TLDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2TLDetailsContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLDetailsContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLDetailsContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLDetailsContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLDetailsContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TLDetailsContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TLDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2TLDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLDetailsWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2TLDetailsWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLDetailsWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLDetailsWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLDetailsWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLDetailsWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TLDetailsWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TLDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2TLPopupContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2TLPopupContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2TLPopupContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLPopupContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLPopupContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLPopupContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2TLPopupContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLPopupContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLPopupContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLPopupContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLPopupContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLPopupContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLPopupWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2TLPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2TLPopupWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLPopupWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2TLPopupWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLPopupWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLPopupWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t2TLExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TLExportContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLExportContract-status": "{\"name\":\"status\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLExportContract-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLExportContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TLExportContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TLExportContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2TLExportWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLExportWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TLExportWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLExportWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLExportWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",
      "t2TLExportWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2TLExportWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2TLExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2TLWorldWideWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2TLWorldWideWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the metric selection.\"}",
      "t2TLWorldWideWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2TLWorldWideWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2TLWorldWideWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2TLWorldWideWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2TLWorldWideWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2TLWorldWideWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2TLWorldWideWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2TLWorldWideWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2TLWorldWideWorkNum-tier": "{\"name\":\"tier\",\"serviceName\":\"t2TLWorldWideWorkNum\",\"requiredInd\":true,\"externalName\":\"Tier value\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Tier Toggle.\"}",

      "t1PlanHealthView-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PlanHealthView\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",

      "t2PlanHealthExclusionContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2PlanHealthExclusionContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PlanHealthExclusionContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PlanHealthExclusionContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PlanHealthExclusionContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2PlanHealthExclusionContract\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2PlanHealthExclusionContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PlanHealthExclusionContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PlanHealthExclusionWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2PlanHealthExclusionWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PlanHealthExclusionWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PlanHealthExclusionWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PlanHealthExclusionWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2PlanHealthExclusionWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2PlanHealthExclusionWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PlanHealthExclusionWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2planhealthexclusiontrendcontract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2planhealthexclusiontrendcontract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2planhealthexclusiontrendcontract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2planhealthexclusiontrendcontract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"Specifies the metric selected.\"}",
      "t2planhealthexclusiontrendcontract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2planhealthexclusiontrendcontract\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2planhealthexclusiontrendcontract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2planhealthexclusiontrendcontract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2planhealthexclusiontrendworknumber-filter": "{\"name\":\"filter\",\"serviceName\":\"t2planhealthexclusiontrendworknumber\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2planhealthexclusiontrendworknumber-metric": "{\"name\":\"metric\",\"serviceName\":\"t2planhealthexclusiontrendworknumber\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"pecifies the metric selected.\"}",
      "t2planhealthexclusiontrendworknumber-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2planhealthexclusiontrendworknumber\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2planhealthexclusiontrendworknumber-operator": "{\"name\":\"operator\",\"serviceName\":\"t2planhealthexclusiontrendworknumber\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2planhealthexclusiondetailscontract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2planhealthexclusiondetailscontract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2planhealthexclusiondetailscontract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2planhealthexclusiondetailscontract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"pecifies the metric selected.\"}",
      "t2planhealthexclusiondetailscontract-label": "{\"name\":\"label\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2planhealthexclusiondetailscontract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2planhealthexclusiondetailscontract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2planhealthexclusiondetailscontract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2planhealthexclusiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2planhealthexclusiondetailsworknumber-filter": "{\"name\":\"filter\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2planhealthexclusiondetailsworknumber-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2planhealthexclusiondetailsworknumber-operator": "{\"name\":\"operator\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2planhealthexclusiondetailsworknumber-metric": "{\"name\":\"metric\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"pecifies the metric selected.\"}",
      "t2planhealthexclusiondetailsworknumber-label": "{\"name\":\"label\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2planhealthexclusiondetailsworknumber-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2planhealthexclusiondetailsworknumber-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2planhealthexclusiondetailsworknumber-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2planhealthexclusiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2PlanHealthContractPopupDetail-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PlanHealthContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PlanHealthContractPopupDetail-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PlanHealthContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2PlanHealthWorkPopupDetail-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2PlanHealthWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2PlanHealthWorkPopupDetail-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PlanHealthWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2PlanHealthWorkNumExport-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2PlanHealthWorkNumExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PlanHealthWorkNumExport-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2PlanHealthWorkNumExport-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2PlanHealthWorkNumExport-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2PlanHealthWorkNumExport-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2PlanHealthWorkNumExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2PlanHealthWorkNumExport\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"especifies the metric selected.\"}",

      "t2PlanHealthContractExport-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2PlanHealthContractExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PlanHealthContractExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2PlanHealthContractExport-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":true,\"externalName\":\"Year Quarter Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2PlanHealthContractExport-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2PlanHealthContractExport-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2PlanHealthContractExport-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2PlanHealthContractExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2PlanHealthContractExport\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"especifies the metric selected.\"}",

      "t1BusinessGPLeakage-filter": "{\"name\":\"filter\",\"serviceName\":\"t1BusinessGPLeakage\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",

      "t2BusinessLeakageExpansionContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2BusinessLeakageExpansionContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2BusinessLeakageExpansionContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2BusinessLeakageExpansionContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2BusinessLeakageExpansionContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2BusinessLeakageExpansionContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2BusinessLeakageExpansionContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2BusinessLeakageExpansionContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2BusinessLeakageExpansionContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2BusinessLeakageExpansionWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2BusinessLeakageExpansionWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2BusinessLeakageExpansionWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2BusinessLeakageExpansionWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2BusinessLeakageExpansionWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2BusinessLeakageExpansionWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2BusinessLeakageExpansionWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2BusinessLeakageExpansionWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2BusinessLeakageExpansionContractTotal-filter": "{\"name\":\"filter\",\"serviceName\":\"t2BusinessLeakageExpansionContractTotal\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2BusinessLeakageExpansionContractTotal-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2BusinessLeakageExpansionContractTotal\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2BusinessLeakageExpansionContractTotal-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2BusinessLeakageExpansionContractTotal\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2BusinessLeakageExpansionWorkNumTotal-filter": "{\"name\":\"filter\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNumTotal\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2BusinessLeakageExpansionWorkNumTotal-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNumTotal\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2BusinessLeakageExpansionWorkNumTotal-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2BusinessLeakageExpansionWorkNumTotal\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2businessleakageexpansionexclusiontrendmillions-filter": "{\"name\":\"filter\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2businessleakageexpansionexclusiontrendmillions-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2businessleakageexpansionexclusiontrendmillions-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2businessleakageexpansionexclusiontrendmillions-operator": "{\"name\":\"operator\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2businessleakageexpansionexclusiontrendmillions-label": "{\"name\":\"label\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2businessleakageexpansionexclusiontrendmillions-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2businessleakageexpansionexclusiontrendmillions-leak": "{\"name\":\"leak\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillions\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2businessleakageexpansionexclusiontrendmillionswork-filter": "{\"name\":\"filter\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork-operator": "{\"name\":\"operator\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork-label": "{\"name\":\"label\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2businessleakageexpansionexclusiontrendmillionswork-leak": "{\"name\":\"leak\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendmillionswork\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2businessleakageexpansionexclusiontrendpercentage-filter": "{\"name\":\"filter\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2businessleakageexpansionexclusiontrendpercentage-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2businessleakageexpansionexclusiontrendpercentage-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2businessleakageexpansionexclusiontrendpercentage-operator": "{\"name\":\"operator\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2businessleakageexpansionexclusiontrendpercentage-label": "{\"name\":\"label\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2businessleakageexpansionexclusiontrendpercentage-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2businessleakageexpansionexclusiontrendpercentage-leak": "{\"name\":\"leak\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentage\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2businessleakageexpansionexclusiontrendpercentagework-filter": "{\"name\":\"filter\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework-operator": "{\"name\":\"operator\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework-label": "{\"name\":\"label\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2businessleakageexpansionexclusiontrendpercentagework-leak": "{\"name\":\"leak\",\"serviceName\":\"t2businessleakageexpansionexclusiontrendpercentagework\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2businessleakageexpansiondetailscontract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2businessleakageexpansiondetailscontract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2businessleakageexpansiondetailscontract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2businessleakageexpansiondetailscontract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2businessleakageexpansiondetailscontract-label": "{\"name\":\"label\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2businessleakageexpansiondetailscontract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2businessleakageexpansiondetailscontract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"FC\",\"description\":\"Specifies the metric selection.\"}",
      "t2businessleakageexpansiondetailscontract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2businessleakageexpansiondetailscontract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2businessleakageexpansiondetailscontract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2businessleakageexpansiondetailsworknumber-filter": "{\"name\":\"filter\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2businessleakageexpansiondetailsworknumber-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2businessleakageexpansiondetailsworknumber-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2businessleakageexpansiondetailsworknumber-operator": "{\"name\":\"operator\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2businessleakageexpansiondetailsworknumber-label": "{\"name\":\"label\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2businessleakageexpansiondetailsworknumber-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2businessleakageexpansiondetailsworknumber-metric": "{\"name\":\"metric\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"FC\",\"description\":\"Specifies the metric selection.\"}",
      "t2businessleakageexpansiondetailsworknumber-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2businessleakageexpansiondetailsworknumber-leak": "{\"name\":\"leak\",\"serviceName\":\"t2businessleakageexpansiondetailsworknumber\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2BusinessLeakageContractPopupDetail-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2BusinessLeakageContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2BusinessLeakageContractPopupDetail-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2BusinessLeakageContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2BusinessLeakageContractPopupDetail-metric": "{\"name\":\"metric\",\"serviceName\":\"t2BusinessLeakageContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"FC\",\"description\":\"Specifies the metric selection.\"}",
      "t2BusinessLeakageContractPopupDetail-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2BusinessLeakageContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2BusinessLeakageContractPopupDetail-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2BusinessLeakageContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2BusinessLeakageContractPopupDetail-leak": "{\"name\":\"leak\",\"serviceName\":\"t2BusinessLeakageContractPopupDetail\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2BusinessLeakageWorkPopupDetail-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2BusinessLeakageWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2BusinessLeakageWorkPopupDetail-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2BusinessLeakageWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2BusinessLeakageWorkPopupDetail-metric": "{\"name\":\"metric\",\"serviceName\":\"t2BusinessLeakageWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"FC\",\"description\":\"Specifies the metric selection.\"}",
      "t2BusinessLeakageWorkPopupDetail-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2BusinessLeakageWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2BusinessLeakageWorkPopupDetail-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2BusinessLeakageWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2BusinessLeakageWorkPopupDetail-leak": "{\"name\":\"leak\",\"serviceName\":\"t2BusinessLeakageWorkPopupDetail\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t1OperGPLeakage-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t1OperGPLeakage\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"TOTAL\",\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1OperGPLeakage-filter": "{\"name\":\"filter\",\"serviceName\":\"t1OperGPLeakage\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",

      "t2OperLeakageCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2OperLeakageCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2OperLeakageCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageCountContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakageCountContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2OperLeakageCountContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2OperLeakageCountContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2OperLeakageCountContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageCountContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageCountContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2OperLeakageCountContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2OperLeakageCountWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2OperLeakageCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2OperLeakageCountWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageCountWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageCountWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakageCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2OperLeakageCountWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2OperLeakageCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2OperLeakageCountWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageCountWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2OperLeakageCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2OperLeakageTotalContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageTotalContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageTotalContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageTotalContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageTotalContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakageTotalContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2OperLeakageTotalWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageTotalWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageTotalWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageTotalWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageTotalWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakageTotalWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2OperLeakageTrendMillContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageTrendMillContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageTrendMillContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageTrendMillContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageTrendMillContract-label": "{\"name\":\"label\",\"serviceName\":\"t2OperLeakageTrendMillContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2OperLeakageTrendMillWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageTrendMillWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageTrendMillWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageTrendMillWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageTrendMillWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2OperLeakageTrendMillWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2OperLeakageTrendPercContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageTrendPercContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageTrendPercContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageTrendPercContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageTrendPercContract-label": "{\"name\":\"label\",\"serviceName\":\"t2OperLeakageTrendPercContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2OperLeakageTrendPercWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageTrendPercWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageTrendPercWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageTrendPercWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageTrendPercWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2OperLeakageTrendPercWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2OperLeakageDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2OperLeakageDetailsContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2OperLeakageDetailsContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2OperLeakageDetailsContract-label": "{\"name\":\"label\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2OperLeakageDetailsContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageDetailsContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2OperLeakageDetailsContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"AP_TO_PC\",\"description\":\"Specifies the metric selection.\"}",

      "t2OperLeakageDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2OperLeakageDetailsWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2OperLeakageDetailsWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2OperLeakageDetailsWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2OperLeakageDetailsWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2OperLeakageDetailsWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakageDetailsWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2OperLeakageDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"AP_TO_PC\",\"description\":\"Specifies the metric selection.\"}",

      "t2OperLeakagePopupContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2OperLeakagePopupContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2OperLeakagePopupContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakagePopupContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakagePopupContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2OperLeakagePopupContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"AP_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2OperLeakagePopupContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakagePopupContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2OperLeakagePopupWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2OperLeakagePopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2OperLeakagePopupWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2OperLeakagePopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2OperLeakagePopupWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2OperLeakagePopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"AP_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2OperLeakagePopupWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2OperLeakagePopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t1GPLeak-filter": "{\"name\":\"filter\",\"serviceName\":\"t1GPLeak\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",

      "t2GPLeakCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCountContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakCountContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCountContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakCountContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCountContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakCountContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakCountContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakCountCQQContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCountCQQContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCountCQQContract-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakCountCQQContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCountCQQContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakCountCQQContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCountCQQContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakCountCQQContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakCountCQQContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakCountCQMContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCountCQMContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCountCQMContract-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakCountCQMContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCountCQMContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakCountCQMContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCountCQMContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakCountCQMContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakCountCQMContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakCountWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCountWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCountWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2GPLeakCountWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCountWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakCountWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCountWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakCountWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakCORCountMthWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCORCountMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCORCountMthWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCORCountMthWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCORCountMthWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakCORCountMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2GPLeakCORCountMthWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCORCountMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCORCountMthWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCORCountMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2GPLeakCountCQQWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCountCQQWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCountCQQWorkNum-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ qtr key.\"}",
      "t2GPLeakCountCQQWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCountCQQWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakCountCQQWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCountCQQWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakCountCQQWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakCountCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakCountCQMWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2GPLeakCountCQMWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCountCQMWorkNum-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakCountCQMWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCountCQMWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakCountCQMWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCountCQMWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakCountCQMWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakCountCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendMthContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendMthContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendMthContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendMthContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendMthContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendMthContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendMthContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendMthContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendCQMContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendCQMContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendCQMContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendCQMContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendCQMContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendCQMContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendCQMContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendCQMContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendCQQContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendCQQContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendCQQContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendCQQContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendCQQContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendCQQContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendCQQContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendCQQContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendCQQWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendCQQWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendCQQWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendCQQWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendCQQWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendCQQWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendCQQWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendQtrContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendQtrContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendQtrContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendQtrContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendQtrContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendQtrContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendQtrContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendQtrContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendMthWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendMthWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendMthWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendMthWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendMthWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendMthWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendMthWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakCORTrendMthWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCORTrendMthWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCORTrendMthWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCORTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCORTrendMthWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCORTrendMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      
      "t2GPLeakTrendCQMWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendCQMWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendCQMWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendCQMWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendCQMWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendCQMWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendCQMWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendQtrWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendQtrWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendQtrWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendQtrWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendQtrWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendQtrWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendQtrWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendQtrWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakTrendMthMetContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendMthMetContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendMthMetContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendMthMetContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendMthMetContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendMthMetContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendMthMetContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakTrendMthMetContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakTrendMthMetContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",

      "t2GPLeakTrendQtrMetContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendQtrMetContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendQtrMetContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendQtrMetContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendQtrMetContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendQtrMetContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendQtrMetContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakTrendQtrMetContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakTrendQtrMetContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",

      "t2GPLeakTrendMthMetWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendMthMetWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendMthMetWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendMthMetWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendMthMetWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendMthMetWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendMthMetWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakTrendMthMetWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2GPLeakTrendMthMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",

      "t2GPLeakTrendQtrMetWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakTrendQtrMetWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakTrendQtrMetWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakTrendQtrMetWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakTrendQtrMetWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakTrendQtrMetWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakTrendQtrMetWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakTrendQtrMetWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2GPLeakTrendQtrMetWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",

      "t2GPLeakDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakDetailsContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakDetailsContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakDetailsContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakDetailsContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakDetailsContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakDetailsContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakDetailsContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakDetailsContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakDetailsContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakDetailsCQQContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakDetailsCQQContract-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakDetailsCQQContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakDetailsCQQContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakDetailsCQQContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakDetailsCQQContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakDetailsCQQContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakDetailsCQQContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakDetailsCQQContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakDetailsCQQContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakDetailsCQQContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakDetailsCQQContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakDetailsCQMContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakDetailsCQMContract-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakDetailsCQMContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakDetailsCQMContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakDetailsCQMContract-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakDetailsCQMContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakDetailsCQMContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakDetailsCQMContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakDetailsCQMContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakDetailsCQMContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakDetailsCQMContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakDetailsCQMContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakDetailsWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakDetailsWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakDetailsWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakDetailsWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakDetailsWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakDetailsWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakDetailsWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakDetailsWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakDetailsWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakDetailsWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakCORDetailsMthWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakCORDetailsMthWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakCORDetailsMthWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakCORDetailsMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakCORDetailsMthWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCORDetailsMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCORDetailsMthWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCORDetailsMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCORDetailsMthWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakCORDetailsMthWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakDetailsCQQWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakDetailsCQQWorkNum-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakDetailsCQQWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakDetailsCQQWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakDetailsCQQWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakDetailsCQQWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakDetailsCQQWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakDetailsCQQWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakDetailsCQQWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakDetailsCQQWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakDetailsCQQWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakDetailsCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakDetailsCQMWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakDetailsCQMWorkNum-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakDetailsCQMWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakDetailsCQMWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakDetailsCQMWorkNum-label": "{\"name\":\"label\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2GPLeakDetailsCQMWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakDetailsCQMWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakDetailsCQMWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakDetailsCQMWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakDetailsCQMWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"TCV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakDetailsCQMWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakDetailsCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",

      "t2GPLeakPopupContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakPopupContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2GPLeakPopupContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakPopupContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakPopupContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakPopupContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakPopupContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakPopupContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakPopupContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakPopupContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakPopupContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakPopupContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakMetPopupContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakMetPopupContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2GPLeakMetPopupContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakMetPopupContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakMetPopupContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakMetPopupContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakMetPopupContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakMetPopupContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakMetPopupContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakMetPopupContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakMetPopupContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakMetPopupContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakPopupCQQContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakPopupCQQContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2GPLeakPopupCQQContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakPopupCQQContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakPopupCQQContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakPopupCQQContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakPopupCQQContract-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakPopupCQQContract\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakPopupCQQContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakPopupCQQContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakPopupCQQContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakPopupCQQContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakPopupCQMContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakPopupCQMContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2GPLeakPopupCQMContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakPopupCQMContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakPopupCQMContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakPopupCQMContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakPopupCQMContract-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakPopupCQMContract\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakPopupCQMContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakPopupCQMContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakPopupCQMContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakPopupCQMContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakPopupWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2GPLeakPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2GPLeakPopupWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakPopupWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakPopupWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakPopupWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakPopupWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakMetPopupWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2GPLeakMetPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2GPLeakMetPopupWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakMetPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakMetPopupWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakMetPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakMetPopupWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakMetPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2GPLeakMetPopupWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakMetPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakMetPopupWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakMetPopupWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakPopupCQQWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2GPLeakPopupCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2GPLeakPopupCQQWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakPopupCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakPopupCQQWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakPopupCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakPopupCQQWorkNum-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakPopupCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakPopupCQQWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakPopupCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakPopupCQQWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakPopupCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakPopupCQMWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2GPLeakPopupCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2GPLeakPopupCQMWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakPopupCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakPopupCQMWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakPopupCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CQ_TO_PC\",\"description\":\"Specifies the metric selection.\"}",
      "t2GPLeakPopupCQMWorkNum-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakPopupCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakPopupCQMWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakPopupCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakPopupCQMWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakPopupCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2GPLeakExportContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExportContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExportContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExportContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExportContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExportContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExportContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakExportContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakExportContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"ITD_TO_PC\",\"description\":\"Specifies the metric selection.\"}",

      "t2GPLeakExportCQQContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExportCQQContract-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakExportCQQContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExportCQQContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExportCQQContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExportCQQContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExportCQQContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExportCQQContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExportCQQContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExportCQQContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakExportCQMContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExportCQMContract-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakExportCQMContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExportCQMContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExportCQMContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExportCQMContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExportCQMContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExportCQMContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExportCQMContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExportCQMContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExportWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2GPLeakExportWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExportWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExportWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExportWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExportWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExportWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExportWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakExportWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"ITD_TO_PC\",\"description\":\"Specifies the metric selection.\"}",

      "t2GPLeakExportCQQWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExportCQQWorkNum-cqQtrKey": "{\"name\":\"cqQtrKey\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ Qtr Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies CQ qtr key.\"}",
      "t2GPLeakExportCQQWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExportCQQWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExportCQQWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExportCQQWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExportCQQWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExportCQQWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExportCQQWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExportCQQWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakExportCQMWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExportCQMWorkNum-cqMthKey": "{\"name\":\"cqMthKey\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"CQ mth Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the CQ mth key.\"}",
      "t2GPLeakExportCQMWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExportCQMWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExportCQMWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExportCQMWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExportCQMWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExportCQMWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExportCQMWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExportCQMWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",

      "t2GPLeakExpanContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExpanContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",      
      "t2GPLeakExpanContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2GPLeakExpanContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExpanContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExpanContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExpanContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExpanContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExpanContract-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExpanContract-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakExpanContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakExpanContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",

      "t2GPLeakExpanWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2GPLeakExpanWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",      
      "t2GPLeakExpanWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2GPLeakExpanWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakExpanWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakExpanWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQAP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2GPLeakExpanWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2GPLeakExpanWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2GPLeakExpanWorkNum-ngp": "{\"name\":\"ngp\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"NGP value\",\"dataType\":3,\"defaultValue\":\"INGP\",\"description\":\"NGP Toggle.\"}",
      "t2GPLeakExpanWorkNum-leak": "{\"name\":\"leak\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Leakage value\",\"dataType\":3,\"defaultValue\":\"GRS\",\"description\":\"Leakage Toggle.\"}",
      "t2GPLeakExpanWorkNum-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2GPLeakExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",

      "t2GPLeakCORWWWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2GPLeakCORWWWorkNum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2GPLeakCORWWWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2GPLeakCORWWWorkNum\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2GPLeakCORWWWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2GPLeakCORWWWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2GPLeakCORWWWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2GPLeakCORWWWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"COR\",\"description\":\"Specifies the metric name.\"}",

      "t2CompSummaryGeo-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompSummaryGeo\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2CompSummaryGeo-graph": "{\"name\":\"graph\",\"serviceName\":\"t2CompSummaryGeo\",\"requiredInd\":true,\"externalName\":\"Graph name\",\"dataType\":3,\"defaultValue\":\"CPL_L2_GR1\",\"description\":\"Specifies the graph name for acct_drop table. \"}",
      "t2CompSummaryGrowthPltfrm-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompSummaryGrowthPltfrm\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key. \"}",
      "t2CompSummaryGrowthPltfrm-graph": "{\"name\":\"graph\",\"serviceName\":\"t2CompSummaryGrowthPltfrm\",\"requiredInd\":true,\"externalName\":\"Graph name\",\"dataType\":3,\"defaultValue\":\"CPL_L2_GR1\",\"description\":\"Specifies the graph name for acct_drop table. \"}",

      "t2CompCPMCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCPMCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompCPMCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCPMCount-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"description\":\"Specifies the quarter year key.\"}",
      "t2CompCPMCount-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompCPMCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CPME\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompCPMCount-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"COMP\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompCPMCount-assgn": "{\"name\":\"assgn\",\"serviceName\":\"t2CompCPMCount\",\"requiredInd\":true,\"externalName\":\"Assigned value\",\"dataType\":3,\"defaultValue\":\"ASND\",\"description\":\"Specifies the assigned toggle.\"}",

      "t2CompCPMDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCPMDetails-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompCPMDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCPMDetails-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2CompCPMDetails-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompCPMDetails-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompCPMDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CPME\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompCPMDetails-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"COMP\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompCPMDetails-assgn": "{\"name\":\"assgn\",\"serviceName\":\"t2CompCPMDetails\",\"requiredInd\":true,\"externalName\":\"Assigned value\",\"dataType\":3,\"defaultValue\":\"ASND\",\"description\":\"Specifies the assigned toggle.\"}",

      "t2CompCPMTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCPMTrend-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCPMTrend-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2CompCPMTrend-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompCPMTrend-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompCPMTrend-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"COMP\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompCPMTrend-assgn": "{\"name\":\"assgn\",\"serviceName\":\"t2CompCPMTrend\",\"requiredInd\":true,\"externalName\":\"Assigned value\",\"dataType\":3,\"defaultValue\":\"ASND\",\"description\":\"Specifies the assigned toggle.\"}",

      "t2CompCPMExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCPMExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCPMExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCPMExport-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2CompCPMExport\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2CompCPMExport-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompCPMExport\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2CompCPMExportMetric-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCPMExportMetric-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCPMExportMetric-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":true,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2CompCPMExportMetric-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompCPMExportMetric-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"CPME\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompCPMExportMetric-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"COMP\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompCPMExportMetric-assgn": "{\"name\":\"assgn\",\"serviceName\":\"t2CompCPMExportMetric\",\"requiredInd\":true,\"externalName\":\"Assigned value\",\"dataType\":3,\"defaultValue\":\"ASND\",\"description\":\"Specifies the assigned toggle.\"}",

      "t2CompCPMPopInfo-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompCPMPopInfo\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompCPMPopInfo-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMPopInfo\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      
      "t2CompCPMPopView-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompCPMPopView\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompCPMPopView-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCPMPopView\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2CompPGCountComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGCountComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGCountComp-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompPGCountComp\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompPGCountComp-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGCountComp\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompPGCountComp-label": "{\"name\":\"label\",\"serviceName\":\"t2CompPGCountComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompPGTrendComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGTrendComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGTrendComp-label": "{\"name\":\"label\",\"serviceName\":\"t2CompPGTrendComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompPGDetailsComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGDetailsComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGDetailsComp-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGDetailsComp\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompPGDetailsComp-label": "{\"name\":\"label\",\"serviceName\":\"t2CompPGDetailsComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompPGDetailsComp-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompPGDetailsComp\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PG0\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompPGDetailsComp-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompPGDetailsComp\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",

      "t2CompPGPopupSum-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompPGPopupSum\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompPGPopupSum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompPGPopupSum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PG0\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompPGPopupSum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGPopupSum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompPGPopupSum-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompPGPopupSum\",\"requiredInd\":false,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",

      "t2CompPGPopupDet-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompPGPopupDet\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompPGPopupDet-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompPGPopupDet\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PG0\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompPGPopupDet-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGPopupDet\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompPGPopupDet-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompPGPopupDet\",\"requiredInd\":false,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",

      "t2CompPGExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2CompPGCountPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGCountPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGCountPerf-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompPGCountPerf\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompPGCountPerf-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGCountPerf\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompPGCountPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2CompPGCountPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompPGTrendPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGTrendPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGTrendPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2CompPGTrendPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompPGDetailsPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompPGDetailsPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompPGDetailsPerf-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompPGDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompPGDetailsPerf-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompPGDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PG_0\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompPGDetailsPerf-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompPGDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompPGDetailsPerf-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2CompPGDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CNTRCT_NUM\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2CompPGDetailsPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2CompPGDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2Comp7KCountComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KCountComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KCountComp-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2Comp7KCountComp\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2Comp7KCountComp-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2Comp7KCountComp\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2Comp7KCountComp-label": "{\"name\":\"label\",\"serviceName\":\"t2Comp7KCountComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2Comp7KTrendComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KTrendComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KTrendComp-label": "{\"name\":\"label\",\"serviceName\":\"t2Comp7KTrendComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2Comp7KDetailsComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KDetailsComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KDetailsComp-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2Comp7KDetailsComp\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2Comp7KDetailsComp-label": "{\"name\":\"label\",\"serviceName\":\"t2Comp7KDetailsComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2Comp7KDetailsComp-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2Comp7KDetailsComp\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2Comp7KDetailsComp-compl": "{\"name\":\"compl\",\"serviceName\":\"t2Comp7KDetailsComp\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",

      "t2Comp7KPopup-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2Comp7KPopup\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2Comp7KPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2Comp7KPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2Comp7KPopup-compl": "{\"name\":\"compl\",\"serviceName\":\"t2Comp7KPopup\",\"requiredInd\":false,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",

      "t2Comp7KExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2Comp7KExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2Comp7KCountPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KCountPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KCountPerf-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2Comp7KCountPerf\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2Comp7KCountPerf-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2Comp7KCountPerf\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2Comp7KCountPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2Comp7KCountPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2Comp7KTrendPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KTrendPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KTrendPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2Comp7KTrendPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2Comp7KDetailsPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2Comp7KDetailsPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2Comp7KDetailsPerf-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2Comp7KDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2Comp7KDetailsPerf-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2Comp7KDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2Comp7KDetailsPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2Comp7KDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompIPPFCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompIPPFCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompIPPFCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompIPPFCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompIPPFCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompIPPFCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompIPPFCount-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompIPPFCount\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompIPPFCount-poc": "{\"name\":\"poc\",\"serviceName\":\"t2CompIPPFCount\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2CompIPPFCount-label": "{\"name\":\"label\",\"serviceName\":\"t2CompIPPFCount\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompIPPFTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompIPPFTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompIPPFTrend-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompIPPFTrend\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompIPPFTrend-poc": "{\"name\":\"poc\",\"serviceName\":\"t2CompIPPFTrend\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2CompIPPFTrend-label": "{\"name\":\"label\",\"serviceName\":\"t2CompIPPFTrend\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompIPPFDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompIPPFDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompIPPFDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REQ\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompIPPFDetails-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompIPPFDetails-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"RSNCD\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2CompIPPFDetails-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompIPPFDetails-poc": "{\"name\":\"poc\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2CompIPPFDetails-tgl": "{\"name\":\"tgl\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":false,\"externalName\":\"Required value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the toggle value.\"}",
      "t2CompIPPFDetails-label": "{\"name\":\"label\",\"serviceName\":\"t2CompIPPFDetails\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompIPPFPopup-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2CompIPPFPopup\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2CompIPPFPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompIPPFPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompIPPFPopup-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompIPPFPopup\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"ACT\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompIPPFPopup-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompIPPFPopup\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompIPPFPopup-poc": "{\"name\":\"poc\",\"serviceName\":\"t2CompIPPFPopup\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",

      "t2CompIPPFExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompIPPFExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompIPPFExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompIPPFExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2CompIPPFExportMetric-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompIPPFExportMetric-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompIPPFExportMetric-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REQ\",\"description\":\"Specifies the metric selection.\"}",
      "t2CompIPPFExportMetric-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompIPPFExportMetric-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"WBS_ID\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2CompIPPFExportMetric-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompIPPFExportMetric-poc": "{\"name\":\"poc\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2CompIPPFExportMetric-tgl": "{\"name\":\"tgl\",\"serviceName\":\"t2CompIPPFExportMetric\",\"requiredInd\":false,\"externalName\":\"Required value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the toggle value.\"}",

      "t2CompCOSCountComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSCountComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSCountComp-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompCOSCountComp\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompCOSCountComp-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSCountComp\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCOSCountComp-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCOSCountComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompCOSTrendComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSTrendComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSTrendComp-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCOSTrendComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompCOSDetailsComp-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSDetailsComp\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSDetailsComp-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSDetailsComp\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCOSDetailsComp-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2CompCOSDetailsComp\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CON\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2CompCOSDetailsComp-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompCOSDetailsComp\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompCOSDetailsComp-tgl": "{\"name\":\"tgl\",\"serviceName\":\"t2CompCOSDetailsComp\",\"requiredInd\":true,\"externalName\":\"Toggle\",\"dataType\":3,\"defaultValue\":\"NC\",\"description\":\"Specifies the toggle selection.\"}",
      "t2CompCOSDetailsComp-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCOSDetailsComp\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompCOSPopup-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompCOSPopup\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompCOSPopup-tgl": "{\"name\":\"tgl\",\"serviceName\":\"t2CompCOSPopup\",\"requiredInd\":true,\"externalName\":\"Toggle\",\"dataType\":3,\"defaultValue\":\"NC\",\"description\":\"Specifies the toggle selection.\"}",
      "t2CompCOSPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",

      "t2CompCOSExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2CompCOSExportMetric-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSExportMetric\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSExportMetric-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSExportMetric\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCOSExportMetric-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2CompCOSExportMetric\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CON\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2CompCOSExportMetric-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompCOSExportMetric\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompCOSExportMetric-tgl": "{\"name\":\"tgl\",\"serviceName\":\"t2CompCOSExportMetric\",\"requiredInd\":true,\"externalName\":\"Toggle\",\"dataType\":3,\"defaultValue\":\"NC\",\"description\":\"Specifies the toggle selection.\"}",

      "t2CompCOSCountPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSCountPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSCountPerf-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompCOSCountPerf\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompCOSCountPerf-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSCountPerf\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCOSCountPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCOSCountPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompCOSTrendPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSTrendPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSTrendPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCOSTrendPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompCOSDetailsPerf-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompCOSDetailsPerf\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompCOSDetailsPerf-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompCOSDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompCOSDetailsPerf-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2CompCOSDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CON\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2CompCOSDetailsPerf-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompCOSDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompCOSDetailsPerf-label": "{\"name\":\"label\",\"serviceName\":\"t2CompCOSDetailsPerf\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2CompGDPRPopupContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompGDPRPopupContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompGDPRPopupContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompGDPRPopupContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompGDPRPopupContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompGDPRPopupContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompGDPRPopupContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompGDPRPopupContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2CompNonGDPRCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNonGDPRCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNonGDPRCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompNonGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompNonGDPRCountContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompNonGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompNonGDPRCountContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompNonGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"NON_GDPR_IMPCT\",\"description\":\"Specifies Non GDPR metric.\"}",
      "t2CompNonGDPRCountContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompNonGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompNonGDPRCountContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompNonGDPRCountContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompNonGDPRDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNonGDPRDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNonGDPRDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompNonGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompNonGDPRDetailsContract-limit": "{\"name\":\"limit\",\"serviceName\":\"t2CompNonGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Count of rows\",\"dataType\":3,\"defaultValue\":\"500\",\"description\":\"Specifies number of rows to be selected.\"}",
      "t2CompNonGDPRDetailsContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompNonGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"NON_GDPR_IMPCT\",\"description\":\"Specifies Non GDPR metric.\"}",
      "t2CompNonGDPRDetailsContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompNonGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompNonGDPRDetailsContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompNonGDPRDetailsContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompNonGDPRExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNonGDPRExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNonGDPRExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompNonGDPRExportContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompNonGDPRExportContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompNonGDPRExportContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"NON_GDPR_IMPCT\",\"description\":\"Specifies Non GDPR metric.\"}",
      "t2CompNonGDPRExportContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompNonGDPRExportContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompNonGDPRTrendContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNonGDPRTrendContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNonGDPRTrendContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompNonGDPRTrendContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",     
      "t2CompNonGDPRTrendContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompNonGDPRTrendContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"NON_GDPR_IMPCT\",\"description\":\"Specifies Non GDPR metric.\"}",

      "t2CompGDPRImpCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompGDPRImpCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompGDPRImpCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompGDPRImpCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompGDPRImpCountContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompGDPRImpCountContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompGDPRImpCountContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompGDPRImpCountContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"IMPCT_BY_GDPR\",\"description\":\"Specifies Non GDPR metric.\"}",
      "t2CompGDPRImpCountContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompGDPRImpCountContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompGDPRImpCountContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompGDPRImpCountContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompGDPRImpDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompGDPRImpDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompGDPRImpDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompGDPRImpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompGDPRImpDetailsContract-limit": "{\"name\":\"limit\",\"serviceName\":\"t2CompGDPRImpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Count of rows\",\"dataType\":3,\"defaultValue\":\"500\",\"description\":\"Specifies number of rows to be selected.\"}",
      "t2CompGDPRImpDetailsContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompGDPRImpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"IMPCT_BY_GDPR\",\"description\":\"Specifies Non GDPR metric.\"}",
      "t2CompGDPRImpDetailsContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompGDPRImpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompGDPRImpDetailsContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompGDPRImpDetailsContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompGDPRImpExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompGDPRImpExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompGDPRImpExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompGDPRImpExportContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompGDPRImpExportContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompGDPRImpExportContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"IMPCT_BY_GDPR\",\"description\":\"Specifies Non GDPR metric.\"}",
      "t2CompGDPRImpExportContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompGDPRImpExportContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompGDPRImpTrendContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompGDPRImpTrendContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompGDPRImpTrendContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompGDPRImpTrendContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",     
      "t2CompGDPRImpTrendContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompGDPRImpTrendContract\",\"requiredInd\":true,\"externalName\":\"Non GDPR metric\",\"dataType\":3,\"defaultValue\":\"IMPCT_BY_GDPR\",\"description\":\"Specifies Non GDPR metric.\"}",

      "t2CompNotAsdGDPRCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNotAsdGDPRCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNotAsdGDPRCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompNotAsdGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompNotAsdGDPRCountContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompNotAsdGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompNotAsdGDPRCountContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompNotAsdGDPRCountContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompNotAsdGDPRCountContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompNotAsdGDPRCountContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     
      
      "t2CompNotAsdGDPRDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNotAsdGDPRDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNotAsdGDPRDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompNotAsdGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompNotAsdGDPRDetailsContract-limit": "{\"name\":\"limit\",\"serviceName\":\"t2CompNotAsdGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Count of rows\",\"dataType\":3,\"defaultValue\":\"500\",\"description\":\"Specifies number of rows to be selected.\"}",
      "t2CompNotAsdGDPRDetailsContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompNotAsdGDPRDetailsContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2CompNotAsdGDPRDetailsContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompNotAsdGDPRDetailsContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     

      "t2CompNotAsdGDPRExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNotAsdGDPRExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNotAsdGDPRExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompNotAsdGDPRExportContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompNotAsdGDPRExportContract-type": "{\"name\":\"type\",\"serviceName\":\"t2CompNotAsdGDPRExportContract\",\"requiredInd\":false,\"externalName\":\"GDPR type value\",\"dataType\":3,\"defaultValue\":\"POSITIVE\",\"description\":\"Specifies the type of view of GDPR: POSITIVE or NEGATIVE.\"}",     
      
      "t2CompNotAsdGDPRTrendContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompNotAsdGDPRTrendContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompNotAsdGDPRTrendContract-label": "{\"name\":\"label\",\"serviceName\":\"t2CompNotAsdGDPRTrendContract\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",     

      "t2CompDSCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDSCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDSCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDSCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDSCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDSCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDSCount-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompDSCount\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompDSCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDSCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the metric toggle.\"}",
      "t2CompDSCount-scp": "{\"name\":\"scp\",\"serviceName\":\"t2CompDSCount\",\"requiredInd\":true,\"externalName\":\"Scope value\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"Specifies the in scope toggle.\"}",

      "t2CompDSTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDSTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDSTrend-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompDSTrend\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompDSTrend-scp": "{\"name\":\"scp\",\"serviceName\":\"t2CompDSTrend\",\"requiredInd\":true,\"externalName\":\"Scope value\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"Specifies the in scope toggle.\"}",

      "t2CompDSDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDSDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDSDetails-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2CompDSDetails-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompDSDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the metric toggle.\"}",
      "t2CompDSDetails-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompDSDetails-scp": "{\"name\":\"scp\",\"serviceName\":\"t2CompDSDetails\",\"requiredInd\":true,\"externalName\":\"Scope value\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"Specifies the in scope toggle.\"}",

      "t2CompDSPopup-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompDSPopup\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompDSPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDSPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDSPopup-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompDSPopup\",\"requiredInd\":false,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompDSPopup-scp": "{\"name\":\"scp\",\"serviceName\":\"t2CompDSPopup\",\"requiredInd\":true,\"externalName\":\"Scope value\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"Specifies the in scope toggle.\"}",

      "t2CompDSExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDSExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDSExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDSExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDSExport-compl": "{\"name\":\"compl\",\"serviceName\":\"t2CompDSExport\",\"requiredInd\":true,\"externalName\":\"Compliant value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the compliance toggle.\"}",
      "t2CompDSExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDSExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies the metric toggle.\"}",
      "t2CompDSExport-operator": "{\"name\":\"operator\",\"serviceName\":\"t2CompDSExport\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"=\",\"description\":\"Specifies the value of the query operator.\"}",
      "t2CompDSExport-scp": "{\"name\":\"scp\",\"serviceName\":\"t2CompDSExport\",\"requiredInd\":true,\"externalName\":\"Scope value\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"Specifies the in scope toggle.\"}",

      "t2CompDMDelProfCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelProfCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelProfCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDMDelProfCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDMDelProfCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelProfCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelProfCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelProfCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelProfTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelProfTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelProfTrend-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelProfTrend\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelProfDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelProfDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelProfDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelProfDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelProfDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelProfDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelProfExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelProfExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelProfExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelProfExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelProfExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelProfExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMPopContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompDMPopContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompDMPopContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMPopContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMPopContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMPopContract\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",
      "t2CompDMPopContract-id": "{\"name\":\"id\",\"serviceName\":\"t2CompDMPopContract\",\"requiredInd\":true,\"externalName\":\"ID value\",\"dataType\":3,\"description\":\"Specifies the unique contract id value.\"}",

      "t2CompDMPopOppty-opptyNum": "{\"name\":\"opptyNum\",\"serviceName\":\"t2CompDMPopOppty\",\"requiredInd\":true,\"externalName\":\"Opportnuity Number\",\"dataType\":3,\"description\":\"Opportunity Number.\"}",
      "t2CompDMPopOppty-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMPopOppty\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMPopOppty-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMPopOppty\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolProfCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolProfCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolProfCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDMSolProfCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDMSolProfCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolProfCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolProfCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolProfCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolProfTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolProfTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolProfTrend-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolProfTrend\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolProfDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolProfDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolProfDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolProfDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolProfDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolProfDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolProfExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolProfExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolProfExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolProfExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolProfExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolProfExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"SUB\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelStdCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelStdCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelStdCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDMDelStdCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDMDelStdCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelStdCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelStdCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelStdCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelStdTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelStdTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelStdTrend-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelStdTrend\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelComStdDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelComStdDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelComStdDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelComStdDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelComStdDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelComStdDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelComStdExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelComStdExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelComStdExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelComStdExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelComStdExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelComStdExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelComStdPopContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompDMDelComStdPopContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompDMDelComStdPopContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelComStdPopContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMDelComStdPopContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelComStdPopContract\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",
      "t2CompDMDelComStdPopContract-id": "{\"name\":\"id\",\"serviceName\":\"t2CompDMDelComStdPopContract\",\"requiredInd\":true,\"externalName\":\"ID value\",\"dataType\":3,\"description\":\"Specifies the unique contract id value.\"}",

      "t2CompDMDelDevStdPopContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompDMDelDevStdPopContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompDMDelDevStdPopContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelDevStdPopContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMDelDevStdPopContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelDevStdPopContract\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",
      "t2CompDMDelDevStdPopContract-id": "{\"name\":\"id\",\"serviceName\":\"t2CompDMDelDevStdPopContract\",\"requiredInd\":true,\"externalName\":\"ID value\",\"dataType\":3,\"description\":\"Specifies the unique contract id value.\"}",

      "t2CompDMSolComStdPopOppty-opptyNum": "{\"name\":\"opptyNum\",\"serviceName\":\"t2CompDMSolComStdPopOppty\",\"requiredInd\":true,\"externalName\":\"Opportnuity Number\",\"dataType\":3,\"description\":\"Opportunity Number.\"}",
      "t2CompDMSolComStdPopOppty-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolComStdPopOppty\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMSolComStdPopOppty-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolComStdPopOppty\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolDevStdPopOppty-opptyNum": "{\"name\":\"opptyNum\",\"serviceName\":\"t2CompDMSolDevStdPopOppty\",\"requiredInd\":true,\"externalName\":\"Opportnuity Number\",\"dataType\":3,\"description\":\"Opportunity Number.\"}",
      "t2CompDMSolDevStdPopOppty-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolDevStdPopOppty\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMSolDevStdPopOppty-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolDevStdPopOppty\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelDevStdDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelDevStdDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelDevStdDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelDevStdDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelDevStdDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelDevStdDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelDevStdExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelDevStdExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelDevStdExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelDevStdExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelDevStdExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelDevStdExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolStdCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolStdCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolStdCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDMSolStdCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDMSolStdCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolStdCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolStdCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolStdCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolStdTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolStdTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolStdTrend-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolStdTrend\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolComStdDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolComStdDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolComStdDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolComStdDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolComStdDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolComStdDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolComStdExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolComStdExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolComStdExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolComStdExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolComStdExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolComStdExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolDevStdDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolDevStdDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolDevStdDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolDevStdDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolDevStdDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolDevStdDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolDevStdExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolDevStdExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolDevStdExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolDevStdExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolDevStdExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolDevStdExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelUsgCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelUsgCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelUsgCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDMDelUsgCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDMDelUsgCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelUsgCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelUsgCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelUsgCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelUsgTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelUsgTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelUsgTrend-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelUsgTrend\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelUsgDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelUsgDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelUsgDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelUsgDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelUsgDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelUsgDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelUsgExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelUsgExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelUsgExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelUsgExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelUsgExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelUsgExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolUsgCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolUsgCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolUsgCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2CompDMSolUsgCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2CompDMSolUsgCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolUsgCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolUsgCount-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolUsgCount\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolUsgTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolUsgTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolUsgTrend-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolUsgTrend\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelDevSLMDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelDevSLMDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelDevSLMDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelDevSLMDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelDevSLMDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelDevSLMDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDelDevSLMExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMDelDevSLMExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMDelDevSLMExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDelDevSLMExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMDelDevSLMExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDelDevSLMExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolUsgDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolUsgDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolUsgDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolUsgDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolUsgDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolUsgDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolUsgExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolUsgExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolUsgExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolUsgExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolUsgExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolUsgExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolDevSLMDetails-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolDevSLMDetails\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolDevSLMDetails-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolDevSLMDetails\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolDevSLMDetails-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolDevSLMDetails\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMSolDevSLMExport-filter": "{\"name\":\"filter\",\"serviceName\":\"t2CompDMSolDevSLMExport\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2CompDMSolDevSLMExport-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMSolDevSLMExport\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2CompDMSolDevSLMExport-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMSolDevSLMExport\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMUsgPopContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompDMUsgPopContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompDMUsgPopContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMUsgPopContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMUsgPopContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMUsgPopContract\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDevSLMPopContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2CompDMDevSLMPopContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2CompDMDevSLMPopContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDevSLMPopContract\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMDevSLMPopContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDevSLMPopContract\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMUsgPopOppty-opptyNum": "{\"name\":\"opptyNum\",\"serviceName\":\"t2CompDMUsgPopOppty\",\"requiredInd\":true,\"externalName\":\"Opportnuity Number\",\"dataType\":3,\"description\":\"Opportunity Number.\"}",
      "t2CompDMUsgPopOppty-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMUsgPopOppty\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMUsgPopOppty-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMUsgPopOppty\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"COM\",\"description\":\"Specifies the metric toggle.\"}",

      "t2CompDMDevSLMPopOppty-opptyNum": "{\"name\":\"opptyNum\",\"serviceName\":\"t2CompDMDevSLMPopOppty\",\"requiredInd\":true,\"externalName\":\"Opportnuity Number\",\"dataType\":3,\"description\":\"Opportunity Number.\"}",
      "t2CompDMDevSLMPopOppty-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2CompDMDevSLMPopOppty\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2CompDMDevSLMPopOppty-metric": "{\"name\":\"metric\",\"serviceName\":\"t2CompDMDevSLMPopOppty\",\"requiredInd\":true,\"externalName\":\"Metric value\",\"dataType\":3,\"defaultValue\":\"APR\",\"description\":\"Specifies the metric toggle.\"}",

      "t2ExpContractList-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpContractList\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpContractList-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ExpContractList\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ExpContractList-metric": "{\"name\":\"metric\",\"serviceName\":\"t2ExpContractList\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"NC\",\"description\":\"Specifies the metric selection.\"}",
      "t2ExpContractList-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpContractList\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2ExpContractList-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpContractList\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ExpCount-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ExpCount\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2ExpCount-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpCount\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpCount-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ExpCount\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2ExpCount-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpCount\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2ExpCount-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpCount\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ExpTrend-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpTrend\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpTrend-label": "{\"name\":\"label\",\"serviceName\":\"t2ExpTrend\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2ExpTrend-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ExpTrend\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2ExpTrend-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpTrend\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",
      "t2ExpTrend-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpTrend\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"_AC\",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",

      "t2ExpDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpDetailsContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ExpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ExpDetailsContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2ExpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2ExpDetailsContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2ExpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2ExpDetailsContract-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2ExpDetailsContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpDetailsContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",

      "t2ExpDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpDetailsWorkNum-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Contract number\",\"dataType\":3,\"description\":\"Specifies the contract number for which the work numbers should be returned.\"}",
      "t2ExpDetailsWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ExpDetailsWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2ExpDetailsWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\" ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2ExpDetailsWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2ExpDetailsWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",

      "t2ExpExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ExpExportContract\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ExpExportContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2ExpExportContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2ExpExportContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2ExpExportContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2ExpExportContract-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpExportContract\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2ExpExportContract-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpExportContract\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",

      "t2ExpExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ExpExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ExpExportWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2ExpExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Year Month Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the year month key.\"}",
      "t2ExpExportWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2ExpExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"CQ_TO_AP\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2ExpExportWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2ExpExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2ExpExportWorkNum-status": "{\"name\":\"status\",\"serviceName\":\"t2ExpExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the status, CLOSE and ACTIVE of the records to retrieve.\"}",
      "t2ExpExportWorkNum-contingency": "{\"name\":\"contingency\",\"serviceName\":\"t2ExpExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Contingency\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies if contingency should be added.\"}",

      "t1FinancialSummary-filter": "{\"name\":\"filter\",\"serviceName\":\"t1FinancialSummary\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",

      "t2gppTrendMonthFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppTrendMonthFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppTrendMonthFin-label": "{\"name\":\"label\",\"serviceName\":\"t2gppTrendMonthFin\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",
      "t2gppTrendMonthPlan-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppTrendMonthPlan\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppTrendMonthPlan-label": "{\"name\":\"label\",\"serviceName\":\"t2gppTrendMonthPlan\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2gppTrendQtrFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppTrendQtrFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppTrendQtrFin-label": "{\"name\":\"label\",\"serviceName\":\"t2gppTrendQtrFin\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2gppTrendITDFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppTrendITDFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppTrendITDFin-label": "{\"name\":\"label\",\"serviceName\":\"t2gppTrendITDFin\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",


      "t2gppTrendQTDFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppTrendQTDFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppTrendQTDFin-label": "{\"name\":\"label\",\"serviceName\":\"t2gppTrendQTDFin\",\"requiredInd\":true,\"externalName\":\"Label value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the label for the header.\"}",

      "t2gppDetailsMonthPlanContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsMonthPlanContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsMonthPlanContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsMonthPlanContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsMonthPlanContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsMonthPlanContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsMonthPlanContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsMonthPlanContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsMonthPlanContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsMonthPlanContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsMonthFinContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsMonthFinContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsMonthFinContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsMonthFinContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsMonthFinContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsMonthFinContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsMonthFinContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsMonthFinContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsMonthFinContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsMonthFinContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsQtrFinContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsQtrFinContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsQtrFinContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsQtrFinContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsQtrFinContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsQtrFinContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsQtrFinContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsQtrFinContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsQtrFinContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2gppDetailsQtrFinContract\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2gppDetailsQtrFinContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsQtrFinContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsQTDFinContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsQTDFinContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsQTDFinContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsQTDFinContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsQTDFinContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsQTDFinContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsQTDFinContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsQTDFinContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsQTDFinContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2gppDetailsQTDFinContract\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2gppDetailsQTDFinContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsQTDFinContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsITDFinContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsITDFinContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsITDFinContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsITDFinContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsITDFinContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsITDFinContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsITDFinContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsITDFinContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsITDFinContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsITDFinContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsMonthPlanWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsMonthPlanWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsMonthPlanWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsMonthPlanWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsMonthPlanWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsMonthPlanWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsMonthPlanWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsMonthPlanWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsMonthPlanWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsMonthPlanWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsMonthFinWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsMonthFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsMonthFinWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsMonthFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsMonthFinWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsMonthFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsMonthFinWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsMonthFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsMonthFinWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsMonthFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsQtrFinWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsQtrFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsQtrFinWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsQtrFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsQtrFinWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsQtrFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsQtrFinWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsQtrFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsQtrFinWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2gppDetailsQtrFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2gppDetailsQtrFinWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsQtrFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsITDFinWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsITDFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsITDFinWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsITDFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsITDFinWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsITDFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsITDFinWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsITDFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsITDFinWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsITDFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppDetailsQTDFinWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppDetailsQTDFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppDetailsQTDFinWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppDetailsQTDFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppDetailsQTDFinWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppDetailsQTDFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppDetailsQTDFinWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppDetailsQTDFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppDetailsQTDFinWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2gppDetailsQTDFinWorkNum\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2gppDetailsQTDFinWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppDetailsQTDFinWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppExportContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppExportContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppExportContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppExportContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppExportContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppExportContract-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2gppExportContract\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2gppExportContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppExportContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppExportWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2gppExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2gppExportWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2gppExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"ASC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2gppExportWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2gppExportWorkNum-yrQtrKey": "{\"name\":\"yrQtrKey\",\"serviceName\":\"t2gppExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Quarter Year Key\",\"dataType\":3,\"defaultValue\":\"0000Q1\",\"description\":\"Specifies the quarter year key.\"}",
      "t2gppExportWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2gppExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"REV\",\"description\":\"Specifies the metric selection.\"}",

      "t2gppSideQtrFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppSideQtrFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppSideQtrFin-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2gppSideQtrFin\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2gppSideQtrFin-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppSideQtrFin\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2gppSideMonthFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppSideMonthFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppSideMonthFin-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2gppSideMonthFin\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2gppSideMonthFin-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppSideMonthFin\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2gppSideITDFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppSideITDFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppSideITDFin-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2gppSideITDFin\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2gppSideITDFin-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppSideITDFin\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2gppSideQTDFin-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppSideQTDFin\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppSideQTDFin-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2gppSideQTDFin\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2gppSideQTDFin-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppSideQTDFin\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2gppSideMonthPlan-filter": "{\"name\":\"filter\",\"serviceName\":\"t2gppSideMonthPlan\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2gppSideMonthPlan-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2gppSideMonthPlan\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2gppSideMonthPlan-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2gppSideMonthPlan\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",


      "t1PredRisk-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PredRisk\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PredRisk-metric": "{\"name\":\"metric\",\"serviceName\":\"t1PredRisk\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"GLOBAL\",\"description\":\"Specifies the metric selection.\"}",

      "t2PriVarEacPlanMapContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriVarEacPlanMapContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"SCTR_GB_NM\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2PriVarEacPlanMapContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriVarEacPlanMapContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriVarEacPlanMapContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriVarEacPlanMapContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriVarEacPlanMapContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriVarEacPlanMapContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriVarEacPlanMapContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriVarEacPlanMapWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriVarEacPlanMapWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"SCTR_GB_NM\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2PriVarEacPlanMapWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriVarEacPlanMapWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriVarEacPlanMapWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriVarEacPlanMapWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriVarEacPlanMapWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriVarEacPlanMapWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriVarEacPlanMapWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriVarEacPlanDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriVarEacPlanDetailsContract-rankAttr": "{\"name\":\"rankAttr\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":true,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_LVL1\",\"description\":\"The value for the ranking key\"}",
      "t2PriVarEacPlanDetailsContract-all": "{\"name\":\"all\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"All Selection\",\"dataType\":3,\"defaultValue\":\"ALLSC\",\"description\":\"The value for the All Selection\"}",
      "t2PriVarEacPlanDetailsContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriVarEacPlanDetailsContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriVarEacPlanDetailsContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriVarEacPlanDetailsContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriVarEacPlanDetailsContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriVarEacPlanDetailsContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriVarEacPlanDetailsContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriVarEacPlanDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriVarEacPlanDetailsWorkNum-rankAttr": "{\"name\":\"rankAttr\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_LVL1\",\"description\":\"The value for the ranking key\"}",
      "t2PriVarEacPlanDetailsWorkNum-all": "{\"name\":\"all\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"All Selection\",\"dataType\":3,\"defaultValue\":\"ALLSC\",\"description\":\"The value for the All Selection\"}",
      "t2PriVarEacPlanDetailsWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriVarEacPlanDetailsWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriVarEacPlanDetailsWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriVarEacPlanDetailsWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriVarEacPlanDetailsWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriVarEacPlanDetailsWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriVarEacPlanDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopCIContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopCIContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PriPopCIContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopCIContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopCIContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopCIContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopCIContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopCIContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopCIContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopCIWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopCIWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2PriPopCIWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopCIWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopCIWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopCIWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopCIWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopCIWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopCIWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopTrendContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopTrendContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PriPopTrendContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopTrendContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopTrendContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopTrendContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopTrendContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopTrendContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopTrendContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopTrendWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopTrendWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2PriPopTrendWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopTrendWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopTrendWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopTrendWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopTrendWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopTrendWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriExportContract-rankAttr": "{\"name\":\"rankAttr\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":true,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_LVL1\",\"description\":\"The value for the ranking key\"}",
      "t2PriExportContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriExportContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriExportContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriExportContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriExportContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriExportContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriExportContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriExportWorkNum-rankAttr": "{\"name\":\"rankAttr\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_LVL1\",\"description\":\"The value for the ranking key\"}",
      "t2PriExportWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriExportWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriExportWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriExportWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriExportWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriExportWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriAllViewBy-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriAllViewBy-type": "{\"name\":\"type\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriAllViewBy-de": "{\"name\":\"de\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriAllViewBy-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriAllViewBy-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriAllViewBy-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriAllViewBy-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriAllViewBy\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriAllViewByContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriAllViewByContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriAllViewByContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriAllViewByContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriAllViewByContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriAllViewByContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriAllViewByContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriAllViewByContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopRiskContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopRiskContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PriPopRiskContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopRiskContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopRiskContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopRiskContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopRiskContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopRiskContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopRiskContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopRiskWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopRiskWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2PriPopRiskWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"Plan Type\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopRiskWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopRiskWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopRiskWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopRiskWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopRiskWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopRiskWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPlanContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PriPlanContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PriPlanContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPlanContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPlanContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPlanContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPlanContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPlanContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPlanContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPlanContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPlanWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2PriPlanWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2PriPlanWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPlanWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPlanWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPlanWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPlanWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPlanWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPlanWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPlanWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopInclContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopInclContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PriPopInclContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopInclContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopInclContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopInclContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopInclContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopInclContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopInclContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopInclWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopInclWorkNum-workNum": "{\"name\":\"workNum\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number\",\"dataType\":3,\"description\":\"Work Number.\"}",
      "t2PriPopInclWorkNum-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopInclWorkNum-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopInclWorkNum-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopInclWorkNum-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopInclWorkNum-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopInclWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopInclWorkNum\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t2PriPopDEContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2PriPopDEContract-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":true,\"externalName\":\"Contract Number\",\"dataType\":3,\"description\":\"Contract Number.\"}",
      "t2PriPopDEContract-type": "{\"name\":\"type\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"Rank Attribute\",\"dataType\":3,\"defaultValue\":\"PC\",\"description\":\"The value for the risk type key\"}",
      "t2PriPopDEContract-de": "{\"name\":\"de\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"DE List flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DE exclusion toggle\"}",
      "t2PriPopDEContract-mdl": "{\"name\":\"mdl\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"PRI Model\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"The value for the PRI Model toggle\"}",
      "t2PriPopDEContract-dca": "{\"name\":\"dca\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"DCA flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the DCA toggle\"}",
      "t2PriPopDEContract-cic": "{\"name\":\"cic\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"CIC flag\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"The value for the CIC toggle\"}",
      "t2PriPopDEContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2PriPopDEContract\",\"requiredInd\":false,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\"<\",\"description\":\"Specifies the value of the query operator.\"}",

      "t1UBAR-filter": "{\"name\":\"filter\",\"serviceName\":\"t1UBAR\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",

      "t2UBCountContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBCountContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBCountContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2UBCountContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2UBCountContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBCountContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2UBCountContract-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBCountContract\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",

      "t2UBCountWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBCountWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBCountWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2UBCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2UBCountWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBCountWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2UBCountWorkNum-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBCountWorkNum\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",

      "t2UBCountClient-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBCountClient\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBCountClient-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2UBCountClient\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2UBCountClient-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBCountClient\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2UBCountClient-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBCountClient\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",

      "t2UBDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBDetailsContract-metric": "{\"name\":\"metric\",\"serviceName\":\"t2UBDetailsContract\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"UBAR_TOT\",\"description\":\"Specifies the metric selection.\"}",
      "t2UBDetailsContract-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2UBDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"UB\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2UBDetailsContract-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2UBDetailsContract\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2UBDetailsContract-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBDetailsContract\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2UBDetailsContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBDetailsContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2UBDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBDetailsWorkNum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2UBDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"UBAR_TOT\",\"description\":\"Specifies the metric selection.\"}",
      "t2UBDetailsWorkNum-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2UBDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"UB\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2UBDetailsWorkNum-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2UBDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2UBDetailsWorkNum-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2UBDetailsWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2UBDetailsClient-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBDetailsClient\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBDetailsClient-metric": "{\"name\":\"metric\",\"serviceName\":\"t2UBDetailsClient\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"UBAR_TOT\",\"description\":\"Specifies the metric selection.\"}",
      "t2UBDetailsClient-orderColumn": "{\"name\":\"orderColumn\",\"serviceName\":\"t2UBDetailsClient\",\"requiredInd\":true,\"externalName\":\"Order column\",\"dataType\":3,\"defaultValue\":\"UB\",\"description\":\"Specifies the column to use in the order by.\"}",
      "t2UBDetailsClient-orderDirection": "{\"name\":\"orderDirection\",\"serviceName\":\"t2UBDetailsClient\",\"requiredInd\":true,\"externalName\":\"Order direction\",\"dataType\":3,\"defaultValue\":\"DESC\",\"description\":\"Specifies direction of the ordering.\"}",
      "t2UBDetailsClient-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBDetailsClient\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2UBDetailsClient-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBDetailsClient\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2UBTrendContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBTrendContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBTrendContract-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBTrendContract\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Select POC value.\"}",
      "t2UBTrendContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBTrendContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2UBTrendWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBTrendWorkNum-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBTrendWorkNum\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies sort for POC or non-POC or ALL\"}",
      "t2UBTrendWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBTrendWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2UBExpanClient-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBExpanClient\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBExpanClient-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBExpanClient\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2UBExpanClient-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBExpanClient\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies sort for POC or non-POC or ALL\"}",
      "t2UBExpanClient-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBExpanClient\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",

      "t2UBExpanContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBExpanContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBExpanContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBExpanContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2UBExpanContract-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBExpanContract\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies sort for POC or non-POC or ALL\"}",
      "t2UBExpanContract-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBExpanContract\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2UBExpanContract-client": "{\"name\":\"client\",\"serviceName\":\"t2UBExpanContract\",\"requiredInd\":true,\"externalName\":\"Contract number\",\"dataType\":3,\"description\":\"Specifies the client name for associated contracts to be returned.\"}",

      "t2UBExpanWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBExpanWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBExpanWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBExpanWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2UBExpanWorkNum-operator": "{\"name\":\"operator\",\"serviceName\":\"t2UBExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Operator value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the value of the query operator.\"}",
      "t2UBExpanWorkNum-poc": "{\"name\":\"poc\",\"serviceName\":\"t2UBExpanWorkNum\",\"requiredInd\":false,\"externalName\":\"POC or non-POC value\",\"dataType\":3,\"defaultValue\":\"0\",\"description\":\"Specifies sort for POC or non-POC or ALL\"}",
      "t2UBExpanWorkNum-cntrctNum": "{\"name\":\"cntrctNum\",\"serviceName\":\"t2UBExpanWorkNum\",\"requiredInd\":true,\"externalName\":\"Contract number\",\"dataType\":3,\"description\":\"Specifies the contract number for which the work numbers should be returned.\"}",

      "t2UBExportClient-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBExportClient\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBExportClient-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBExportClient\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2UBExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBExportContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2UBExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBExportWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2UBAlertWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBAlertWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBAlertWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBAlertWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2UBAlertContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBAlertContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBAlertContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBAlertContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2UBAlertExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBAlertExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBAlertExportWorkNum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBAlertExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t2UBAlertExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2UBAlertExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2UBAlertExportContract-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2UBAlertExportContract\",\"requiredInd\":false,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",

      "t1Search-filter": "{\"name\":\"filter\",\"serviceName\":\"t1Search\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1Search-sval": "{\"name\":\"sval\",\"serviceName\":\"t1Search\",\"requiredInd\":true,\"externalName\":\"Search Value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the search text.\"}",

      "t2ActPortDetailsContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortDetailsContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortDetailsContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ActPortDetailsContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2ActPortDetailsContract-expLimit": "{\"name\":\"expLimit\",\"serviceName\":\"t2ActPortDetailsContract\",\"requiredInd\":false,\"externalName\":\"Export Limit\",\"dataType\":3,\"defaultValue\":\"2000\",\"description\":\"Number of rows to be exported.\"}",
      "t2ActPortDetailsContract-viewId": "{\"name\":\"viewId\",\"serviceName\":\"t2ActPortDetailsContract\",\"requiredInd\":true,\"externalName\":\"View Id\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Id of the Custom View\"}",

      "t2ActPortDetailsWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortDetailsWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ActPortDetailsWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2ActPortDetailsWorkNum-expLimit": "{\"name\":\"expLimit\",\"serviceName\":\"t2ActPortDetailsWorkNum\",\"requiredInd\":false,\"externalName\":\"Export Limit\",\"dataType\":3,\"defaultValue\":\"2000\",\"description\":\"Number of rows to be exported.\"}",

      "t2ActPortSrchContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortSrchContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortSrchContract-sval": "{\"name\":\"sval\",\"serviceName\":\"t2ActPortSrchContract\",\"requiredInd\":true,\"externalName\":\"Search Value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the search text.\"}",

      "t2ActPortSrchClient-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortSrchClient\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortSrchClient-sval": "{\"name\":\"sval\",\"serviceName\":\"t2ActPortSrchClient\",\"requiredInd\":true,\"externalName\":\"Search Value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the search text.\"}",

      "t2ActPortSrchWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortSrchWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortSrchWorkNum-sval": "{\"name\":\"sval\",\"serviceName\":\"t2ActPortSrchWorkNum\",\"requiredInd\":true,\"externalName\":\"Search Value\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Specifies the search text.\"}",

      "t2ActPortExportContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortExportContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortExportContract-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ActPortExportContract\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2ActPortExportContract-expLimit": "{\"name\":\"expLimit\",\"serviceName\":\"t2ActPortExportContract\",\"requiredInd\":false,\"externalName\":\"Export Limit\",\"dataType\":3,\"defaultValue\":\"300\",\"description\":\"Number of rows to be exported.\"}",
      "t2ActPortExportContract-viewId": "{\"name\":\"viewId\",\"serviceName\":\"t2ActPortExportContract\",\"requiredInd\":true,\"externalName\":\"View Id\",\"dataType\":3,\"defaultValue\":\"-1\",\"description\":\"Id of the Custom View\"}",

      "t2ActPortExportWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t2ActPortExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t2ActPortExportWorkNum-busAttr": "{\"name\":\"busAttr\",\"serviceName\":\"t2ActPortExportWorkNum\",\"requiredInd\":true,\"externalName\":\"Business Attribute\",\"dataType\":3,\"defaultValue\":\"GEO_DESC\",\"description\":\"The business attribute (e.g. geography, service line, growth platform) that the business measurements are to be aggregated around.\"}",
      "t2ActPortExportWorkNum-expLimit": "{\"name\":\"expLimit\",\"serviceName\":\"t2ActPortExportWorkNum\",\"requiredInd\":false,\"externalName\":\"Export Limit\",\"dataType\":3,\"defaultValue\":\"300\",\"description\":\"Number of rows to be exported.\"}",
      
      "cmntGetAll-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"cmntGetAll\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "cmntGetAll-status": "{\"name\":\"status\",\"serviceName\":\"cmntGetAll\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"defaultValue\":\"I\",\"description\":\"Comment status type.\"}", 

      "cmntAdd-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"cmntAdd\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "cmntAdd-email": "{\"name\":\"email\",\"serviceName\":\"cmntAdd\",\"requiredInd\":true,\"externalName\":\"Email Id\",\"dataType\":3,\"description\":\"The email Id.\"}",
      "cmntAdd-metric": "{\"name\":\"metric\",\"serviceName\":\"cmntAdd\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"1\",\"description\":\"Comment type or metric: CoS, 7 Keys etc.\"}",
      "cmntAdd-ttl": "{\"name\":\"ttl\",\"serviceName\":\"cmntAdd\",\"requiredInd\":true,\"externalName\":\"Title\",\"dataType\":3,\"description\":\"Comment title.\"}",
      "cmntAdd-cmnt": "{\"name\":\"cmnt\",\"serviceName\":\"cmntAdd\",\"requiredInd\":true,\"externalName\":\"Comment\",\"dataType\":3,\"description\":\"Actual Comment.\"}", 

      "cmntUpdate-cmntId": "{\"name\":\"cmntId\",\"serviceName\":\"cmntUpdate\",\"requiredInd\":true,\"externalName\":\"Comment Id\",\"dataType\":3,\"description\":\"Comment Id.\"}", 
      "cmntUpdate-ttl": "{\"name\":\"ttl\",\"serviceName\":\"cmntUpdate\",\"requiredInd\":true,\"externalName\":\"Title\",\"dataType\":3,\"description\":\"Comment title.\"}",
      "cmntUpdate-cmnt": "{\"name\":\"cmnt\",\"serviceName\":\"cmntUpdate\",\"requiredInd\":true,\"externalName\":\"Comment\",\"dataType\":3,\"description\":\"Actual Comment.\"}", 

      "cmntStatus-cmntId": "{\"name\":\"cmntId\",\"serviceName\":\"cmntStatus\",\"requiredInd\":true,\"externalName\":\"Comment Id\",\"dataType\":3,\"description\":\"Comment Id.\"}", 
      "cmntStatus-status": "{\"name\":\"status\",\"serviceName\":\"cmntStatus\",\"requiredInd\":true,\"externalName\":\"Status\",\"dataType\":3,\"description\":\"Comment status type.\"}", 

      "cmntReply-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"cmntReply\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "cmntReply-email": "{\"name\":\"email\",\"serviceName\":\"cmntReply\",\"requiredInd\":true,\"externalName\":\"Email Id\",\"dataType\":3,\"description\":\"The email Id.\"}",
      "cmntReply-metric": "{\"name\":\"metric\",\"serviceName\":\"cmntReply\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"description\":\"Comment type or metric: CoS, 7 Keys etc.\"}",
      "cmntReply-cmnt": "{\"name\":\"cmnt\",\"serviceName\":\"cmntReply\",\"requiredInd\":true,\"externalName\":\"Comment\",\"dataType\":3,\"description\":\"Actual Comment.\"}", 
      "cmntReply-cmntId": "{\"name\":\"cmntId\",\"serviceName\":\"cmntReply\",\"requiredInd\":true,\"externalName\":\"Comment Id\",\"dataType\":3,\"description\":\"Comment Id for reply.\"}", 

      "cmntReplyUpdate-cmntId": "{\"name\":\"cmntId\",\"serviceName\":\"cmntReplyUpdate\",\"requiredInd\":true,\"externalName\":\"Comment Id\",\"dataType\":3,\"description\":\"Comment Id for reply.\"}", 
      "cmntReplyUpdate-replyId": "{\"name\":\"replyId\",\"serviceName\":\"cmntReplyUpdate\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Reply Id to be updated.\"}",
      "cmntReplyUpdate-cmnt": "{\"name\":\"cmnt\",\"serviceName\":\"cmntReplyUpdate\",\"requiredInd\":true,\"externalName\":\"Comment\",\"dataType\":3,\"description\":\"Actual Comment.\"}", 

      "cmntReplyStatus-cmntId": "{\"name\":\"cmntId\",\"serviceName\":\"cmntReplyStatus\",\"requiredInd\":true,\"externalName\":\"Comment Id\",\"dataType\":3,\"description\":\"Comment Id for reply.\"}", 
      "cmntReplyStatus-replyId": "{\"name\":\"replyId\",\"serviceName\":\"cmntReplyStatus\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Reply Id to be updated.\"}",

      "t1PMContractList-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMContractList\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMContractList-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t1PMContractList\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t1PMContractList-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMContractList\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMContractListPHD-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMContractListPHD\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMContractListPHD-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t1PMContractListPHD\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t1PMContractListPHD-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMContractListPHD\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the Contract key.\"}",

      "t1PMWorkNumList-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMWorkNumList\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMWorkNumList-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t1PMWorkNumList\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t1PMWorkNumList-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMWorkNumList\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "t1PMWorkNumList-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMWorkNumList\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMContPerfPCContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMContPerfPCContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMContPerfPCContract-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMContPerfPCContract\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "t1PMContPerfPCContract-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMContPerfPCContract\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMContPerfPCWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMContPerfPCWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMContPerfPCWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMContPerfPCWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMContPerfPCWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMContPerfPCWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMPlanPerfContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMPlanPerfContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMPlanPerfContract-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMPlanPerfContract\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "t1PMPlanPerfContract-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMPlanPerfContract\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMPlanPerfWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMPlanPerfWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMPlanPerfWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMPlanPerfWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMPlanPerfWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMPlanPerfWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMFinPerfMthPCContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMFinPerfMthPCContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMFinPerfMthPCContract-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMFinPerfMthPCContract\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "t1PMFinPerfMthPCContract-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMFinPerfMthPCContract\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMFinPerfMthPCWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMFinPerfMthPCWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMFinPerfMthPCWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMFinPerfMthPCWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMFinPerfMthPCWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMFinPerfMthPCWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMTrendIncepContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMTrendIncepContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMTrendIncepContract-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMTrendIncepContract\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "t1PMTrendIncepContract-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMTrendIncepContract\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMTrendIncepWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMTrendIncepWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMTrendIncepWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMTrendIncepWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMTrendIncepWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMTrendIncepWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMFooterContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMFooterContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMFooterContract-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMFooterContract\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Specifies the contract key.\"}",
      "t1PMFooterContract-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMFooterContract\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMFooterWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMFooterWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMFooterWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMFooterWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMFooterWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMFooterWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMProcCompContract-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMProcCompContract\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMProcCompContract-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t1PMProcCompContract\",\"requiredInd\":true,\"externalName\":\"Contract key\",\"dataType\":3,\"description\":\"Contract key.\"}",
      "t1PMProcCompContract-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMProcCompContract\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMProcCompWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMProcCompWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMProcCompWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMProcCompWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMProcCompWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMProcCompWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t1PMPRIWorkNum-filter": "{\"name\":\"filter\",\"serviceName\":\"t1PMPRIWorkNum\",\"requiredInd\":false,\"externalName\":\"Filter\",\"dataType\":3,\"description\":\"Specifies the filters to be applied against the data.  These filters translate into the SQL WHERE clause.\"}",
      "t1PMPRIWorkNum-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t1PMPRIWorkNum\",\"requiredInd\":true,\"externalName\":\"Work Number Key\",\"dataType\":3,\"description\":\"Work Number key.\"}",
      "t1PMPRIWorkNum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t1PMPRIWorkNum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t2PMProcComp7KPopup-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t2PMProcComp7KPopup\",\"requiredInd\":true,\"externalName\":\"Contract Key\",\"dataType\":3,\"description\":\"Contract Key.\"}",
      "t2PMProcComp7KPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PMProcComp7KPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2PMProcComp7KPopup-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t2PMProcComp7KPopup\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t2PMProcCompPGPopupSum-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t2PMProcCompPGPopupSum\",\"requiredInd\":true,\"externalName\":\"Contract Key\",\"dataType\":3,\"description\":\"Contract Key.\"}",
      "t2PMProcCompPGPopupSum-metric": "{\"name\":\"metric\",\"serviceName\":\"t2PMProcCompPGPopupSum\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PG0\",\"description\":\"Specifies the metric selection.\"}",
      "t2PMProcCompPGPopupSum-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PMProcCompPGPopupSum\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2PMProcCompPGPopupSum-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t2PMProcCompPGPopupSum\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t2PMProcCompPGPopupDet-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t2PMProcCompPGPopupDet\",\"requiredInd\":true,\"externalName\":\"Contract Key\",\"dataType\":3,\"description\":\"Contract Key.\"}",
      "t2PMProcCompPGPopupDet-metric": "{\"name\":\"metric\",\"serviceName\":\"t2PMProcCompPGPopupDet\",\"requiredInd\":true,\"externalName\":\"Metric\",\"dataType\":3,\"defaultValue\":\"PG0\",\"description\":\"Specifies the metric selection.\"}",
      "t2PMProcCompPGPopupDet-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PMProcCompPGPopupDet\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2PMProcCompPGPopupDet-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t2PMProcCompPGPopupDet\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t2PMProcCompCOSPopup-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t2PMProcCompCOSPopup\",\"requiredInd\":true,\"externalName\":\"Contract Key\",\"dataType\":3,\"description\":\"Contract Key.\"}",
      "t2PMProcCompCOSPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PMProcCompCOSPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the Month year key.\"}",
      "t2PMProcCompCOSPopup-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t2PMProcCompCOSPopup\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",

      "t2PMProcCompGDPRPopup-cntrctKey": "{\"name\":\"cntrctKey\",\"serviceName\":\"t2PMProcCompGDPRPopup\",\"requiredInd\":true,\"externalName\":\"Contract Key\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Contract Key.\"}",
      "t2PMProcCompGDPRPopup-yrMoKey": "{\"name\":\"yrMoKey\",\"serviceName\":\"t2PMProcCompGDPRPopup\",\"requiredInd\":true,\"externalName\":\"Month Year Key\",\"dataType\":3,\"defaultValue\":\"CURRENT\",\"description\":\"Specifies the month year key.\"}",
      "t2PMProcCompGDPRPopup-pmAccess": "{\"name\":\"pmAccess\",\"serviceName\":\"t2PMProcCompGDPRPopup\",\"requiredInd\":false,\"externalName\":\"PM Access token\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Inner join for PM access tables.\"}",
 
      "t2PMMultiSelect-workKey": "{\"name\":\"workKey\",\"serviceName\":\"t2PMMultiSelect\",\"requiredInd\":true,\"externalName\":\"Work Key\",\"dataType\":3,\"defaultValue\":\" \",\"description\":\"Work Key.\"}"

    }
  }
}
